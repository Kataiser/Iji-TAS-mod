#define scr_debug
//YAY! Been waiting for this ever since it came out!
//-Estin

if (global.debug && !global.really){
//F7: Mute loopables while save stating
if (keyboard_check(vk_f7) && !global.horse){
    repeat(5){
        sound_stop(snd_wea_puls);
        sound_stop(snd_wea_thor);
        sound_stop(snd_shr_step);
        }
    }
//F8: Go to end of game cutscene (MAJOR HAX)
if (keyboard_check(vk_f8) && !global.horse){
    global.sector=0;
    if (global.killdata[797]>0)
        global.cut=12;
    else if (global.killdata[798]>0)
        global.cut=14;
    else
        global.cut=8;
    with (obj_sabot)
        scr_stopmusic();
    room_goto(rom_cut);
    }
//F9: 3 chargeballs
if (keyboard_check(vk_f9) && !global.horse){
    if (room==rom_sector15){
        with (obj_chargeball)
            instance_destroy();
        repeat(3)
            instance_create(600,0,obj_chargeball);
        }
    }
//Shift: count various
if (keyboard_check(vk_shift) && !global.horse){
    global.erasetop=0;
    instance_activate_object(obj_locker);
    instance_activate_object(obj_paper);
    lockernum=string(instance_number(obj_locker));
    papernum=string(instance_number(obj_paper));
    global.topmessage="Papers: "+papernum+"   Lockers: "+lockernum;
    }
//Backspace: levelskip
if (keyboard_check(vk_backspace) && global.horse){
    (instance_create(obj_sabot.x-64,obj_sabot.y-64,obj_horseflip)).dir=4;
    }
if (keyboard_check(vk_backspace) && !global.horse){
    if (levelskipcyc==0 && room==rom_sector3){
        if (!global.ignoreall){
            global.erasetop=0;
            global.topmessage="GOING DOWN FIRST LIFT. Backspace to confirm.";
            obj_iji.x=2656;
            obj_iji.y=2432;
            instance_create(2592,2496,obj_blockwide);
            levelskipcyc=30;
            }
        }
    else if (levelskipcyc==0 && room==rom_sector4){
        if (!global.ignoreall){
            global.erasetop=0;
            global.topmessage="GOING TO END TRIGGER. Cannot confirm.";
            obj_iji.x=6976;
            obj_iji.y=5088;
            }
        }
    else if (levelskipcyc==0 && room==rom_sector9){
        if (!global.ignoreall){
            global.erasetop=0;
            global.topmessage="GOING DOWN FINAL LIFT SHAFT. Cannot confirm.";
            obj_iji.x=7904;
            obj_iji.y=5826;
            }
        }
    else if (global.sector!=11 && global.sector!=12 && global.sector!=13 && global.sector!=14 && global.sector!=15){
        instance_create(obj_iji.x,obj_iji.y,obj_end)
        }
    else{
        global.erasetop=0;
        global.topmessage="CANNOT SKIP HERE - PRESS [HOME] INSTEAD";
        }
    }
//Shift+pagedown: ALL EXTRAS
if (keyboard_check(vk_shift) && keyboard_check(vk_pagedown) && !global.horse){
    global.extras1=1;
    global.extras2=1;
    global.extras3=1;
    global.extras4=1;
    global.extras5=1;
    global.extras6=1;
    global.extras7=1;
    global.extras8=1;
    global.poster1=1;
    global.poster2=1;
    global.poster3=1;
    global.poster4=1;
    global.poster5=1;
    global.poster6=1;
    global.poster7=1;
    global.poster8=1;
    global.poster9=1;
    global.poster10=1;
    global.sds1=1;
    global.sds2=1;
    global.sds3=1;
    global.sds4=1;
    global.sds5=1;
    global.sds6=1;
    global.sds7=1;
    global.sds8=1;
    global.sds9=1;
    global.sds10=1;
    global.maxribbons=10;
    global.hiddenskill1=1;
    global.hiddenskill2=1;
    global.hiddenskill3=1;
    }
//Pagedown: Stats
if (keyboard_check(vk_pagedown) && !global.horse){
    if (global.hp<global.healthlevel*2)
        global.hp+=1;
    if (global.healthlevel<10)
        global.healthlevel+=1;
    if (global.attacklevel<10)
        global.attacklevel+=1;
    if (global.strengthlevel<10)
        global.strengthlevel+=1;
    if (global.assimilatelevel<10)
        global.assimilatelevel+=1;
    if (global.cracklevel<10)
        global.cracklevel+=1;
    if (global.tasenlevel<10)
        global.tasenlevel+=1;
    if (global.komatolevel<10)
        global.komatolevel+=1;
    if (global.jumplevel<3)
        global.jumplevel+=1;
    if (global.armorlevel<3)
        global.armorlevel+=1;
    }
//End: Ammo
if (keyboard_check(vk_end) && !global.horse){
    global.ammo2+=10;
    global.ammo3+=10;
    global.ammo4+=10;
    global.ammo6+=10;
    global.ammo7+=10;
    global.ammo8+=10;
    }
//Home: Annihilate
if (keyboard_check(vk_home) && !global.horse){
    with (obj_alliedenemy){
        if (visible){
            hp=1;
            armor=-100;
            shredderhp=0;
            }
        }
    with (obj_turret)
        armor=0;
    with (obj_proxima)
        hp=0;
    with (obj_door){
        if (distance_to_object(obj_iji)<50)
            instance_destroy();
        }
    with (obj_cdoor){
        if (distance_to_object(obj_iji)<50)
            instance_destroy();
        }
    if (room==rom_sector14 && instance_number(obj_iosa)==0)
        (instance_create(obj_iji.x,obj_iji.y,obj_trigger)).textid="chat95";
    with (obj_tor)
        hp=0;
    }
//Insert: Spawn overload
if (keyboard_check(vk_insert) && !global.horse){
    instance_create(obj_iji.x-8,obj_iji.y+8,obj_nanooverload);
    }
//Delete: Give all
if (keyboard_check(vk_delete) && !global.horse){
    global.cracks=110;
    scr_pickupweapon(2);
    scr_pickupweapon(3);
    scr_pickupweapon(4);
    scr_pickupweapon(5);
    scr_pickupweapon(6);
    scr_pickupweapon(7);
    scr_pickupweapon(8);
    scr_pickupweapon(10);
    global.weapon9=1;
    global.weapon10=1;
    global.weapon11=1;
    global.weapon12=1;
    global.weapon13=1;
    global.weapon14=1;
    global.weapon15=1;
    global.weapon16=1;
    global.weapon17=1;
    global.weapon20=1;
    global.weapon21=1;
    }
//Keypad+: Level up
if (keyboard_check(vk_add) && !global.horse){
    if (global.level<global.maxlevel){
        global.xp=0;
        global.level+=1;
        global.points+=1;
        }
    }
//Keypad-: Max health
if (keyboard_check(vk_subtract) && !global.horse){
    global.healthlevel=10;
    global.hp=20;
    global.jumplevel=3;
    global.armorlevel=3;
    }
//Keypad*: Warp
if (keyboard_check(vk_multiply) && !global.horse){
    if (keyboard_check(vk_up)){
        obj_iji.y-=256;
        obj_iji.hspeed=0;
        obj_iji.vspeed=0;
        }
    else if (keyboard_check(vk_down)){
        obj_iji.y+=256;
        obj_iji.hspeed=0;
        obj_iji.vspeed=0;
        }
    else if (keyboard_check(vk_left)){
        obj_iji.x-=256;
        obj_iji.hspeed=0;
        obj_iji.vspeed=0;
        }
    else if (keyboard_check(vk_right)){
        obj_iji.x+=256;
        obj_iji.hspeed=0;
        obj_iji.vspeed=0;
        }
    }
//Space+Page up: Show killdata
if (keyboard_check(vk_space) && keyboard_check(vk_pageup) && !global.horse){
    global.erasetop=0;
    if (!global.showdata){
        global.showdata=1;
        global.topmessage="Displaying killdata";
        }
    else{
        global.showdata=0;
        global.topmessage="Not displaying killdata";
        }
    }
//Shift+Page up: fill killdata
if (keyboard_check(vk_shift) && keyboard_check(vk_pageup) && !global.horse){
    global.erasetop=0;
    global.topmessage="Filling killdata...";
    for (i=0;i<795;i+=1){
        if (global.killdataname[i]!="NONAME#")
            global.killdata[i]=1;
        }
    }
//Ctrl+Page up: Show killdata discrepancies
if (keyboard_check(vk_control) && keyboard_check(vk_pageup) && !global.horse){
    global.erasetop=0;
    if (!global.killdatadisc){
        global.killdatadisc=1;
        global.topmessage="Displaying killdata discrepancies";
        }
    else{
        global.killdatadisc=0;
        global.topmessage="Not displaying killdata discrepancies";
        }
    }
}

#define scr_sabot
//DEBUG
if (global.showdata){
    //global.topmessage=string(numenemies-deletedenemy);
    //Pacify enemies
    with (obj_alliedenemy){
        if (xprevprev>0)
            x=xprevprev;
        xprevprev=x;
        //Mouse over
        if (mouse_x>bbox_left && mouse_x<bbox_right && mouse_y>bbox_top && mouse_y<bbox_bottom){
            global.topmessagekilldata=global.killdataname[killdataid];
            }
        }
    with (obj_visioncheck)
        instance_destroy();
    with (obj_visionchecke)
        instance_destroy();
    with (obj_visioncheckt)
        instance_destroy();
    with (obj_visioncheckk)
        instance_destroy();
    with (obj_visioncheckh)
        instance_destroy();
    }
if (levelskipcyc>0)
    levelskipcyc-=1;
//-----------------------------------

//Restart/retry/quit
if (keyboard_check(vk_f2)){
    f2restart+=1;
    if (f2restart>=20){
        sound_stop_all();
        scr_stopmusic();
        room_goto(rom_main);
        }
    }
else
    f2restart=0;
if (keyboard_check(vk_f4)){
    f4retry+=1;
    if (f4retry>=20){
        scr_retrysector();
        }
    }
else
    f4retry=0;
if (keyboard_check(vk_f12)){
    f12quit+=1;
    if (f12quit>=20){
        sound_stop_all();
        scr_stopmusic();
        game_end();
        }
    }
else
    f12quit=0;

//Iji's Attack damage
global.atmult=1+(global.attacklevel-1)*0.2223;

//Checkfix
if (checkfixw>0){
    checkfixw-=1;
    if (checkfixw==1)
        ultimatecannotpause=0;
    }

//Don't slow down Hero3D
if (instance_number(obj_herosabot)==0){

//for minimap
if (instance_number(obj_iji)==1){
    currentijix=obj_iji.x;
    currentijiy=obj_iji.y;
    }

//Tor death debris
if (throwtordebris==1){
    if (throwtor2<40)
        throwtor2+=1;
    if (throwtor2 mod 3 == 0){
        tempid=instance_create(96+random(608),1312,obj_scrapwhite);
        tempid.hspeed=-2+random(4);
        tempid.vspeed=-random(2);
        tempid.alarm[2]=1;
        }
    }

//Shredder
scr_shreddersfx();

//Sec Z back
if (room==rom_sectorz){
    if (zgbackcycx==0)
        zgbackcycx=1;
    else if (zgbackcycx==1){
        zgbackcycx=2;
        repeat(40){
            tempid=instance_create(obj_shakescreen.x-500+random(1000),obj_shakescreen.y-400+random(800),obj_zgback);
            tempid.image_single=2;
            tempid.depth=1000;
            tempid.direction=random(360);
            tempid.speed=0.4+random(0.2);
            }
        repeat(80){
            tempid=instance_create(obj_shakescreen.x-500+random(1000),obj_shakescreen.y-400+random(800),obj_zgback);
            tempid.image_single=1;
            tempid.depth=1010;
            tempid.direction=random(360);
            tempid.speed=0.2+random(0.1);
            }
        repeat(120){
            tempid=instance_create(obj_shakescreen.x-500+random(1000),obj_shakescreen.y-400+random(800),obj_zgback);
            tempid.image_single=0;
            tempid.depth=1020;
            tempid.direction=random(360);
            tempid.speed=0.05+random(0.05);
            }
        }
    }

//Distant ship explosions
if (thunder){
thundercyc+=1;
if (thundercyc>=thundermax){
    thundermax=30+random(90);
    thundercyc=0;
    if (!pause)
        scr_sound("glo_thunder");
    }
}

//Don't scroll first chat
if (firstscroll<5)
    firstscroll+=1;

//Time to live
if (global.specialtrigger16){
gottl=0;
if ((!global.ignoreall || global.weapstation>0 || global.levelstation>0 || annihilatorbeta || shredder || instance_number(obj_cracktext)==1 || place_meeting(obj_iji.x,obj_iji.y+64,obj_lift)) && !pause && instance_number(obj_endtransition)==0 && instance_number(obj_iji)==1 && (room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx)){
    if (global.textid!="weapstation9" && global.textid!="weapstation10" && global.textid!="weapstation11" && global.textid!="weapstation12" && global.textid!="weapstation13" && global.textid!="weapstation14" && global.textid!="weapstation15" && global.textid!="weapstation16" && global.textid!="specialtrait1" && global.textid!="specialtrait2" && global.textid!="specialtrait3" && global.textid!="specialtrait4" && global.textid!="specialtrait5" && global.textid!="specialtrait6" && global.textid!="specialtrait7"){
        if (!(instance_number(obj_chat)==1 && place_meeting(obj_iji.x,obj_iji.y+64,obj_lift))){
            if (!obj_iji.mdk){
                ttlhuncyc+=1;
                if (ttlhuncyc<3)
                    ttlhun-=3;
                else{
                    ttlhun-=4;
                    ttlhuncyc=0;
                    }
                if (ttlhun<=0){
                    if (ttlsec==0 && ttlmin==0)
                        obj_iji.mdk=1;
                    ttlhun=99;
                    ttlsec-=1;
                    if (ttlsec<0){
                        ttlsec=59;
                        ttlmin-=1;
                        }
                    }
                }
            }
        }
    }
if (obj_iji.mdk){
    if (annihilatorbeta){
        obj_annihilatorbeta.hp=1;
        obj_annihilatorbeta.armor=-1000;
        }
    obj_sabot.liftok=1;
    with (obj_lift){
        if (vspeedx!=0)
            obj_sabot.liftok=0;
        }
    with (obj_iji){
        if (obj_sabot.liftok && global.hp>0 && !takingpain && !recovering){
            instance_activate_object(obj_checkpoint);
            with (obj_checkpoint){
                instance_destroy();
                instance_create(x,y,obj_dummycp);
                }
            instance_activate_object(obj_sec7cp2);
            with (obj_sec7cp2){
                instance_destroy();
                instance_create(x,y,obj_dummycp);
                }
            instance_activate_object(obj_sec9cp2);
            with (obj_sec9cp2){
                instance_destroy();
                instance_create(x,y,obj_dummycp);
                }
            instance_activate_object(obj_secxcp2);
            with (obj_secxcp2){
                instance_destroy();
                instance_create(x,y,obj_dummycp);
                }
            scr_shakescreen(4);
            (instance_create(x,y,obj_whiteblanket)).alarm[0]=2;
            if (shredder)
                shredderhp=0;
            global.damage+=global.hp;
            global.hp=0;
            timeline_index=-1;
            timeline_position=0;
            fatality=1;
            goaroundcyen=1;
            takingpain=0;
            visible=1;
            if (!shredder)
                scr_pain();
            }
        }
    }
}

//Bosskill flash
if (!lightrave){
    if (global.sector==11 || global.sector==12 || global.sector==13 || global.sector==14 || global.sector==15 || temporaryflash){
        if (firstfadein==5 && lastfadeout==0){
            global.gamma=flash;
            }
        if (flash>=0.02)
            flash-=0.02;
        else
            flash=0;
        }
    }

//Lightrave (shoot to brighten)
if (lightrave){
    if (raveflash3<lightravebottom){
        raveflash3+=0.01;
        global.gamma=raveflash3;
        }
    else if (raveflash2>0){
        raveflash2-=0.03;
        global.gamma=raveflash2;
        if (raveflash2<0.04)
            raveflash=0;
        }
    else{
        if (raveflash>lightravebottom)
            raveflash-=0.03;
        if (raveflash<lightravebottom)
            raveflash+=0.03;
        global.gamma=raveflash;
        }
    }

//Fade in
if (!lightrave){
    if (firstfadein<1){
        firstfadein+=0.06;
        global.gamma=firstfadein-1;
        }
    else if (firstfadein!=0 && firstfadein!=5){
        firstfadein=5;
        global.gamma=0;
        }
    //Fade out
    if (room!=rom_sectorz){
        if (lastfadeout>0){
            lastfadeout-=0.05;
            global.gamma=lastfadeout-1;
            }
        else if (lastfadeout!=0 && lastfadeout!=-5){
            lastfadeout=-5;
            global.gamma=-1;
            }
        }
    }

//Ignore message scroll
if (global.ignoremessagescroll>0)
global.ignoremessagescroll-=1;
//Time
if ((!global.ignoreall || global.weapstation>0 || global.levelstation>0 || annihilatorbeta || shredder || instance_number(obj_cracktext)==1 || (instance_number(obj_messagetext)==1 && instance_number(obj_chat)==0) || place_meeting(obj_iji.x,obj_iji.y+64,obj_lift)) && !pause && instance_number(obj_endtransition)==0 && instance_number(obj_iji)==1){
    if (global.textid!="weapstation9" && global.textid!="weapstation10" && global.textid!="weapstation11" && global.textid!="weapstation12" && global.textid!="weapstation13" && global.textid!="weapstation14" && global.textid!="weapstation15" && global.textid!="weapstation16" && global.textid!="specialtrait1" && global.textid!="specialtrait2" && global.textid!="specialtrait3" && global.textid!="specialtrait4" && global.textid!="specialtrait5" && global.textid!="specialtrait6" && global.textid!="specialtrait7")
        timesecs+=1;
    }
//Fix timer ticking up in boss rooms
if (timesecs>=30 && !donotpushs){
    global.seconds+=1;
    timesecs=0;
    }
if (global.seconds>3599)
    global.seconds=3599;

//Others
if (global.kills>999)
    global.kills=999;
if (global.damage>999)
    global.damage=999;
if (global.cracks>999)
    global.cracks=999;
if (global.fails>999)
    global.fails=999;
if (global.cracks<0)
    global.cracks=0;

//Cloudlines
if (global.sector==2 || global.sector==3 || global.sector==11 || global.sector==5 || global.sector==12 || global.sector==7 || global.sector==0){
cloudline-=1;
if (cloudline<=0){
    cloudline=32;
    with (obj_cloudc)
        if (top)
            instance_create(x,y,obj_cloudt);
        else
            instance_create(x,y,obj_cloudb);
    }
}

//Lift
with (obj_lift){
//Move
if (vspeedx!=0)
    global.ignoreall=1;
y+=vspeedx;
obj_iji.y+=vspeedx;
//Going up
if (vspeedx<0){
    if (place_meeting(x,y,obj_liftpoint) && !place_meeting(x,y-32,obj_liftpoint) && !place_meeting(x,y+8,obj_liftpoint)){
        scr_sound("glo_liftend");
        vspeedx=0;
        if (instance_number(obj_chat)==0)
            global.ignoreall=0;
        obj_iji.takingpain=0;
        if (liftoff){
            repeat(15){
                tempid=instance_create(x+random(128),y+18+random(4),obj_thorspark);
                tempid.speed=random(3);
                tempid.direction=270;
                tempid.gravity=0.2;
                tempid.image_speed=0.2+random(0.8);
                tempid.alarm[0]=10+random(30);
                }
            instance_create(x,y,obj_liftoff);
            instance_destroy();
            }
            
        }
    }
//Going down
else if (vspeedx>0){
    if (place_meeting(x,y,obj_liftpoint) && !place_meeting(x,y-32,obj_liftpoint) && !place_meeting(x,y+8,obj_liftpoint)){
        scr_sound("glo_liftend");
        vspeedx=0;
        if (instance_number(obj_chat)==0)
            global.ignoreall=0;
        obj_iji.takingpain=0;
        }
    }
}
//Overloaded weapons
if (machtot>0)
    machtot-=1;
if (pulsetot>0)
    pulsetot-=1;
if (instance_number(obj_iji)==1){
//METHODX
if (room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && !ignoresmooth && instance_number(obj_asha2)==0){
    with (obj_shakescreen){
        metcyc+=1;
        if (metcyc==10){
            metcyc=0;
            scr_methodx();
            }
        }
    }

if (global.healthlevel>10) global.healthlevel=10;
if (global.attacklevel>10) global.attacklevel=10;
if (global.assimilatelevel>10) global.assimilatelevel=10;
if (global.strengthlevel>10) global.strengthlevel=10;
if (global.cracklevel>10) global.cracklevel=10;
if (global.tasenlevel>10) global.tasenlevel=10;
if (global.komatolevel>10) global.komatolevel=10;
if (global.jumplevel>3) global.jumplevel=3;
if (global.armorlevel>3) global.armorlevel=3;
if (global.hp>global.healthlevel*2) global.hp=global.healthlevel*2;
if (global.hp>20) global.hp=20;
if (global.hp<0) global.hp=0;
if (global.assimilatelevel<10)
    maxammo=global.assimilatebase+global.assimilatelevel*global.assimilatesize;
else
    maxammo=99;
if (global.ammo2>maxammo) global.ammo2=maxammo;
if (global.ammo3>maxammo) global.ammo3=maxammo;
if (global.ammo4>maxammo) global.ammo4=maxammo;
if (global.ammo6>maxammo) global.ammo6=maxammo;
if (global.ammo7>maxammo) global.ammo7=maxammo;
if (global.ammo8>maxammo) global.ammo8=maxammo;

//Adjust view
scr_adjustview();

with (obj_shakescreen){
obj_reloader.x = x+106-488;
obj_reloader.y = y+278;
obj_cracktext.x = x;
obj_cracktext.y = y;
obj_messagetext.x = x;
obj_messagetext.y = y;
obj_scrollarrow.x = x+399;
obj_scrollarrow.y = y+299;
obj_hud.x = x-400;
obj_hud.y = y+220;
obj_weapon1.x = x+234-488;
obj_weapon1.y = y+231;
obj_weapon2.x = x+274-488;
obj_weapon2.y = y+231;
obj_weapon3.x = x+314-488;
obj_weapon3.y = y+231;
obj_weapon4.x = x+354-488;
obj_weapon4.y = y+231;
obj_weapon5.x = x+234-488;
obj_weapon5.y = y+263;
obj_weapon6.x = x+274-488;
obj_weapon6.y = y+263;
obj_weapon7.x = x+314-488;
obj_weapon7.y = y+263;
obj_weapon8.x = x+354-488;
obj_weapon8.y = y+263;

obj_kroterabar.x=x;
obj_kroterabar.y=y-268+obj_kroterabar.yadjust;
obj_ashabar.x=x;
obj_ashabar.y=y-268+obj_ashabar.yadjust;
obj_asha2bar.x=x;
obj_asha2bar.y=y-268+obj_asha2bar.yadjust;
obj_proximabar.x=x;
obj_proximabar.y=y-268+obj_proximabar.yadjust;
obj_iosabar.x=x;
obj_iosabar.y=y-268+obj_iosabar.yadjust;
obj_iosa2bar.x=x;
obj_iosa2bar.y=y-268+obj_iosa2bar.yadjust;
obj_torbar.x=x;
obj_torbar.y=y-268+obj_torbar.yadjust;
}
}
//No Iji object
else
    scr_adjustview2();

//End of "Don't slow down Hero3D"
}

//Retry with escape
if (keyboard_check_pressed(vk_escape) && gameover){
    scr_retrysector();
    }

//Pause
if (keyboard_check_pressed(vk_escape) && ((room_speed==30 && !global.turbomode) || (room_speed==60 && global.turbomode)) && ((!gameover && instance_number(obj_starttransition)==0 && instance_number(obj_endtransition)==0 && !obj_iji.cannotpause && !ultimatecannotpause && global.weapstation==0 && global.levelstation==0) || room==rom_sector16)){
    keyboard_clear(vk_escape);
    //Skip sec16
    if (room==rom_sector16){
        if (global.topmessage!="Really skip this cutscene? Press [ESC] again to confirm" && global.erasetop>=90){
            global.erasetop=0;
            global.topmessage="Really skip this cutscene? Press [ESC] again to confirm";
            }
        else{
            timeline_speed=0;
            instance_deactivate_all(1);
            instance_create(x,y,obj_sec16loadingbox);
            repeat(10)
                sound_stop_all();
            scr_stopmusic();
            screen_redraw();
            room_goto_next();
            }
        }
    else{
        if (!pause){
            if (!playinghero3d && instance_number(obj_iji)==1){
                pause=1;
                scr_stopsfx();
                instance_deactivate_all(1);
                instance_activate_object(obj_activateme);
                instance_create(view_xview[0]+400,view_yview[0]+300,obj_paused);
                instance_create(x,y,obj_loadingback);
                }
            }
        else if (playinghero3d)
            scr_unpause();
        }
    }
scr_pauseeffect();
//Part of skipping messages
if (readytopause>0){
if (!keyboard_check(vk_escape)){
    readytopause-=1;
    if (readytopause==0)
        obj_iji.cannotpause=0;
    }
}

//Abort weapon combining
if (global.weapstation==1 || global.weapstation==2){
    if (keyboard_check_pressed(vk_escape)){
        keyboard_clear(vk_escape);
        global.ignoreall=0;
        global.weapstation=0;
        scr_sound("glo_menumove");
        instance_activate_object(obj_weapstation);
        with (obj_weapstation)
            touchstation=0;
        global.erasetop=0;
        global.topmessage="Disconnected from Nanoweapon station";
        global.ignorestation=120;
        }
    }

//Abort levelstation
if (global.levelstation && instance_number(obj_messagetext)==0){
    if (keyboard_check_pressed(vk_escape)){
        keyboard_clear(vk_escape);
        global.ignoreall=0;
        global.levelstation=0;
        global.erasetop=0;
        global.topmessage="Disconnected from Cyborg station";
        global.ignorestation=120;
        instance_activate_object(obj_levelstation);
        with (obj_levelstation)
            touchstation=0;
        scr_sound("glo_menumove");
        }
    }

//Game over
if (gameover){
    gameoversound+=1;
    if (gameover2==0){
        gameover2=1;
        alarm[1]=180;
        if (room==rom_sector15){
            for (i=0;i<150;i+=1)
                instance_create(x-32+i*8,y,obj_fadeblack);
            }
        else{
            for (i=0;i<108;i+=1)
                instance_create(x-32+i*8,y,obj_fadeblack);
            }
        }
    }

//Don't slow down Hero3D 2
if (instance_number(obj_herosabot)==0){

//Teleport fix
if (doteleport){
    doteleport=0;
    instance_deactivate_all(1);
    instance_activate_object(obj_iji);
    instance_activate_object(obj_shakescreen);
    instance_activate_object(obj_activateme);
    with (obj_shakescreen)
        scr_methodx();
    }

//safety catch: warpback
warpback=0;
with (obj_iji){
    if (place_meeting(x,y,obj_warpback))
        obj_sabot.warpback=1;
    }
if ((obj_iji.y>room_height && room!=rom_sectorz) || warpback){
    if (warpback){
        global.topmessage="SABOT: Caught by warpback instance";
        topmessage3="SABOT: Caught by warpback instance";
        }
    else if (!firednulldriver){
        global.topmessage="SABOT: Caught by falling warpback";
        topmessage3="SABOT: Caught by falling warpback";
        }
    global.erasetop=0;
    global.ignorestation=150;
    topmessage3cyc=120;
    topmessage3dcyc=0;
    thunder=0;
    if (room==rom_sector7 && !fixedpalette){
        obj_sabot.palette=0;
        background_index[0]=bg_back7;
        }
    //Time to live
    if (global.specialtrigger16){
        if (global.sector==1){ ttlmin=3; ttlsec=59;}
        if (global.sector==2){ ttlmin=3; ttlsec=59;}
        if (global.sector==3){ ttlmin=3; ttlsec=59;}
        if (global.sector==4){ ttlmin=5; ttlsec=59;}
        if (global.sector==5){ ttlmin=5; ttlsec=59;}
        if (global.sector==6){ ttlmin=5; ttlsec=59;}
        if (global.sector==7){ ttlmin=5; ttlsec=59;}
        if (global.sector==8){ ttlmin=5; ttlsec=59;}
        if (global.sector==9){ ttlmin=7; ttlsec=59;}
        if (global.sector==0){ ttlmin=9; ttlsec=59;}
        if (global.really){ ttlmin=1; ttlsec=59;}
        ttlhun=99;
        }
    scr_sound("glo_teleport");
    obj_iji.dest=83652;
    obj_sabot.ignoresmooth=1;
    obj_sabot.alarm[4]=3;
    instance_activate_object(obj_lift);
    with (obj_lift){
        y=ystart;
        }
    instance_activate_object(obj_teledest);
    with (obj_teledest){
        if (obj_iji.dest==dest){
            obj_iji.x=x+10;
            obj_iji.y=y-30;
            obj_iji.vspeed=0;
            obj_iji.hspeed=0;
            instance_create(x,y,obj_whiteflash);
            repeat(30){
                tempid=instance_create(x+random(32),y+12-random(64),obj_thorspark);
                tempid.speed=random(3.5)-1.5;
                tempid.direction=90;
                tempid.gravity=0.2;
                }
            }
        }
    metcyc=0;
    doteleport=1;
    }

//Sector Z warpup
if (room==rom_sectorz && obj_iji.y>9000){
    scr_sound("glo_teleport");
    with (obj_zxsquare)
        instance_destroy();
    obj_iji.dest=4;
    obj_sabot.ignoresmooth=1;
    obj_sabot.alarm[4]=3;
    instance_activate_object(obj_teledest);
    with (obj_teledest){
        if (obj_iji.dest==dest){
            obj_iji.x=x+10;
            obj_iji.y=y-60;
            instance_create(x,y,obj_whiteflash);
            repeat(30){
                tempid=instance_create(x+random(32),y+12-random(64),obj_thorspark);
                tempid.speed=random(3.5)-1.5;
                tempid.direction=90;
                tempid.gravity=0.2;
                }
            }
        }
    metcyc=0;
    doteleport=1;
    zwarpup=1;
    }

if (zwarpup==1)
    zwarpup=2;
else if (zwarpup==2){
    zwarpup=0;
    repeat(150)
        instance_create(obj_iji.x-500+random(1000),obj_iji.y-400+random(800),obj_zxsquare);
    }

//Sector Z blockwides
if (zback==3){
    obj_blockwide.visible=1;
    obj_blocktall.visible=1;
    }

//Sector Z zxsquares
if (zback==4){
    obj_blockwide.visible=0;
    obj_blocktall.visible=0;
    with (obj_zxsquare){
        if (x<obj_shakescreen.x-500){
            x=obj_shakescreen.x+495;
            size=ceil(random(24))+8;
            temprand=random(1);
            if (temprand>0.25)
                image_single=0;
            else{
                image_single=ceil(random(63));
                size=32;
                }
            depth=1000100-size;
            }
        if (x>obj_shakescreen.x+500){
            x=obj_shakescreen.x-495;
            size=ceil(random(24))+8;
            temprand=random(1);
            if (temprand>0.25)
                image_single=0;
            else{
                image_single=ceil(random(63));
                size=32;
                }
            depth=1000100-size;
            }
        if (y<obj_shakescreen.y-400){
            y=obj_shakescreen.y+395;
            size=ceil(random(24))+8;
            temprand=random(1);
            if (temprand>0.25)
                image_single=0;
            else{
                image_single=ceil(random(63));
                size=32;
                }
            depth=1000100-size;
            }
        if (y>obj_shakescreen.y+400){
            y=obj_shakescreen.y-395;
            size=ceil(random(24))+8;
            depth=1000100-size;
            temprand=random(1);
            if (temprand>0.25)
                image_single=0;
            else{
                image_single=ceil(random(63));
                size=32;
                }
            }
        }
    
    //Sector Z fade
    if (zfadedirection==0){
        zfade+=0.05;
        if (zfade>0.95)
            zfadedirection=1;
        }
    else{
        zfade-=0.05;
        if (zfade<0.05)
            zfadedirection=0;
        }
    if (zfadeg<1)
        zfadeg+=0.04;
    if (zfadeg>=1)
        zfadeg=1;
    if (seczplayd && (szmp mod 1 == 0) && szmhd[szmp]>0)
        zfadeg=0;
    global.gammagreen=zfadeg;
    }

//Sector 4 flash
if (s4flash==1){
    if (zfadedirection==0){
        zfade+=0.05;
        if (zfade>0.9)
            zfadedirection=1;
        }
    else{
        zfade-=0.05;
        if (zfade<0.05)
        zfadedirection=0;
        }
    }
if (s4flash==2){
    if (zfade>0)
        zfade-=0.05;
    else{
        s4flash=3;
        zfade=0;
        global.gammared=0;
        }
    }
if (s4flash==1 || s4flash==2){
    if (pause){
        global.gammared=0;
        }
    else{
        global.gammared=0;
        global.gammared=zfade;
        }
    }

//Sec Z back
obj_zgbackback.x=obj_shakescreen.x-400;
obj_zgbackback.y=obj_shakescreen.y-300;
with (obj_zgback){
    x+=(obj_shakescreen.x-obj_shakescreen.xprevious)/((image_single+1)*1.5);
    y+=(obj_shakescreen.y-obj_shakescreen.yprevious)/((image_single+1)*1.5);
    if (x<obj_shakescreen.x-500)
        x=obj_shakescreen.x+490;
    if (x>obj_shakescreen.x+500)
        x=obj_shakescreen.x-490;
    if (y<obj_shakescreen.y-400)
        y=obj_shakescreen.y+390;
    if (y>obj_shakescreen.y+400)
        y=obj_shakescreen.y-390;
    }

scr_loopsounds();
scr_voicecyc();

if (room==rom_sectorz && !gameover){
    scr_seczmusicplay();
    }

//Iosa2 safe sign
if (room==rom_sector14){
    if (instance_number(obj_iosa2safe)==1){
        with (obj_iosa2safe){
            x=obj_iji.x-40;
            y=820;
            if (obj_iosa2.state==1 && obj_iosa2.visible){
                visible=1;
                if (obj_iosa2.charged)
                    sprite_index=spr_iosa2_safeu;
                else
                    sprite_index=spr_iosa2_safed;
                }
            else if (obj_iosa2.state==12 && obj_iosa2.visible){
                visible=1;
                sprite_index=spr_iosa2_safel;
                }
            else
                visible=0;
            }
        }
    }

//Asha2 safe sign
if (room==rom_sectorx){
    if (instance_number(obj_asha2safe)==1){
        with (obj_asha2safe){
            x=obj_iji.x-40;
            y=2996;
            if (global.hp<=0)
                instance_destroy();
            }
        }
    }

//Tor safe sign
if (room==rom_sector15){
    if (instance_number(obj_iosa2safe)==1){
        with (obj_iosa2safe){
            x=obj_iji.x-40;
            y=590;
            if (obj_tor.showsafe==1)
                visible=1;
            else
                visible=0;
            }
        }
    }

//End of "Don't slow down Hero3D 2"
}

#define scr_sabotcreate
//SABOTCREATE executes all following sabotcreates,
//call them individually if preferred

//SSwarp kills, boss hints, outfit, seczmusic, time to live,
//xppool, store backups, delete ribbon

//Remove horse stuff
with (obj_horseflip) instance_destroy();
with (obj_horseflip2) instance_destroy();
with (obj_horsepup) instance_destroy();
with (obj_horsecoin) instance_destroy();
with (obj_horseenemy) instance_destroy();
with (obj_horseblocker) instance_destroy();

//Sector 1 999999 tile layer (human blood)
if (room==rom_sector1 && global.noblood)
    tile_layer_hide(999999);

//Sector 3 650 tile layer (not horse)
if (room==rom_sector3 && !global.horse)
    tile_layer_hide(650);

//Sector 7 888 tile layer (not horse)
if (room==rom_sector7 && !global.horse)
    tile_layer_hide(888);

//Sector 9 888 tile layer (not horse)
if (room==rom_sector9 && !global.horse)
    tile_layer_hide(888);

//Sector X 888 tile layer (not horse)
if (room==rom_sectorx && !global.horse)
    tile_layer_hide(888);

//Sector 15 999999 tile layer (destroyed ground)
if (room==rom_sector15){
    tile_layer_hide(999999);
    background_index[2]=bg_finalsky3;
    background_index[3]=bg_finalsky4;
    }
//Sector 15 999990 tile layer (destroyed wall)
if (room==rom_sector15){
    tile_layer_hide(999990);
    }

//Music volume
scr_musicvolume();

//Gamma object
instance_create(0,0,obj_gamma);
global.gamma=0;
global.gammagreen=0;
global.gammared=0;
global.gammablue=0;

//Sound isplaying hack variables
global.voc_iji_berserk1=0;
global.voc_iji_berserk2=0;
global.voc_iji_berserk3=0;
global.voc_iji_death=0;
global.voc_sco_find1=0;
global.voc_sco_find2=0;
global.voc_sol_find1=0;
global.voc_sol_find2=0;
global.voc_com_find1=0;
global.voc_com_find2=0;
global.voc_eli_find1=0;
global.voc_eli_find2=0;
global.voc_tro_find1=0;
global.voc_tro_find2=0;
global.voc_ber_find1=0;
global.voc_ber_find2=0;
global.voc_ash_death=0;
global.voc_ash_ambient1=0;
global.voc_ash_ambient2=0;
global.voc_ash_ambient3=0;
global.voc_ash_ambient4=0;
global.voc_ext_ansaksie1=0;
global.voc_ext_ansaksie2=0;
global.voc_ext_ansaksie3=0;
global.voc_ext_ansaksie4=0;
global.voc_ext_ansaksie5=0;
global.voc_ext_ansaksie6=0;
global.voc_iosa_ambient1=0;
global.voc_iosa_ambient2=0;
global.voc_iosa_ambient3=0;
global.voc_iosa_ambient4=0;
global.voc_iosa_ambient5=0;
global.voc_glo_kick=0;

//Get killdatanames
scr_killdata();

//Time defaults
drawtimestring="0.00"
drawtottimestring="0:00.00"

//Lightrave (shoot to brighten) treshold
lightravebottom=-0.4;

//Maximum charge
if (room==rom_sectorx)
    global.tormaximumcharge=0;

//Turbo mode
if (global.turbomode==1)
    room_speed=60;
else if (global.turbomode==2)
    room_speed=1000;

//Boss hints
if (room==rom_sector3 || room==rom_sector5 || room==rom_sector7 || room==rom_sector9 || room==rom_sector16)
    global.bosshint=0;

//Outfit
if (global.outfit==1){
sprite_assign(spr_basic,spr_outfit_basic);
sprite_assign(spr_basicleft,spr_outfit_basicleft);
sprite_assign(spr_climb,spr_outfit_climb);
sprite_assign(spr_climbleft,spr_outfit_climbleft);
sprite_assign(spr_duckingpain,spr_outfit_duckingpain);
sprite_assign(spr_duckingpainleft,spr_outfit_duckingpainleft);
sprite_assign(spr_duck,spr_outfit_duck);
sprite_assign(spr_duckleft,spr_outfit_duckleft);
sprite_assign(spr_jump,spr_outfit_jump);
sprite_assign(spr_jumpleft,spr_outfit_jumpleft);
sprite_assign(spr_run,spr_outfit_run);
sprite_assign(spr_runleft,spr_outfit_runleft);
sprite_assign(spr_runfire,spr_outfit_runfire);
sprite_assign(spr_runfireleft,spr_outfit_runfireleft);
sprite_assign(spr_pain,spr_outfit_pain);
sprite_assign(spr_painleft,spr_outfit_painleft);
sprite_assign(spr_fire,spr_outfit_fire);
sprite_assign(spr_fireleft,spr_outfit_fireleft);
sprite_assign(spr_getup,spr_outfit_getup);
sprite_assign(spr_getupleft,spr_outfit_getupleft);
sprite_assign(spr_hitfloor,spr_outfit_hitfloor);
sprite_assign(spr_hitfloorleft,spr_outfit_hitfloorleft);
sprite_assign(spr_kickstrong,spr_outfit_kickstrong);
sprite_assign(spr_kickstrongleft,spr_outfit_kickstrongleft);
sprite_assign(spr_knockdown,spr_outfit_knockdown);
sprite_assign(spr_knockdownleft,spr_outfit_knockdownleft);
sprite_assign(spr_lookaround,spr_outfit_lookaround);
sprite_assign(spr_lookaroundleft,spr_outfit_lookaroundleft);
sprite_assign(spr_pushbutton,spr_outfit_pushbutton);
sprite_assign(spr_pushbuttonleft,spr_outfit_pushbuttonleft);
sprite_assign(spr_standup,spr_outfit_standup);
sprite_assign(spr_standupleft,spr_outfit_standupleft);
sprite_assign(spr_xpants,spr_outfit_xpants);
sprite_assign(spr_blackjump,spr_outfit_blackjump);
sprite_assign(spr_blackstandup,spr_outfit_blackstandup);
sprite_assign(spr_ijimist,spr_outfit_ijimist);
sprite_assign(spr_ijimist2,spr_outfit_ijimist2);
sprite_assign(spr_tasenshredder_basiciji,spr_outfit_shredderbasiciji);
sprite_assign(spr_tasenshredder_basicijileft,spr_outfit_shredderbasicijileft);
sprite_assign(spr_tasenshredder_geton,spr_outfit_shreddergeton);
sprite_assign(spr_tasenshredder_getonleft,spr_outfit_shreddergetonleft);
sprite_assign(spr_destroyed_iji,spr_outfit_destroyediji);
sprite_assign(spr_destroyed_iji_left,spr_outfit_destroyedijileft);
sprite_assign(spr_iosa_destroyed_iji,spr_outfit_iosadestroyediji);
sprite_assign(spr_iosa_destroyed_ijileft,spr_outfit_iosadestroyedijileft);
sprite_assign(spr_ougi,spr_outfit_ougi);
}
else{
sprite_assign(spr_basic,spr_iji_basic);
sprite_assign(spr_basicleft,spr_iji_basicleft);
sprite_assign(spr_climb,spr_iji_climb);
sprite_assign(spr_climbleft,spr_iji_climbleft);
sprite_assign(spr_duckingpain,spr_iji_duckingpain);
sprite_assign(spr_duckingpainleft,spr_iji_duckingpainleft);
sprite_assign(spr_duck,spr_iji_duck);
sprite_assign(spr_duckleft,spr_iji_duckleft);
sprite_assign(spr_jump,spr_iji_jump);
sprite_assign(spr_jumpleft,spr_iji_jumpleft);
sprite_assign(spr_run,spr_iji_run);
sprite_assign(spr_runleft,spr_iji_runleft);
sprite_assign(spr_runfire,spr_iji_runfire);
sprite_assign(spr_runfireleft,spr_iji_runfireleft);
sprite_assign(spr_pain,spr_iji_pain);
sprite_assign(spr_painleft,spr_iji_painleft);
sprite_assign(spr_fire,spr_iji_fire);
sprite_assign(spr_fireleft,spr_iji_fireleft);
sprite_assign(spr_getup,spr_iji_getup);
sprite_assign(spr_getupleft,spr_iji_getupleft);
sprite_assign(spr_hitfloor,spr_iji_hitfloor);
sprite_assign(spr_hitfloorleft,spr_iji_hitfloorleft);
sprite_assign(spr_kickstrong,spr_iji_kickstrong);
sprite_assign(spr_kickstrongleft,spr_iji_kickstrongleft);
sprite_assign(spr_knockdown,spr_iji_knockdown);
sprite_assign(spr_knockdownleft,spr_iji_knockdownleft);
sprite_assign(spr_lookaround,spr_iji_lookaround);
sprite_assign(spr_lookaroundleft,spr_iji_lookaroundleft);
sprite_assign(spr_pushbutton,spr_iji_pushbutton);
sprite_assign(spr_pushbuttonleft,spr_iji_pushbuttonleft);
sprite_assign(spr_standup,spr_iji_standup);
sprite_assign(spr_standupleft,spr_iji_standupleft);
sprite_assign(spr_xpants,spr_iji_xpants);
sprite_assign(spr_blackjump,spr_iji_blackjump);
sprite_assign(spr_blackstandup,spr_iji_blackstandup);
sprite_assign(spr_ijimist,spr_iji_ijimist);
sprite_assign(spr_ijimist2,spr_iji_ijimist2);
sprite_assign(spr_tasenshredder_basiciji,spr_iji_shredderbasiciji);
sprite_assign(spr_tasenshredder_basicijileft,spr_iji_shredderbasicijileft);
sprite_assign(spr_tasenshredder_geton,spr_iji_shreddergeton);
sprite_assign(spr_tasenshredder_getonleft,spr_iji_shreddergetonleft);
sprite_assign(spr_destroyed_iji,spr_iji_destroyediji);
sprite_assign(spr_destroyed_iji_left,spr_iji_destroyedijileft);
sprite_assign(spr_iosa_destroyed_iji,spr_iji_iosadestroyediji);
sprite_assign(spr_iosa_destroyed_ijileft,spr_iji_iosadestroyedijileft);
sprite_assign(spr_ougi,spr_iji_ougi);
}

//Parallax
xprev=x;
//Sec Z music
if (room==rom_sectorz)
    scr_seczmusicinit();

//Time to live
if (global.specialtrigger16){
if (global.sector==1){ ttlmin=3; ttlsec=59;}
if (global.sector==2){ ttlmin=3; ttlsec=59;}
if (global.sector==3){ ttlmin=3; ttlsec=59;}
if (global.sector==4){ ttlmin=5; ttlsec=59;}
if (global.sector==5){ ttlmin=5; ttlsec=59;}
if (global.sector==6){ ttlmin=5; ttlsec=59;}
if (global.sector==7){ ttlmin=5; ttlsec=59;}
if (global.sector==8){ ttlmin=5; ttlsec=59;}
if (global.sector==9){ ttlmin=7; ttlsec=59;}
if (global.sector==0){ ttlmin=9; ttlsec=59;}
ttlhun=99;
if (global.really){ ttlmin=1; ttlsec=59;}
}

//Store away backups
for (i=1;i<800;i+=1)
    backup_killdata[i]=global.killdata[i];
backup_numribbons=global.numribbons;
backup_seconds=global.seconds;
backup_damage=global.damage;
backup_kills=global.kills;
backup_cracks=global.cracks;
backup_fails=global.fails;
backup_sector=global.sector;
backup_level=global.level;
backup_points=global.points;
backup_xp=global.xp;
backup_weapon2=global.weapon2;
backup_weapon3=global.weapon3;
backup_weapon4=global.weapon4;
backup_weapon5=global.weapon5;
backup_weapon6=global.weapon6;
backup_weapon7=global.weapon7;
backup_weapon8=global.weapon8;
backup_weapon9=global.weapon9;
backup_weapon10=global.weapon10;
backup_weapon11=global.weapon11;
backup_weapon12=global.weapon12;
backup_weapon13=global.weapon13;
backup_weapon14=global.weapon14;
backup_weapon15=global.weapon15;
backup_weapon16=global.weapon16;
backup_weapon17=global.weapon17;
backup_weapon21=global.weapon21;
backup_healthlevel=global.healthlevel;
backup_attacklevel=global.attacklevel;
backup_assimilatelevel=global.assimilatelevel;
backup_strengthlevel=global.strengthlevel;
backup_cracklevel=global.cracklevel;
backup_tasenlevel=global.tasenlevel;
backup_komatolevel=global.komatolevel;
backup_jumplevel=global.jumplevel;
backup_armorlevel=global.armorlevel;
backup_specialtrigger1=global.specialtrigger1;
backup_specialtrigger2=global.specialtrigger2;
backup_specialtrigger4=global.specialtrigger4;
backup_specialtrigger8=global.specialtrigger8;
backup_specialtrigger16=global.specialtrigger16;
backup_specialtrigger32=global.specialtrigger32;
backup_specialtriggerb1=global.specialtriggerb1;
backup_specialtriggerb2=global.specialtriggerb2;
backup_specialtriggerb4=global.specialtriggerb4;
backup_specialtriggerc=global.specialtriggerc;
backup_ammo2=global.ammo2;
backup_ammo3=global.ammo3;
backup_ammo4=global.ammo4;
backup_ammo6=global.ammo6;
backup_ammo7=global.ammo7;
backup_ammo8=global.ammo8;
entertotcracks=0;
global.levelstation=0;
global.weapstation=0;

//load passive setting
global.passive=global.killdata[799];

//delete ribbon
if (room==rom_sector1)
    global.specialtrigger8=1;
if (!global.specialtrigger8 || global.sswarp){
    with (obj_ribbon){
        if (visible)
            instance_destroy();
        }
    }
if (room!=rom_sectorz && global.sector!=11 && global.sector!=12 && global.sector!=13 && global.sector!=14 && global.sector!=15 && global.sector!=16)
    global.specialtrigger8=0;

//set coordinates
x=obj_iji.x-395;
y=obj_iji.y-230;
finalx=x;
finaly=y;
ignoresmooth=1;
alarm[4]=2;

scr_sabotcreate2();
scr_sabotcreate3();
scr_sabotcreate4();
#define scr_sabotcreate2
//sfx and gfx (global, portrait and sector specific)

//load global graphics and sfx
scr_loadsounds();
music="";

#define scr_sabotcreate3
//Load sprites and sounds (enemies and bosses)

#define scr_sabotcreate4
//init hud, init projectile speeds, init settings,
//weapon and camera in bossroom, maxlevel,
//deactivate surrounding world, black start,
//single sector warp

//HUD weapon fix
if (room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && room!=rom_sector16)
    global.weapon=1;

//create weapons
if(global.weapon2)
    instance_create(obj_sabot.x+674, obj_sabot.y+531, obj_weapon2);
if(global.weapon3)
    instance_create(obj_sabot.x+714, obj_sabot.y+531, obj_weapon3);
if(global.weapon4)
    instance_create(obj_sabot.x+754, obj_sabot.y+531, obj_weapon4);
if(global.weapon5)
    instance_create(obj_sabot.x+634, obj_sabot.y+563, obj_weapon5);
if(global.weapon6)
    instance_create(obj_sabot.x+674, obj_sabot.y+563, obj_weapon6);
if(global.weapon7)
    instance_create(obj_sabot.x+714, obj_sabot.y+563, obj_weapon7);
if(global.weapon8)
    instance_create(obj_sabot.x+754, obj_sabot.y+563, obj_weapon8);
//init HUD
x=obj_iji.x-395;
y=obj_iji.y-230;
finalx=x;
finaly=y;
facadjust=32;
obj_shakescreen.x=x+400
obj_shakescreen.y=y+300
instance_create(x,y+520,obj_hud);
instance_create(x,y,obj_reloader);
instance_create(x+634,y+531,obj_weapon1);

//init projectile speeds
global.rocketspeed=20;
global.mpfbspeed=26;
global.shockspeed=24;

//init settings
if (room==rom_sector5)
    global.specialtrigger1=0;
topmessage3="0";
thundermax=30+random(90);
prevtopmessage="0";
global.textid="0";
global.ignoreall=1;
global.erasetop=10000;
global.topmessage="0";
global.topmessagekilldata="0";
global.viewxoffset=0;
global.viewyoffset=0;
global.shakescreen=0;
global.dead=0;
global.state=1;
global.facing=1;
global.armor=100;
global.hp=global.healthlevel*2;
if (global.suddendeath)
    global.hp=1;
if (room==rom_sectorz)
    global.hp=1;
if (room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && room!=rom_sector16 && room!=rom_sectorz){
    global.weapon=1;
    global.kills=0;
    global.damage=0;
    global.cracks=0;
    global.fails=0;
    global.seconds=0;
    }
//Change to the correct weapon when entering boss room
else{
if (global.weapon!=1){
    obj_weapon1.image_single=0+(global.weapon9*2);
    if (global.weapon==2)
        obj_weapon2.image_single=1+(global.weapon10*2);
    if (global.weapon==3)
        obj_weapon3.image_single=1+(global.weapon11*2);
    if (global.weapon==4)
        obj_weapon4.image_single=1+(global.weapon12*2);
    if (global.weapon==5)
        obj_weapon5.image_single=1+(global.weapon13*2);
    if (global.weapon==6)
        obj_weapon6.image_single=1+(global.weapon14*2);
    if (global.weapon==7)
        obj_weapon7.image_single=1+(global.weapon15*2);
    if (global.weapon==8)
        obj_weapon8.image_single=1+(global.weapon16*2);
    if (global.weapon==9){
        obj_weapon1.image_single=4;
        obj_weapon2.image_single=1+(global.weapon10*2);
        }
    if (global.weapon==10)
        obj_weapon2.image_single=4;
    if (global.weapon==11)
        obj_weapon3.image_single=4;
    if (global.weapon==12)
        obj_weapon4.image_single=4;
    if (global.weapon==13)
        obj_weapon5.image_single=4;
    if (global.weapon==14)
        obj_weapon6.image_single=4;
    if (global.weapon==15)
        obj_weapon7.image_single=4;
    if (global.weapon==16)
        obj_weapon8.image_single=4;
    if (global.weapon==17){
            obj_weapon1.image_single=1+(global.weapon9*2);
            obj_weapon2.image_single=1+(global.weapon10*2);
            obj_weapon3.image_single=1+(global.weapon11*2);
            obj_weapon4.image_single=1+(global.weapon12*2);
            obj_weapon5.image_single=1+(global.weapon13*2);
            obj_weapon6.image_single=1+(global.weapon14*2);
            obj_weapon7.image_single=1+(global.weapon15*2);
            obj_weapon8.image_single=1+(global.weapon16*2);
            }
        }
    }
//For change weapon sfx
prevweapon=global.weapon;

//alter camera in boss rooms
if (room==rom_sector11 || room==rom_sector12 || room==rom_sector14)
global.viewyoffset=-60;

//init maxlevel
if (room==rom_sectorz || room==rom_sector1)
    global.maxlevel=(5-global.difficulty);
if (room==rom_sector2)
    global.maxlevel=(5-global.difficulty)*2;
if (room==rom_sector3 || room==rom_sector11)
    global.maxlevel=(5-global.difficulty)*3;
if (room==rom_sector4)
    global.maxlevel=(5-global.difficulty)*4;
if (room==rom_sector5 || room==rom_sector12)
    global.maxlevel=(5-global.difficulty)*5;
if (room==rom_sector6)
    global.maxlevel=(5-global.difficulty)*6;
if (room==rom_sector7 || room==rom_sector13)
    global.maxlevel=(5-global.difficulty)*7;
if (room==rom_sector8)
    global.maxlevel=(5-global.difficulty)*8;
if (room==rom_sector9 || room==rom_sector14)
    global.maxlevel=(5-global.difficulty)*9;
if (room==rom_sectorx || room==rom_sector15)
    global.maxlevel=(5-global.difficulty)*10;
if (global.really)
    global.maxlevel=0;
if (global.wty){
lightrave=1;
tile_layer_hide(537934);
instance_create(10176,3264,obj_blocktall);
instance_create(10176,3392,obj_blocktall);
with(obj_camera) instance_destroy();
with(obj_bgspeaker) instance_destroy();
with(obj_enemy) instance_destroy();
with(obj_lamp) instance_destroy();
with(obj_exitsign) instance_destroy();
with(obj_crumble1) instance_destroy();
with(obj_ribbon) instance_destroy();
with(obj_log1){ textid="text195";
if (x>6848 && y<1824) textid="text196";
if (x>10000) textid="text194";
if (x<4200 && y<1600) textid="text193";}
with(obj_poster){ x=3856; y=1472;}
with(obj_ztele) instance_destroy();
with(obj_supercharge) instance_destroy();
with(obj_weaponpickup) instance_destroy();
with(obj_xp) instance_destroy();
with(obj_ammo) instance_destroy();
with(obj_station) instance_destroy();
with(obj_door) instance_destroy();
with(obj_cdoor) instance_destroy();
with(obj_locationmessage) instance_destroy();
with(obj_blackbug) instance_destroy();
with(obj_dripnest) instance_destroy();
with(obj_blitnest) instance_destroy();
with(obj_sec1musictrigger) instance_destroy();
with(obj_trigger){
if (textid!="chat11")
instance_destroy();
}
}

//deactivate surrounding world
if (global.sector!=11 && global.sector!=12 && global.sector!=13 && global.sector!=14 && global.sector!=15){
instance_deactivate_all(1);
instance_activate_object(obj_iji);
instance_activate_object(obj_shakescreen);
}

//Black start
instance_create(x,y,obj_loadingback);
instance_create(x,y,obj_starttransition);
global.gamma=0;
screen_redraw();
alarm[0]=1;

//Single Sector Warp
if (global.sswarp){
    if (global.sector>=3 && room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && room!=rom_sector16)
        global.jumplevel=2;
    if ((global.sector>=6 || global.sector==0) && room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && room!=rom_sector16)
        global.jumplevel=3;
    if (global.sector>=4 && room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && room!=rom_sector16)
        global.armorlevel=2;
    if ((global.sector>=8 || global.sector==0) && room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && room!=rom_sector16)
        global.armorlevel=3;
    if (room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx){
        if (global.sector==0)
            global.level=45;
        else
            global.level=(global.sector-1)*5;
        global.points=global.level;
        }
    }

//Reset boss hint message variable
if (room==rom_sector3 || room==rom_sector5 || room==rom_sector7 || room==rom_sector9 || room==rom_sectorx)
    global.iimsx=0;

//Time penalty
if (!global.rrkills || global.nomercy || global.fireanytime || global.randomstations || global.noreloads || global.debug){
    if (room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx || room==rom_sectorz)
    global.seconds=600;
    }

//Draw your text over Tor's appear polygons
if (room==rom_sector15)
    depth=-1001;
#define scr_gammadraw
global.gammafinal=global.gamma;
global.gammaredfinal=global.gammared;
global.gammagreenfinal=global.gammagreen;
global.gammabluefinal=global.gammablue;

if (!global.nogamma){
    if (global.gammafinal<-1)
        global.gammafinal=-1;
    if (global.gammafinal>1)
        global.gammafinal=1;
    if (global.gammafinal<0){
        draw_set_blend_mode(bm_subtract);
        draw_set_color(make_color_rgb(-global.gammafinal*255,-global.gammafinal*255,-global.gammafinal*255));
        draw_rectangle(view_xview[0]-32,view_yview[0]-32,view_xview[0]+832,view_yview[0]+632,0);
        draw_set_blend_mode(bm_normal);
        }
    else if (global.gammafinal>0){
        draw_set_blend_mode(bm_add);
        draw_set_color(make_color_rgb(global.gammafinal*255,global.gammafinal*255,global.gammafinal*255));
        draw_rectangle(view_xview[0]-32,view_yview[0]-32,view_xview[0]+832,view_yview[0]+632,0);
        draw_set_blend_mode(bm_normal);
        }
    
    if (global.gammaredfinal>1)
        global.gammaredfinal=1;
    if (global.gammaredfinal>0){
        draw_set_blend_mode(bm_subtract);
        draw_set_color(make_color_rgb(0,global.gammaredfinal*255,global.gammaredfinal*255));
        draw_rectangle(view_xview[0]-32,view_yview[0]-32,view_xview[0]+832,view_yview[0]+632,0);
        draw_set_blend_mode(bm_normal);
        }
    
    if (global.gammagreenfinal>1)
        global.gammagreenfinal=1;
    if (global.gammagreenfinal>0){
        draw_set_blend_mode(bm_subtract);
        draw_set_color(make_color_rgb(0,global.gammagreenfinal*255,0));
        draw_rectangle(view_xview[0]-32,view_yview[0]-32,view_xview[0]+832,view_yview[0]+632,0);
        draw_set_blend_mode(bm_normal);
        }
    
    if (global.gammabluefinal>1)
        global.gammabluefinal=1;
    if (global.gammabluefinal>0){
        draw_set_blend_mode(bm_subtract);
        draw_set_color(make_color_rgb(global.gammabluefinal*255,global.gammabluefinal*255,0));
        draw_rectangle(view_xview[0]-32,view_yview[0]-32,view_xview[0]+832,view_yview[0]+632,0);
        draw_set_blend_mode(bm_normal);
        }
    }
#define scr_unpause
keyboard_clear(vk_escape);
with (obj_sabot){
pause=0;
if (instance_number(obj_herosabot)>=1){
    x=heroxprev;
    y=heroyprev;
    with (obj_herosabot)
        instance_destroy();
    scr_herodestroy();
    global.ignoreall=0;
    playinghero3d=0;
    repeat(10)    
        sound_stop_all();
    if (room==rom_sector6){
        with (obj_sabot)
            scr_music("mus_sec1");
        //Hero chats
        instance_activate_object(obj_iji);
        (instance_create(obj_iji.x,obj_iji.y,obj_trigger)).textid="chat63";
        }
    }
with (obj_paused)
    instance_destroy();
with (obj_marker)
    instance_destroy();
with (obj_fade)
    instance_destroy();
with (obj_loadingback)
    instance_destroy();
with (obj_pauseeffect)
    instance_destroy();
with (obj_maincover)
    instance_destroy();
with (obj_pausefullcover)
    instance_destroy();
instance_activate_all();
if (global.horse){
    instance_deactivate_region(x-900,y-900,1800,1800,0,1);
    with (obj_shakescreen)
        scr_methodhorse();
    }
else{
    if (global.sector!=11 && global.sector!=12 && global.sector!=13 && global.sector!=14 && global.sector!=15){
        instance_deactivate_region(x-1600,y-1400,3200,2800,0,1);
        with (obj_shakescreen)
            scr_methodx();
        }
    }
instance_activate_object(obj_activateme);
}
#define scr_forcehud
with (obj_shakescreen){
obj_reloader.x = x+106-488;
obj_reloader.y = y+278;
obj_cracktext.x = x;
obj_cracktext.y = y;
obj_messagetext.x = x;
obj_messagetext.y = y;
obj_scrollarrow.x = x+399;
obj_scrollarrow.y = y+299;
obj_hud.x = x-400;
obj_hud.y = y+220;
obj_weapon1.x = x+234-488;
obj_weapon1.y = y+231;
obj_weapon2.x = x+274-488;
obj_weapon2.y = y+231;
obj_weapon3.x = x+314-488;
obj_weapon3.y = y+231;
obj_weapon4.x = x+354-488;
obj_weapon4.y = y+231;
obj_weapon5.x = x+234-488;
obj_weapon5.y = y+263;
obj_weapon6.x = x+274-488;
obj_weapon6.y = y+263;
obj_weapon7.x = x+314-488;
obj_weapon7.y = y+263;
obj_weapon8.x = x+354-488;
obj_weapon8.y = y+263;
obj_kroterabar.x=x;
obj_kroterabar.y=y-268+obj_kroterabar.yadjust;
obj_ashabar.x=x;
obj_ashabar.y=y-268+obj_ashabar.yadjust;
obj_proximabar.x=x;
obj_proximabar.y=y-268+obj_proximabar.yadjust;
}
#define scr_huddraw
draw_sprite(spr_hud,0,x,y);
if (obliterated){
    //draw_sprite(spr_hpbarback,global.healthlevel-1,x+319,y+44);
    }
else{
draw_sprite(spr_levelbarleft,global.healthlevel-1,x+16+488,y+10);
draw_sprite(spr_levelbarleft,global.attacklevel-1,x+16+488,y+26);
draw_sprite(spr_levelbarleft,global.assimilatelevel-1,x+16+488,y+42);
draw_sprite(spr_levelbarleft,global.strengthlevel-1,x+16+488,y+58);
draw_sprite(spr_levelbar,global.cracklevel-1,x+176+488,y+10);
draw_sprite(spr_levelbar,global.tasenlevel-1,x+176+488,y+26);
draw_sprite(spr_levelbar,global.komatolevel-1,x+176+488,y+42);
draw_sprite(spr_levelbar,global.jumplevel-1,x+260+488,y+26);
draw_sprite(spr_levelbar,global.armorlevel-1,x+260+488,y+58);
if (global.armor<99.9)
    draw_sprite(spr_armorbar,global.armor/5,x+320,y+12);
else
    draw_sprite(spr_armorbar,20,x+320,y+12);
draw_sprite(spr_hpbarback,global.healthlevel-1,x+319,y+44);
if (global.hp>0)
    draw_sprite(spr_hpbar,global.hp,x+320,y+44);
else
    draw_sprite(spr_hpbar,0,x+320,y+44);
if (global.weapon2){
draw_sprite(spr_numbers,floor((global.ammo2/10)) mod 10,x+688-488,y+26);
draw_sprite(spr_numbers,global.ammo2 mod 10,x+696-488,y+26);
}
if (global.weapon3){
draw_sprite(spr_numbers,floor((global.ammo3/10)) mod 10,x+728-488,y+26);
draw_sprite(spr_numbers,global.ammo3 mod 10,x+736-488,y+26);
}
if (global.weapon4){
draw_sprite(spr_numbers,floor((global.ammo4/10)) mod 10,x+768-488,y+26);
draw_sprite(spr_numbers,global.ammo4 mod 10,x+776-488,y+26);
}
if (global.weapon6){
draw_sprite(spr_numbers,floor((global.ammo6/10)) mod 10,x+688-488,y+58);
draw_sprite(spr_numbers,global.ammo6 mod 10,x+696-488,y+58);
}
if (global.weapon7){
draw_sprite(spr_numbers,floor((global.ammo7/10)) mod 10,x+728-488,y+58);
draw_sprite(spr_numbers,global.ammo7 mod 10,x+736-488,y+58);
}
if (global.weapon8){
draw_sprite(spr_numbers,floor((global.ammo8/10)) mod 10,x+768-488,y+58);
draw_sprite(spr_numbers,global.ammo8 mod 10,x+776-488,y+58);
}
draw_sprite(spr_numbers,floor((global.level/10)) mod 10,x+175+488,y+58);
draw_sprite(spr_numbers,global.level mod 10,x+183+488,y+58);
draw_sprite(spr_numbers,floor((global.points/10)) mod 10,x+231+488,y+58);
draw_sprite(spr_numbers,global.points mod 10,x+239+488,y+58);
if (!dontdrawweapon){
    if (global.weapon==20)
        draw_sprite(spr_weapons,17,x+505-488,y+29);
    else if (global.weapon==21)
        draw_sprite(spr_weapons,18,x+505-488,y+29);
    else
        draw_sprite(spr_weapons,global.weapon-1,x+505-488,y+29);
    }

//Nanobar
//782,20
draw_set_color(make_color_rgb(74,199,226));
drawmaxnano=(global.level*(4+global.difficulty*4))+4;
if (global.level>=global.maxlevel)
    drawnano=52;
else
    drawnano=ceil(52*(global.xp/drawmaxnano));
wantdrawnano+=ceil((drawnano-wantdrawnano)/4);
draw_rectangle(x+782,y+72-wantdrawnano,x+791,y+71,0);

//Pop-up poster
if (room==rom_sector1) postersprite=spr_mainposter1;
else if (room==rom_sector2) postersprite=spr_mainposter2;
else if (room==rom_sector3) postersprite=spr_mainposter3;
else if (room==rom_sector4) postersprite=spr_mainposter4;
else if (room==rom_sector5) postersprite=spr_mainposter5;
else if (room==rom_sector6) postersprite=spr_mainposter6;
else if (room==rom_sector7) postersprite=spr_mainposter7;
else if (room==rom_sector8) postersprite=spr_mainposter8;
else if (room==rom_sector9) postersprite=spr_mainposter9;
else if (room==rom_sectorx) postersprite=spr_mainposter10;
if (touchposter)
    popupwant=155;
else
    popupwant=-20;
popupcyc+=ceil((popupwant-popupcyc)/4);
if (popupcyc>0 && room!=rom_sectorz && !global.wty)
    draw_sprite(postersprite,0,x+800-popupcyc,y-360);

//Levelpoke
if (global.levelstation){
    if (lsblinkprev!=global.levelpoke)
        lsblinkcyc=2;
    lsblinkprev=global.levelpoke;
    lsblinkcyc+=1;
    if (lsblinkcyc==3)
        lsblink=1;
    if (lsblinkcyc>=7){
        lsblink=0;
        lsblinkcyc=0;
        }
    draw_sprite(spr_levelpoke2,0,x,y);
    if (lsblink){
        if (global.levelpoke==0){
            if (global.healthlevel==10 || global.suddendeath || global.really)
                draw_sprite(spr_levelpoke,7,x+16+488,y+10);
            else
                draw_sprite(spr_levelpoke,0,x+16+488,y+10);
            }
        else if (global.levelpoke==1){
            if (global.attacklevel==10 || global.specialtrigger16 || global.really)
                draw_sprite(spr_levelpoke,8,x+16+488,y+26);
            else
                draw_sprite(spr_levelpoke,1,x+16+488,y+26);
            }
        else if (global.levelpoke==2){
            if (global.assimilatelevel==10 || global.specialtrigger16 || global.really)
                draw_sprite(spr_levelpoke,9,x+16+488,y+42);
            else
                draw_sprite(spr_levelpoke,2,x+16+488,y+42);
            }
        else if (global.levelpoke==3){
            if (global.strengthlevel==10 || global.specialtrigger16 || global.really)
                draw_sprite(spr_levelpoke,10,x+16+488,y+58);
            else
                draw_sprite(spr_levelpoke,3,x+16+488,y+58);
            }
        else if (global.levelpoke==4){
            if (global.cracklevel==10 || global.specialtrigger16 || global.really || global.sector==1)
                draw_sprite(spr_levelpoke,11,x+176+488,y+10);
            else
                draw_sprite(spr_levelpoke,4,x+176+488,y+10);
            }
        else if (global.levelpoke==5){
            if (global.tasenlevel==10 || global.specialtrigger16 || global.really)
                draw_sprite(spr_levelpoke,12,x+176+488,y+26);
            else
                draw_sprite(spr_levelpoke,5,x+176+488,y+26);
            }
        else if (global.levelpoke==6){
            if (global.komatolevel==10 || global.specialtrigger16 || global.really)
                draw_sprite(spr_levelpoke,13,x+176+488,y+42);
            else
                draw_sprite(spr_levelpoke,6,x+176+488,y+42);
            }
        }
    //Beginning rectangle
    if (lsrectcyc<6){
        lsrectcyc+=1;
        with (obj_levelstation){
            if (touchstation){
                obj_hud.lsrx=x;
                obj_hud.lsry=y;
                }
            }
        }
    if (lsrectcyc>=1 && lsrectcyc<=3){
        if (lsrectcyc==1)
            draw_set_color(c_white);
        else if (lsrectcyc==2)
            draw_set_color(c_yellow);
        else if (lsrectcyc==3)
            draw_set_color(c_olive);
        draw_rectangle(lsrx+4,lsry,lsrx+27,lsry+31,1);
        if (lsrectcyc==1)
            draw_rectangle(lsrx+5,lsry+1,lsrx+26,lsry+30,1);
        }
    if (lsrectcyc>=2 && lsrectcyc<=4){
        if (lsrectcyc==2)
            draw_set_color(c_white);
        else if (lsrectcyc==3)
            draw_set_color(c_yellow);
        else if (lsrectcyc==4)
            draw_set_color(c_olive);
        if (lsrx<x+489){
            draw_line(lsrx+4,lsry+30,x+489,y+78);
            if (lsrectcyc==2){
                draw_line(lsrx+5,lsry+30,x+490,y+78);
                draw_line(lsrx+4,lsry+31,x+489,y+79);
                draw_line(lsrx+5,lsry+31,x+490,y+79);
                }
            }
        else{
            draw_line(lsrx+4,lsry,x+489,y);
            if (lsrectcyc==2){
                draw_line(lsrx+5,lsry,x+490,y);
                draw_line(lsrx+4,lsry+1,x+489,y+1);
                draw_line(lsrx+5,lsry+1,x+490,y+1);
                }
            }
        draw_line(lsrx+27,lsry,x+799,y);
        if (lsrectcyc==2){
            draw_line(lsrx+26,lsry,x+798,y);
            draw_line(lsrx+26,lsry+1,x+798,y+1);
            draw_line(lsrx+27,lsry+1,x+799,y+1);
            }
        }
    /*
    if (lsrectcyc>=3 && lsrectcyc<=5){
        if (lsrectcyc==3)
            draw_set_color(c_white);
        else if (lsrectcyc==4)
            draw_set_color(c_yellow);
        else if (lsrectcyc==5)
            draw_set_color(c_olive);
        draw_rectangle(x+489,y,x+799,y+79,1);
        draw_rectangle(x+490,y+1,x+798,y+78,1);
        lsrcolrot=0;
        }
    */
    if (lsrectcyc>=3){
        lsrcolrot+=17;
        if (lsrcolrot>=360)
            lsrcolrot-=360;
        lsrcol=175+sin(degtorad(lsrcolrot))*80;
        draw_set_color(make_color_rgb(lsrcol,lsrcol,0));
        draw_rectangle(x+489,y,x+799,y+79,1);
        draw_rectangle(x+490,y+1,x+798,y+78,1);
        //draw_rectangle(x+491,y+2,x+797,y+77,1);
        }
    }
else
    lsrectcyc=0;

if (global.weapstation>0){
    //Weapon station beginning rectangle
    if (wsrectcyc<6){
        wsrectcyc+=1;
        with (obj_weapstation){
            if (touchstation){
                obj_hud.wsrx=x;
                obj_hud.wsry=y;
                }
            }
        }
    if (wsrectcyc>=1 && wsrectcyc<=3){
        if (wsrectcyc==1)
            draw_set_color(c_white);
        else if (wsrectcyc==2)
            draw_set_color(c_yellow);
        else if (wsrectcyc==3)
            draw_set_color(c_olive);
        draw_rectangle(wsrx+12,wsry,wsrx+51,wsry+64,1);
        if (wsrectcyc==1)
            draw_rectangle(wsrx+13,wsry+1,wsrx+50,wsry+63,1);
        }
    if (wsrectcyc>=2 && wsrectcyc<=4){
        if (wsrectcyc==2)
            draw_set_color(c_white);
        else if (wsrectcyc==3)
            draw_set_color(c_yellow);
        else if (wsrectcyc==4)
            draw_set_color(c_olive);
        draw_line(wsrx+12,wsry,x,y);
        if (wsrectcyc==2){
            draw_line(wsrx+13,wsry,x+1,y);
            draw_line(wsrx+12,wsry+1,x,y+1);
            draw_line(wsrx+13,wsry+1,x+1,y+1);
            }
        if (wsrx+50<x+309){
            draw_line(wsrx+50,wsry,x+309,y);
            if (wsrectcyc==2){
                draw_line(wsrx+51,wsry,x+310,y);
                draw_line(wsrx+50,wsry+1,x+309,y+1);
                draw_line(wsrx+51,wsry+1,x+310,y+1);
                }
            }
        else{
            draw_line(wsrx+50,wsry+63,x+309,y+78);
            if (wsrectcyc==2){
                draw_line(wsrx+51,wsry+63,x+310,y+78);
                draw_line(wsrx+50,wsry+64,x+309,y+79);
                draw_line(wsrx+51,wsry+64,x+310,y+79);
                }
            }
        }
    /*
    if (wsrectcyc>=3 && wsrectcyc<=5){
        if (wsrectcyc==3)
            draw_set_color(c_white);
        else if (wsrectcyc==4)
            draw_set_color(c_yellow);
        else if (wsrectcyc==5)
            draw_set_color(c_olive);
        draw_rectangle(x,y,x+310,y+79,1);
        draw_rectangle(x+1,y+1,x+309,y+78,1);
        wsrcolrot=0;
        }
    */
    if (wsrectcyc>=3){
        wsrcolrot+=17;
        if (wsrcolrot>=360)
            wsrcolrot-=360;
        wsrcol=175+sin(degtorad(wsrcolrot))*80;
        draw_set_color(make_color_rgb(wsrcol,wsrcol,0));
        draw_rectangle(x,y,x+310,y+79,1);
        draw_rectangle(x+1,y+1,x+309,y+78,1);
        //draw_rectangle(x+2,y+2,x+308,y+77,1);
        }
    }
else
    wsrectcyc=0;

}

if (global.showdata)
    draw_sprite(spr_postermarker,0,floor(mouse_x),floor(mouse_y));

#define scr_terminals
if (!place_meeting(x,y,obj_enemy) || place_meeting(x,y,obj_iosa)){
instance_destroy();
//Sector 2: Open medical bay cdoor
if (other.trigger==1 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    instance_activate_object(obj_trigger);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==1)
            instance_destroy();
        }
    with (obj_trigger){
        if (textid="chat22")
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="MEDICAL BAY DOOR OPENED";
    global.ignorestation=60;
    }

//Sector 2: open cdoor to end area
if (other.trigger==2 && !other.cracked){
    global.security=1;
    other.crackmark=1;
    global.cracktext="Tasen terminal#[Locked]#Security: ";
    global.cracktext+=string(global.security);
    if (global.security==10)
        global.cracktext+="#PUSH "+chr(global.usekey)+" TO BEGIN"
    else
        global.cracktext+="#PUSH "+chr(global.usekey)+" TO BEGIN"
    script_execute(scr_begincrack);
    }

//Sector 4: Open first security door
if (other.trigger==3 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==3)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 9 OPENED";
    global.ignorestation=60;
    }

//Sector 4: Open second security door
if (other.trigger==4 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==4)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 7 OPENED";
    global.ignorestation=60;
    }

//Sector 4: Open third security door
if (other.trigger==5 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==5)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 7 OPENED";
    global.ignorestation=60;
    }

//Sector 4: Power up reactor
if (other.trigger==6 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    scr_sound("tor_fly");
    with (obj_cdoor){
        if (trigger==6)
            instance_destroy();
        }
    obj_s4reactor.active=1;
    obj_sabot.s4flash=1;
    //(instance_create(obj_iji.x,obj_iji.y,obj_trigger)).textid="chat43";
    global.erasetop=0;
    global.topmessage="TASEN REACTOR POWERED UP";
    global.ignorestation=60;
    (instance_create(3680,4480,obj_tasenshredder)).killdataid=149;
    if (global.difficulty!=0){
        tempid5=instance_create(3872,4480,obj_tasenshredder)
        tempid5.shrstepsound=3;
        tempid5.killdataid=150;
        }
    }

//Sector 4: Open final security door
if (other.trigger==8 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    instance_activate_object(obj_trigger);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==8)
            instance_destroy();
        }
    with (obj_trigger){
        if (textid="chat44")
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 3 OPENED";
    global.ignorestation=60;
    }

//Sector 5: Open Tasen-Komato battle security door
if (other.trigger==9 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (tag==97624){
            scr_sound("glo_door");
            cracked=1;
            vspeed=-16;
            alarm[0]=6;
            }
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 9 OPENED";
    global.ignorestation=60;
    }

//Sector 5: open grand storage cdoor
if (other.trigger==10 && !other.cracked){
    global.security=1;
    other.crackmark=1;
    global.cracktext="Tasen terminal#[Locked]#Security: ";
    global.cracktext+=string(global.security);
    if (global.security==10)
        global.cracktext+="#PUSH "+chr(global.usekey)+" TO BEGIN"
    else
        global.cracktext+="#PUSH "+chr(global.usekey)+" TO BEGIN"
    script_execute(scr_begincrack);
    }

//Sector 6: Open "Assassin storage" security door
if (other.trigger==11 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==11)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 4 OPENED";
    global.ignorestation=60;
    }

//Sector 6: Open "poster storage" security door
if (other.trigger==12 && !other.cracked){
    if (global.cracklevel>=1){
    global.security=1;
    other.crackmark=1;
    global.cracktext="Tasen terminal#[Locked]#Security: ";
    global.cracktext+=string(global.security);
    if (global.security==10)
        global.cracktext+="#PUSH "+chr(global.usekey)+" TO BEGIN"
    else
        global.cracktext+="#PUSH "+chr(global.usekey)+" TO BEGIN"
    script_execute(scr_begincrack);
    }
    else{
        global.erasetop=0;
        global.topmessage="You need a Crack level of 1 to crack this Tasen terminal";
        global.ignorestation=60;
        }
    }

//Sector 6: Open main security door
if (other.trigger==13 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    instance_activate_object(obj_trigger);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==13)
            instance_destroy();
        }
    with (obj_trigger){
        if (textid="chat62")
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 7 OPENED";
    global.ignorestation=60;
    }

//Sector 6: Activate secret teleporter
if (other.trigger==14 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_teledest);
    instance_activate_object(obj_trigger);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_teledest){
        if (dest==64){
            (instance_create(x,y-32,obj_tele)).dest=4;
            instance_destroy();
            }
        }
    global.erasetop=0;
    global.topmessage="TELEPORTER ON FLOOR 7 ACTIVATED";
    global.ignorestation=60;
    tempid=instance_create(6400,3872,obj_trigger);
    tempid.sprite_index=spr_blocktall;
    tempid.textid="chat69";
    with (obj_trigger){
        if (textid="chat6a")
            instance_destroy();
        }
    }

//Sector 6: Open Alpha Lab security door
if (other.trigger==15 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==15)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 3 OPENED";
    global.ignorestation=60;
    }

//Sector 6: Map console
if (other.trigger==16){
    global.erasetop=0;
    if (obj_sabot.sec6mapped)
        global.topmessage="The Sector map has been downloaded to the Pause menu";
    else
        global.topmessage="This terminal displays a map of the Sector";
    global.ignorestation=60;
    }

//Sector 6: Secret minigame
if (other.trigger==17){
    if (instance_exists(obj_komatoassassin)){
        global.erasetop=0;
        global.topmessage="TEMPORARY MALFUNCTION, PLEASE STAND BY";
        global.ignorestation=60;
        scr_sound("glo_crackfail");
        }
    else{
        instance_create(obj_sabot.x,obj_sabot.y,obj_starthero3d);
        global.ignoreall=1;
        obj_sabot.playinghero3d=1;
        scr_sound("glo_cracksuccess");
        }
    }

//Sector 6: Open the way back
if (other.trigger==18 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==18){
            scr_sound("glo_door");
            cracked=1;
            vspeed=-16;
            alarm[0]=6;
            }
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 9 OPENED";
    global.ignorestation=60;
    }

//Sector 7: Open level 1 Security doors
if (other.trigger==19 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==1){
            scr_sound("glo_door");
            cracked=1;
            vspeed=-16;
            alarm[0]=6;
            }
        }
    global.erasetop=0;
    global.topmessage="LEVEL { SECURITY DOORS OPENED";
    global.ignorestation=60;
    }

//Sector 7: Open level 2 Security doors
if (other.trigger==20 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==2)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="LEVEL } SECURITY DOORS OPENED";
    global.ignorestation=60;
    }

//Sector 7: Open level 3 Security doors
if (other.trigger==21 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==3)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="LEVEL @{ SECURITY DOORS OPENED";
    global.ignorestation=60;
    }

//Sector 7: Open level 5 Security doors
if (other.trigger==22 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==5){
            scr_sound("glo_door");
            cracked=1;
            vspeed=-16;
            alarm[0]=6;
            }
        }
    global.erasetop=0;
    global.topmessage="LEVEL }{ SECURITY DOORS OPENED";
    global.ignorestation=60;
    }

//Sector 7: Trigger right electropad
if (other.trigger==23){
    if (other.sprite_index==spr_terminal){
        with (obj_electropad){
            if (tag==2)
                active=1;
            }
        if (obj_proximatrigger.elecpad2==0){
            global.topmessage="RIGHT ELECTROPAD ACTIVE";
            scr_sound("glo_bootelec");
            other.sprite_index=spr_sec7terminal;
            obj_proximatrigger.elecpad2=1;
            if (obj_sabot.flash==0)
                obj_sabot.flash=0.2;
            }
        }
    else{
        global.topmessage="RIGHT ELECTROPAD IS NOT DONE CHARGING, TRY LATER";
        scr_sound("glo_crackfail");
        }
    global.erasetop=0;
    global.ignorestation=60;
    }

//Sector 7: Trigger left electropad
if (other.trigger==24){
    if (other.sprite_index==spr_terminal){
        with (obj_electropad){
            if (tag==1)
                active=1;
            }
        if (obj_proximatrigger.elecpad1==0){
            global.topmessage="LEFT ELECTROPAD ACTIVE";
            scr_sound("glo_bootelec");
            other.sprite_index=spr_sec7terminal;
            obj_proximatrigger.elecpad1=1;
            if (obj_sabot.flash==0)
                obj_sabot.flash=0.2;
            }
        }
    else{
        global.topmessage="LEFT ELECTROPAD IS NOT DONE CHARGING, TRY LATER";
        scr_sound("glo_crackfail");
        }
    global.erasetop=0;
    global.ignorestation=60;
    }

//Sector 8: Activate lift
if (other.trigger==25 && !other.cracked){
if (other.ready){
    other.sprite_index=spr_sec7terminal;
    global.topmessage="LIFT POWERING UP|";
    global.erasetop=0;
    global.ignorestation=60;
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_trigger){
        if (textid="chat83")
            instance_destroy();
        }
    with (obj_liftoff){
        if (trigger=25)
            countdown=1;
        }
    }
else{
    global.topmessage="TERMINAL BOOTING UP|";
    global.erasetop=0;
    global.ignorestation=60;
    }
}
//Sector 8: Unlock Annihilator Beta
if (other.trigger==26 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    global.erasetop=0;
    global.ignorestation=60;
    global.topmessage="ANNIHILATOR BETA UNLOCKED IN SECTOR X";
    global.specialtrigger4=1;
    }

//Sector 9: Open first Security door
if (other.trigger==27 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==27)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 5 OPENED";
    global.ignorestation=60;
    }

//Sector 9: Lock 1
if (other.trigger==28 && !other.cracked){
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    other.sprite_index=spr_sec7terminal;
    global.erasetop=0;
    global.topmessage="BULKHEAD LOCK A RELEASED";
    global.ignorestation=60;
    obj_sabot.mbulk+=1;
    if (obj_sabot.mbulk==4){
        global.topmessage+=" - BULKHEAD OPENED";
        instance_activate_object(obj_mbulkhead);
        with (obj_mbulkhead)
                instance_destroy();
        }
    }

//Sector 9: Lock 2
if (other.trigger==29 && !other.cracked){
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    other.sprite_index=spr_sec7terminal;
    global.erasetop=0;
    global.topmessage="BULKHEAD LOCK B RELEASED";
    global.ignorestation=60;
    obj_sabot.mbulk+=1;
    if (obj_sabot.mbulk==4){
        global.topmessage+=" - BULKHEAD OPENED";
        instance_activate_object(obj_mbulkhead);
        with (obj_mbulkhead)
                instance_destroy();
        }
    }

//Sector 9: Lock 3
if (other.trigger==30 && !other.cracked){
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    other.sprite_index=spr_sec7terminal;
    global.erasetop=0;
    global.topmessage="BULKHEAD LOCK C RELEASED";
    global.ignorestation=60;
    obj_sabot.mbulk+=1;
    if (obj_sabot.mbulk==4){
        global.topmessage+=" - BULKHEAD OPENED";
        instance_activate_object(obj_mbulkhead);
        with (obj_mbulkhead)
                instance_destroy();
        }
    }

//Sector 9: Lock 4
if (other.trigger==31 && !other.cracked){
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    other.sprite_index=spr_sec7terminal;
    global.erasetop=0;
    global.topmessage="BULKHEAD LOCK D RELEASED";
    global.ignorestation=60;
    obj_sabot.mbulk+=1;
    if (obj_sabot.mbulk==4){
        global.topmessage+=" - BULKHEAD OPENED";
        instance_activate_object(obj_mbulkhead);
        with (obj_mbulkhead)
                instance_destroy();
        }
    }

//Sector 9: Open final Security door
if (other.trigger==32 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==32)
            instance_destroy();
        }
    global.erasetop=0;
    global.topmessage="SECURITY DOOR ON FLOOR 4 OPENED";
    global.ignorestation=60;
    }

//Sector 9: Respawn Iosa crumbles
if (other.trigger==33 && !other.cracked){
    with (other){
        if (!place_meeting(864,576,obj_iosacrumble)){
            tempid=instance_create(512,576,obj_iosacrumble);
            tempid.tag=1;
            tempid.depth=1;
            }
        if (!place_meeting(1312,576,obj_iosacrumble)){
            tempid=instance_create(1664,576,obj_iosacrumble);
            tempid.tag=2;
            tempid.depth=1;
            }
        cracked=1;
        sprite_index=spr_sec7terminal;
        }
    scr_sound("glo_cracksuccess");
    global.erasetop=0;
    global.topmessage="PLATFORMS EXTENDED";
    global.ignorestation=60;
    }

//Sector X: Open first core door
if (other.trigger==34 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==34)
            instance_destroy();
        }
    with (obj_teledest){
        if (dest==91294){
            instance_destroy();
            (instance_create(x,y-32,obj_tele)).dest=2;
            }
        }
    global.erasetop=0;
    global.topmessage="FIRST LINE BLAST DOORS OPENED";
    global.ignorestation=60;
    obj_sabot.xcoredoors+=1;
    instance_activate_object(obj_xcore);
    if (obj_sabot.xcoredoors==2 && instance_number(obj_xcore)==1){
        (instance_create(4592,1856,obj_trigger)).textid="chatxk";
        (instance_create(6144,1472,obj_trigger)).textid="chatxk";
        }
    }

//Sector X: Open second core door
if (other.trigger==35 && !other.cracked){
    other.sprite_index=spr_sec7terminal;
    instance_activate_object(obj_cdoor);
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    with (obj_cdoor){
        if (trigger==35)
            instance_destroy();
        }
    with (obj_teledest){
        if (dest==85624){
            instance_destroy();
            (instance_create(x,y-32,obj_tele)).dest=2;
            }
        }
    global.erasetop=0;
    global.topmessage="SECOND LINE BLAST DOORS OPENED";
    global.ignorestation=60;
    obj_sabot.xcoredoors+=1;
    instance_activate_object(obj_xcore);
    if (obj_sabot.xcoredoors==2 && instance_number(obj_xcore)==1){
        (instance_create(4592,1856,obj_trigger)).textid="chatxk";
        (instance_create(6144,1472,obj_trigger)).textid="chatxk";
        }
    }

//Sector X: Annihilator Beta
if (other.trigger==36 && !other.cracked){
    if (global.specialtrigger4==0){
        global.erasetop=0;
        global.topmessage="ACCESS DENIED - ANNIHILATOR BETA IS LOCKED";
        global.ignorestation=60;
        scr_sound("glo_crackfail");
        }
    else{
        instance_activate_object(obj_annihilatorbeta);
        global.ignoreall=1;
        scr_sound("glo_cracksuccess");
        obj_iji.takingpain=1;
        obj_iji.recovering=0;
        global.state=1;
        if (global.facing==0)
            obj_iji.sprite_index=spr_basicleft;
        else
            obj_iji.sprite_index=spr_basic;
        obj_iji.visible=1;
        obj_sabot.annihilatorbeta=1;
        obj_sabot.ignoresmooth=1;
        obj_sabot.alarm[4]=2;
        obj_sabot.alarm[5]=1;
        obj_iji.alarm[1]=0;
        obj_iji.switchingpose=0;
        (instance_create(obj_annihilatorbeta.x,obj_annihilatorbeta.y,obj_blackblanket)).alarm[0]=2;
        global.erasetop=0;
        global.topmessage="ACCESS GRANTED - ANNIHILATOR BETA ACTIVATED";
        global.ignorestation=60;
        }
    }

//Sector 7: Open floor hatch
if (other.trigger==37 && !other.cracked){
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    global.erasetop=0;
    global.topmessage="FLOOR HATCH OPENED";
    global.ignorestation=60;
    with (obj_sec7hatch){
        solid=0;
        open=1;
        }
    other.sprite_index=spr_sec7terminal;
    (instance_create(4544,1264,obj_trigger)).textid="chat76";
    }

//Sector 5: Lock 1
if (other.trigger==38 && !other.cracked){
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    other.sprite_index=spr_sec7terminal;
    global.erasetop=0;
    global.topmessage="DOOR LOCK A RELEASED";
    global.ignorestation=60;
    obj_sabot.mbulk+=1;
    if (obj_sabot.mbulk==2){
        global.topmessage+=" - SECURITY DOOR ON FLOOR 6 OPENED";
        instance_activate_object(obj_cdoor);
        with (obj_cdoor){
            if (tag==58392)
                instance_destroy();
            }
        instance_activate_object(obj_log1);
        with (obj_log1){
            if (textid=="text513"){
                instance_destroy();
                tempid=instance_create(x,y,obj_terminal);
                tempid.cracked=1;
                tempid.sprite_index=spr_sec7terminal;
                }
            }
        }
    }

//Sector 5: Lock 2
if (other.trigger==39 && !other.cracked){
    other.cracked=1;
    scr_sound("glo_cracksuccess");
    other.sprite_index=spr_sec7terminal;
    global.erasetop=0;
    global.topmessage="DOOR LOCK B RELEASED";
    global.ignorestation=60;
    obj_sabot.mbulk+=1;
    if (obj_sabot.mbulk==2){
        global.topmessage+=" - SECURITY DOOR ON FLOOR 6 OPENED";
        instance_activate_object(obj_trigger);
        instance_activate_object(obj_cdoor);
        with (obj_cdoor){
            if (tag==58392)
                instance_destroy();
            }
        instance_activate_object(obj_log1);
        with (obj_log1){
            if (textid=="text513"){
                instance_destroy();
                tempid=instance_create(x,y,obj_terminal);
                tempid.cracked=1;
                tempid.sprite_index=spr_sec7terminal;
                }
            }
        }
    }
}

//Sector X: General Tor Maximum charge
if (other.trigger==40 && !other.cracked){
    global.erasetop=0;
    global.ignorestation=120;
    if (global.topmessage!="WARNING: PRESS AGAIN TO CONFIRM MAXIMUM CHARGE")
        global.topmessage="WARNING: PRESS AGAIN TO CONFIRM MAXIMUM CHARGE";
    else{
        other.cracked=1;
        other.sprite_index=spr_sec7terminal;
        scr_sound("glo_cracksuccess");
        global.tormaximumcharge=1;
        global.topmessage="MAXIMUM CHARGE CONFIRMED";
        }
    }

//Sector ?: Unknown
if (other.trigger==41){
    scr_sound("glo_cracksuccess");
    instance_create(other.x+16,other.y+16,obj_banana);
    }
#define scr_adjustview
//Others
if (room!=rom_sector15 && room!=rom_sector16){
if (annihilatorbeta){
    if (obj_annihilatorbeta.facing==0){
        if (facadjust>-32)
            facadjust-=2;
        }
    else{
        if (facadjust<32)
            facadjust+=2;
        }
    x=obj_annihilatorbeta.x-350+global.viewxoffset+facadjust;
    y=obj_annihilatorbeta.y-220+global.viewyoffset;
    }
else{
if (global.facing==0){
    if (facadjust>-32)
        facadjust-=2;
    }
if (global.facing==1){
    if (facadjust<32)
        facadjust+=2;
    }
if (obj_iji.shredder){
    shreddery2=-28;
if (abs(shredderx)<=4)
    shredderx=0;
    else{
    if (shredderx>0)
        shredderx-=4;
    if (shredderx<0)
        shredderx+=4;
        }
if (abs(shreddery)<=4)
    shreddery=0;
    else{
    if (shreddery>0)
        shreddery-=4;
    if (shreddery<0)
        shreddery+=4;
        }
    }
else{
    shredderx=0;
    shreddery=0;
    shreddery2=0;
    }

if (obj_iji.sprite_index==spr_climb || obj_iji.sprite_index==spr_climbleft){
    if (obj_iji.image_index==0){
        climbx=obj_iji.xprevious-obj_iji.x;
        climby=obj_iji.yprevious-obj_iji.y;
        }
    }
if (climbx<-3) climbx+=2;
if (climbx>3) climbx-=2;
if (climby<-3) climby+=2;
if (climby>3) climby-=2;
if (climbx<0) climbx+=1;
if (climbx>0) climbx-=1;
if (climby<0) climby+=1;
if (climby>0) climby-=1;

finalx=obj_iji.x-395+global.viewxoffset+climbx+shredderx+facadjust;
if (ignoresmooth)
    x=finalx;
else
    x=finalx+(xprevious-finalx)/2;

if (obj_iji.sprite_index == spr_hitfloor || obj_iji.sprite_index == spr_hitfloorleft || obj_iji.sprite_index == spr_knockdown || obj_iji.sprite_index == spr_knockdownleft){
    if (knockcycle < 29)
        knockcycle += 2;
    finaly=obj_iji.y-230-knockcycle+global.viewyoffset+climby+shreddery+shreddery2;
    if (ignoresmooth)
        y=finaly;
    else
        y=finaly+(yprevious-finaly)/2;
    }
else{
    knockcycle = 0;
    finaly=obj_iji.y-230+global.viewyoffset+climby+shreddery+shreddery2;
    if (ignoresmooth)
        y=finaly;
    else
        y=finaly+(yprevious-finaly)/2;
    }
}

//locked Y / Iosa cam
if (global.iosaphase==0){
    if (room==rom_sector14)
        scr_iosacam();
    }

if (global.shakescreen <= 0){
    obj_shakescreen.x = x+400;
    obj_shakescreen.y = y+300;
    }
if (global.shakescreen > 10){
    obj_shakescreen.x = x+370+random(60);
    obj_shakescreen.y = y+270+random(60);
    }
if (global.shakescreen > 6 && global.shakescreen < 11){
    obj_shakescreen.x = x+384+random(32);
    obj_shakescreen.y = y+284+random(32);
    }
if (global.shakescreen > 3 && global.shakescreen < 7){
    obj_shakescreen.x = x+392+random(16);
    obj_shakescreen.y = y+292+random(16);
    }
if (global.shakescreen > 0 && global.shakescreen < 4){
    obj_shakescreen.x = x+397+random(6);
    obj_shakescreen.y = y+297+random(6);
    }
if (global.shakescreen>0){
    global.shakescreen-=1;
    }
}

//Sector 15
else if (room==rom_sector15){
if (obj_sabot.unlockcamera){
    obj_shakescreen.x=432;
    obj_shakescreen.y=1700;
    x=floor(x);
    y=floor(y);
    obj_shakescreen.x=floor(obj_shakescreen.x);
    obj_shakescreen.y=floor(obj_shakescreen.y);
    finalx=x;
    finaly=y;
    }
else{
    if (instance_number(obj_iji)==1)
        s15x=obj_iji.x;
    obj_tortrigger.x=710+floor(s15x/5);
    if (fullpcamera){
        if (instance_number(obj_tortrigger)>0)
            obj_tortrigger.x=432;
        }
    if (global.shakescreen <= 0){
        obj_shakescreen.x=obj_tortrigger.x;
        obj_shakescreen.y=obj_tortrigger.y;
        }
    if (global.shakescreen > 10){
        obj_shakescreen.x=obj_tortrigger.x-30+random(60);
        obj_shakescreen.y=obj_tortrigger.y-30+random(60);
        }
    if (global.shakescreen > 6 && global.shakescreen < 11){
        obj_shakescreen.x=obj_tortrigger.x-20+random(40);
        obj_shakescreen.y=obj_tortrigger.y-20+random(40);
        }
    if (global.shakescreen > 3 && global.shakescreen < 7){
        obj_shakescreen.x=obj_tortrigger.x-11+random(22);
        obj_shakescreen.y=obj_tortrigger.y-11+random(22);
        }
    if (global.shakescreen > 0 && global.shakescreen < 4){
        obj_shakescreen.x=obj_tortrigger.x-7+random(14);
        obj_shakescreen.y=obj_tortrigger.y-7+random(14);
        }
    if (global.shakescreen>0){
        global.shakescreen-=1;
        }
    x=floor(x);
    y=floor(y);
    obj_shakescreen.x=floor(obj_shakescreen.x);
    obj_shakescreen.y=floor(obj_shakescreen.y);
    finalx=x;
    finaly=y;
    background_x[0]=obj_shakescreen.x-360-floor(((s15x+400)/20));
    background_y[0]=obj_shakescreen.y-300;
    background_x[1]=background_x[0]+425;
    background_y[1]=background_y[0];
    background_x[2]=background_x[0];
    background_y[2]=background_y[0]+250;
    background_x[3]=background_x[0]+425;
    background_y[3]=background_y[0]+250;
    //Not affected by screen shaking
    with (obj_tor2){
        x=background_x[0]+424;
        y=background_y[0]+realy;
        }
    with (obj_deathhail){
        x=background_x[0]+realx;
        y=background_y[0]+realy;
        }
    with (obj_deathhailspark){
        x=background_x[0]+realx;
        y=background_y[0]+realy;
        }
    with (obj_tor2muzzleflash){
        x=background_x[0]+realx;
        y=background_y[0]+realy;
        }
    //Strikelightpos
    strikelightx=obj_shakescreen.x-230-floor(((s15x+400)/20));
    strikelighty=obj_shakescreen.y-130;
    }
}

//Sector 16
else if (room==rom_sector16)
    scr_adjustview16();

//Strikelights
if (room==rom_sector15 || room=rom_sector16){
    with (obj_strikelight){
        if (tag==1){
            x=obj_sabot.strikelightx;
            y=obj_sabot.strikelighty;
            }
        if (tag==2){
            x=obj_sabot.strikelightx+100;
            y=obj_sabot.strikelighty-68;
            }
        if (tag==3){
            x=obj_sabot.strikelightx+195;
            y=obj_sabot.strikelighty-12;
            }
        if (tag==4){
            x=obj_sabot.strikelightx+475;
            y=obj_sabot.strikelighty+15;
            }
        if (tag==5){
            x=obj_sabot.strikelightx+525;
            y=obj_sabot.strikelighty-78;
            }
        if (tag==6){
            x=obj_sabot.strikelightx+624;
            y=obj_sabot.strikelighty-14;
            }
        if (tag==7){
            x=obj_sabot.strikelightx-57;
            y=obj_sabot.strikelighty+125;
            }
        if (tag==8){
            x=obj_sabot.strikelightx+275;
            y=obj_sabot.strikelighty+77;
            }
        if (tag==9){
            x=obj_sabot.strikelightx+379;
            y=obj_sabot.strikelighty+94;
            }
        if (tag==10){
            x=obj_sabot.strikelightx+604;
            y=obj_sabot.strikelighty+105;
            }
        if (tag==11){
            x=obj_sabot.strikelightx+38;
            y=obj_sabot.strikelighty+199;
            }
        if (tag==12){
            x=obj_sabot.strikelightx+154;
            y=obj_sabot.strikelighty+134;
            }
        if (tag==13){
            x=obj_sabot.strikelightx+423;
            y=obj_sabot.strikelighty+159;
            }
        if (tag==14){
            x=obj_sabot.strikelightx+497;
            y=obj_sabot.strikelighty+151;
            }
        if (tag==15){
            x=obj_sabot.strikelightx+649;
            y=obj_sabot.strikelighty+180;
            }
        }
    }

//Tor smash shake
s15bgyoff=0;
if (room==rom_sector15){
    if (torsmashshake>0){
        torsmashshake-=1;
        s15bgyoff=(torsmashshake mod 2)*6;
        }
    }

//Update Shakescreen position
x=floor(x);
y=floor(y);
obj_shakescreen.x=floor(obj_shakescreen.x);
obj_shakescreen.y=floor(obj_shakescreen.y+s15bgyoff);

//secx
if (room=rom_sectorx){
    background_x[1]=11008;
    background_y[1]=obj_shakescreen.y-300;
    }
#define scr_adjustview2
//This was never actually called previously. Best to
// keep it unused (except the new Tor smash shake hack)
// in case re-enabling it would break something.

/*
//When gameover
if (room!=rom_sector15){
    obj_shakescreen.x = x+400;
    obj_shakescreen.y = y+300;
    }
//sector15
else{
obj_shakescreen.x=obj_tortrigger.x;
obj_shakescreen.y=obj_tortrigger.y;
x=view_xview[0];
x=floor(x);
y=floor(y);
obj_shakescreen.x=floor(obj_shakescreen.x);
obj_shakescreen.y=floor(obj_shakescreen.y);
background_x[0]=obj_shakescreen.x-360-floor(((s15x+400)/20));
background_y[0]=obj_shakescreen.y-300;
background_x[1]=background_x[0]+425;
background_y[1]=background_y[0];
background_x[2]=background_x[0];
background_y[2]=background_y[0]+250;
background_x[3]=background_x[0]+425;
background_y[3]=background_y[0]+250;
//Not affected by screen shaking
with (obj_tor2){
    x=background_x[0]+424;
    y=background_y[0]+realy;
    }
with (obj_deathhail){
    x=background_x[0]+realx;
    y=background_y[0]+realy;
    }
with (obj_deathhailspark){
    x=background_x[0]+realx;
    y=background_y[0]+realy;
    }
with (obj_tor2muzzleflash){
    x=background_x[0]+realx;
    y=background_y[0]+realy;
    }
strikelightx=obj_shakescreen.x-230-floor(((s15x+400)/20));
strikelighty=obj_shakescreen.y-130;
with (obj_strikelight){
    if (tag==1){
        x=obj_sabot.strikelightx;
        y=obj_sabot.strikelighty;
        }
    if (tag==2){
        x=obj_sabot.strikelightx+100;
        y=obj_sabot.strikelighty-68;
        }
    if (tag==3){
        x=obj_sabot.strikelightx+195;
        y=obj_sabot.strikelighty-12;
        }
    if (tag==4){
        x=obj_sabot.strikelightx+475;
        y=obj_sabot.strikelighty+15;
        }
    if (tag==5){
        x=obj_sabot.strikelightx+525;
        y=obj_sabot.strikelighty-78;
        }
    if (tag==6){
        x=obj_sabot.strikelightx+624;
        y=obj_sabot.strikelighty-14;
        }
    if (tag==7){
        x=obj_sabot.strikelightx-57;
        y=obj_sabot.strikelighty+125;
        }
    if (tag==8){
        x=obj_sabot.strikelightx+275;
        y=obj_sabot.strikelighty+77;
        }
    if (tag==9){
        x=obj_sabot.strikelightx+379;
        y=obj_sabot.strikelighty+94;
        }
    if (tag==10){
        x=obj_sabot.strikelightx+604;
        y=obj_sabot.strikelighty+105;
        }
    if (tag==11){
        x=obj_sabot.strikelightx+38;
        y=obj_sabot.strikelighty+199;
        }
    if (tag==12){
        x=obj_sabot.strikelightx+154;
        y=obj_sabot.strikelighty+134;
        }
    if (tag==13){
        x=obj_sabot.strikelightx+423;
        y=obj_sabot.strikelighty+159;
        }
    if (tag==14){
        x=obj_sabot.strikelightx+497;
        y=obj_sabot.strikelighty+151;
        }
    if (tag==15){
        x=obj_sabot.strikelightx+649;
        y=obj_sabot.strikelighty+180;
        }
    }
}
*/

//Tor smash shake
if (room==rom_sector15){
    if (torsmashshake>0){
        torsmashshake-=1;
        if (torsmashshake mod 2==1)
            s15bgyoff=6;
        else
            s15bgyoff=-6;
        }
    else
        s15bgyoff=0;
    //Update Shakescreen position
    obj_shakescreen.x=floor(obj_shakescreen.x);
    obj_shakescreen.y=floor(obj_shakescreen.y+s15bgyoff);
    }
#define scr_adjustview16
//Sector 16
x=obj_iji.x-363;
y=obj_iji.y-260-obj_torbodytrigger.lookupcyc;
obj_shakescreen.x = x+400;
obj_shakescreen.y = y+300;
x=floor(x);
y=floor(y);
obj_shakescreen.x=floor(obj_shakescreen.x);
obj_shakescreen.y=floor(obj_shakescreen.y);
finalx=x;
finaly=y;
background_x[0]=obj_shakescreen.x-368-floor(((obj_iji.x+200)/20));
background_y[0]=obj_shakescreen.y-312+floor((obj_torbodytrigger.lookupcyc/14));
background_x[1]=background_x[0]+425;
background_y[1]=background_y[0];
background_x[2]=background_x[0];
background_y[2]=background_y[0]+250;
background_x[3]=background_x[0]+425;
background_y[3]=background_y[0]+250;
//Strikelightpos
strikelightx=obj_shakescreen.x-238-floor(((obj_iji.x+200)/20));
strikelighty=obj_shakescreen.y-140+floor((obj_torbodytrigger.lookupcyc/14));
#define scr_methodx
//METHOD 3
//obj_shakescreen
instance_deactivate_region(x-1700,y-1500,3400,3000,1,1);
instance_activate_region(x-1400,y-1200,2800,2400,1);
instance_deactivate_object(obj_deactivateme);
instance_activate_region(x-1000,y-800,2000,1600,1);
instance_activate_object(obj_activateme);
if (obj_sabot.annihilatorbeta)
    instance_activate_region(5880,4704,392,192,1);

#define scr_shakescreen
//Shake screen
//Argument0 is the power
// 0 tiny
// 1 light
// 2 medium
// 3 heavy
// 4 massive
// 5 catastrophic
repeat(2){
if ((global.noshake==1 || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || room==rom_sector15 || instance_number(obj_asha2)==1) && argument0>0)
    argument0-=1;
    }

if (argument0==0 && global.shakescreen<1){
    global.shakescreen = 1;
    }
if (argument0==1 && global.shakescreen<3){
    global.shakescreen = 3;
    }
if (argument0==2 && global.shakescreen<6){
    global.shakescreen = 6;
    }
if (argument0==3 && global.shakescreen<10){
    global.shakescreen = 10;
    }
if (argument0==4 && global.shakescreen<26){
    global.shakescreen = 26;
    }
if (argument0==5){
    global.shakescreen = 50;
    }
#define scr_nanoexplosion
//Argument0 is x
//Argument1 is y
//Argument2 is nosound
if (instance_number(obj_ijiblood)<250){
    repeat (40) instance_create(x+argument0,y+argument1,obj_ijiblood);
    if (instance_number(obj_nanospark)<5)
        repeat (4) instance_create(x+argument0,y+argument1,obj_nanospark);
    }
else{
    repeat (5) instance_create(x+argument0, y+argument1,obj_ijiblood);
    }
if (argument2==0)
    scr_sound("exp_nano");

#define scr_rockethit
//Argument0 is the type of rocket
// 0 Friendly
// 1 Enemy
//Argument1 is glass special case
//Argument2 is block special case

//Glass
if (argument1 == 1){
    if (hspeed < 0){
        adjust = 2;
        }
    else{
        adjust = -2;
        }    
    if (argument0 == 0){
        if (impulse)
            (instance_create(other.x+16+adjust,y,obj_impulseexplosion)).ijis=ijis;
        else
            (instance_create(other.x+16+adjust,y,obj_rocketexplosion)).ijis=ijis;
        instance_create(other.x+16+adjust,y,obj_explosioncenter);
        }
    if (argument0 == 1){
        if (impulse)
            tempid=instance_create(other.x+16+adjust,y,obj_impulseexplosion);
        else
            tempid=instance_create(other.x+16+adjust,y,obj_enemyrocketexplosion);
        tempid.target=target;
        tempid.ijis=ijis;
        instance_create(other.x+16+adjust,y,obj_explosioncenter);
        }
    if (instance_number(obj_scrapbrown)<10){
        repeat(5){
            tempid=instance_create(other.x+16-(hspeed*2),y,obj_scrapbrown);
            tempid.speed=12+random(6);
            tempid.direction=random(360);
            tempid.alarm[2]=4;
            }
        }
    script_execute(scr_shakescreen, 2);
    instance_destroy();
    exit;
    }
//Friendly
if (argument0 == 0){
    if (hspeed < 0){
        if (argument2==0){
            if (impulse)
                (instance_create(other.bbox_right+4,y,obj_impulseexplosion)).ijis=ijis;
            else
                (instance_create(other.bbox_right+4,y,obj_rocketexplosion)).ijis=ijis;
            instance_create(other.bbox_right+4,y,obj_explosioncenter);
            }
        else{
            if (impulse)
                (instance_create(x-global.rocketspeed,y,obj_impulseexplosion)).ijis=ijis;
            else
                (instance_create(x-global.rocketspeed,y,obj_rocketexplosion)).ijis=ijis;
            instance_create(x-global.rocketspeed,y,obj_explosioncenter);
            }
        }
    if (hspeed > 0){
        if (other.proxima){
            if (impulse)
                (instance_create(other.x-64,y,obj_impulseexplosion)).ijis=ijis;
            else
                (instance_create(other.x-64,y,obj_rocketexplosion)).ijis=ijis;
            instance_create(other.x-64,y,obj_explosioncenter);
            }
        else if (other.enemytype==16 || argument2==1){
            if (impulse)
                (instance_create(x+22+global.rocketspeed,y,obj_impulseexplosion)).ijis=ijis;
            else
                (instance_create(x+22+global.rocketspeed,y,obj_rocketexplosion)).ijis=ijis;
            instance_create(x+22+global.rocketspeed,y,obj_explosioncenter);
            }
        else{
            if (impulse)
                (instance_create(other.x-4,y,obj_impulseexplosion)).ijis=ijis;
            else
                (instance_create(other.x-4,y,obj_rocketexplosion)).ijis=ijis;
            instance_create(other.x-4,y,obj_explosioncenter);
            }
        }
    }
//Enemy
if (argument0 == 1){
    if (hspeed < 0){
        if (argument2==0){
            if (impulse)
                tempid=instance_create(other.bbox_right+4,y,obj_impulseexplosion);
            else
                tempid=instance_create(other.bbox_right+4,y,obj_enemyrocketexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(other.bbox_right+4,y,obj_explosioncenter);
            }
        else{
            if (impulse)
                tempid=instance_create(x+global.rocketspeed,y,obj_impulseexplosion);
            else
                tempid=instance_create(x+global.rocketspeed,y,obj_enemyrocketexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(x+global.rocketspeed,y,obj_explosioncenter);
            }
        }
    if (hspeed > 0){
        if (argument2==0){
            if (impulse)
                tempid=instance_create(other.x-4,y,obj_impulseexplosion);
            else
                tempid=instance_create(other.x-4,y,obj_enemyrocketexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(other.x-4,y,obj_explosioncenter);
            }
        else{
            if (impulse)
                tempid=instance_create(x,y,obj_impulseexplosion);
            else
                tempid=instance_create(x,y,obj_enemyrocketexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(x,y,obj_explosioncenter);
            }
        }
    }
//Others
if (instance_number(obj_scrapbrown)<10){
repeat(5){
    tempid=instance_create(other.x+16-(hspeed*2),y,obj_scrapbrown);
    tempid.speed=12+random(6);
    tempid.direction=random(360);
    tempid.alarm[2]=4;
    }
    }
script_execute(scr_shakescreen,2);
instance_destroy();
#define scr_mpfbhit
//Argument0 is the type of mpfb
// 0 Friendly
// 1 Enemy
//Argument1 is glass special case
if (argument1 == 1){
    if (hspeed < 0){
        adjust = 2;
        }
    else{
        adjust = -2;
        }
    if (argument0 == 0){
    (instance_create(other.x+16+adjust,y,obj_mpfbexplosion)).ijis=ijis;
    instance_create(other.x+16+adjust,y,obj_explosioncenter);
    }
    if (argument0 == 1){
    tempid=instance_create(other.x+16+adjust,y,obj_enemympfbexplosion);
    tempid.target=target;
    tempid.ijis=ijis;
    instance_create(other.x+16+adjust,y,obj_explosioncenter);
    }
if (global.specialbake==0)
    maxsparks=90;
else
    maxsparks=10;
if (instance_number(obj_mpfbspark2)<maxsparks){
    if (hspeed<0)
        repeat(30) instance_create(other.bbox_right-16+random(32),y-16+random(32),obj_mpfbspark2);
    else
        repeat(30) instance_create(other.x-16+random(32),y-16+random(32),obj_mpfbspark2);
    }
scr_sound("exp_mpfb");
script_execute(scr_shakescreen, 3);
instance_destroy();
exit;
}
if (argument0 == 0){
    if (hspeed < 0){
        (instance_create(other.bbox_right+4,y,obj_mpfbexplosion)).ijis=ijis;
        instance_create(other.bbox_right+4,y,obj_explosioncenter);
        }
    if (hspeed > 0){
        if (other.enemytype==16){
            (instance_create(x-4,y,obj_mpfbexplosion)).ijis=ijis;
            instance_create(x-4,y,obj_explosioncenter);
            }
        else{
            (instance_create(other.x-4,y,obj_mpfbexplosion)).ijis=ijis;
            instance_create(other.x-4,y,obj_explosioncenter);
            }
        }
    }
//Enemy
if (argument0 == 1){
    if (room!=rom_sector15 && room!=rom_sector13){
        if (hspeed < 0){
            tempid=instance_create(other.bbox_right+4,y,obj_enemympfbexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(other.bbox_right+4,y,obj_explosioncenter);
            }
        if (hspeed > 0){
            tempid=instance_create(other.x-4,y,obj_enemympfbexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(other.x-4,y,obj_explosioncenter);
            }
        }
    else{//Center at Tor
        if (hspeed < 0){
            tempid=instance_create(x,y,obj_enemympfbexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(x,y,obj_explosioncenter);
            }
        if (hspeed > 0){
            tempid=instance_create(x,y,obj_enemympfbexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(x,y,obj_explosioncenter);
            }
        }
    }
if (global.specialbake==0)
    maxsparks=90;
else
    maxsparks=10;
if (instance_number(obj_mpfbspark2)<maxsparks){
    if (hspeed<0){
        if (room!=rom_sector15 && room!=rom_sector13){
            repeat(30) instance_create(other.bbox_right-16+random(32),y-16+random(32),obj_mpfbspark2);
            }
        else{
            repeat(30) instance_create(x-16+random(32),y-16+random(32),obj_mpfbspark2);
            }
        }
    else{
        if (room!=rom_sector15 && room!=rom_sector13){
            repeat(30) instance_create(other.x-16+random(32),y-16+random(32),obj_mpfbspark2);
            }
        else{
            repeat(30) instance_create(x-16+random(32),y-16+random(32),obj_mpfbspark2);
            }
        }
    }
scr_sound("exp_mpfb");
script_execute(scr_shakescreen, 3);
instance_destroy();
#define scr_mpfbspark
poscycle = poscycle + 1;

if (poscycle == 1){ pos = 1; pos2 = 31; }
if (poscycle == 2){ pos = 3; pos2 = 29; }
if (poscycle == 3){ pos = 6; pos2 = 26; }
if (poscycle == 4){ pos = 11; pos2 = 21; }
if (poscycle == 5){ pos = 16; pos2 = 16; }
if (poscycle == 6){ pos = 21; pos2 = 11; }
if (poscycle == 7){ pos = 26; pos2 = 6; }
if (poscycle == 8){ pos = 29; pos2 = 3; }
if (poscycle == 9){ pos = 31; pos2 = 1; }
if (poscycle == 10){ pos = 29; pos2 = 3; }
if (poscycle == 11){ pos = 26; pos2 = 6; }
if (poscycle == 12){ pos = 21; pos2 = 11; }
if (poscycle == 13){ pos = 16; pos2 = 16; }
if (poscycle == 14){ pos = 11; pos2 = 21; }
if (poscycle == 15){ pos = 6; pos2 = 26; }
if (poscycle == 16){ pos = 3; pos2 = 29; poscycle = 0; }

instance_create(x,y-16+pos,obj_mpfbspark);
instance_create(x,y-16+pos2,obj_mpfbspark);
#define scr_shockhit
//A shocksplinter rocket hits something and explodes
//Argument0 is the type of shocksplinter
// 0 Friendly
// 1 Enemy
if (argument0==0){
    if (hspeed < 0){
        (instance_create(other.bbox_right+4,y,obj_shockexplosion)).ijis=ijis;
        instance_create(other.bbox_right+4,y,obj_explosioncenter);
        repeat(6)
            (instance_create(x+24,y,obj_shockball)).ijis=ijis;
        }
    if (hspeed > 0){
        (instance_create(other.x-4,y,obj_shockexplosion)).ijis=ijis;
        instance_create(other.x-4,y,obj_explosioncenter);
        repeat(6)
            (instance_create(x-24,y,obj_shockball)).ijis=ijis;
        }
    }
if (argument0==1){
    if (hspeed < 0){
        tempid=instance_create(other.bbox_right+4,y,obj_enemyshockexplosion);
        tempid.target=target;
        tempid.ijis=ijis;
        instance_create(other.bbox_right+4,y,obj_explosioncenter);
        repeat(6){
            tempid=instance_create(x+24,y,obj_enemyshockball);
            tempid.target=target;
            tempid.ijis=ijis;
            }
        }
    if (hspeed > 0){
        if (other.enemytype==16){
            tempid=instance_create(x-4,y,obj_enemyshockexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(x-4,y,obj_explosioncenter);
        }
        else{
            tempid=instance_create(other.x-4,y,obj_enemyshockexplosion);
            tempid.target=target;
            tempid.ijis=ijis;
            instance_create(other.x-4,y,obj_explosioncenter);
        }
        repeat(6){
            tempid=instance_create(x-24,y,obj_enemyshockball);
            tempid.target=target;
            tempid.ijis=ijis;
            }
        }
    }
scr_sound("exp_shoc");
script_execute(scr_shakescreen, 3);
instance_destroy();
#define scr_nanofollow
//Nanoflash step event
if (follow==0){
    speed-=1;
    }
else{
    thespeed+=1;
    if (thespeed>16){
        thespeed=16;
        }
    //Iji
    if (target==0)
        move_towards_point(obj_iji.bbox_left+(obj_iji.bbox_right-obj_iji.bbox_left)/2,obj_iji.bbox_top+(obj_iji.bbox_bottom-obj_iji.bbox_top)/2,thespeed);
    else if (instance_exists(target))
        move_towards_point(target.bbox_left+(target.bbox_right-target.bbox_left)/2,target.bbox_top+(target.bbox_bottom-target.bbox_top)/2,thespeed);
    else
        instance_destroy();
        }
#define scr_ammofloat
movecycle += 1;
if (movecycle == 4){
    y += 1;
    }
if (movecycle == 12){
    y -= 1;
    }
if (movecycle == 16){
    y -= 1;
    }
if (movecycle == 24){
    y += 1;
    movecycle = 0;
    }
#define scr_ammofloat2
movecycle += 1;
if (movecycle == 4){
    yadjust += 1;
    }
if (movecycle == 12){
    yadjust -= 1;
    }
if (movecycle == 16){
    yadjust -= 1;
    }
if (movecycle == 24){
    yadjust += 1;
    movecycle = 0;
    }
#define scr_ammofall
if (!nofall){
if (place_free(x,y+1))
gravity=0.2;
if (vspeed>6)
vspeed=6;
}
#define scr_glassbreak
//A glass window breaks
//Argument0 is force
//Argument1 is direction
// 0 center
// 1 left
// 2 right
if (global.specialbake == 0) maximum = 120;
if (global.specialbake == 1) maximum = 25;
if (instance_number(obj_shard) < maximum){
for (i=0;i<35;i+=1){
    tempid = instance_create(x+8,y+8+random(112),obj_shard);
    tempid.speed = random(argument0/2)+(argument0/2)+1;
    if (argument1 == 0)
    tempid.direction = random(270)-45;
    if (argument1 == 1)
    tempid.direction = random(180)+90;
    if (argument1 == 2)
    tempid.direction = random(180)-90;
    }
}
instance_destroy();
script_execute(scr_shakescreen,1);
scr_sound("exp_glass");
#define scr_metabreak
//Meta breaks
//Argument0 is force
//Argument1 is direction
// 0 center
// 1 left
// 2 right
amount=8;
if (sprite_index = spr_glass2) amount = 25;
if (sprite_index = spr_glass2short) amount = 25;
if (sprite_index = spr_barrel) amount = 20;
if (sprite_index = spr_door) amount = 25;
if (sprite_index = spr_crackbox) amount = 25;
if (global.specialbake == 0) maximum = 120;
if (global.specialbake == 1) maximum = 25;
while (amount > 0){
    amount-=1;
    if (sprite_index == spr_leetbox && instance_number(obj_scrapwhite) < maximum){
        tempid = instance_create(x+19+random(13),y+6+random(26),obj_scrapwhite);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        }
    if (sprite_index == spr_screen && instance_number(obj_scrapwhite) < maximum){
        tempid = instance_create(x+5+random(22),y+random(23),obj_scrapwhite);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        }
    if (sprite_index == spr_screen && instance_number(obj_shard) < maximum){
        tempid = instance_create(x+5+random(22),y+random(23),obj_shard);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        amount-=1;
        }
    if (sprite_index == spr_lamp && instance_number(obj_shard) < maximum){
        tempid = instance_create(x+random(32),y+random(10),obj_shard);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        }
    if ((sprite_index == spr_crate1 || sprite_index == spr_crate2) && instance_number(obj_scrapbrown) < maximum){
        tempid = instance_create(x+random(32),y+random(32),obj_scrapbrown);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        }
    if (sprite_index == spr_crackbox && instance_number(obj_scrapwhite) < maximum){
        tempid = instance_create(x+random(64),y+random(32),obj_scrapwhite);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        if (crackmark==1 && !successed){
            script_execute(scr_crackfail);
            global.erasetop=0;
            global.topmessage="CRACKING FAILED: Subject was destroyed";
            }
        }
    if (sprite_index == spr_locker && instance_number(obj_scrapwhite) < maximum){
        tempid = instance_create(x+random(32),y+random(32),obj_scrapwhite);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        }
    if (sprite_index == spr_barrel && instance_number(obj_scrapwhite) < maximum){
        tempid = instance_create(x+random(32),y+random(64),obj_scrapwhite);
        tempid.speed = random(12)+12;
        tempid.direction = random(360);
        tempid.alarm[2]=4;
        }
    if ((sprite_index==spr_door || sprite_index==spr_door2 || sprite_index==spr_door3) && instance_number(obj_scrapwhite) < maximum){
        tempid = instance_create(x+random(16),y+random(96),obj_scrapwhite);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180);
        if (argument1 == 1)
        tempid.direction = random(90)+90;
        if (argument1 == 2)
        tempid.direction = random(90);
        }
    if (sprite_index == spr_glass2 && instance_number(obj_shard) < maximum){
        tempid = instance_create(x+random(128),y+4+random(8),obj_shard);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180)+180;
        if (argument1 == 1)
        tempid.direction = random(180)+90;
        if (argument1 == 2)
        tempid.direction = random(180)-90;
        }
    if (sprite_index == spr_glass2short && instance_number(obj_shard) < maximum){
        tempid = instance_create(x+random(96),y+4+random(8),obj_shard);
        tempid.speed = random(argument0/2)+(argument0/2)+1;
        if (argument1 == 0)
        tempid.direction = random(180)+180;
        if (argument1 == 1)
        tempid.direction = random(180)+90;
        if (argument1 == 2)
        tempid.direction = random(180)-90;
        }
    }
if (sprite_index == spr_barrel){
    instance_create(x+16,y+32,obj_enemyrocketexplosion);
    instance_create(x+16,y+32,obj_explosioncenter);
    script_execute(scr_shakescreen,2);
    }
if (sprite_index == spr_locker){
    temprand=3+floor(random(4));
    repeat(temprand)
        (instance_create(x+8+random(16),y+8+random(8),obj_paper)).dead=1;
    }

if (sprite_index==spr_screen || sprite_index==spr_lamp)
    scr_sound("exp_miniglass");
else if (sprite_index==spr_glass2 || sprite_index==spr_glass2short)
    scr_sound("exp_glass");
else if (sprite_index==spr_barrel)
    scr_sound("exp_pew");
else
    scr_sound("exp_meta");

script_execute(scr_shakescreen,1);
instance_destroy();
instance_create(x,y-30,obj_meta2);
#define scr_bounce
{
speed*=0.6;
if (vspeed>0 && !place_free(x,y+vspeed+1)) vspeed*=-1;
else if (vspeed<0 && !place_free(x,y+vspeed)) vspeed*=-1;
if (hspeed>0 && !place_free(x+hspeed,y)) hspeed*=-1;
else if (hspeed<0 && !place_free(x+hspeed,y)) hspeed*=-1;
}
#define scr_outside
if (global.sector!=11 && global.sector!=12 && global.sector!=13 && global.sector!=14 && global.sector!=15)
if ((x < obj_shakescreen.x-800) || (x > obj_shakescreen.x+800) || (y < obj_shakescreen.y-600) || (y > obj_shakescreen.y+600))
instance_destroy();

#define scr_pickupflash
//Pickup flash
//Argument0 is x
//Argument1 is y
//Argument2 is power
//Argument3 is enemy target
if (instance_number(obj_nanoflash) < 80){
   repeat (4*argument2){
   tempid=instance_create(x+argument0, y+argument1, obj_nanoflash);
   if (argument3>0)
       tempid.target=argument3;
       }
   }
#define scr_parallax
// 2 million is the parallax tile layer
tile_layer_shift(2000000,(x-xprev)/2,0)
with (obj_tasenship)
    x+=(obj_sabot.x-obj_sabot.xprev)/1.6;
xprev=x;

#define scr_nextfv
//Firing vision
//Enemies hear Iji firing
if (!obj_sabot.nextfv){
obj_sabot.alarm[2]=15;
obj_sabot.nextfv=1;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=0;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=180;
tempid.speed=16;
}

#define scr_pulseexplosion
if (hspeed<0){
    if (linker){
        tempid=instance_create(x-16*argument0+(hspeed/2),y,obj_pulseexplosion);
        tempid.speed=-(hspeed/2);
        tempid.image_index=8;
        }
    else if (hyper){
        tempid=instance_create(x-16*argument0+(hspeed/2),y,obj_pulseexplosion);
        tempid.speed=-(hspeed/2);
        tempid.image_index=4;
        }
    else
        (instance_create(x-16*argument0+(hspeed/2),y,obj_pulseexplosion)).speed=-(hspeed/2);
    }
else{
    if (linker){
        tempid=instance_create(x+16*argument0+(hspeed/2),y,obj_pulseexplosion);
        tempid.speed=-(hspeed/2);
        tempid.image_index=8;
        }
    else if (hyper){
        tempid=instance_create(x+16*argument0+(hspeed/2),y,obj_pulseexplosion);
        tempid.speed=-(hspeed/2);
        tempid.image_index=4;
        }
    else
        (instance_create(x+16*argument0+(hspeed/2),y,obj_pulseexplosion)).speed=-(hspeed/2);
    }
#define scr_zcir
if (!global.specialbake){
topwater=1920-300;
bottomwater=3300-300;
rtilt=50;
ltilt=550;

if (wfluxdir==0){
    wflux+=0.1;
    if (wflux>=4)
        wfluxdir=1;
    }
else{
    wflux-=0.1;
    if (wflux<=-4)
        wfluxdir=0;
    }
wfluxtot+=wflux;
topwater+=ceil(wfluxtot);
bottomwater-=ceil(wfluxtot);

if (tfluxdir==0){
    tflux+=0.07;
    if (tflux>=4)
        tfluxdir=1;
    }
else{
    tflux-=0.07;
    if (tflux<=-4)
        tfluxdir=0;
    }
tfluxtot+=tflux;
rtilt+=ceil(tfluxtot*2);
ltilt-=ceil(tfluxtot*2);

if (instance_number(obj_iji)==1){
    if (obj_iji.y>topwater+270 && obj_iji.y<bottomwater+330){
        global.gammablue=0.6;
        }
    else if (y>1000){
        global.gammablue=0;
        }
    }
else{
    if (y>topwater && y<bottomwater){
        global.gammablue=0.6;
        }
    else if (y>1000){
        global.gammablue=0;
        }
    }

draw_set_color(c_black);
draw_primitive_begin(pr_trianglefan);
draw_vertex(x-50,topwater+ltilt);
draw_vertex(x-50,bottomwater+ltilt);
draw_vertex(x+850,bottomwater+rtilt);
draw_vertex(x+850,topwater+rtilt);
draw_primitive_end();
draw_set_color(make_color_rgb(0,0,25));
draw_primitive_begin(pr_trianglefan);
draw_vertex(x-50,topwater+ltilt);
draw_vertex(x-50,bottomwater+ltilt);
draw_vertex(x+850,bottomwater+rtilt);
draw_vertex(x+850,topwater+rtilt);
draw_primitive_end();

if (y<topwater){
    for (i=1;i<20;i+=1){ //bottomlines
        draw_set_color(make_color_rgb(0,0,150-5*i));
        draw_line(x-50,(y+(bottomwater-y)/i)+ltilt,x+850,(y+(bottomwater-y)/i)+rtilt);
        }
    draw_set_color(make_color_rgb(0,0,50));
    draw_primitive_begin(pr_trianglefan);
    draw_vertex(x-50,(y+(topwater-y)/20)+ltilt);
    draw_vertex(x-50,topwater+ltilt);
    draw_vertex(x+850,topwater+rtilt);
    draw_vertex(x+850,(y+(topwater-y)/20)+rtilt);
    draw_primitive_end();
    for (i=1;i<20;i+=1){ //toplines
        draw_set_color(make_color_rgb(0,0,150-5*i));
        draw_line(x-50,(y+(topwater-y)/i)+ltilt,x+850,(y+(topwater-y)/i)+rtilt);
        }
    }
else if (y>bottomwater){
    for (i=1;i<20;i+=1){ //toplines
        draw_set_color(make_color_rgb(0,0,150-5*i));
        draw_line(x-50,(y+(topwater-y)/i)+ltilt,x+850,(y+(topwater-y)/i)+rtilt);
        }
    draw_set_color(make_color_rgb(0,0,50));
    draw_primitive_begin(pr_trianglefan);
    draw_vertex(x-50,(y+(bottomwater-y)/20)+ltilt);
    draw_vertex(x-50,bottomwater+ltilt);
    draw_vertex(x+850,bottomwater+rtilt);
    draw_vertex(x+850,(y+(bottomwater-y)/20)+rtilt);
    draw_primitive_end();
    for (i=1;i<20;i+=1){ //bottomlines
        draw_set_color(make_color_rgb(0,0,150-5*i));
        draw_line(x-50,(y+(bottomwater-y)/i)+ltilt,x+850,(y+(bottomwater-y)/i)+rtilt);
        }
    }
else{
    for (i=1;i<20;i+=1){ //toplines
        draw_set_color(make_color_rgb(0,0,150-5*i));
        draw_line(x-50,(y+(topwater-y)/i)+ltilt,x+850,(y+(topwater-y)/i)+rtilt);
        }
    for (i=1;i<20;i+=1){ //bottomlines
        draw_set_color(make_color_rgb(0,0,150-5*i));
        draw_line(x-50,(y+(bottomwater-y)/i)+ltilt,x+850,(y+(bottomwater-y)/i)+rtilt);
        }
    }

//extra lines
draw_set_color(make_color_rgb(0,0,150));
draw_line(x-50,topwater+ltilt+1,x+850,topwater+rtilt+1);
draw_line(x-50,topwater+ltilt+2,x+850,topwater+rtilt+2);
draw_line(x-50,topwater+ltilt+3,x+850,topwater+rtilt+3);
draw_line(x-50,topwater+ltilt+4,x+850,topwater+rtilt+4);
draw_line(x-50,bottomwater+ltilt+1,x+850,bottomwater+rtilt+1);
draw_line(x-50,bottomwater+ltilt+2,x+850,bottomwater+rtilt+2);
draw_line(x-50,bottomwater+ltilt+3,x+850,bottomwater+rtilt+3);
draw_line(x-50,bottomwater+ltilt+4,x+850,bottomwater+rtilt+4);

//1920 1620
//3200 2900
}
#define scr_pauseeffect
if (pause && !playinghero3d){
pauseecyc+=1;
if (pauseecyc==2){
    pauseecyc=0;
    instance_create(view_xview[0]-50+(floor(random(2))*900),view_yview[0]+floor(random(600)),obj_pauseeffect);
    }
}
#define scr_drawtime
if (!pause && !gameover && (room==rom_sectorz || room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || room==rom_sector15 || room==rom_sector16)){
    //Local time
    drawtimesecs=global.seconds;
    drawtimemins=floor((drawtimesecs-(drawtimesecs mod 60))/60);
    drawtimesecs=drawtimesecs mod 60;
    
    if (drawtimemins<10)
        drawtimestring="0"+string(drawtimemins)+".";
    else
        drawtimestring=string(drawtimemins)+".";
    
    if (drawtimesecs<10)
        drawtimestring+="0";
    drawtimestring+=string(drawtimesecs);
    //show frozen timer
    if (loltime==timesecs)
        drawtimestring+="x";
    loltime=timesecs;

    if (!global.hidetime){
        draw_set_font(global.fontwhite);
        draw_set_color(c_white);
        draw_text_ext(obj_shakescreen.x-368,obj_shakescreen.y-292,drawtimestring,28,800);
        }
    
    //Total time
    if (!global.sswarp){
        drawtimesecs=global.totalseconds+global.seconds;
        drawtimehours=floor((drawtimesecs-(drawtimesecs mod 3600))/3600);
        drawtimesecs-=drawtimehours*3600;
        drawtimemins=floor((drawtimesecs-(drawtimesecs mod 60))/60);
        drawtimesecs=drawtimesecs mod 60;
        
        drawtottimestring=string(drawtimehours)+":";
        
        if (drawtimemins<10)
            drawtottimestring+="0";
        drawtottimestring+=string(drawtimemins)+".";
        
        if (drawtimesecs<10)
            drawtottimestring+="0";
        drawtottimestring+=string(drawtimesecs);
        
        if (!global.hidetime){
            draw_set_font(global.fontwhite);
            draw_set_color(c_white);
            draw_text_ext(obj_shakescreen.x-392,obj_shakescreen.y-262,drawtottimestring,28,800);
            }
        }
    }
#define scr_levelup
//Level up
while (global.xpcount>0){
    global.xp+=1;
    global.xpcount-=1;
    if ((global.xp>=(global.level*(4+global.difficulty*4))+4) && global.level<global.maxlevel){
        global.level+=1;
        global.points+=1;
        if (global.points>99)
            global.points=99;
        global.xp=0;
        scr_sound("glo_levelup");
        instance_create(obj_iji.x+6,obj_iji.y-10,obj_levelup);
        }
    if (global.level==global.maxlevel)
        global.xp=0;
        }
#define scr_loadcuts
//Load cut graphics

//Obsolete
#define scr_retrysector
with (obj_sabot){

if (!pressedretry && !playinghero3d && !cannotrestart && room!=rom_sector16){
repeat(10)
    sound_stop_all();
scr_stopmusic();
pressedretry=1;
with (obj_fadeshape)
    instance_destroy();
with (obj_fadeshape2)
    instance_destroy();
with (obj_breakscreen)
    instance_destroy();
with (obj_paused)
    instance_destroy();
with (obj_marker)
    instance_destroy();
with (obj_fade)
    instance_destroy();
with (obj_pauseeffect)
    instance_destroy();
with (obj_pausefullcover)
    instance_destroy();
with (obj_maincover)
    instance_destroy();
with (obj_onoff)
    instance_destroy();
//Normal Sectors
if (room!=rom_sector11 && room!=rom_sector12 && room!=rom_sector13 && room!=rom_sector14 && room!=rom_sector15 && room!=rom_sector16 && room!=rom_sectorz){
    global.seconds=0;
    global.damage=0;
    global.kills=0;
    global.cracks=0;
    global.fails=0;
    }
//Boss room
else{
    global.seconds=backup_seconds;
    donotpushs=1; //don't push the seconds counter forward on the seconds-cycling frame
    global.damage=backup_damage;
    global.kills=backup_kills;
    global.cracks=backup_cracks;
    global.fails=backup_fails;
    }

for (i=1;i<800;i+=1)
    global.killdata[i]=backup_killdata[i];
global.numribbons=backup_numribbons;
global.sector=backup_sector;
global.level=backup_level;
global.points=backup_points;
global.xp=backup_xp;
global.weapon2=backup_weapon2;
global.weapon3=backup_weapon3;
global.weapon4=backup_weapon4;
global.weapon5=backup_weapon5;
global.weapon6=backup_weapon6;
global.weapon7=backup_weapon7;
global.weapon8=backup_weapon8;
global.weapon9=backup_weapon9;
global.weapon10=backup_weapon10;
global.weapon11=backup_weapon11;
global.weapon12=backup_weapon12;
global.weapon13=backup_weapon13;
global.weapon14=backup_weapon14;
global.weapon15=backup_weapon15;
global.weapon16=backup_weapon16;
global.weapon17=backup_weapon17;
global.weapon21=backup_weapon21;
global.healthlevel=backup_healthlevel;
global.attacklevel=backup_attacklevel;
global.assimilatelevel=backup_assimilatelevel;
global.strengthlevel=backup_strengthlevel;
global.cracklevel=backup_cracklevel;
global.tasenlevel=backup_tasenlevel;
global.komatolevel=backup_komatolevel;
global.jumplevel=backup_jumplevel;
global.armorlevel=backup_armorlevel;
global.specialtrigger1=backup_specialtrigger1;
global.specialtrigger2=backup_specialtrigger2;
global.specialtrigger4=backup_specialtrigger4;
global.specialtrigger8=backup_specialtrigger8;
global.specialtrigger16=backup_specialtrigger16;
global.specialtrigger32=backup_specialtrigger32;
global.specialtriggerb1=backup_specialtriggerb1;
global.specialtriggerb2=backup_specialtriggerb2;
global.specialtriggerb4=backup_specialtriggerb4;
global.specialtriggerc=backup_specialtriggerc;
global.ammo2=backup_ammo2;
global.ammo3=backup_ammo3;
global.ammo4=backup_ammo4;
global.ammo6=backup_ammo6;
global.ammo7=backup_ammo7;
global.ammo8=backup_ammo8;
global.totcracks+=totreduced;

tempid=instance_create(x,y,obj_loading);
if (room==rom_sector1) tempid.destination="sector1";
if (room==rom_sector2) tempid.destination="sector2";
if (room==rom_sector3) tempid.destination="sector3";
if (room==rom_sector11) tempid.destination="sector11";
if (room==rom_sector4) tempid.destination="sector4";
if (room==rom_sector5) tempid.destination="sector5";
if (room==rom_sector12) tempid.destination="sector12";
if (room==rom_sector6) tempid.destination="sector6";
if (room==rom_sector7) tempid.destination="sector7";
if (room==rom_sector13) tempid.destination="sector13";
if (room==rom_sector8) tempid.destination="sector8";
if (room==rom_sector9) tempid.destination="sector9";
if (room==rom_sector14) tempid.destination="sector14";
if (room==rom_sectorx) tempid.destination="sectorx";
if (room==rom_sector15) tempid.destination="sector15";
if (room==rom_sectorz) tempid.destination="sectorz";
instance_create(x,y,obj_loadingback);
}
}
#define scr_iosacam
tempcamy=obj_iji.y;
if (tempcamy<552)
    tempcamy=552;
if (tempcamy>800)
    tempcamy=800;
y=342+(tempcamy-480)/2;
//y=408;
#define scr_nanodust
//argument0 is x
//argument1 is y
//argument2 is direction

script_execute(scr_shakescreen,1);
(instance_create(obj_sabot.x,obj_sabot.y,obj_whiteblanket)).alarm[0]=2;

tempid=instance_create(argument0,argument1,obj_nanodust);
if (argument2==1)
    tempid.direction=0;
repeat(8){
    tempdir=random(270)-45;
    repeat(8)
        (instance_create(argument0-8+random(16),argument1-8+random(16),obj_nanodust2)).direction=tempdir;
    }

#define scr_reloaderdraw
//Reloader stuff
if (obj_iji.alarm[2]>0 && obj_iji.reloader<200){
    draw_set_color(c_navy);
    draw_rectangle(x,y,x+floor(116/obj_iji.reloader*obj_iji.alarm[2]),y+9,0);
    
    draw_set_color(c_navy);
    //Draw Iji's personal reloader
    xoffset=0;
    yoffset=0;
    if (obj_iji.sprite_index==spr_tasenshredder_basiciji || obj_iji.sprite_index==spr_tasenshredder_basicijileft){
        xoffset=0;
        yoffset=-30;
        }
    else if (obj_iji.sprite_index==spr_tasenshredder_geton || obj_iji.sprite_index==spr_tasenshredder_getonleft){
        xoffset=0;
        yoffset=-30;
        }
    else if (obj_iji.sprite_index==spr_climb){
        xoffset=-12+ceil(obj_iji.image_index*2);
        yoffset=30-ceil(obj_iji.image_index);
        }
    else if (obj_iji.sprite_index==spr_climbleft){
        xoffset=12-ceil(obj_iji.image_index*2);
        yoffset=30-ceil(obj_iji.image_index);
        }
    else if (obj_iji.sprite_index==spr_getup || obj_iji.sprite_index==spr_getupleft){
        yoffset=30-ceil(obj_iji.image_index*2.307);
        }
    else if (obj_iji.sprite_index==spr_duck || obj_iji.sprite_index==spr_duckleft){
        if (obj_iji.image_index>=2.5 || obj_iji.image_single>=2)
            yoffset=24;
        else
            yoffset=ceil(obj_iji.image_index*8);
        }    
    else if (obj_iji.sprite_index==spr_standup || obj_iji.sprite_index==spr_standupleft){
        yoffset=16-ceil(obj_iji.image_index*8);
        }    
    draw_line(obj_iji.x+xoffset-2,obj_iji.y-4+yoffset,obj_iji.x+xoffset-2+20,obj_iji.y-4+yoffset);
    draw_set_color(c_white);
    draw_line(obj_iji.x+xoffset-2,obj_iji.y-4+yoffset,obj_iji.x+xoffset-2+(20/obj_iji.reloader*obj_iji.alarm[2]),obj_iji.y-4+yoffset);
    }

//Nanoweapon station
if (global.weapstation==1 || global.weapstation==2){
    if (wsblinkprev!=global.weappoke)
        wsblinkcyc=2;
    wsblinkprev=global.weappoke;
    wsblinkcyc+=1;
    if (wsblinkcyc==3)
        wsblink=1;
    if (wsblinkcyc>=7){
        wsblink=0;
        wsblinkcyc=0;
        }
    //defaults
    if (!global.weapon9)
        draw_sprite(spr_weapon1,0,obj_weapon1.x,obj_weapon1.y);
    else
        draw_sprite(spr_weapon1,2,obj_weapon1.x,obj_weapon1.y);
    if (!global.weapon10)
        draw_sprite(spr_weapon2,0,obj_weapon2.x,obj_weapon2.y);
    else
        draw_sprite(spr_weapon2,2,obj_weapon2.x,obj_weapon2.y);
    if (!global.weapon11)
        draw_sprite(spr_weapon3,0,obj_weapon3.x,obj_weapon3.y);
    else
        draw_sprite(spr_weapon3,2,obj_weapon3.x,obj_weapon3.y);
    if (!global.weapon12)
        draw_sprite(spr_weapon4,0,obj_weapon4.x,obj_weapon4.y);
    else
        draw_sprite(spr_weapon4,2,obj_weapon4.x,obj_weapon4.y);
    if (!global.weapon13)
        draw_sprite(spr_weapon5,0,obj_weapon5.x,obj_weapon5.y);
    else
        draw_sprite(spr_weapon5,2,obj_weapon5.x,obj_weapon5.y);
    if (!global.weapon14)
        draw_sprite(spr_weapon6,0,obj_weapon6.x,obj_weapon6.y);
    else
        draw_sprite(spr_weapon6,2,obj_weapon6.x,obj_weapon6.y);
    if (!global.weapon15)
        draw_sprite(spr_weapon7,0,obj_weapon7.x,obj_weapon7.y);
    else
        draw_sprite(spr_weapon7,2,obj_weapon7.x,obj_weapon7.y);
    if (!global.weapon16)
        draw_sprite(spr_weapon8,0,obj_weapon8.x,obj_weapon8.y);
    else
        draw_sprite(spr_weapon8,2,obj_weapon8.x,obj_weapon8.y);
    //blink on
    if (wsblink){
        if (global.weappoke==1){
            if (global.tempwsweap1==1 && global.weapstation==2){
                if (!global.weapon9)
                    draw_sprite(spr_weapon1,5,obj_weapon1.x,obj_weapon1.y);
                else
                    draw_sprite(spr_weapon1,6,obj_weapon1.x,obj_weapon1.y);
                }
            else{
                if (!global.weapon9)
                    draw_sprite(spr_weapon1,1,obj_weapon1.x,obj_weapon1.y);
                else
                    draw_sprite(spr_weapon1,3,obj_weapon1.x,obj_weapon1.y);
                }
            }
        if (global.weapon2 && global.weappoke==2){
            if (global.tempwsweap1==2 && global.weapstation==2){
                if (!global.weapon10)
                    draw_sprite(spr_weapon2,5,obj_weapon2.x,obj_weapon2.y);
                else
                    draw_sprite(spr_weapon2,6,obj_weapon2.x,obj_weapon2.y);
                }
            else{
                if (!global.weapon10)
                    draw_sprite(spr_weapon2,1,obj_weapon2.x,obj_weapon2.y);
                else
                    draw_sprite(spr_weapon2,3,obj_weapon2.x,obj_weapon2.y);
                }
            }
        if (global.weapon3 && global.weappoke==3){
            if (global.tempwsweap1==3 && global.weapstation==2){
                if (!global.weapon11)
                    draw_sprite(spr_weapon3,5,obj_weapon3.x,obj_weapon3.y);
                else
                    draw_sprite(spr_weapon3,6,obj_weapon3.x,obj_weapon3.y);
                }
            else{
                if (!global.weapon11)
                    draw_sprite(spr_weapon3,1,obj_weapon3.x,obj_weapon3.y);
                else
                    draw_sprite(spr_weapon3,3,obj_weapon3.x,obj_weapon3.y);
                }
            }
        if (global.weapon4 && global.weappoke==4){
            if (global.tempwsweap1==4 && global.weapstation==2){
                if (!global.weapon12)
                    draw_sprite(spr_weapon4,5,obj_weapon4.x,obj_weapon4.y);
                else
                    draw_sprite(spr_weapon4,6,obj_weapon4.x,obj_weapon4.y);
                }
            else{
                if (!global.weapon12)
                    draw_sprite(spr_weapon4,1,obj_weapon4.x,obj_weapon4.y);
                else
                    draw_sprite(spr_weapon4,3,obj_weapon4.x,obj_weapon4.y);
                }
            }
        if (global.weapon5 && global.weappoke==5){
            if (global.tempwsweap1==5 && global.weapstation==2){
                if (!global.weapon13)
                    draw_sprite(spr_weapon5,5,obj_weapon5.x,obj_weapon5.y);
                else
                    draw_sprite(spr_weapon5,6,obj_weapon5.x,obj_weapon5.y);
                }
            else{
                if (!global.weapon13)
                    draw_sprite(spr_weapon5,1,obj_weapon5.x,obj_weapon5.y);
                else
                    draw_sprite(spr_weapon5,3,obj_weapon5.x,obj_weapon5.y);
                }
            }
        if (global.weapon6 && global.weappoke==6){
            if (global.tempwsweap1==6 && global.weapstation==2){
                if (!global.weapon14)
                    draw_sprite(spr_weapon6,5,obj_weapon6.x,obj_weapon6.y);
                else
                    draw_sprite(spr_weapon6,6,obj_weapon6.x,obj_weapon6.y);
                }
            else{
                if (!global.weapon14)
                    draw_sprite(spr_weapon6,1,obj_weapon6.x,obj_weapon6.y);
                else
                    draw_sprite(spr_weapon6,3,obj_weapon6.x,obj_weapon6.y);
                }
            }
        if (global.weapon7 && global.weappoke==7){
            if (global.tempwsweap1==7 && global.weapstation==2){
                if (!global.weapon15)
                    draw_sprite(spr_weapon7,5,obj_weapon7.x,obj_weapon7.y);
                else
                    draw_sprite(spr_weapon7,6,obj_weapon7.x,obj_weapon7.y);
                }
            else{
                if (!global.weapon15)
                    draw_sprite(spr_weapon7,1,obj_weapon7.x,obj_weapon7.y);
                else
                    draw_sprite(spr_weapon7,3,obj_weapon7.x,obj_weapon7.y);
                }
            }
        if (global.weapon8 && global.weappoke==8){
            if (global.tempwsweap1==8 && global.weapstation==2){
                if (!global.weapon16)
                    draw_sprite(spr_weapon8,5,obj_weapon8.x,obj_weapon8.y);
                else
                    draw_sprite(spr_weapon8,6,obj_weapon8.x,obj_weapon8.y);
                }
            else{
                if (!global.weapon16)
                    draw_sprite(spr_weapon8,1,obj_weapon8.x,obj_weapon8.y);
                else
                    draw_sprite(spr_weapon8,3,obj_weapon8.x,obj_weapon8.y);
                }
            }
        }
    }
else
    wsrectcyc=0;


//Passive HUD
if (global.passive){
    if (passivecyc<4)
        passivecyc+=1;
    }
else if (passivecyc>0)
    passivecyc-=1;
if (passivecyc>0){
    passiveyoff=(4-passivecyc)*20;
    //HUD
    draw_sprite(spr_passivehud,0,obj_hud.x,obj_hud.y+passiveyoff);
    //Reloader on HUD
    if (obj_iji.alarm[2]>0 && obj_iji.reloader<200){
        draw_set_color(c_navy);
        draw_rectangle(x,y+passiveyoff,x+floor(116/obj_iji.reloader*obj_iji.alarm[2]),y+9+passiveyoff,0);
        }
    //Weapon name
    draw_sprite(spr_weapons,global.weapon+18,obj_hud.x+505-488,obj_hud.y+29+passiveyoff);

    //Weapons
    if (global.weapon==1)
        draw_sprite(spr_passiveweapons,8,obj_weapon1.x,obj_weapon1.y+passiveyoff);
    else
        draw_sprite(spr_passiveweapons,0,obj_weapon1.x,obj_weapon1.y+passiveyoff);
    if (global.weapon==2)
        draw_sprite(spr_passiveweapons,9,obj_weapon2.x,obj_weapon2.y+passiveyoff);
    else if (global.weapon2)
        draw_sprite(spr_passiveweapons,1,obj_weapon2.x,obj_weapon2.y+passiveyoff);
    if (global.weapon==3)
        draw_sprite(spr_passiveweapons,10,obj_weapon3.x,obj_weapon3.y+passiveyoff);
    else if (global.weapon3)
        draw_sprite(spr_passiveweapons,2,obj_weapon3.x,obj_weapon3.y+passiveyoff);
    if (global.weapon==4)
        draw_sprite(spr_passiveweapons,11,obj_weapon4.x,obj_weapon4.y+passiveyoff);
    else if (global.weapon4)
        draw_sprite(spr_passiveweapons,3,obj_weapon4.x,obj_weapon4.y+passiveyoff);
    if (global.weapon==5)
        draw_sprite(spr_passiveweapons,12,obj_weapon5.x,obj_weapon5.y+passiveyoff);
    else if (global.weapon5)
        draw_sprite(spr_passiveweapons,4,obj_weapon5.x,obj_weapon5.y+passiveyoff);
    if (global.weapon==6)
        draw_sprite(spr_passiveweapons,13,obj_weapon6.x,obj_weapon6.y+passiveyoff);
    else if (global.weapon6)
        draw_sprite(spr_passiveweapons,5,obj_weapon6.x,obj_weapon6.y+passiveyoff);
    if (global.weapon==7)
        draw_sprite(spr_passiveweapons,14,obj_weapon7.x,obj_weapon7.y+passiveyoff);
    else if (global.weapon7)
        draw_sprite(spr_passiveweapons,6,obj_weapon7.x,obj_weapon7.y+passiveyoff);
    if (global.weapon==8)
        draw_sprite(spr_passiveweapons,15,obj_weapon8.x,obj_weapon8.y+passiveyoff);
    else if (global.weapon8)
        draw_sprite(spr_passiveweapons,7,obj_weapon8.x,obj_weapon8.y+passiveyoff);
    
    //Ammo
    if (global.weapon2){
        draw_sprite(spr_numbersg,floor((global.ammo2/10)) mod 10,obj_hud.x+688-488,obj_hud.y+26+passiveyoff);
        draw_sprite(spr_numbersg,global.ammo2 mod 10,obj_hud.x+696-488,obj_hud.y+26+passiveyoff);
        }
    if (global.weapon3){
        draw_sprite(spr_numbersg,floor((global.ammo3/10)) mod 10,obj_hud.x+728-488,obj_hud.y+26+passiveyoff);
        draw_sprite(spr_numbersg,global.ammo3 mod 10,obj_hud.x+736-488,obj_hud.y+26+passiveyoff);
        }
    if (global.weapon4){
        draw_sprite(spr_numbersg,floor((global.ammo4/10)) mod 10,obj_hud.x+768-488,obj_hud.y+26+passiveyoff);
        draw_sprite(spr_numbersg,global.ammo4 mod 10,obj_hud.x+776-488,obj_hud.y+26+passiveyoff);
        }
    if (global.weapon6){
        draw_sprite(spr_numbersg,floor((global.ammo6/10)) mod 10,obj_hud.x+688-488,obj_hud.y+58+passiveyoff);
        draw_sprite(spr_numbersg,global.ammo6 mod 10,obj_hud.x+696-488,obj_hud.y+58+passiveyoff);
        }
    if (global.weapon7){
        draw_sprite(spr_numbersg,floor((global.ammo7/10)) mod 10,obj_hud.x+728-488,obj_hud.y+58+passiveyoff);
        draw_sprite(spr_numbersg,global.ammo7 mod 10,obj_hud.x+736-488,obj_hud.y+58+passiveyoff);
        }
    if (global.weapon8){
        draw_sprite(spr_numbersg,floor((global.ammo8/10)) mod 10,obj_hud.x+768-488,obj_hud.y+58+passiveyoff);
        draw_sprite(spr_numbersg,global.ammo8 mod 10,obj_hud.x+776-488,obj_hud.y+58+passiveyoff);
        }
    }

#define scr_disruptorexplo
if (argument0==0){
    if (img<=7 && !destroyme){
        destroyme=1;
        alarm[2]=1;
        }
    }
else if (argument0==1){
    repeat(40){
        tempdir=random(360);
        tempdist=random(80);
        tempx=x+cos(degtorad(tempdir))*tempdist;
        tempy=y-sin(degtorad(tempdir))*tempdist;
        tempid=instance_create(tempx,tempy,obj_disruptorexplo);
        tempid.direction=tempdir;
        tempid.vspeed-=6;
        }
    instance_create(x,y,obj_disruptorexplo2);
    scr_shakescreen(1);
    scr_sound("exp_glass");
    scr_sound("exp_pew");
    instance_destroy();
    }
#define scr_reflectorexplo
if (argument0==0){
    if (!dud && !destroyme){
        destroyme=1;
        alarm[2]=1;
        }
    }
else if (argument0==1){
    repeat(40){
        tempdir=random(360);
        tempdist=random(80);
        tempx=x+cos(degtorad(tempdir))*tempdist;
        tempy=y-sin(degtorad(tempdir))*tempdist;
        tempid=instance_create(tempx,tempy,obj_disruptorexplo);
        tempid.sprite_index=spr_reflectorexplo;
        tempid.direction=tempdir;
        tempid.vspeed-=6;
        }
    instance_create(x,y,obj_disruptorexplo2);
    scr_shakescreen(1);
    scr_sound("exp_glass");
    scr_sound("exp_pew");
    instance_destroy();
    }
#define scr_barrierexplo
if (argument0==0 && !destroyme){
    destroyme=1;
    alarm[2]=1;
    }
else if (argument0==1){
    repeat(30){
        tempdir=random(360);
        tempdist=random(40);
        tempx=x+cos(degtorad(tempdir))*tempdist*0.5;
        tempy=y-sin(degtorad(tempdir))*tempdist;
        tempid=instance_create(tempx,tempy,obj_disruptorexplo);
        tempid.sprite_index=spr_barrierexplo2;
        tempid.direction=tempdir;
        tempid.vspeed-=6;
        }
    tempid=instance_create(x,y,obj_disruptorexplo2);
    tempid.sprite_index=spr_barrierexplo3;
    tempid.image_index=0;
    scr_shakescreen(1);
    scr_sound("exp_glass");
    scr_sound("exp_pew");
    instance_destroy();
    }
#define scr_ijistep
if (ignorenoammomsg>0)
    ignorenoammomsg-=1;
if (noliftride>0)
    noliftride-=1;
if (delayframes>0)
    delayframes-=1;
if (deathscreamedcyc>0)
    deathscreamedcyc-=1;
if (deathscreamedcyc==1)
    deathscreamed=0;
if (damncooldown>0)
    damncooldown-=1;
if (thored>0)
    thored-=1;
if (cfised>0)
    cfised-=1;
if (gettingup>0)
    gettingup-=1;
if (noammosoundx>0)
    noammosoundx-=1;

//Count down ougi
if (usingougi>0)
    usingougi-=1;

//Cannot pause while teleporting
if (cannotpausecyc>0){
    cannotpausecyc-=1;
    if (cannotpausecyc==0)
        cannotpause=0;
    }

//Kill emote
if (killemote==1){
    kemo+=1;
    if (kemo==10){
        killemote=0;
        kemo=0;
        if (sprite_index==spr_basic || sprite_index==spr_basicleft || sprite_index==spr_run || sprite_index==spr_runleft || sprite_index==spr_runfire || sprite_index==spr_runfireleft || sprite_index==spr_jump || sprite_index==spr_jumpleft || sprite_index==spr_duck || sprite_index==spr_duckleft || sprite_index==spr_standup || sprite_index==spr_standupleft){
            if (!ignorephysics && !obj_sabot.annihilatorbeta){
                if (global.kills+global.totkills<global.neutralkc*berserkkills && berserkkills!=0 && attitude==0)
                    scr_sound("iji_cry");
                if (global.kills+global.totkills>=global.berserkkc*berserkkills && berserkkills!=0 && global.killdata[797]==0)
                    scr_sound("iji_berserk");
                }
            }
        }
    }

//Tech
if (tech==1 && techcyc<10 && notech==0)
    techcyc+=1;
if (notech>0)
    notech-=1;

//Xrain
if (global.sector==0 && !global.wty){
if (x>4000 && x<6070 && y<1952)
    xrain+=1;
if (x<4768 && y>1792)
    xrain=0;
if (x>5302 && x<5568 && y>1632)
    xrain=0;
if (x>5142 && x<5216 && y>1824)
    xrain=0;
if (x>5686 && x<5760 && y>1824)
    xrain=0;
if (x>5622 && x<5728 && y>1696)
    xrain=0;
if (xrain>=4){
    xrain=0;
    instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_smoke);
    }
}
//Overload
if (overloadtime>0 && (!global.ignoreall || place_meeting(x,y+4,obj_lift))){
    overloadtime-=1;
    overcyc+=1;
    if (overload==3)
        image_alpha=random(0.2);
    if (overcyc==3 && overload==1){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_nanoflash);
        }
    if (overcyc==45 && overload==2){
        scr_shakescreen(0);
        overcyc=0;
        if (shredder){
            with (obj_hologram)
                scr_nanoexplosion(0,0);
            }
        else
            scr_nanoexplosion((bbox_right-bbox_left)/2,(bbox_bottom-bbox_top)/2);
        with (obj_turret){
            if (distance_to_object(obj_iji)<128){
                scr_shakescreen(1);
                armor=-1000;
                if (instance_number(obj_ijiblood<200)){
                    repeat(5)
                        instance_create(bbox_left+(bbox_right-bbox_left)/2,bbox_top+(bbox_bottom-bbox_top)/2,obj_ijiblood);
                    }
                }
            }
        with (obj_alliedenemy){
            if (distance_to_object(obj_iji)<128 && (speed==0 || enemytype==13 || enemytype==5 || enemytype==15)){
                angry=1;
                targetiji=300;
                ijikill=1;
                alarm[5]=300;
                armor=-1000;
                shredderhp-=100;
                scr_shakescreen(1);
                if (instance_number(obj_ijiblood<200)){
                    repeat(5)
                        instance_create(bbox_left+(bbox_right-bbox_left)/2,bbox_top+(bbox_bottom-bbox_top)/2,obj_ijiblood);
                    }
                }
            }
        }
    if (overcyc==3 && overload==4){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_smoke);
        }
    if (overcyc==3 && overload==5){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_detonatorspark);
        }
    if (overcyc==3 && overload==6){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_glassspark);
        }
    if (overcyc==3 && overload==7){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_mpfbspark);
        }
    if (overcyc==3 && overload==8){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_pulsespark);
        }
    if (overcyc==3 && overload==9){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_ijisplat);
        }
    if (overcyc==3 && overload==10){
        overcyc=0;
        instance_create(bbox_left+random(bbox_right-bbox_left),bbox_top+random(bbox_bottom-bbox_top),obj_cfisspark);
        }
    //Nanomirror
    if (overload==5){
        if (place_meeting(x-64,y,obj_enemyrocket) || place_meeting(x-64,y,obj_enemympfb) || place_meeting(x-64,y,obj_enemyshock) || place_meeting(x-64,y,obj_enemyshockball) || place_meeting(x-64,y,obj_komatorocket) || place_meeting(x-64,y,obj_komatompfb) || place_meeting(x+74,y,obj_enemyrocket) || place_meeting(x+74,y,obj_enemympfb) || place_meeting(x+74,y,obj_enemyshock) || place_meeting(x+74,y,obj_enemyshockball) || place_meeting(x+74,y,obj_komatorocket) || place_meeting(x+74,y,obj_komatompfb))
            instance_create(bbox_left+(bbox_right-bbox_left)/2,bbox_top+(bbox_bottom-bbox_top)/2,obj_reflector);
        }
    //Nanolife
    if (overload==6){
        if (global.hp==0){
            global.hp=global.healthlevel*2;
            if (global.suddendeath)
                global.hp=1;
            overloadtime=0;
            overload=0;
            deathscreamedcyc=10;
            }
        }
    }
else if (overloadtime==0){
    if (overload==3)
        image_alpha=1;
    overload=0;
    overcyc=0;
    overloadtime=-1;
    }


if (!ignorephysics){

//Shredder
if (shredder)
    scr_shredderstep();
else{
if (ignoreshreddertext>0)
    ignoreshreddertext-=1;

//Release up key
if (!keyboard_check(vk_up) && !global.ignoreall && global.state==2 && vspeed<0)
    pressjump=0;
//Release left key
if (!keyboard_check(vk_left) && !global.ignoreall && goingleft && !goingright){
    goingleft=0;
    if (global.state==1)
        sprite_index=spr_basicleft;
    running=0;
    }
//Release right key
if (!keyboard_check(vk_right) && !global.ignoreall && goingright && !goingleft){
    goingright=0;
    if (global.state==1)
        sprite_index=spr_basic;
    running=0;
    }
//Release down key
if (!keyboard_check(vk_down) && delayframes==0 && !global.ignoreall && !shredder){
    rebootcyc=0;
    ignoredown=0;
    if (global.state==5){ //Stand up when halfway ducking
        if (sprite_index==spr_duck || sprite_index==spr_duckleft){
            switchingpose=1;
            if (image_index<1)
                image_index=1-image_index;
            else
                image_index=0;
            if (global.facing==0)
                sprite_index=spr_standupleft;
            else
                sprite_index=spr_standup;
            image_single=-1;
            image_speed=0.5;
            alarm[1]=4-(image_index*2);
            alarm[0]=0;
            }
        }
    else if (global.state==3){ //Stand up when fully ducked
        switchingpose=1;
        global.state=5;
        image_index=0;
        image_single=-1;
        image_speed=0.5;
        alarm[1]=4;
        if (global.facing==0)
            sprite_index=spr_standupleft;
        else
            sprite_index=spr_standup;
        }
    }
//Ignore reading station
if (global.ignorestation>0)
    global.ignorestation-=1;
//Fix stopping when hitting cieling
okay=0;
if (global.state==6)
    okay=1;
if (global.state==2)
    okay=1;
if (okay==1 && place_meeting(x,y+vspeed-2,obj_block) && !place_meeting(x,y+vspeed-2,obj_meta) && vspeed<0){
    move_contact_solid(90,30);
    vspeed=0;
    y+=2;
    if (global.state==2){
        if (global.facing==0){
            if (goingleft==1 && place_free(x-5,y) && !place_meeting(x-5,y,obj_glass))
                x-=5;
            }
        else if (global.facing==1){
            if (goingright==1 && place_free(x+5,y) && !place_meeting(x+5,y,obj_glass))
                x+=5;
            }
        }
    }
//Stop animations
if (sprite_index==spr_knockdown || sprite_index==spr_knockdownleft){
    if (image_index==7)
        image_single=7;
    }
if (sprite_index==spr_jump || sprite_index==spr_jumpleft){
    if (image_index==9)
        image_single=9;
    }
//Adjust sprite
if (global.state==1 && firing==0 && running==0 && lookingaround==0 && !global.ignoreall){
    if (global.facing==0)
        sprite_index=spr_basicleft;
    else
        sprite_index=spr_basic;
    }
//Kick
if (image_index==2){
    if (sprite_index==spr_kickstrong || sprite_index==spr_kickstrongleft)
        scr_sound("glo_swipe");
    }
if (image_index==3){
    if (sprite_index==spr_kickstrong){
        instance_create(x+11,y+9,obj_kickbox);
        }
    if (sprite_index==spr_kickstrongleft){
        instance_create(x-31,y+9,obj_kickbox);
        }
    }
//Use
if (image_index==2){
    if (sprite_index==spr_pushbutton)
        instance_create(x+5,y+6,obj_pushbox);
    if (sprite_index==spr_pushbuttonleft)
        instance_create(x-30,y+6,obj_pushbox);
    }
//Look around
if (global.state==1 && !global.ignoreall){
    if (running==0)
        lookaround+=1;
    else
        lookaround=0;
    }
else
    lookaround=0;
if (lookaround>90){
    alarm[1]=24;
    lookaround=0;
    lookingaround=1;
    if (global.facing==0)
        sprite_index=spr_lookaroundleft;
    else
        sprite_index=spr_lookaround;
    image_speed=0.5;
    }
//Recovery blink
if (recovering==1)
    script_execute(scr_recoveryblink);
else
    script_execute(scr_recoveryblinkend);
//Knockdown
if (global.state==6){
    if (knockdowntype==1){
        if (place_free(x-velocity,y+vspeed+2)){
            if (place_free(x-velocity,y+vspeed-2))
                x-=velocity;
            else if (place_free(x,y+vspeed+12)){
                velocity=ceil(velocity*0.3);
                knockdowntype=2;
                global.facing=0;
                if (sprite_index=spr_jump)
                    sprite_index=spr_jumpleft;
                else
                    sprite_index=spr_knockdownleft;
                }
            }
        else if (place_free(x,y+vspeed+12)){
            velocity=ceil(velocity*0.3);
            knockdowntype=2;
            global.facing=0;
            if (sprite_index=spr_jump)
                sprite_index=spr_jumpleft;
            else
                sprite_index=spr_knockdownleft;
            }
        }
    if (knockdowntype==2){
        if (place_free(x+velocity,y+vspeed+2)){
            if (place_free(x+velocity,y+vspeed-2))
                x+=velocity;
            else if (place_free(x,y+vspeed+12)){
                velocity=ceil(velocity*0.3);
                knockdowntype=1;
                global.facing=1;
                if (sprite_index==spr_jumpleft)
                    sprite_index=spr_jump;
                else
                    sprite_index=spr_knockdown;
                }
            }
        else if (place_free(x,y+vspeed+12)){
            velocity=ceil(velocity*0.3);
            knockdowntype=1;
            global.facing=1;
            if (sprite_index==spr_jumpleft)
                sprite_index=spr_jump;
            else
                sprite_index=spr_knockdown;
            }
        }
    }
//Limit fall speed
if (vspeed>20){
    vspeed=20;
    falldistance+=20;
    }
else
    falldistance=0;
//Fall
if (place_free(x,y+1) && place_free(xprev,y+1)){
    gravity=1;
    gravity_direction=270;
    if (global.state==2 && vspeed<0 && pressjump=0)
        gravity=4;
    if (global.state<6){
        if (global.state==1)
            image_index=0;
        global.state=2;
        if (global.facing==0)
            sprite_index=spr_jumpleft;
        else
            sprite_index=spr_jump;
        }
    }
//Pain from armordrop
if (global.armor<1 && !vortexkilled){
    global.hp-=1;
    script_execute(scr_pain);
    }
//Dusty block
if (place_meeting(x,y+1,obj_dustyblock)){
    if ((sprite_index==spr_runleft || sprite_index==spr_run) && (image_index==1 || image_index==5))
        instance_create(x+7,y+57,obj_smoke);
    }

}
//Visioncheck
if (overload!=3 && global.sector!=13 && global.sector!=14 && global.sector!=15 && room!=rom_sectorz && (!global.truce || specialtruce)){
    if (sprite_index!=spr_hitfloor && sprite_index!=spr_hitfloorleft)
        visioncheck+=1;
    }
if (visioncheck==4){
    visionadjust=0;
    if (sprite_index=spr_duck || sprite_index==spr_duckleft)
        visionadjust=20;
    if (sprite_index=spr_tasenshredder_basiciji || sprite_index==spr_tasenshredder_basicijileft)
        visionadjust=-30;
    tempid=instance_create(x+6,y+15+visionadjust,obj_visioncheck)
    tempid.direction=0;
    tempid.speed=16;
    tempid=instance_create(x+6,y+15+visionadjust,obj_visioncheck)
    tempid.direction=-20+random(40);
    tempid.speed=16;
    tempid=instance_create(x+6,y+15+visionadjust,obj_visioncheck)
    tempid.direction=180;
    tempid.speed=16;
    tempid=instance_create(x+6,y+15+visionadjust,obj_visioncheck)
    tempid.direction=160+random(40);
    tempid.speed=16;
    visioncheck=0;
    }
}
#define scr_ijibeginstep
//Pulse sfx
if (firingpulse>0)
firingpulse-=1;

//Pain sfx
playpainsfx=0;
playbigpainsfx=0;

//Go up lift
if (!ignorephysics){
if (!mdk && noliftride==0 && keyboard_check(vk_up) && global.state==1 && !global.ignoreall && place_meeting(x,y+1,obj_lift) && place_meeting(x-16,y+1,obj_lift) && place_meeting(x+16,y+1,obj_lift)){
    with (obj_lift){
        if (place_meeting(x,y-1,obj_iji) && place_free(x,y-96) && place_free(x,y-128) && place_free(x,y-160) && place_free(x,y-192) && place_free(x,y-224) && place_free(x,y-256)){
            scr_sound("glo_liftstart");
            global.ignoreall=1;
            obj_iji.takingpain=1;
            obj_iji.recovering=0;
            obj_iji.goingleft=0;
            obj_iji.goingright=0;
            obj_iji.running=0;
            obj_iji.lookingaround=0;
            obj_iji.lookaround=0;
            obj_iji.alarm[1]=0;
            obj_iji.alarm[7]=0;
            global.state=1;
            if (global.facing==1){
                obj_iji.sprite_index=spr_basic;
                image_speed=0.5;
                }
            else{
                obj_iji.sprite_index=spr_basicleft;
                image_speed=0.5;
                }
            vspeedx=-8;
            exit;
            }
        }
    }
}
#define scr_ijiendstep
if (!ignorephysics){

//Overloads
nanochaosed=0;
nanoblasted=0;
if (overload==8)
    global.armor=100;

//Climb right
if (!shredder){
if (keyboard_check(vk_right) && !global.ignoreall && global.state==2 && vspeed>0){
if (place_free(x,y+48) && !place_free(x+walkspeed,y) && !place_free(x+walkspeed,yprevious) && !place_free(x+walkspeed,y-38) && place_free(x+walkspeed,yprevious-38) && !place_meeting(x+24,yprevious-38,obj_glass)){
    global.state=5;
    alarm[0]=12;
    sprite_index=spr_climb;
    move_contact_solid(0,64);
    x+=14;
    y-=64;
    move_outside_solid(270,64);
    move_contact_solid(270,64);
    vspeed=0;
    gravity=0;
    image_single=-1;
    image_index=0;
    image_speed=0.5;
    }
}
//Climb left
if (keyboard_check(vk_left) && !global.ignoreall && global.state==2 && vspeed>0){
if (place_free(x,y+48) && !place_free(x-walkspeed,y) && !place_free(x-walkspeed,yprevious) && !place_free(x-walkspeed,y-38) && place_free(x-walkspeed,yprevious-38) && !place_meeting(x-16,yprevious-38,obj_glass)){
    global.state=5;
    alarm[0]=12;
    sprite_index=spr_climbleft;
    move_contact_solid(180,64);
    x-=16;
    y-=64;
    move_outside_solid(270,64);
    move_contact_solid(270,64);
    vspeed=0;
    gravity=0;
    image_single=-1;
    image_index=0;
    image_speed=0.5;
    }
}
}

//Plasmaed
if (plasmaed==1)
    scr_knockdown(1,12+random(3))
if (plasmaed==2)
    scr_knockdown(2,12+random(3))
plasmaed=0;

//Suppression help
if (global.healthlevel==10)
    suppression=global.hp;

//Shredder explodes
if (shredder && shredderhp<=0){
    if (global.facing==0)
        sxadjust=-5;
    else
        sxadjust=5;
    visible=1;
    alarm[3]=0;
    with (obj_hologram)
        instance_destroy();
    instance_create(x+sxadjust,y,obj_enemyrocketexplosion);
    instance_create(x+sxadjust,y,obj_explosioncenter);
    if (global.specialbake==0)
        maxdebris=200;
    else
        maxdebris=40;
    if (instance_number(obj_scrapwhite)<maxdebris)
    repeat(40){
        tempid=instance_create(x-10+random(20),y-10+random(20),obj_scrapwhite);
        tempid.direction=random(360);
        tempid.speed=random(18);
        }
    scr_shakescreen(2);
    }


//--------------------
//COLLISION WITH BLOCK
//--------------------
lampexception=0;
if (place_meeting(x,y,obj_lamp))
    lampexception=1;
if (place_meeting(x,y,obj_block) && !shredder && !lampexception){
if (vspeed>0)
    move_outside_solid(90,30);
if (place_meeting(x,y,obj_block)){
    x=xprevious;
    y=yprevious;
    }
//Knockdown landing
if (global.state==6){
    if (vspeed<0){
        move_contact_solid(90,30);
        vspeed=0;
        }
    else{
        stopanyfire=0;
        if (sprite_index==spr_jump || sprite_index==spr_jumpleft){
            scr_sound("iji_land");
            global.state=1;
            image_index=0;
            image_single=-1;
            image_speed=0.5;
            if (knockdowntype==1)
                sprite_index=spr_basic;
            else
                sprite_index=spr_basicleft;
            gravity=0;
            vspeed=0;
            move_contact_solid(270,64);
            if (takingpain==1 && recovering==0){
                if (global.strengthlevel==10)
                    alarm[7]=90;
                else
                    alarm[7]=60;
                recovering=1;
                }
            else{
                takingpain=0;
                recovering=0;
                }
            }
        else{
            scr_sound("iji_hitfloor");
            global.state=7;
            image_single=-1;
            image_index=0;
            image_speed=0.5;
            if (knockdowntype==1)
                sprite_index=spr_hitfloor;
            if (knockdowntype==2)
                sprite_index=spr_hitfloorleft;
            if (knockdowntype==7){
                if (global.facing==0)
                    sprite_index=spr_hitfloorleft;
                else
                    sprite_index=spr_hitfloor;
                }
            alarm[6]=10;
            alarm[7]=60;
            gravity=0;
            vspeed=0;
            move_contact_solid(270,64);
            }
        //Dusty block
        if (place_meeting(x,y+8,obj_dustyblock)){
            instance_create(x-8,y+36,obj_smoke);
            instance_create(x,y+34,obj_smoke);
            instance_create(x+8,y+32,obj_smoke);
            instance_create(x+16,y+36,obj_smoke);
            instance_create(x+24,y+32,obj_smoke);
            }
        }
    }
//Normal stuff
if (global.state==2){
    if (vspeed<0){
        move_contact_solid(90,64);
        vspeed=0;
        }
    else if (!lampexception){
        stopanyfire=0;
        gravity=0;
        global.state=1;
        image_single=-1;
        image_speed=0.5;
        move_contact_solid(270,64);
        //Dusty block
        if (vspeed>0 && place_meeting(x,y+8,obj_dustyblock)){
            instance_create(x+1,y+57,obj_smoke);
            instance_create(x+14,y+57,obj_smoke);
            }
        vspeed=0;
        //High fall
        if (falldistance>=300){
            if (falldistance>=400){
                delayframes=8;
                scr_sound("glo_kick");
                scr_shakescreen(2);
                }
            scr_shakescreen(0);
            scr_sound("iji_land2");
            global.state=3;
            if (global.facing==0)
                sprite_index=spr_duckleft;
            else
                sprite_index=spr_duck;
            instance_create(x+1,y+57,obj_smoke);
            instance_create(x+14,y+57,obj_smoke);
            image_single=4;
            switchingpose=0;
            running=0;
            }
        else if (running==0){
            scr_sound("iji_land");
            if (global.facing==0)
                sprite_index=spr_basicleft;
            else
                sprite_index=spr_basic;
            }
        else{
            scr_sound("iji_land");
            if (global.facing==0)
                sprite_index=spr_runleft;
            else
                sprite_index=spr_run;
            }
        }
    }

//Fix getting stuck
if (!place_free(x,y)){
    if (place_free(x-walkspeed,y))
        move_outside_solid(180,1);
    else if (place_free(x+walkspeed,y))
        move_outside_solid(0,1);
    else if (place_free(x,y+5))
        move_outside_solid(270,1);
    else
        move_outside_solid(90,1);
    }

x=round(x);
y=floor(y);
}

//Go down lift
if (!ignorephysics){
if (keyboard_check(vk_down) && !ignoredown && !shredder && global.ignoreall==0 && noliftride==0){
    if (!mdk && global.state==1 && place_meeting(x,y+1,obj_lift) && place_meeting(x-16,y+1,obj_lift) && place_meeting(x+16,y+1,obj_lift)){
        with (obj_lift){
            if (place_meeting(x,y-1,obj_iji) && place_free(x,y+32) && place_free(x,y+64) && place_free(x,y+96) && place_free(x,y+128)){
                scr_sound("glo_liftstart");
                global.ignoreall=1;
                obj_iji.takingpain=1;
                obj_iji.recovering=0;
                obj_iji.goingleft=0;
                obj_iji.goingright=0;
                obj_iji.running=0;
                obj_iji.lookingaround=0;
                obj_iji.lookaround=0;
                obj_iji.alarm[1]=0;
                obj_iji.alarm[7]=0;
                global.state=1;
                if (global.facing==1)
                    obj_iji.sprite_index=spr_basic;
                else
                    obj_iji.sprite_index=spr_basicleft;
                vspeedx=8;
                }
            }
        }
    }
}

//Press down key
if ((keyboard_check(vk_down) || delayframes>0) && !ignoredown && !shredder){
    if (!place_meeting(x,y,obj_end)){
        if (global.ignoreall==0){
            lookingaround=0;
            //Duck while halfway rising
            if (global.state==5){
                if (sprite_index==spr_standup || sprite_index==spr_standupleft){
                    switchingpose=1;
                    image_index=2-image_index;
                    if (global.facing==0)
                        sprite_index=spr_duckleft;
                    else
                        sprite_index=spr_duck;
                    alarm[1]=0;
                    alarm[0]=8-(image_index*2);
                    }
                }
            //Duck while standing
            if ((global.state==1 && !place_free(x,y+3)) || sprite_index==spr_pushbutton || sprite_index==spr_pushbuttonleft){
                if (place_free(x,y+1))
                    move_contact_solid(270,30);
                alarm[1]=0;
                switchingpose=1;
                global.state=5;
                image_index=0;
                alarm[0]=8;
                if (global.facing==0)
                    sprite_index=spr_duckleft;
                else
                    sprite_index=spr_duck;
                }
            }
        }
    }

//For enhanced jumping
prevstate2=prevstate;
xprev2=xprev;
yprev2=yprev;
prevstate=global.state;
xprev=x;
yprev=y;
}

//Sector15 phantom shove
if (phantomshove>0){
    x-=phantomshove;
    phantomshove-=1;
    }

//Sector15 bounceback
if (room==rom_sector15 && !obj_sabot.unlockcamera && !obj_sabot.fullpcamera){
if (x<400)
    x=400;
if (x>1360)
    x=1360;
    }

if (!global.ignoreall && !shredder && !takingpain && !recovering){
    if (sprite_index==spr_duck || sprite_index==spr_duckleft){
        if (keyboard_check(vk_enter) && keyboard_check(vk_down))
            squeakcyc+=1;
        else
            squeakcyc=0;
        }
    else
        squeakcyc=0;
    if (squeakcyc==300){
        squeakcyc=0;
        global.erasetop=0;
        if (global.squeak){
            global.squeak=0;
            global.topmessage="CLOWN MODE OFF";
            scr_sound("wea_banana");
            }
        else{
            global.squeak=1;
            global.topmessage="CLOWN MODE ON";
            scr_sound("wea_banana");
            }
        }
    }
if (global.squeak){
    if (sprite_index==spr_run || sprite_index==spr_runleft || sprite_index==spr_runfire || sprite_index==spr_runfireleft){
        if (image_index==1 || image_index==5)
            scr_sound("wea_banana");
        }
    else if (sprite_index==spr_getup || sprite_index==spr_getupleft){
        if (image_index==6)
            scr_sound("wea_banana");
        }
    else if (sprite_index==spr_kickstrong || sprite_index==spr_kickstrongleft){
        if (image_index==3 || image_index==7)
            scr_sound("wea_banana");
        }
    else if (sprite_index==spr_climb || sprite_index==spr_climbleft){
        if (image_index==5)
            scr_sound("wea_banana");
        }
    }

//Levelstation
if (global.levelstation)
    scr_levelstation();
//Weapon station
if (global.weapstation>0)
    scr_weapstation();
//No mercy
if (global.nomercy && !global.ignoreall){
    if ((takingpain>0 || recovering>0) && (alarm[7]<=0 || alarm[7]>6)){
        takingpain=1;
        recovering=1;
        alarm[7]=6;
        }
    }
//No reloads
if (global.noreloads){
    if (alarm[2]>1 && global.weapon!=1 && global.weapon!=5 && global.weapon!=6 && global.weapon!=8 && global.weapon!=13 && global.weapon!=14 && global.weapon!=16 && global.weapon!=20){
        alarm[2]=1;
        reloader=1;
        }
    if (alarm[2]>2 && (global.weapon==6 || global.weapon==8 || global.weapon==14 || global.weapon==16)){
        alarm[2]=2;
        reloader=2;
        }
    }

//Pain sounds
if (playpainsfx)
    scr_sound("iji_pain");
else if (playbigpainsfx)
    scr_sound("iji_bigpain");
playpainsfx=0;
playbigpainsfx=0;

#define scr_ougi
//Executed in alarm[1]
if (keyboard_check(ord("C")) && gettingup>0 && !global.passive){
if (!place_meeting(x,y,obj_emptyshredder) && global.hp>=1 && global.hp<=5 && recovering==1 && alarm[7]>=3 && !usedougi){
if (global.weapon2 && global.weapon3 && global.weapon4 && global.weapon5 && global.weapon6 && global.weapon7 && global.weapon8 && global.ammo2>=1 && global.ammo3>=1 && global.ammo4>=1 && global.ammo6>=1 && global.ammo7>=1 && global.ammo8>=1){
//Do it
obj_sabot.ultimatecannotpause=1;
scr_sound("iji_ougi1");
usedougi=1;
global.ammo2-=1;
global.ammo3-=1;
global.ammo4-=1;
global.ammo6-=1;
global.ammo7-=1;
global.ammo8-=1;
alarm[0]=0;
alarm[1]=0;
//alarm[2]=0; reloading
alarm[3]=0;
alarm[4]=0;
alarm[5]=0;
alarm[6]=0;
alarm[7]=0;
takingpain=1;
recovering=0;
visible=0;
invisible=1;
ignorephysics=1;
vspeed=0;
hspeed=0;
global.ignoreall=1;
instance_create(x+6,y+30,obj_ougi);
}
}
}
#define scr_pain
//argument0 is no voice

//Anni beta safeguard
if (obj_sabot.annihilatorbeta){
obj_sabot.annihilatorbeta=0;
global.ignoreall=0;
obj_sabot.ignoresmooth=1;
obj_sabot.alarm[4]=2;
obj_sabot.alarm[5]=1;
}

//Overload: nanochaos
if (overload==1 && !nanochaosed && !recovering && !takingpain){
    nanochaosed=1;
    repeat(10)
        instance_create(bbox_left+(bbox_right-bbox_left)-16,bbox_top+(bbox_bottom-bbox_top)-24,obj_nanochaos);
    }

//Suppression
if (global.healthlevel==10 && !fatality){
    if (suppression-global.hp>1){
        global.hp+=1;
        global.damage-=1;
        }
    }
suppression=global.hp;
if (global.hp<=0)
    global.hp=0;

//Taking pain
scr_shakescreen(1);
delayframes=0;
global.ignoreall=0;
global.damage+=1;
if (global.levelstation){
    global.levelstation=0;
    global.topmessage="";
    instance_activate_object(obj_levelstation);
    with (obj_levelstation)
        touchstation=0;
    }
if (global.weapstation>0){
    global.weapstation=0;
    global.topmessage="";
    instance_activate_object(obj_weapstation);
    with (obj_weapstation)
        touchstation=0;
    }
if (global.cracking){
    global.erasetop=0;
    global.topmessage="CRACKING FAILED";
    }
if (instance_number(obj_cracktext)==1)
    scr_crackfail();
script_execute(scr_terminatemessage);
global.armor=100;
//No HP
if (global.hp<=0){
    //fix revivebug
    if (overload!=6)
        obj_sabot.ultimatecannotpause=1;
    
    if (global.facing==0)
        script_execute(scr_knockdown,2,1)
    else
        script_execute(scr_knockdown,1,1)
    if (!deathscreamed){
        deathscreamed=1;
        scr_sound("iji_death");
        if (!global.noblood){
            repeat(4){
                tempid=instance_create(bbox_left+((bbox_right-bbox_left)/2),bbox_top+((bbox_bottom-bbox_top)/2),obj_tasenbloodspecial);
                tempid.sprite_index=spr_ijiblood2;
                tempid.speed*=1.5;
                tempid.depth=-7;
                }
            }
        }
    
    //remove pursuing Assassins
    with (obj_komatoassassin){
        if (angry)
            destroyme=1;
        }
    exit;
    }
//Jumping
if (global.state==2 && takingpain==0){
    script_execute(scr_nanoexplosion,6,15,1);
    if (global.facing==0){
        paintech=1;
        script_execute(scr_knockdown,2)
        }
    if (global.facing==1){
        paintech=1;
        script_execute(scr_knockdown,1)
        }
    if (argument0==0){
        playpainsfx=1;
        playbigpainsfx=0;
        }
    }
//Kicking
else if (global.state==5 && kicking==1 && takingpain==0){
    script_execute(scr_nanoexplosion,6,15,1);
    if (global.facing==0){
        paintech=1;
        script_execute(scr_knockdown,2)
        }
    if (global.facing==1){
        paintech=1;
        script_execute(scr_knockdown,1)
        }
    if (argument0==0){
        playpainsfx=1;
        playbigpainsfx=0;
        }
    kicking=0;
    }
//Walking/standing
else if (global.state==1 && takingpain==0){
    script_execute(scr_nanoexplosion,6,15,1);
    if ((techcyc==1 || techcyc==2|| techcyc==3 || techcyc==4 || overload==10) && notech==0 && global.hp>0)
        scr_paintech();
    else{
        if (argument0==0){
            playpainsfx=1;
            playbigpainsfx=0;
            }
        takingpain=1;
        obj_iji.alarm[1]=9;
        obj_iji.alarm[4]=0;
        obj_iji.image_index=0;
        obj_iji.image_single=-1;
        obj_iji.image_speed=0.5;
        if (global.facing==0){
            obj_iji.sprite_index=spr_painleft;
            }
        if (global.facing==1){
            obj_iji.sprite_index=spr_pain;
            }
        if (global.state==8){
        obj_iji.y=(obj_iji.y-30);
            }
        global.state=5;
        }
    }
//Ducking/climbing
else if (global.state==3 || (sprite_index==spr_climb || sprite_index==spr_climbleft) && takingpain==0){
    script_execute(scr_nanoexplosion,6,15,1);
    if ((techcyc==1 || techcyc==2|| techcyc==3 || techcyc==4 || overload==10) && notech==0 && global.hp>0){
        switchingpose=0;
        scr_paintech();
        }
    else{
        if (argument0==0){
            playpainsfx=1;
            playbigpainsfx=0;
            }
        takingpain=1;
        switchingpose=0;
        global.state=5;
        obj_iji.alarm[0]=9;
        obj_iji.alarm[1]=0;
        obj_iji.image_single=-1;
        obj_iji.image_index=0;
        obj_iji.image_speed=0.5;
        if (global.facing=0){
            obj_iji.sprite_index=spr_duckingpainleft;
            }
        if (global.facing==1){
            obj_iji.sprite_index=spr_duckingpain;
            }
        }
    }
//Switching pose
else if (global.state==5 && (switchingpose==1 || global.nomercy) && takingpain==0){
    script_execute(scr_nanoexplosion,6,15,1);
    if ((techcyc==1 || techcyc==2|| techcyc==3 || techcyc==4 || overload==10) && notech==0 && global.hp>0){
        if (sprite_index==spr_pushbutton || sprite_index==spr_pushbuttonleft){
            global.state=1;
            if (global.facing==0)
                sprite_index=spr_basicleft;
            else
                sprite_index=spr_basic;
            image_single=-1;
            image_index=0;
            image_speed=0.5;
            }
        switchingpose=0;
        scr_paintech();
        }
    else{
        if (argument0==0){
            playpainsfx=1;
            playbigpainsfx=0;
            }
        takingpain=1;
        switchingpose=0;
        global.state=5;
        obj_iji.alarm[0]=0;
        obj_iji.alarm[1]=9;
        obj_iji.image_index=0;
        obj_iji.image_speed=0.5;
        if (global.facing==0){
            obj_iji.sprite_index=spr_painleft;
            }
        if (global.facing==1){
            obj_iji.sprite_index=spr_pain;
            }
        }
    }
//Lying down
else if ((global.state==8 || global.state==7) && takingpain==0){
    if (argument0==0){
        playpainsfx=1;
        playbigpainsfx=0;
        }
    script_execute(scr_nanoexplosion,6,25,1);
    obj_iji.alarm[6]=7;
    takingpain=1;
    global.state=7;
    obj_iji.image_index=0;
    obj_iji.image_single=-1;
    obj_iji.image_speed=0.5;
    if (global.facing==0){
        obj_iji.sprite_index=spr_hitfloorleft;
        }
    if (global.facing==1){
        obj_iji.sprite_index=spr_hitfloor;
        }
    }

//Being harmlesly knocked down
else if (global.state==6 && takingpain==0){
    script_execute(scr_nanoexplosion,6,15,1);
    if (global.facing==0){
        paintech=1;
        script_execute(scr_knockdown,2)
        }
    if (global.facing==1){
        paintech=1;
        script_execute(scr_knockdown,1)
        }
    }
#define scr_knockdown
//Knockdown
//Argument0 is knockdowntype
// 1 left
// 2 right
//Argument1 is force
//Argument2 is nanoexplo 1=off
//Argument3 is recover armor 1=off
//Argument4 is no voice 1=true
//Argument5 is impulse 1=true
delayframes=0;

//Tech pain
if (paintech && (techcyc==1 || techcyc==2 || techcyc==3 || techcyc==4 || overload==10) && notech==0 && global.hp>0){
    paintech=0;
    scr_paintech();
    exit;
    }
paintech=0;

//Overload: nanochaos
if (overload==1 && !nanochaosed && !recovering && !takingpain && argument5==0){
    nanochaosed=1;
    repeat(10)
        instance_create(bbox_left+(bbox_right-bbox_left)-16,bbox_top+(bbox_bottom-bbox_top)-24,obj_nanochaos);
    }
    
//Suppression
if (global.healthlevel==10 && !fatality && argument5==0){
    if (suppression-global.hp>1){
        global.hp+=1;
        global.damage-=1;
        }
    }
suppression=global.hp;
if (global.hp<=0)
    global.hp=0;

if (takingpain==0){
//Anni beta safeguard
if (obj_sabot.annihilatorbeta){
    obj_sabot.annihilatorbeta=0;
    global.ignoreall=0;
    obj_sabot.ignoresmooth=1;
    obj_sabot.alarm[4]=2;
    obj_sabot.alarm[5]=1;
    }


//Fly off Shredder
if (shredder){
    if (shredderhp>0){
        tempid=instance_create(floor(x),floor(y)-1,obj_emptyshredder);
        tempid.shredderhp=shredderhp;
        if (sprite_index==spr_tasenshredder_basicijileft)
            tempid.sprite_index=spr_tasenshredder_emptyleft;
        else
            tempid.sprite_index=spr_tasenshredder_empty;
        tempid.facing=global.facing;
        tempid.hspeed=hspeed;
        tempid.vspeed=vspeed;
        }
    visible=1;
    with (obj_hologram)
        instance_destroy();
    y-=30;
    x=floor(x);
    y=floor(y);
    shredder=0;
    }

global.ignoreall=0;
if (global.levelstation){
    global.levelstation=0;
    global.topmessage="";
    instance_activate_object(obj_levelstation);
    with (obj_levelstation)
        touchstation=0;
    }
if (global.weapstation>0){
    global.weapstation=0;
    global.topmessage="";
    instance_activate_object(obj_weapstation);
    with (obj_weapstation)
        touchstation=0;
    }
if (global.cracking){
    global.erasetop=0;
    global.topmessage="CRACKING FAILED";
    }
if (instance_number(obj_cracktext)==1)
    scr_crackfail();
script_execute(scr_terminatemessage);

//Knockdown
knockdowntype = argument0;
if (argument1 == 0){
    velocity = 0;
    speed = 6;
    }
else{
velocity = argument1;
if (velocity > 22){
    velocity = 22;
    }
if (velocity < 1){
    velocity = 1;
    }
speed = (argument1+6);
if (speed > 22){
    speed = 22;
    }
}
//(downed fix)
if (place_free(x-velocity-2,y-(speed+2)) && place_free(x+velocity+2,y-(speed+2)) && (sprite_index==spr_hitfloor || sprite_index==spr_hitfloorleft))
    y-=15;

if (knockdowntype == 1){
    sprite_index = spr_knockdown;
    global.facing = 1;
    }
else{
    sprite_index = spr_knockdownleft;
    global.facing = 0;
    }
if (!argument2)
    script_execute(scr_nanoexplosion,6,15,1);
if (!argument3)
    global.armor = 100;
global.state = 6;
takingpain = 1;
switchingpose = 0;
kicking = 0;
direction = 90;
y-=10;
image_single=-1;
image_index=0;
image_speed=0.5;
alarm[0]=0;
alarm[1]=0;
alarm[3]=0;
alarm[4]=0;
alarm[6]=0;
alarm[7]=0;
velocity = round(velocity);
speed = round(speed);
goaroundcyen=0;
scr_shakescreen(1);
if (argument4==0){
    playpainsfx=0;
    playbigpainsfx=1;
    }
//No HP
if (global.hp<=0){
    //fix revivebug
    if (overload!=6)
        obj_sabot.ultimatecannotpause=1;

    if (!deathscreamed){
        deathscreamed=1;
        scr_sound("iji_death");
        if (overload!=6 && obj_checkpoint.state!=1){
            if (!global.noblood){
                repeat(4){
                    tempid=instance_create(bbox_left+((bbox_right-bbox_left)/2),bbox_top+((bbox_bottom-bbox_top)/2),obj_tasenbloodspecial);
                    tempid.sprite_index=spr_ijiblood2;
                    tempid.speed*=1.5;
                    tempid.depth=-7;
                    }
                }
            }
        }
    
    //remove pursuing Assassins
    with (obj_komatoassassin){
        if (angry)
            destroyme=1;
        }
    }

//Tech (from pain)
if ((knockdowntype==1 || knockdowntype==2) && (techcyc==1 || techcyc==2 || techcyc==3 || techcyc==4 || overload==10) && notech==0 && global.hp>0){
    if (argument4==0 && argument5==0){
        playpainsfx=1;
        playbigpainsfx=0;
        }
    scr_techeffect();
    velocity=ceil(velocity*0.5);
    speed=ceil(speed*0.5);
    takingpain=1;
    stopanyfire=1;
    if (global.strengthlevel==10)
        alarm[7]=90;
    else
        alarm[7]=60;
    image_single=3;
    if (knockdowntype==1)
        sprite_index=spr_jump;
    else
        sprite_index=spr_jumpleft;
    if (!place_free(x,y))
        move_outside_solid(90,32);
    if (argument5==1){
        recovering=0;
        takingpain=0;
        }
    }
}
#define scr_paintech
//Teched pain
playpainsfx=1;
playbigpainsfx=0;
takingpain=1;
if (global.state==6)
    recovering=0;
else
    recovering=1;
if (global.strengthlevel==10)
    alarm[7]=90;
else
    alarm[7]=60;
scr_techeffect();
#define scr_getup
//Get up while bouncing
if (global.state==7 && global.hp>0 && image_index>1){
    if (obj_sabot.sec8trigger2){
        obj_sabot.sec8trigger2=0;
        (instance_create(x,y,obj_trigger)).textid="chat84";
        }
    move_outside_solid(90,10);
    move_contact_solid(270,30);
    if (global.facing==0)
        sprite_index=spr_getupleft;
    else
        sprite_index=spr_getup;
    if (place_free(x,y-30))
        y-=30;
    vspeed=0;
    hspeed=0;
    gravity=0;
    alarm[1]=26;
    gettingup=28;
    alarm[6]=0;
    image_index=0;
    image_single=-1;
    image_speed=0.5;
    global.state=5;
    switchingpose=1;
    if (takingpain==1 && recovering==0){
        if (global.strengthlevel==10)
            alarm[7]=90;
        else
            alarm[7]=60;
        recovering=1;
        }
    else{
        takingpain=0;
        recovering=0;
        }
    //damnit
    if ((global.hp<=1 || global.hp<global.healthlevel/2) && damncooldown==0 && recovering==1 && alarm[7]>=3){
        damncooldown=900;
        scr_sound("iji_damnit");
        }
    }
//Get up while still
else if (global.state==8){
    if (obj_sabot.sec8trigger2){
        obj_sabot.sec8trigger2=0;
        (instance_create(x,y,obj_trigger)).textid="chat84";
        }
    image_index=0;
    image_single=-1;
    image_speed=0.5;
    vspeed=0;
    hspeed=0;
    gravity=0;
    if (global.facing==0)
        sprite_index=spr_getupleft;
    else
        sprite_index=spr_getup;
    y-=30;
    alarm[1]=26;
    gettingup=28;
    global.state=5;
    switchingpose=1;
    }

#define scr_bullet
//Argument0 is bullet type
// 0 pellet
// 1 bullet
image_single=0;
hit=0;
lifespan=0;
while (hit==0 && lifespan<100){
    //Make airsparks
    temprand=random(1);
    if (global.passive){
        if ((temprand<0.12 && argument0==0) || (temprand<0.3 && argument0==1))
            (instance_create(x,y,obj_airspark)).sprite_index=spr_airspark2;
        }
    else{
        if (temprand<0.08)
            instance_create(x,y,obj_airspark);
        }
    //Spread shotty pellets
    if (argument0==0 && !nanoblast)
        y=(y-8+random(16)); //y=(y-11+random(22));
    //Spread bullets
    if (argument0==1)
        y=(y-5+random(10)); //y=(y-5+random(10));
    if (argument0==0)
        lifespan+=6;
    if (argument0==1){
        if (global.passive){
            //6 to 2.4
            lifespan+=6-0.36*global.attacklevel;
            }
        else
            lifespan+=2.4;
        }

    if (global.passive && argument0==1 && lifespan>=100)
        (instance_create(x,y,obj_airspark)).sprite_index=spr_airspark2;

    if (global.facing==0){
        if (place_meeting(x-12,y,obj_alliedenemy)==0 && place_meeting(x-12,y,obj_turret)==0 && place_meeting(x-12,y,obj_block)==0 && place_meeting(x-12,y,obj_glass)==0 && place_meeting(x-12,y,obj_shockbarrier)==0){
            x=x-12;
            }
        else{
            x=x-12;
            hit=1;
            }
    }
    if (global.facing==1){
        if (place_meeting(x+12,y,obj_alliedenemy)==0 && place_meeting(x+12,y,obj_turret)==0 && place_meeting(x+12,y,obj_block)==0 && place_meeting(x+12,y,obj_glass)==0 && place_meeting(x+12,y,obj_shockbarrier)==0){
        x=x+12;
        }
    else{
        x=x+12;
        hit=1;
        }
    }
}
image_single=1;

if (nanoblast && !obj_iji.nanoblasted && hit){
    obj_iji.nanoblasted=1;
    if (global.facing==0)
        x+=10;
    else
        x-=10;
    (instance_create(x,y,obj_rocketexplosion)).ijis=1;
    instance_create(x,y,obj_explosioncenter);
    scr_shakescreen(2);
    }
#define scr_recoveryblink
//Blink when damaged
if (blink==1 && !obj_iji.invisible){
obj_iji.visible=1;
}
if (blink==4){
blink=0;
obj_iji.visible=0;
}
blink=blink+1;
#define scr_recoveryblinkend
if (!obj_iji.invisible)
obj_iji.visible=1;
#define scr_pickupxp
//Picks up nanofield
if (global.dead==0){
if (global.level<global.maxlevel){
    //Nano (blue)
    if (other.sprite_index==spr_xp1){
        pickupsound=1;
        global.xpcount+=2;
        global.countingnano+=2;
        scr_levelup();
        if (!global.noitemtext){
            global.topmessage="Nano +"+string(global.countingnano);
            if (global.level<global.maxlevel)
                global.topmessage+=" ("+string(global.xp)+"/"+string((global.level*(4+global.difficulty*4))+4)+")";
            }
        }
    else if (other.sprite_index==spr_xp2){
        pickupsound=1;
        global.xpcount+=4;
        global.countingnano+=4;
        scr_levelup();
        if (!global.noitemtext){
            global.topmessage="Nano +"+string(global.countingnano);
            if (global.level<global.maxlevel)
                global.topmessage+=" ("+string(global.xp)+"/"+string((global.level*(4+global.difficulty*4))+4)+")";
            }
        }
    else if (other.sprite_index==spr_xp3){
        pickupsound=1;
        global.xpcount+=8;
        global.countingnano+=8;
        scr_levelup();
        if (!global.noitemtext){
            global.topmessage="Nano +"+string(global.countingnano);
            if (global.level<global.maxlevel)
                global.topmessage+=" ("+string(global.xp)+"/"+string((global.level*(4+global.difficulty*4))+4)+")";
            }
        }
    else if (other.sprite_index==spr_xp4){
        pickupsound=1;
        global.xpcount+=16;
        global.countingnano+=16;
        scr_levelup();
        if (!global.noitemtext){
            global.topmessage="Nano +"+string(global.countingnano);
            if (global.level<global.maxlevel)
                global.topmessage+=" ("+string(global.xp)+"/"+string((global.level*(4+global.difficulty*4))+4)+")";
            }
        }
    }

//Health (red)
if (other.sprite_index==spr_pickuphealth){
    if (global.assimilatelevel<10){
        pickupsound=1;
        if (!global.noitemtext){
            if (global.difficulty==0)
                global.topmessage="HP +2";
            else
                global.topmessage="HP +1";
            }
        if ((global.difficulty==0 && global.hp>(global.healthlevel*2)-2) || (global.difficulty>0 && global.hp>(global.healthlevel*2)-1))
            global.armor=100;
        if (global.difficulty==0)
            global.hp+=2;
        else
            global.hp+=1;
        }
//Advanced recovery and health
    else{
        pickupsound=1;
        if (!global.noitemtext){
            if (global.difficulty==0)
                global.topmessage="HP +3";
            else
                global.topmessage="HP +2";
            }
        if ((global.difficulty==0 && global.hp>(global.healthlevel*2)-3) || (global.difficulty>0 && global.hp>(global.healthlevel*2)-2))
            global.armor=100;
        if (global.difficulty==0)
            global.hp+=3;
        else
            global.hp+=2;
        }
    if (global.hp>(global.healthlevel*2))
        global.hp=global.healthlevel*2;
    }
global.armor+=10*global.assimilatelevel;
if (global.armor>100){
    global.armor=100;
    }
//Armor, advanced recovery and armor
if (!global.noitemtext){
    if (global.level<global.maxlevel || other.sprite_index=spr_pickuphealth)
        global.topmessage+=", ";
    else if (global.level==global.maxlevel && (other.sprite_index==spr_xp1 || other.sprite_index==spr_xp2 || other.sprite_index==spr_xp3 || other.sprite_index==spr_xp4)){
        global.topmessage="Max Level, ";
        pickupsound=1;
        }
    else{
        global.topmessage="";
        pickupsound=1;
        }
    if (other.sprite_index==spr_pickuparmor){
        if (global.assimilatelevel<10){
            global.topmessage="";
        pickupsound=1;
            }
        else{
            global.hp+=1;
            if (global.hp>(global.healthlevel*2))
                global.hp=global.healthlevel*2;
            global.topmessage="HP +1, ";
            pickupsound=1;
            }
        }
    global.topmessage+=string(global.assimilatelevel*10);
    global.topmessage+="% armor repaired";
    global.erasetop=0;
    pickupsound=1;
    }
}

if (pickupsound)
    scr_sound("glo_pickup");
#define scr_pickupammo
if (global.hp>0 && !shredder){

if (global.assimilatelevel<10)
    maxammo=global.assimilatebase+global.assimilatelevel*global.assimilatesize;
else
    maxammo=99;
denytext=0;
if (string_copy(global.topmessage,1,6)=="Nano +")
    denytext=1;

//Pick up ammo
if (other.sprite_index == spr_ammo1){
    if (global.ammo2 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,1);
            instance_destroy();
            }
        if (global.tasenlevel!=10)
            global.ammo2 += 4;
        else
            global.ammo2 += 5;
        if (!global.noitemtext){
            if (global.weapon2){
                if (global.tasenlevel!=10)
                    global.topmessage="Machinegun ammo +4";
                else
                    global.topmessage="Machinegun ammo +5";
                global.erasetop=0;
                }
            else{
                if (global.tasenlevel!=10)
                    global.topmessage="Unknown ammo +4";
                else
                    global.topmessage="Unknown ammo +5";
                global.erasetop=0;
                }
            }
        if (global.ammo2 > maxammo){
            global.ammo2 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon2)
            global.topmessage="Machinegun ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo2){
    if (global.ammo2 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,2);
            instance_destroy();
            }
        if (global.tasenlevel!=10)
            global.ammo2 += 10;
        else
            global.ammo2 += 11;
        if (!global.noitemtext){
            if (global.weapon2){
                if (global.tasenlevel!=10)
                    global.topmessage="Machinegun ammo +10";
                else
                    global.topmessage="Machinegun ammo +11";
                global.erasetop=0;
                }
            else{
                if (global.tasenlevel!=10)
                    global.topmessage="Unknown ammo +10";
                else
                    global.topmessage="Unknown ammo +11";
                global.erasetop=0;
                }
            }
        if (global.ammo2 > maxammo){
            global.ammo2 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon2)
            global.topmessage="Machinegun ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo3){
    if (global.ammo3 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,1);
            instance_destroy();
            }
        if (global.tasenlevel!=10)
            global.ammo3 += 1;
        else
            global.ammo3 += 2;
        if (!global.noitemtext){
            if (global.weapon3){
                if (global.tasenlevel!=10)
                    global.topmessage="Launcher ammo +1";
                else
                    global.topmessage="Launcher ammo +2";
                global.erasetop=0;
                }
            else{
                if (global.tasenlevel!=10)
                    global.topmessage="Unknown ammo +1";
                else
                    global.topmessage="Unknown ammo +2";
                global.erasetop=0;
                }
            }
        if (global.ammo3 > maxammo){
            global.ammo3 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon3)
            global.topmessage="Launcher ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo4){
    if (global.ammo3 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,2);
            instance_destroy();
            }
        if (global.tasenlevel!=10)
            global.ammo3 += 3;
        else
            global.ammo3 += 4;
        if (!global.noitemtext){
            if (global.weapon3){
                if (global.tasenlevel!=10)
                    global.topmessage="Launcher ammo +3";
                else
                    global.topmessage="Launcher ammo +4";
                global.erasetop=0;
                }
            else{
                if (global.tasenlevel!=10)
                    global.topmessage="Unknown ammo +3";
                else
                    global.topmessage="Unknown ammo +4";
                global.erasetop=0;
                }
            }
        if (global.ammo3 > maxammo){
            global.ammo3 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon3)
            global.topmessage="Launcher ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo5){
    if (global.ammo4 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,1);
            instance_destroy();
            }
        if (global.tasenlevel!=10)
            global.ammo4 += 1;
        else
            global.ammo4 += 2;
        if (!global.noitemtext){
            if (global.weapon4){
                if (global.tasenlevel!=10)
                    global.topmessage="MPFB ammo +1";
                else
                    global.topmessage="MPFB ammo +2";
                global.erasetop=0;
                }
            else{
                if (global.tasenlevel!=10)
                    global.topmessage="Unknown ammo +1";
                else
                    global.topmessage="Unknown ammo +2";
                global.erasetop=0;
                }
            }
        if (global.ammo4 > maxammo){
            global.ammo4 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon4)
            global.topmessage="MPFB ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo6){
    if (global.ammo4 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,2);
            instance_destroy();
            }
        if (global.tasenlevel!=10)
            global.ammo4 += 3;
        else
            global.ammo4 += 4;
        if (!global.noitemtext){
            if (global.weapon4){
                if (global.tasenlevel!=10)
                    global.topmessage="MPFB ammo +3";
                else
                    global.topmessage="MPFB ammo +4";
                global.erasetop=0;
                }
            else{
                if (global.tasenlevel!=10)
                    global.topmessage="Unknown ammo +3";
                else
                    global.topmessage="Unknown ammo +4";
                global.erasetop=0;
                }
            }
        if (global.ammo4 > maxammo){
            global.ammo4 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon4)
            global.topmessage="MPFB ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo7){
    if (global.ammo6 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,1);
            instance_destroy();
            }
        if (global.komatolevel!=10)
            global.ammo6 += 4;
        else
            global.ammo6 += 5;
        if (!global.noitemtext){
            if (global.weapon6){
                if (global.komatolevel!=10)
                    global.topmessage="Pulse ammo +4";
                else
                    global.topmessage="Pulse ammo +5";
                global.erasetop=0;
                }
            else{
                if (global.komatolevel!=10)
                    global.topmessage="Unknown ammo +4";
                else
                    global.topmessage="Unknown ammo +5";
                global.erasetop=0;
                }
            }
        if (global.ammo6 > maxammo){
            global.ammo6 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon6)
            global.topmessage="Pulse ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo8){
    if (global.ammo6 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,2);
            instance_destroy();
            }
        if (global.komatolevel!=10)
            global.ammo6 += 10;
        else
            global.ammo6 += 11;
        if (!global.noitemtext){
            if (global.weapon6){
                if (global.komatolevel!=10)
                    global.topmessage="Pulse ammo +10";
                else
                    global.topmessage="Pulse ammo +11";
                global.erasetop=0;
                }
            else{
                if (global.komatolevel!=10)
                    global.topmessage="Unknown ammo +10";
                else
                    global.topmessage="Unknown ammo +11";
                global.erasetop=0;
                }
            }
        if (global.ammo6 > maxammo){
            global.ammo6 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon6)
            global.topmessage="Pulse ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo9){
    if (global.ammo7 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,1);
            instance_destroy();
            }
        if (global.komatolevel!=10)
            global.ammo7 += 1;
        else
            global.ammo7 += 2;
        if (!global.noitemtext){
            if (global.weapon7){
                if (global.komatolevel!=10)
                    global.topmessage="Shock ammo +1";
                else
                    global.topmessage="Shock ammo +2";
                global.erasetop=0;
                }
            else{
                if (global.komatolevel!=10)
                    global.topmessage="Unknown ammo +1";
                else
                    global.topmessage="Unknown ammo +2";
                global.erasetop=0;
                }
            }
        if (global.ammo7 > maxammo){
            global.ammo7 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon7)
            global.topmessage="Shock ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo10){
    if (global.ammo7 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,2);
            instance_destroy();
            }
        if (global.komatolevel!=10)
            global.ammo7 += 3;
        else
            global.ammo7 += 4;
        if (!global.noitemtext){
            if (global.weapon7){
                if (global.komatolevel!=10)
                    global.topmessage="Shock ammo +3";
                else
                    global.topmessage="Shock ammo +4";
                global.erasetop=0;
                }
            else{
                if (global.komatolevel!=10)
                    global.topmessage="Unknown ammo +3";
                else
                    global.topmessage="Unknown ammo +4";
                global.erasetop=0;
                }
            }
        if (global.ammo7 > maxammo){
            global.ammo7 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon7)
            global.topmessage="Shock ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo11){
    if (global.ammo8 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,1);
            instance_destroy();
            }
        if (global.komatolevel!=10)
            global.ammo8 += 4;
        else
            global.ammo8 += 5;
        if (!global.noitemtext){
            if (global.weapon8){
                if (global.komatolevel!=10)
                    global.topmessage="CFIS ammo +4";
                else
                    global.topmessage="CFIS ammo +5";
                global.erasetop=0;
                }
            else{
                if (global.komatolevel!=10)
                    global.topmessage="Unknown ammo +4";
                else
                    global.topmessage="Unknown ammo +5";
                global.erasetop=0;
                }
            }
        if (global.ammo8 > maxammo){
            global.ammo8 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon8)
            global.topmessage="CFIS ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }
if (other.sprite_index == spr_ammo12){
    if (global.ammo8 < maxammo){
        scr_sound("glo_pickup");
        with (other){
            script_execute(scr_pickupflash,16,16,2);
            instance_destroy();
            }
        if (global.komatolevel!=10)
            global.ammo8 += 10;
        else
            global.ammo8 += 11;
        if (!global.noitemtext){
            if (global.weapon8){
                if (global.komatolevel!=10)
                    global.topmessage="CFIS ammo +10";
                else
                    global.topmessage="CFIS ammo +11";
                global.erasetop=0;
                }
            else{
                if (global.komatolevel!=10)
                    global.topmessage="Unknown ammo +10";
                else
                    global.topmessage="Unknown ammo +11";
                global.erasetop=0;
                }
            }
        if (global.ammo8 > maxammo){
            global.ammo8 = maxammo;
            }
        }
    else if (global.ignorestation==0 && !place_meeting(x,y,obj_station) && !denytext){
        global.erasetop=0;
        if (global.weapon8)
            global.topmessage="CFIS ammo full"
        else
            global.topmessage="Unknown ammo full"
        }
    }

}
#define scr_touchweapon
if (global.hp>0 && !shredder){
//Touching a weapon pickup
if (other.sprite_index == spr_pickupmach){
    if (global.tasenlevel > 2){
        script_execute(scr_pickupweapon,2);
        if (!global.passive)
            global.topmessage="MACHINEGUN - Select with 2";
        else
            global.topmessage="IMPACT MACHINEGUN - Select with 2";
        global.erasetop=0;
        with(other){
            script_execute(scr_pickupflash,32,16,4);
            instance_destroy();
            }
        }
    else{
        other.image_single = 1;
        other.alarm[0] = 90;
        }
    }
else if (other.sprite_index == spr_pickuprokt){
    if (global.tasenlevel > 5){
        script_execute(scr_pickupweapon,3);
        if (!global.passive)
            global.topmessage="ROCKET LAUNCHER - Select with 3";
        else
            global.topmessage="IMPULSE LAUNCHER - Select with 3";
        global.erasetop=0;
        with(other){
            script_execute(scr_pickupflash,32,16,4);
            instance_destroy();
            }
        }
    else{
        other.image_single = 1;
        other.alarm[0] = 90;
        }
    }
else if (other.sprite_index == spr_pickupmpfb){
    if (global.tasenlevel == 10){
        script_execute(scr_pickupweapon,4);
        if (!global.passive)
            global.topmessage="MPFB DEVASTATOR - Select with 4";
        else
            global.topmessage="MPFB NEUTRALIZER - Select with 4";
        global.erasetop=0;
        with(other){
            script_execute(scr_pickupflash,32,16,4);
            instance_destroy();
            }
        }
    else{
        other.image_single = 1;
        other.alarm[0] = 90;
        }
    }
else if (other.sprite_index == spr_pickupreso){
    script_execute(scr_pickupweapon,5);
    if (!global.passive)
        global.topmessage="RESONANCE DETONATOR - Select with 5 or "+chr(global.weap5key);
    else
        global.topmessage="RESONANCE DISRUPTOR - Select with 5 or "+chr(global.weap5key);
    global.erasetop=0;
    with(other){
        script_execute(scr_pickupflash,32,16,4);
        instance_destroy();
        }
    }
else if (other.sprite_index == spr_pickuppuls){
    if (global.komatolevel > 2){
        script_execute(scr_pickupweapon,6);
        if (!global.passive)
            global.topmessage="PULSE CANNON - Select with 6 or "+chr(global.weap6key);
        else
            global.topmessage="PULSE LINKER - Select with 6 or "+chr(global.weap6key);
        global.erasetop=0;
        with(other){
            script_execute(scr_pickupflash,32,16,4);
            instance_destroy();
            }
        }
    else{
        other.image_single = 1;
        other.alarm[0] = 90;
        }
    }
else if (other.sprite_index == spr_pickupshok){
    if (global.komatolevel > 5){
        script_execute(scr_pickupweapon,7);
        if (!global.passive)
            global.topmessage="SHOCKSPLINTER - Select with 7 or "+chr(global.weap7key);
        else
            global.topmessage="SHOCK BARRIER - Select with 7 or "+chr(global.weap7key);
        global.erasetop=0;
        with(other){
            script_execute(scr_pickupflash,32,16,4);
            instance_destroy();
            }
        }
    else{
        other.image_single = 1;
        other.alarm[0] = 90;
        }
    }
else if (other.sprite_index == spr_pickupcfis){
    if (global.komatolevel == 10){
        script_execute(scr_pickupweapon,8);
        if (!global.passive)
            global.topmessage="CYCLIC FUSION IGNITION SYSTEM - Select with 8 or "+chr(global.weap8key);
        else
            global.topmessage="CHAIN FRACTAL INJECTION SHELL - Select with 8 or "+chr(global.weap8key);
        global.erasetop=0;
        with(other){
            script_execute(scr_pickupflash,32,16,4);
            instance_destroy();
            }
        }
    else{
        other.image_single = 1;
        other.alarm[0] = 90;
        }
    }
else if (other.sprite_index == spr_pickupbanana && (other.image_single==0 || other.image_single==1)){
    if (global.weapon2==1 && global.weapon3==1 && global.weapon4==1 && global.weapon5==1 && global.weapon6==1 && global.weapon7==1 && global.weapon8==1){
        script_execute(scr_pickupweapon,17);
        if (!global.passive)
            global.topmessage="BANANA GUN - Select with 9";
        else
            global.topmessage="BANANA GUN - Select with 9 (in Active gun mode)";
        global.erasetop=0;
        with(other){
            script_execute(scr_pickupflash,32,16,4);
            instance_destroy();
            }
        }
    else{
        other.image_single = 1;
        other.alarm[0] = 90;
        }
    }
else if (other.sprite_index == spr_pickuprefl){
    script_execute(scr_pickupweapon,5);
    script_execute(scr_pickupweapon,18);
    //global.passive=0;
    //global.killdata[799]=0;
    if (!global.passive)
        global.topmessage="RESONANCE REFLECTOR - Press 5 or "+chr(global.weap5key)+" twice";
    else
        global.topmessage="RESONANCE REFLECTOR - Press 5 or "+chr(global.weap5key)+" twice (in Active gun mode)";
    global.erasetop=0;
    with(other){
        script_execute(scr_pickupflash,32,16,4);
        instance_destroy();
        }
    (instance_create(obj_iji.x,obj_iji.y,obj_trigger)).textid="chatxj";
    }
else if (other.sprite_index == spr_pickupbanana && other.image_single==2){
    script_execute(scr_pickupweapon,20);
    if (!global.passive)
        global.topmessage="NULL DRIVER - Select with 0";
    else
        global.topmessage="NULL DRIVER - Select with 0 (in Active gun mode)";
    global.erasetop=0;
    with(other){
        script_execute(scr_pickupflash,32,16,4);
        instance_destroy();
        }
    }
else if (other.sprite_index == spr_pickupbanana && other.image_single==3){
    script_execute(scr_pickupweapon,21);
    if (!global.passive)
        global.topmessage="MASSACRE - Select with 0";
    else
        global.topmessage="MASSACRE - Select with 0 (in Active gun mode)";
    global.erasetop=0;
    with(other){
        script_execute(scr_pickupflash,32,16,4);
        instance_destroy();
        }
    }
}
#define scr_pickupweapon
//Pick up a weapon
scr_sound("glo_pickup2");
if (argument0 == 2 && instance_number(obj_weapon2) == 0){
    instance_create(obj_sabot.x+674, obj_sabot.y+531, obj_weapon2);
    global.weapon2=1;
    }
if (argument0 == 3 && instance_number(obj_weapon3) == 0){
    instance_create(obj_sabot.x+714, obj_sabot.y+531, obj_weapon3);
    global.weapon3=1;
    }
if (argument0 == 4 && instance_number(obj_weapon4) == 0){
    instance_create(obj_sabot.x+754, obj_sabot.y+531, obj_weapon4);
    global.weapon4=1;
    }
if (argument0 == 5 && instance_number(obj_weapon5) == 0){
    instance_create(obj_sabot.x+634, obj_sabot.y+563, obj_weapon5);
    global.weapon5=1;
    }
if (argument0 == 6 && instance_number(obj_weapon6) == 0){
    instance_create(obj_sabot.x+674, obj_sabot.y+563, obj_weapon6);
    global.weapon6=1;
    }
if (argument0 == 7 && instance_number(obj_weapon7) == 0){
    instance_create(obj_sabot.x+714, obj_sabot.y+563, obj_weapon7);
    global.weapon7=1;
    }
if (argument0 == 8 && instance_number(obj_weapon8) == 0){
    instance_create(obj_sabot.x+754, obj_sabot.y+563, obj_weapon8);
    global.weapon8=1;
    }
if (argument0 == 17){
    global.weapon17=1;
    with (obj_iji){
        if (place_meeting(x,y,obj_bananatrigger)){
            (instance_create(x,y,obj_trigger)).textid="chat97";
            with (obj_bananatrigger)
                instance_destroy();
            }
        }
    }
if (argument0 == 20){
    global.weapon20=1;
    (instance_create(x,y,obj_trigger)).textid="chat18";
    }
if (argument0 == 21){
    global.weapon21=1;
    (instance_create(x,y,obj_trigger)).textid="chatxp";
    }
//Resonance reflector
if (argument0 == 18){
    if (!global.weapon13)
        obj_sabot.gotspecial13=1;
    if (global.weapon==5)
        obj_weapon5.image_single=3;
    else if (global.weapon==13)
        obj_weapon5.image_single=4;
    else
        obj_weapon5.image_single=2;
    global.weapon5=1;
    global.weapon13=1;
    }
#define scr_changeweapon
//Change weapon
//Argument0 is the weapon number
//Argument1 to always allow weapon change
if (instance_number(obj_iji)==1 && !obj_sabot.playinghero3d && !obj_sabot.pause && !global.horse){
if (!global.ignoreall || place_meeting(obj_iji.x,obj_iji.y+64,obj_lift) || argument1==1 || obj_iji.alwayschangeweapon){
prevweapon=global.weapon;
//You have the base weapon you claim to have
if ((argument0 == 1) ||
(argument0 == 2 && global.weapon2) ||
(argument0 == 3 && global.weapon3) ||
(argument0 == 4 && global.weapon4) ||
(argument0 == 5 && global.weapon5) ||
(argument0 == 6 && global.weapon6) ||
(argument0 == 7 && global.weapon7) ||
(argument0 == 8 && global.weapon8) ||
(argument0 == 9 && global.weapon17 && global.weapon!=17 && !global.passive) ||
(argument0 == 10 && global.weapon20 && global.weapon!=20 && !global.passive) ||
(argument0 == 10 && global.weapon21 && global.weapon!=21 && !global.passive)){
//You already have the base weapon equipped, but not the superversion
if ((global.weapon==1 && argument0==1 && global.weapon9 && !global.passive) ||
(global.weapon==2 && argument0==2 && global.weapon10 && !global.passive) ||
(global.weapon==3 && argument0==3 && global.weapon11 && !global.passive) ||
(global.weapon==4 && argument0==4 && global.weapon12 && !global.passive) ||
(global.weapon==5 && argument0==5 && global.weapon13 && !global.passive) ||
(global.weapon==6 && argument0==6 && global.weapon14 && !global.passive) ||
(global.weapon==7 && argument0==7 && global.weapon15 && !global.passive) ||
(global.weapon==8 && argument0==8 && global.weapon16 && !global.passive) ||
(global.weapon==0 && argument0!=0) ||
(global.weapon==1 && argument0!=1) ||
(global.weapon==2 && argument0!=2) ||
(global.weapon==3 && argument0!=3) ||
(global.weapon==4 && argument0!=4) ||
(global.weapon==5 && argument0!=5) ||
(global.weapon==6 && argument0!=6) ||
(global.weapon==7 && argument0!=7) ||
(global.weapon==8 && argument0!=8) ||
global.weapon==9 || global.weapon==10 || global.weapon==11 ||
global.weapon==12 || global.weapon==13 || global.weapon==14 ||
global.weapon==15 || global.weapon==16 || global.weapon==17 || global.weapon==20 || global.weapon==21){

    obj_iji.reloading=1;
    obj_iji.alarm[2]=30;
    obj_iji.reloader=30;
    obj_weapon1.image_single=0+(global.weapon9*2);
    obj_weapon2.image_single=0+(global.weapon10*2);
    obj_weapon3.image_single=0+(global.weapon11*2);
    obj_weapon4.image_single=0+(global.weapon12*2);
    obj_weapon5.image_single=0+(global.weapon13*2);
    obj_weapon6.image_single=0+(global.weapon14*2);
    obj_weapon7.image_single=0+(global.weapon15*2);
    obj_weapon8.image_single=0+(global.weapon16*2);
    if (argument0==1){
        obj_weapon1.image_single=1+(global.weapon9*2);
        if (global.weapon9==1 && global.weapon==1){
            global.weapon=9;
            obj_weapon1.image_single=4;
            obj_weapon2.image_single=1+(global.weapon10*2);
            }
        else{
            global.weapon=1;
            if (global.passive){
                obj_iji.alarm[2]=90;
                obj_iji.reloader=90;
                }
            }
        }
    if (argument0==2){
        obj_weapon2.image_single=1+(global.weapon10*2);
        if (global.weapon10==1 && global.weapon==2){
            global.weapon=10;
            obj_weapon2.image_single=4;
            }
        else
            global.weapon=2;
        }
    if (argument0==3){
        obj_weapon3.image_single=1+(global.weapon11*2);
        obj_iji.alarm[2]=60;
        obj_iji.reloader=60;
        if (global.weapon11==1 && global.weapon==3){
            global.weapon=11;
            obj_weapon3.image_single=4;
            obj_iji.alarm[2]=90;
            obj_iji.reloader=90;
            }
        else{
            global.weapon=3;
            if (global.passive){
                obj_iji.alarm[2]=90;
                obj_iji.reloader=90;
                }
            }
        }
    if (argument0==4){
        obj_weapon4.image_single=1+(global.weapon12*2);
        obj_iji.alarm[2]=90;
        obj_iji.reloader=90;
        if (global.weapon12==1 && global.weapon==4){
            global.weapon=12;
            obj_weapon4.image_single=4;
            }
        else{
            global.weapon=4;
            if (global.passive){
                obj_iji.alarm[2]=120;
                obj_iji.reloader=120;
                }
            }
        }
    if (argument0==5){
        obj_weapon5.image_single=1+(global.weapon13*2);
        obj_iji.alarm[2]=120;
        obj_iji.reloader=120;
        if (global.weapon13==1 && global.weapon==5){
            global.weapon=13;
            obj_weapon5.image_single=4;
            }
        else{
            global.weapon=5;
            }
        }
    if (argument0==6){
        obj_weapon6.image_single=1+(global.weapon14*2);
        if (global.weapon14==1 && global.weapon==6){
            global.weapon=14;
            obj_weapon6.image_single=4;
            }
        else
            global.weapon=6;
        }
    if (argument0==7){
        obj_weapon7.image_single=1+(global.weapon15*2);
        obj_iji.alarm[2]=60;
        obj_iji.reloader=60;
        if (global.weapon15==1 && global.weapon==7){
            global.weapon=15;
            obj_iji.alarm[2]=75;
            obj_iji.reloader=75;
            obj_weapon7.image_single=4;
            }
        else{
            global.weapon=7;
            if (global.passive){
                obj_iji.alarm[2]=60;
                obj_iji.reloader=60;
                }
            }
        }
    if (argument0==8){
        obj_weapon8.image_single=1+(global.weapon16*2);
        if (global.weapon16==1 && global.weapon==8){
            global.weapon=16;
            obj_weapon8.image_single=4;
            }
        else{
            global.weapon=8;
            if (global.passive){
                obj_iji.alarm[2]=60;
                obj_iji.reloader=60;
                }
            }
        }
    if (argument0==9){
        obj_iji.alarm[2]=120;
        obj_iji.reloader=120;
        global.weapon=17;
        obj_weapon1.image_single=1+(global.weapon9*2);
        obj_weapon2.image_single=1+(global.weapon10*2);
        obj_weapon3.image_single=1+(global.weapon11*2);
        obj_weapon4.image_single=1+(global.weapon12*2);
        obj_weapon5.image_single=1+(global.weapon13*2);
        obj_weapon6.image_single=1+(global.weapon14*2);
        obj_weapon7.image_single=1+(global.weapon15*2);
        obj_weapon8.image_single=1+(global.weapon16*2);
        }
    if (argument0==10){
        if (global.weapon21 && global.weapon!=21){
            global.weapon=21;
            obj_iji.alarm[2]=75;
            obj_iji.reloader=75;
            }
        else if (global.weapon20){
            obj_iji.alarm[2]=30;
            obj_iji.reloader=30;
            global.weapon=20;
            }
        obj_weapon1.image_single=0+(global.weapon9*2);
        obj_weapon2.image_single=0+(global.weapon10*2);
        obj_weapon3.image_single=0+(global.weapon11*2);
        obj_weapon4.image_single=0+(global.weapon12*2);
        obj_weapon5.image_single=0+(global.weapon13*2);
        obj_weapon6.image_single=0+(global.weapon14*2);
        obj_weapon7.image_single=0+(global.weapon15*2);
        obj_weapon8.image_single=0+(global.weapon16*2);
        }
    }
}
//Change sound
if (prevweapon!=global.weapon){
    //No sound while Tor appears
    if (room!=rom_sector15 || !obj_iji.alwayschangeweapon)
        scr_sound("glo_selectweapon");
    }
}

//Weapstation
else if (global.weapstation==1){
    if (argument0==1 || (argument0==2 && global.weapon2) || (argument0==3 && global.weapon3) || (argument0==4 && global.weapon4) || (argument0==5 && global.weapon5) || (argument0==6 && global.weapon6) || (argument0==7 && global.weapon7) || (argument0==8 && global.weapon8)){
        global.weapstation=2;
        obj_weapstation.weap1=argument0;
        global.tempwsweap1=argument0;
        scr_sound("glo_selectweapon");
        }
    }
else if (global.weapstation==2){
    if ((argument0==1 && obj_weapstation.weap1!=1) || (argument0==2 && global.weapon2 && obj_weapstation.weap1!=2) || (argument0==3 && global.weapon3 && obj_weapstation.weap1!=3) || (argument0==4 && global.weapon4 && obj_weapstation.weap1!=4) || (argument0==5 && global.weapon5 && obj_weapstation.weap1!=5) || (argument0==6 && global.weapon6 && obj_weapstation.weap1!=6) || (argument0==7 && global.weapon7 && obj_weapstation.weap1!=7) || (argument0==8 && global.weapon8 && obj_weapstation.weap1!=8)){
        global.weapstation=3;
        obj_weapstation.weap2=argument0;
        global.ignorestation=150;
        scr_sound("glo_selectweapon");
        }
    }
}
#define scr_nuke
//Nuke deals 5 damage
//Argument0 1 is using ougi
if (argument0==1)
    global.tempougi=1;
else
    global.tempougi=0;

obj_sabot.raveflash=0;
with (obj_iji){
    if (!shredder){
        if (global.facing == 0){
            if (!takingpain && !recovering){
                notech=10;
                goaroundcyen=1;
                //Nanochaos
                if (overload==1){
                    overload=0;
                    script_execute(scr_knockdown,2,10,0,1,1);
                    overload=1;
                    }
                else
                    script_execute(scr_knockdown,2,10,0,1,1);
                if (!global.tempougi){
                    takingpain=0;
                    recovering=0;
                    }
                }
            else
                script_execute(scr_knockdown,2,10,0,1,1);
            }
        else{
            if (!takingpain && !recovering){
                notech=10;
                goaroundcyen=1;
                //Nanochaos
                if (overload==1){
                    overload=0;
                    script_execute(scr_knockdown,1,10,0,1,1);
                    overload=1;
                    }
                else
                    script_execute(scr_knockdown,1,10,0,1,1);
                if (!global.tempougi){
                    takingpain=0;
                    recovering=0;
                    }
                }
            else
                script_execute(scr_knockdown,1,10,0,1,1);
            }
        }
    }

with (obj_paper)
    dead=1;
with (obj_turret){
    if (distance_to_object(obj_iji)<500)
    armor=0;
    }
with (obj_skysmasher){
    if (distance_to_object(obj_iji)<500)
    armor=-100;
    }
with (obj_tasenscout){
    if (distance_to_object(obj_iji)<500){
    hp-=5*global.atmult;
    ijikill=1;
    if (hp<=0 && killtype<5)
        killtype=5;
    if ((bbox_left + (bbox_right - bbox_left) /2) < obj_iji.bbox_left + ((obj_iji.bbox_right - obj_iji.bbox_left) /2))
        script_execute(scr_enemyknockdown,1,25);
    else
        script_execute(scr_enemyknockdown,2,25);
    }
    }
with (obj_tasensoldier){
    if (distance_to_object(obj_iji)<500){
    ijikill=1;
    hp-=5*global.atmult;
    if (hp<=0 && killtype<5)
        killtype=5;
    if ((bbox_left + (bbox_right - bbox_left) /2) < obj_iji.bbox_left + ((obj_iji.bbox_right - obj_iji.bbox_left) /2))
        script_execute(scr_enemyknockdown,1,25);
    else
        script_execute(scr_enemyknockdown,2,25);
    }
    }
with (obj_tasencommander){
    if (distance_to_object(obj_iji)<500 && !nukeimmune){
    ijikill=1;
    hp-=5*global.atmult;
    if (hp<=0 && killtype<5)
        killtype=5;
    if ((bbox_left + (bbox_right - bbox_left) /2) < obj_iji.bbox_left + ((obj_iji.bbox_right - obj_iji.bbox_left) /2))
        script_execute(scr_enemyknockdown,1,25);
    else
        script_execute(scr_enemyknockdown,2,25);
    }
    }
with (obj_tasenelite){
    if (distance_to_object(obj_iji)<500 && !nukeimmune){
    hp-=5*global.atmult;
    if (hp<=0 && killtype<5)
        killtype=5;
    ijikill=1;
    script_execute(scr_elitepain);
    }
    }
with (obj_tasenshredder){
    if (distance_to_object(obj_iji)<500){
        shredderhp-=500;
        if (shredderhp<=0 && killtype<5)
            killtype=5;
        ijikill=1;
        if (shredderhp>0){
            tempid=instance_create(x,y-30,obj_tasensoldier);
            tempid.hp=0;
            tempid.dead=1;
            tempid.ijikill=1;
            tempid.killtype=5;
            if (obj_iji.x+6>x){
                with (tempid)
                    script_execute(scr_enemyknockdown,1,25);
                }
            else{
                with (tempid)
                    script_execute(scr_enemyknockdown,2,25);
                }
            tempid=instance_create(floor(x),floor(y)-1,obj_emptyshredder);
            tempid.shredderhp=shredderhp;
            if (sprite_index==spr_tasenshredder_basicleft)
                tempid.sprite_index=spr_tasenshredder_emptyleft;
            else
                tempid.sprite_index=spr_tasenshredder_empty;
            tempid.facing=facing;
            tempid.hspeed=hspeed;
            tempid.vspeed=vspeed;
            instance_destroy();
            }
        }
    }
with (obj_emptyshredder){
    if (distance_to_object(obj_iji)<500){
    shredderhp-=500;
    }
    }
with (obj_komatotrooper){
    if (distance_to_object(obj_iji)<500){
    hp=0;
    if (killtype<5)
        killtype=5;
    ijikill=1;
    if ((bbox_left + (bbox_right - bbox_left) /2) < obj_iji.bbox_left + ((obj_iji.bbox_right - obj_iji.bbox_left) /2))
        script_execute(scr_enemyknockdown,1,25);
    else
        script_execute(scr_enemyknockdown,2,25);
    }
    }
with (obj_komatoberserker){
    if (distance_to_object(obj_iji)<500){
    hp-=5*global.atmult;
    if (hp<=0 && killtype<5)
        killtype=5;
    ijikill=1;
    if ((bbox_left + (bbox_right - bbox_left) /2) < obj_iji.bbox_left + ((obj_iji.bbox_right - obj_iji.bbox_left) /2))
        script_execute(scr_enemyknockdown,1,25);
    else
        script_execute(scr_enemyknockdown,2,25);
    }
    }
with (obj_komatoassassin){
    if (distance_to_object(obj_iji)<500 && visible){
        if (asha2)
            scr_assassinpain(1);
        else{
            hp-=5*global.atmult;
            if (asha){
                hp=0;
                scr_sound("ash_death");
                obj_ashatrigger.ashanuked=1;
                }
            backup=100;
            scr_assassinpain();
            if (asha)
                instance_create(lastx,lasty,obj_supercharge);
            }
        }
    }
with (obj_komatobeast){
    if (distance_to_object(obj_iji)<500){
    ijikill=1;
    if (killtype<5)
        killtype=5;
    scr_beastdeath();
    }
    }

with (obj_komatoannihilator){
    if (!iosa){
    if (distance_to_object(obj_iji)<500){
    ijikill=1;
    targetiji=300;
    hp-=5*global.atmult;
    if (hp<=0 && killtype<5)
        killtype=5;
    scr_annihilatorpain();
    if (!angry){
        angry=1;
        alarm[5]=300;
        }
    }
    }
    }
with (obj_proxima){
    hp-=2.5*global.atmult;
    if (x+64>obj_iji.x+5)
        hs=15;
    else
        hs=-15;
    if (y+64>obj_iji.y+15)
        vs=15;
    else
        vs=-15;
    }
with (obj_iosa){
    hp-=5*global.atmult;
    scr_annihilatorpain();
    }
with (obj_tor){
    if (vulnerable)
        hp-=5*global.atmult;
    }

with (obj_annihilatorbeta){
    if (distance_to_object(obj_iji)<500){
        hp-=5*global.atmult;
        scr_betaannihilatorpain();
        }
    }
with (obj_meta){
    if (distance_to_object(obj_iji)<700){
    if ((bbox_left + (bbox_right - bbox_left) /2) < obj_iji.bbox_left + ((obj_iji.bbox_right - obj_iji.bbox_left) /2))
    script_execute(scr_metabreak,25,1);
    else
    script_execute(scr_metabreak,25,2);
    }
    }
with (obj_glass){
    if (distance_to_object(obj_iji)<500){
    if ((bbox_left + (bbox_right - bbox_left) /2) < obj_iji.bbox_left + ((obj_iji.bbox_right - obj_iji.bbox_left) /2))
    script_execute(scr_glassbreak,25,1);
    else
    script_execute(scr_glassbreak,25,2);
    }
    }
with (obj_crumble5){
    if (distance_to_object(obj_iji)<500){
        if (global.specialbake==0)
        i=25;
        else
        i=5;
        repeat(i){
        tempid=instance_create(x+8+random(48),y+8+random(48),obj_scrapwhite);
        tempid.direction=random(360);
        tempid.speed=random(8)+5;
        }
        instance_destroy();
        }
    }
with (obj_crumble52){
    if (distance_to_object(obj_iji)<500){
        if (global.specialbake==0)
            i=25;
        else
            i=5;
        repeat(i){
        tempid=instance_create(x+8+random(48),y+8+random(48),obj_scrapwhite);
        tempid.direction=random(360);
        tempid.speed=random(8)+5;
        }
        instance_destroy();
        with (obj_trigger){
            if (textid="chat56")
                instance_destroy();
            }
        }
    }
with (obj_crumble6){
    if (distance_to_object(obj_iji)<500){
        if (global.specialbake==0)
        i=25;
        else
        i=5;
        repeat(i){
        tempid=instance_create(x+8+random(48),y+8+random(48),obj_scrapwhite);
        tempid.direction=random(360);
        tempid.speed=random(8)+5;
        }
        instance_destroy();
        }
    }
with (obj_phantomhammer){
    if (distance_to_object(obj_iji)<250)
        armor=-500;
    }
with (obj_xcore){
    if (distance_to_object(obj_iji)<500){
        if (go)
            hp=0;
        }
    }
with (obj_shockbarrier){
    if (distance_to_object(obj_iji)<500)
        scr_barrierexplo();
    }

#define scr_nukedraw
//Nuke graphics
cycle += 1;
if (cycle == 1){
draw_set_color(c_white);
if (argument0==0)
    draw_ellipse(obj_iji.x-445,obj_iji.y-180,obj_iji.x+455,obj_iji.y+240,0);
if (argument0==1)
    draw_ellipse(obj_proxima.x-445,obj_proxima.y-180,obj_proxima.x+455,obj_proxima.y+240,0);
}
if (cycle == 3){
draw_set_color(c_white);
if (argument0==0)
    draw_ellipse(obj_iji.x-345,obj_iji.y-430,obj_iji.x+355,obj_iji.y+490,0);
if (argument0==1)
    draw_ellipse(obj_proxima.x-345,obj_iji.y-430,obj_proxima.x+355,obj_proxima.y+490,0);
}
if (cycle == 5){
draw_set_color(c_white);
if (argument0==0)
    draw_ellipse(obj_iji.x-595,obj_iji.y-250,obj_iji.x+605,obj_iji.y+310,0);
if (argument0==1)
    draw_ellipse(obj_proxima.x-595,obj_iji.y-250,obj_proxima.x+605,obj_proxima.y+310,0);
}
if (cycle == 7){
draw_set_color(c_white);
draw_rectangle(view_xview[0]-50,view_yview[0]-50,view_xview[0]+850,view_yview[0]+650,0);
}
if (cycle >= 60) instance_destroy();
#define scr_neutralizer
obj_sabot.raveflash=0;
global.tempstuntime=50+floor(10*global.attacklevel);

with (obj_paper)
    dead=1;
with (obj_turret){
    if (distance_to_object(obj_iji)<500){
        if (!dead && visible){
            state=0;
            angry=1;
            alarm[0]=0;
            alarm[1]=global.tempstuntime;
            alarm[2]=0;
            alarm[8]=4;
            if (facing==0)
                image_single=0;
            else
                image_single=2;
            }
        }    
    }

with (obj_skysmasher){
    if (distance_to_object(obj_iji)<500){
        scr_smasherwake();
        sstep=0;
        stunned=1;
        angry=1;
        firingrocket=0;
        alarm[6]=0;
        alarm[7]=4;
        alarm[8]=global.tempstuntime;
        }
    }

with (obj_tasenscout){
    if (distance_to_object(obj_iji)<500 && !dead){
        global.truce=0;
        targetiji=300;
        if (angry==0){
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        alarm[5]=300;
        if (state<4 || state==6){
            takingpain=1;
            state=3;
            alarm[1]=0;
            alarm[2]=global.tempstuntime;
            alarm[3]=0;
            alarm[4]=0;
            alarm[6]=0;
            alarm[7]=4;
            if (facing==0)
                sprite_index=spr_tasenscout_painleft;
            else
                sprite_index=spr_tasenscout_pain;
            image_index=0;
            image_single=-1;
            image_speed=0.5;
            }
        }
    }

with (obj_tasensoldier){
    if (distance_to_object(obj_iji)<500 && !dead && !golden){
        targetiji=300;
        if (angry==0 && (state==0 || state==1 || state==2))
            alarm[2]=1;
        if (angry==0){
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        alarm[5]=300;
        if (state<4 || state==6){
            takingpain=1;
            firingrocket=0;
            state=3;
            alarm[1]=0;
            alarm[2]=global.tempstuntime;
            alarm[3]=0;
            alarm[4]=0;
            alarm[6]=0;
            alarm[7]=4;
            if (facing==0)
                sprite_index=spr_tasensoldier_painleft;
            else
                sprite_index=spr_tasensoldier_pain;
            image_index=0;
            image_single=-1;
            image_speed=0.5;
            }
        }
    }

with (obj_tasencommander){
    if (distance_to_object(obj_iji)<500 && !nukeimmune && !dead){
        global.truce=0;
        targetiji=300;
        if (angry==0 && (state==0 || state==1))
            alarm[2]=1;
        if (angry==0){
            tempid=instance_create(x+6,y+16,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+16,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        alarm[5]=300;
        if (state<4 || state==6){
            takingpain=1;
            firingrocket=0;
            state=3;
            alarm[1]=0;
            alarm[2]=global.tempstuntime;
            alarm[3]=0;
            alarm[4]=0;
            alarm[6]=0;
            alarm[7]=4;
            if (facing==0)
                sprite_index=spr_tasencommander_painleft;
            else
                sprite_index=spr_tasencommander_pain;
            image_index=0;
            image_single=-1;
            image_speed=0.5;
            }
        }
    }

with (obj_tasenelite){
    if (distance_to_object(obj_iji)<500 && !nukeimmune && !dead){
        targetiji=300;
        if (angry==0){
            alarm[2]=1;
            tempid=instance_create(x+6,y+32,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+32,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        alarm[5]=300;
        takingpain=1;
        firingrocket=0;
        state=3;
        alarm[1]=0;
        alarm[2]=global.tempstuntime;
        alarm[3]=0;
        alarm[4]=0;
        alarm[6]=0;
        alarm[7]=4;
        if (facing==0)
            sprite_index=spr_tasenelite_painleft;
        else
            sprite_index=spr_tasenelite_pain;
        image_index=0;
        image_single=-1;
        image_speed=0.5;
        }
    }

with (obj_tasenshredder){
    if (distance_to_object(obj_iji)<500){
        alarm[5]=300;
        if (angry==0){
            alarm[2]=1;
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        targetiji=300;
        }
    }

with (obj_komatotrooper){
    if (distance_to_object(obj_iji)<500 && !dead){
        targetiji=300;
        if (angry==0 && (state==0 || state==1 || state==2))
            alarm[2]=1;
        if (angry==0){
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        alarm[5]=300;
        if (state<4 || state==6){
            takingpain=1;
            firingrocket=0;
            state=3;
            alarm[1]=0;
            alarm[2]=global.tempstuntime;
            alarm[3]=0;
            alarm[4]=0;
            alarm[6]=0;
            alarm[7]=4;
            if (facing==0)
                sprite_index=spr_komatotrooper_painleft;
            else
                sprite_index=spr_komatotrooper_pain;
            image_index=0;
            image_single=-1;
            image_speed=0.5;
            }
        }
    }

with (obj_komatoberserker){
    if (distance_to_object(obj_iji)<500 && !dead){
        targetiji=300;
        if (angry==0 && (state==0 || state==1))
            alarm[2]=1;
        if (angry==0){
            tempid=instance_create(x+6,y+12,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+12,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        alarm[5]=300;
        if (state<4 || state==6){
            takingpain=1;
            firingrocket=0;
            state=3;
            alarm[1]=0;
            alarm[2]=global.tempstuntime;
            alarm[3]=0;
            alarm[4]=0;
            alarm[6]=0;
            alarm[7]=4;
            if (facing==0)
                sprite_index=spr_komatoberserker_painleft;
            else
                sprite_index=spr_komatoberserker_pain;
            image_index=0;
            image_single=-1;
            image_speed=0.5;
            }
        }
    }

with (obj_komatoassassin){
    if (distance_to_object(obj_iji)<500 && visible)
        scr_assassinpain(1);
    }

with (obj_komatobeast){
    if (distance_to_object(obj_iji)<500){
        targetiji=300;
        if (angry==0)
            alarm[2]=1;
        if (angry==0){
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+6,y+8,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        angry=1;
        alarm[5]=300;
        if (state==0 || state==1 || state==2 || state==4){
            state=4;
            alarm[2]=global.tempstuntime;
            alarm[7]=4;
            if (facing==0)
                sprite_index=spr_komatobeast_painleft;
            else
                sprite_index=spr_komatobeast_pain;
            image_single=-1;
            image_index=0;
            image_speed=0.5;
            }
        }
    }

with (obj_komatoannihilator){
    if (!iosa){
        if (distance_to_object(obj_iji)<500){
            if (state!=10){
                targetiji=300;
                if (angry==0 && (state==0 || state==1)){
                    alarm[2]=1;
                    tempid=instance_create(x+50,y+100,obj_visionchecke)
                    tempid.direction=0;
                    tempid.speed=16;
                    tempid=instance_create(x+50,y+100,obj_visionchecke)
                    tempid.direction=180;
                    tempid.speed=16;
                    }
                angry=1;
                alarm[5]=300;
                }
            }
        }
    }

#define scr_station
//Use station
if (!place_meeting(x,y,obj_alliedenemy)){
if (sprite_index!=spr_station_blank && sprite_index!=spr_levelstation_blank && sprite_index!=spr_readpaper){

//It's a levelstation
if (sprite_index==spr_levelstation){
    global.levelstation=1;
    global.levelpoke=0;
    global.ignoreall=1;
    global.erasetop=0;
    global.ignorestation=120;
    global.refreshpoke=0;
    touchstation=1;
    scr_sound("glo_crackbegin");
    }

//It's not a levelstation
//Depracated, but still exist in the game
else{
    if (global.points>0){
           global.points-=1;
       if (global.facing==1)
           instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
       if (global.facing==0){
           tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
           tempid.image_index=5;
           }
    if (sprite_index == spr_station_health){
        global.ignorestation=60;
        global.erasetop=0;
        global.healthlevel+=1;
        global.topmessage="Health level "+string(global.healthlevel);
        scr_sound("glo_pickup2");
        if (!obj_iji.hasrebooted && !global.suddendeath)
            global.hp+=2;
        if (global.healthlevel==10){
            global.ignoremessagescroll=30;
            instance_activate_object(obj_station);
            with (obj_station){
                if (sprite_index==spr_station_health){
                    sprite_index=spr_station_blank;
                    type=0;
                    }
                }
            global.textid="specialtrait1";
            script_execute(scr_beginmessage);
            with (obj_messagetext)
                script_execute(scr_specialmessages);
            }
        }
    if (sprite_index == spr_station_attack){
        global.ignorestation=60;
        global.erasetop=0;
        global.attacklevel += 1;
        global.topmessage="Attack level "+string(global.attacklevel);
        scr_sound("glo_pickup2");
        if (global.attacklevel == 10){
            global.ignoremessagescroll=30;
            instance_activate_object(obj_station);
            with (obj_station){
                if (sprite_index==spr_station_attack){
                    sprite_index=spr_station_blank;
                    type=1;
                    }
                }
            global.textid="specialtrait2";
            script_execute(scr_beginmessage);
            with (obj_messagetext)
                script_execute(scr_specialmessages);
            }
        }
    if (sprite_index == spr_station_assimilate){
        global.ignorestation=60;
        global.erasetop=0;
        global.assimilatelevel += 1;
        global.topmessage="Assimilate level "+string(global.assimilatelevel);
        scr_sound("glo_pickup2");
        if (global.assimilatelevel == 10){
            global.ignoremessagescroll=30;
            instance_activate_object(obj_station);
            with (obj_station){
                if (sprite_index==spr_station_assimilate){
                    sprite_index=spr_station_blank;
                    type=2;
                    }
                }
            global.textid="specialtrait3";
            script_execute(scr_beginmessage);
            with (obj_messagetext)
                script_execute(scr_specialmessages);
            }
        }
    if (sprite_index == spr_station_strength){
        global.ignorestation=60;
        global.erasetop=0;
        global.strengthlevel += 1;
        global.topmessage="Strength level "+string(global.strengthlevel);
        scr_sound("glo_pickup2");
        if (global.strengthlevel == 10){
            global.ignoremessagescroll=30;
            instance_activate_object(obj_station);
            with (obj_station){
                if (sprite_index==spr_station_strength){
                    sprite_index=spr_station_blank;
                    type=3;
                    }
                }
            global.textid="specialtrait4";
            script_execute(scr_beginmessage);
            with (obj_messagetext)
                script_execute(scr_specialmessages);
            }
        }
    if (sprite_index == spr_station_crack){
        global.ignorestation=60;
        global.erasetop=0;
        global.cracklevel += 1;
        global.topmessage="Crack level "+string(global.cracklevel);
        scr_sound("glo_pickup2");
        if (global.cracklevel == 10){
            global.ignoremessagescroll=30;
            instance_activate_object(obj_station);
            with (obj_station){
                if (sprite_index==spr_station_crack){
                    sprite_index=spr_station_blank;
                    type=4;
                    }
                }
            global.textid="specialtrait5";
            script_execute(scr_beginmessage);
            with (obj_messagetext)
                script_execute(scr_specialmessages);
            }
        }
    if (sprite_index == spr_station_tasen){
        global.ignorestation=60;
        global.erasetop=0;
        global.tasenlevel += 1;
        global.topmessage="Tasen level "+string(global.tasenlevel);
        scr_sound("glo_pickup2");
        if (global.tasenlevel == 10){
            global.ignoremessagescroll=30;
            instance_activate_object(obj_station);
            with (obj_station){
                if (sprite_index==spr_station_tasen){
                    sprite_index=spr_station_blank;
                    type=5;
                    }
                }
            global.textid="specialtrait6";
            script_execute(scr_beginmessage);
            with (obj_messagetext)
                script_execute(scr_specialmessages);
            }
        }
    if (sprite_index == spr_station_komato){
        global.ignorestation=60;
        global.erasetop=0;
        global.komatolevel += 1;
        global.topmessage="Komato level "+string(global.komatolevel);
        scr_sound("glo_pickup2");
        if (global.komatolevel == 10){
            global.ignoremessagescroll=30;
            instance_activate_object(obj_station);
            with (obj_station){
                if (sprite_index==spr_station_komato){
                    sprite_index=spr_station_blank;
                    type=6;
                    }
                }
            global.textid="specialtrait7";
            script_execute(scr_beginmessage);
            with (obj_messagetext)
                script_execute(scr_specialmessages);
            }
        }
    }
    else{
        global.ignorestation=60;
        global.erasetop=0;
        global.topmessage="You do not have any Points to spend";
        scr_sound("glo_crackfail");
        }
    }
}
}
#define scr_readstation
//Display station type
if (!global.levelstation && (global.ignorestation==0 || other.sprite_index==spr_readpaper) && global.dead==0 && !shredder){
if (other.sprite_index=spr_readpaper){
    global.erasetop=0;
    global.topmessage=other.text;
    }
else if (other.sprite_index=spr_station_health){
    global.erasetop=0;
    global.topmessage="Cyborg station: Health (raise maximum HP)";
    }
else if (other.sprite_index=spr_station_attack){
    global.erasetop=0;
    global.topmessage="Cyborg station: Attack (raise power of all Nanoweaponry)";
    }
else if (other.sprite_index=spr_station_assimilate){
    global.erasetop=0;
    global.topmessage="Cyborg station: Assimilate (increase ammo cap, repair more armor)";
    }
else if (other.sprite_index=spr_station_strength){
    global.erasetop=0;
    global.topmessage="Cyborg station: Strength (raise power of kick attacks)";
    }
else if (other.sprite_index=spr_station_crack){
    global.erasetop=0;
    global.topmessage="Cyborg station: Crack (crack more secure Nanotechnology)";
    }
else if (other.sprite_index=spr_station_tasen){
    global.erasetop=0;
    global.topmessage="Cyborg station: Tasen (use more advanced Tasen Nanoweaponry)";
    }
else if (other.sprite_index=spr_station_komato){
    global.erasetop=0;
    global.topmessage="Cyborg station: Komato (use more advanced Komato Nanoweaponry)";
    }
else if (other.sprite_index=spr_levelstation){
    if (string_copy(global.topmessage,1,6)!="Nano +"){
        global.erasetop=0;
        global.topmessage="Use this Cyborg Station ("+chr(global.usekey)+" key) to distribute Points";
        }
    }
}
#define scr_firesprite
if (shredder){
    if (global.facing==0){
        if (global.weapon==8)
            xadjust=-30;
        else if (global.weapon==5 || global.weapon==13)
            xadjust=-30;
        else
            xadjust=-30+hspeed;
        yadjust=-25+vspeed;
        shredderadjust=-30;
        }
    else{
        if (global.weapon==8)
            xadjust=22;
        else if (global.weapon==5 || global.weapon==13)
            xadjust=22;
        else
            xadjust=22+hspeed;
        yadjust=-25+vspeed;
        shredderadjust=-30;
        }
    }

else{
    shredderadjust=0;
    if (global.state==2){
        alarm[4]=4;
        xadjust=0;
        if (global.weapon==8){
            yadjust=14;
            shredderadjust=14;
            }
        else{
            if (!place_free(x,y-abs(vspeed)-4)){
                yadjust=14;
                shredderadjust=14;
                }
            else{
                yadjust=14+vspeed;
                shredderadjust=14+vspeed;
                }
            }
        }
    else if (global.state==3 || global.state==5){
        alarm[4]=4;
        xadjust=0;
        yadjust=30;
        shredderadjust=30;
        }
    else if (global.state==1){
        if (running==0){
            if (global.facing==0)
                sprite_index=spr_fireleft;
            else
                sprite_index=spr_fire;
            alarm[4]=4;
            xadjust=0;
            yadjust=0;
            }
        if (running==1){
            if (global.facing==0){
                sprite_index=spr_runfireleft;
                xadjust=-15;
                }
            else{
                sprite_index=spr_runfire;
                xadjust=13;
                }
            alarm[4]=8;
            yadjust=4;
            }
        }
    }
#define scr_cfisfire
{
//CFIS fire
while (stuck == 0 && distance < 288){
distance += 12;
if (global.facing == 0){
    if (place_free(x-12, y) && !place_meeting(x-12,y,obj_screen) && !place_meeting(x-12,y,obj_leetbox)){
        x-=12;
        script_execute(scr_cfisattack);
        }
    else{
        stuck = 1;
        move_contact_solid(180,12);
        }
    }
if (global.facing == 1){
    if (place_free(x+12, y) && !place_meeting(x+12,y,obj_screen) && !place_meeting(x+12,y,obj_leetbox)){
        x+=12;
        script_execute(scr_cfisattack);
        }
    else{
        stuck = 1;
        move_contact_solid(0,12);
        }
    }
}
}
#define scr_cfisattack
check=(collision_point(x,y,obj_turret,0,0));
if (check>0){
    if (!check.cfised && check.visible)
        check.armor-=30*global.atmult;
    if (!check.angry && check.sprite_index==spr_turret)
        check.alarm[2]=15;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[3]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_skysmasher,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    with (check)
        scr_smasherwake();
    check.cfised=1;
    }
check=(collision_point(x,y,obj_tasenscout,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry && (check.state==0 || check.state==1 || check.state==2))
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_tasensoldier,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry && (check.state==0 || check.state==1 || check.state==2))
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_tasencommander,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry && (check.state==0 || check.state==1))
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+16,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+16,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_tasenelite,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry)
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+32,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+32,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_tasenshredder,0,0));
if (check>0){
    if (!check.cfised)
        check.shredderhp-=(20*(1+(global.attacklevel/10)));
    if (!check.angry)
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_komatotrooper,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry && (check.state==0 || check.state==1 || check.state==2))
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_komatoberserker,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry && (check.state==0 || check.state==1))
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_komatoassassin,0,0));
if (check>0){
    if (!check.cfised && check.asha2){
        with (check){
            cfised=1;
            scr_assassinpain(1);
            }
        }
    else if (!check.asha2){
        if (!check.cfised)
            check.armor-=30*global.atmult;
        check.cfised=1;
        check.ijikill=1;
        if (check.angry==0){
            check.alarm[2]=random(60-(global.difficulty*20))+30-(global.difficulty*10);
            check.angry=1;
            check.visible=0;
            instance_create(check.bbox_left+((check.bbox_right-check.bbox_left)/2), check.bbox_top+((check.bbox_bottom-check.bbox_top)/2), obj_megaflash);
            }
        }
    }
check=(collision_point(x,y,obj_komatobeast,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry)
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+6,check.y+8,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    check.angry=1;
    check.targetiji=300;
    check.alarm[5]=300;
    check.cfised=1;
    check.ijikill=1;
    }
check=(collision_point(x,y,obj_komatoannihilator,0,0));
if (check>0){
    if (!check.cfised)
        check.armor-=30*global.atmult;
    if (!check.angry && (check.state==0 || check.state==1))
        check.alarm[2]=1;
    if (check.angry==0){
        tempid=instance_create(check.x+50,check.y+100,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(check.x+50,check.y+100,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    if (check.state!=10){
        check.angry=1;
        check.targetiji=300;
        check.alarm[5]=300;
        }
    check.cfised=1;
    check.ijikill=1;
    }
if (global.sector==13){
    check=(collision_point(x,y,obj_proxima,0,0));
    if (check>0){
        if (!check.cfised)
            check.armor-=30*global.atmult;
        check.cfised=1;
        }
    }
if (global.sector==14){
    check=(collision_point(x,y,obj_iosa,0,0));
    if (check>0){
        if (!check.cfised)
            check.armor-=30*global.atmult;
        check.cfised=1;
        }
    }
if (global.sector==0){
    check=(collision_point(x,y,obj_annihilatorbeta,0,0));
    if (check>0){
        if (!check.cfised)
            check.armor-=30*global.atmult;
        check.cfised=1;
        }
    check=(collision_point(x,y,obj_xcore,0,0));
    if (check>0)
        check.hp=0;
    }
check=(collision_point(x,y,obj_glass,0,0));
if (check>0){
    with (check) script_execute(scr_glassbreak,8,global.facing+1);
    if (global.facing==0) x+=12;
    else x-=12;
    }
if (global.sector==15){
    check=(collision_point(x,y,obj_tor,0,0));
    if (check>0){
        if (!check.cfised && check.vulnerable){
            check.cfised=1;
            check.armor-=30*global.atmult;
            }
        }
    }

#define scr_cfisdraw
//Draw the effect for the CFIS
ran=8; //Magnitude of main beam chaos
mini=250; //Magnitude of lesser beam

if (obj_iji.shredder)
    yadjusts=-30;

if (x<(obj_iji.x+6)){
    length = (obj_iji.x-2)-x;
    node1x = (x+(length/6))-(length/ran)+random(length/(ran/2));
    node1y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node2x = (x+2*(length/6))-(length/ran)+random(length/(ran/2));
    node2y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node3x = (x+3*(length/6))-(length/ran)+random(length/(ran/2));
    node3y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node4x = (x+4*(length/6))-(length/ran)+random(length/(ran/2));
    node4y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node5x = (x+5*(length/6))-(length/ran)+random(length/(ran/2));
    node5y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    }
else{
    length = x-(obj_iji.x+16);
    node1x = (x-(length/6))-(length/ran)+random(length/(ran/2));
    node1y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node2x = (x-2*(length/6))-(length/ran)+random(length/(ran/2));
    node2y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node3x = (x-3*(length/6))-(length/ran)+random(length/(ran/2));
    node3y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node4x = (x-4*(length/6))-(length/ran)+random(length/(ran/2));
    node4y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    node5x = (x-5*(length/6))-(length/ran)+random(length/(ran/2));
    node5y = (obj_iji.y+13+yadjusts)-(length/ran)+random(length/(ran/2));
    }
draw_set_color(make_color_rgb(220,220,0));
if (!global.specialbake){
draw_line_width(x,y-1,node1x,node1y,5);
draw_line_width(node1x,node1y,node2x,node2y,5);
draw_line_width(node2x,node2y,node3x,node3y,5);
draw_line_width(node3x,node3y,node4x,node4y,5);
draw_line_width(node4x,node4y,node5x,node5y,5);
if (global.facing==0){
    draw_line_width(node5x,node5y,(obj_iji.x-2+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),5);
    }
if (global.facing==1){
    draw_line_width(node5x,node5y,(obj_iji.x+16+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),5);
    }
}
draw_set_color(c_white);
draw_line_width(x,y-1,node1x,node1y,3);
draw_line_width(node1x,node1y,node2x,node2y,3);
draw_line_width(node2x,node2y,node3x,node3y,3);
draw_line_width(node3x,node3y,node4x,node4y,3);
draw_line_width(node4x,node4y,node5x,node5y,3);
if (global.facing==0){
    draw_line_width(node5x,node5y,(obj_iji.x-2+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),3);
    }
if (global.facing==1){
    draw_line_width(node5x,node5y,(obj_iji.x+16+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),3);
    }

if (!global.specialbake){
//Shockwave lines
newlength=length/40;
if (global.facing==0){
    draw_line((obj_iji.x-2+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),(obj_iji.x-(1*(newlength))+obj_iji.xadjust),node5y-(mini/6));
    draw_line((obj_iji.x-(1*(newlength))+obj_iji.xadjust),node5y-(mini/6),(obj_iji.x-(2*(newlength))+obj_iji.xadjust),node4y-(mini/5));
    draw_line((obj_iji.x-(2*(newlength))+obj_iji.xadjust),node4y-(mini/5),(obj_iji.x-(3*(newlength))+obj_iji.xadjust),node3y-(mini/4));
    draw_line((obj_iji.x-(3*(newlength))+obj_iji.xadjust),node3y-(mini/4),(obj_iji.x-(4*(newlength))+obj_iji.xadjust),node2y-(mini/5));
    draw_line((obj_iji.x-2+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),(obj_iji.x-(1*(newlength))+obj_iji.xadjust),node5y+(mini/6));
    draw_line((obj_iji.x-(1*(newlength))+obj_iji.xadjust),node5y+(mini/6),(obj_iji.x-(2*(newlength))+obj_iji.xadjust),node4y+(mini/5));
    draw_line((obj_iji.x-(2*(newlength))+obj_iji.xadjust),node4y+(mini/5),(obj_iji.x-(3*(newlength))+obj_iji.xadjust),node3y+(mini/4));
    draw_line((obj_iji.x-(3*(newlength))+obj_iji.xadjust),node3y+(mini/4),(obj_iji.x-(4*(newlength))+obj_iji.xadjust),node2y+(mini/5));
    }
if (global.facing==1){
    draw_line((obj_iji.x+16+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),(obj_iji.x+16+(1*(newlength))+obj_iji.xadjust),node5y-(mini/6));
    draw_line((obj_iji.x+16+(1*(newlength))+obj_iji.xadjust),node5y-(mini/6),(obj_iji.x+16+(2*(newlength))+obj_iji.xadjust),node4y-(mini/5));
    draw_line((obj_iji.x+16+(2*(newlength))+obj_iji.xadjust),node4y-(mini/5),(obj_iji.x+16+(3*(newlength))+obj_iji.xadjust),node3y-(mini/4));
    draw_line((obj_iji.x+16+(3*(newlength))+obj_iji.xadjust),node3y-(mini/4),(obj_iji.x+16+(4*(newlength))+obj_iji.xadjust),node2y-(mini/5));
    draw_line((obj_iji.x+16+obj_iji.xadjust),(obj_iji.y+13+obj_iji.yadjust),(obj_iji.x+16+(1*(newlength))+obj_iji.xadjust),node5y+(mini/6));
    draw_line((obj_iji.x+16+(1*(newlength))+obj_iji.xadjust),node5y+(mini/6),(obj_iji.x+16+(2*(newlength))+obj_iji.xadjust),node4y+(mini/5));
    draw_line((obj_iji.x+16+(2*(newlength))+obj_iji.xadjust),node4y+(mini/5),(obj_iji.x+16+(3*(newlength))+obj_iji.xadjust),node3y+(mini/4));
    draw_line((obj_iji.x+16+(3*(newlength))+obj_iji.xadjust),node3y+(mini/4),(obj_iji.x+16+(4*(newlength))+obj_iji.xadjust),node2y+(mini/5));
    }
    //Sparks
global.cfissparkcycle=global.cfissparkcycle+1;
if (global.cfissparkcycle==6){
    global.cfissparkcycle=0;
    instance_create(node1x,node1y,obj_cfisspark);
    instance_create(node2x,node2y,obj_cfisspark);
    instance_create(node3x,node3y,obj_cfisspark);
    instance_create(node4x,node4y,obj_cfisspark);
    instance_create(node5x,node5y,obj_cfisspark);
    instance_create(x,y,obj_cfisspark);
    }
    //Flash
for (i=0; i<3; i+=1){
    if (place_free(x-2,y)==0 || place_free(x+2,y)==0){
        randx=random(120)-60;
        randy=random(120)-60;
        draw_line(x,y,x+randx,y+randy);
        }
    }
}
#define scr_plasmatrace
//Plasma trace
if (place_free(x,y)==0)
    distance=2001;
puff=3;
if (!global.specialbake){
    tempid=instance_create(x,y,obj_shockshell);
    if ((!obj_sabot.annihilatorbeta && global.facing==1) || (obj_sabot.annihilatorbeta && obj_annihilatorbeta.facing==1))
        tempid.hspeed=-tempid.hspeed;
    }
while(distance<2000){
if (distance==8)instance_create(x,y,obj_plasma2);
if (!obj_sabot.annihilatorbeta){
    if (global.facing==0){
        if (place_free(x-8, y) || place_meeting(x-8, y,obj_meta)==1)
            script_execute(scr_plasmaattack);
        else distance=2000;
        x-=8;
        }
    if (global.facing==1){
        if (place_free(x+8, y) || place_meeting(x+8, y,obj_meta)==1)
            script_execute(scr_plasmaattack);
        else distance=2000;
        x+=8;
        }
    }
else{
    if (obj_annihilatorbeta.facing==0){
        if (place_free(x-8, y) || place_meeting(x-8, y,obj_meta)==1)
            script_execute(scr_plasmaattack);
        else distance=2000;
        x-=8;
        }
    if (obj_annihilatorbeta.facing==1){
        if (place_free(x+8, y) || place_meeting(x+8, y,obj_meta)==1)
            script_execute(scr_plasmaattack);
        else distance=2000;
        x+=8;
        }
    }
puff-=1;
if (puff==0){
    puff=10;
    instance_create(x,y,obj_plasma3);
    }
else if (obj_sabot.annihilatorbeta && ((distance>0 && obj_annihilatorbeta.facing==1) || (distance>8 && obj_annihilatorbeta.facing==0)))
    instance_create(x,y,obj_plasma);
else if (!obj_sabot.annihilatorbeta && ((distance>0 && global.facing==1) || (distance>8 && global.facing==0)))
    instance_create(x,y,obj_plasma);
distance += 8;
}
instance_create(x,y,obj_shockballexplosion);
instance_create(x,y,obj_shockballexplosion);
instance_create(x,y,obj_shockballexplosion);
with (obj_plasma)
    scr_outside();
with (obj_plasma2)
    scr_outside();
with (obj_plasma3)
    scr_outside();
with (obj_shockballexplosion)
    scr_outside();
with (obj_shakescreen){
    metcyc=0;
    if (global.sector!=11 && global.sector!=12 && global.sector!=13 && global.sector!=14 && global.sector!=15)
        scr_methodx();
    else
        instance_activate_all();
    }
#define scr_plasmaattack
check = (collision_point(x,y,obj_turret,0,0));
if (check>0 && check.visible){
    with (check){
        armor=0;
        ijikill=1;
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

if (global.sector==0 || room==rom_sector15){
check = (collision_point(x,y,obj_skysmasher,0,0));
if (check>0){
    with (check)
        armor=-100;
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }
}

check = (collision_point(x,y,obj_tasenscout,0,0));
if (check > 0){
    with (check){
        hp-=3*global.atmult;
        ijikill=1;
        script_execute(scr_enemyknockdown,global.facing+1,12+random(3));
        angry = 1;
        targetiji=300;
        alarm[5] = 300;
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_tasensoldier,0,0));
if (check > 0){
    with (check){
        hp-=3*global.atmult;
        ijikill=1;
        script_execute(scr_enemyknockdown,global.facing+1,12+random(3));
        angry = 1;
        targetiji=300;
        alarm[5] = 300;
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_tasencommander,0,0));
if (check > 0){
    with (check){
        hp-=3*global.atmult;
        ijikill=1;
        script_execute(scr_enemyknockdown,global.facing+1,12+random(3));
        angry = 1;
        targetiji=300;
        alarm[5] = 300;
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_tasenelite,0,0));
if (check > 0){
    with (check){
        ijikill=1;
        hp-=3*global.atmult;
        if (!angry)
            alarm[2]=1;
        script_execute(scr_elitepain);
        angry = 1;
        targetiji=300;
        alarm[5] = 300;
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_tasenshredder,0,0));
if (check > 0){
    with (check){
        ijikill=1;
        shredderhp-=300;
        if (shredderhp>0){
            tempid=instance_create(x,y-30,obj_tasensoldier);
            tempid.hp=0;
            tempid.dead=1;
            tempid.ijikill=1;
            if (global.facing==0){
                with (tempid)
                    script_execute(scr_enemyknockdown,1,12+random(3));
                }
            else{
                with (tempid)
                    script_execute(scr_enemyknockdown,2,12+random(3));
                }
            tempid=instance_create(floor(x),floor(y)-1,obj_emptyshredder);
            tempid.shredderhp=shredderhp;
            if (sprite_index==spr_tasenshredder_basicleft)
                tempid.sprite_index=spr_tasenshredder_emptyleft;
            else
            tempid.sprite_index=spr_tasenshredder_empty;
            tempid.facing=facing;
            tempid.hspeed=hspeed;
            tempid.vspeed=vspeed;
            instance_destroy();
            }
        }
    if (instance_exists(check))
        instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_komatotrooper,0,0));
if (check > 0){
    with (check){
        hp=0;
        ijikill=1;
        script_execute(scr_enemyknockdown,global.facing+1,12+random(3));
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_komatoberserker,0,0));
if (check > 0){
    with (check){
        ijikill=1;
        if (obj_sabot.annihilatorbeta){
            hp-=3;
            target=obj_annihilatorbeta.id;
            targetrival=300;
            targetiji=0;
            killtype=3;
            script_execute(scr_enemyknockdown,obj_annihilatorbeta.facing+1,12+random(3));
            }
        else{
            hp-=3*global.atmult;
            targetiji=300;
            script_execute(scr_enemyknockdown,global.facing+1,12+random(3));
            }
        angry = 1;
        alarm[5] = 300;
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_komatoassassin,0,0));
if (check > 0){
    with (check){
        ijikill=1;
        randomplasma=random(1);
        if (randomplasma<0.3+(0.3*global.difficulty) || asha2)
            scr_assassinpain(1);
        else{
            hp-=3*global.atmult;
            scr_assassinpain(0);
            }
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_komatobeast,0,0));
if (check > 0){
    with (check){
        hp=0;
        ijikill=1;
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_komatoannihilator,0,0));
if (check > 0){
    with (check){
        hp-=3*global.atmult;
        if (!angry && (state==0 || state==1))
            alarm[2]=1;
        ijikill=1;
        script_execute(scr_annihilatorpain);
        if (state!=10){
            angry = 1;
            targetiji=300;
            alarm[5] = 300;
            }
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

if (global.sector==13){
check = (collision_point(x,y,obj_proxima,0,0));
if (check > 0){
    with (check){
        //scr_proximatalk(0);
        hp-=3*global.atmult;
        if (global.facing==0)
            hs=-(12+random(3));
        else
            hs=12+random(3);
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }
}

if (global.sector==14){
check = (collision_point(x,y,obj_iosa,0,0));
if (check > 0){
    with (check){
        hp-=3*global.atmult;
        script_execute(scr_annihilatorpain);
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }
}

if (global.sector==0){
check = (collision_point(x,y,obj_annihilatorbeta,0,0));
if (check > 0){
    with (check){
        hp-=3*global.atmult;
        script_execute(scr_betaannihilatorpain);
        }
    instance_deactivate_object(check);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }
}

check = (collision_point(x,y,obj_glass,0,0));
if (check > 0){
    with (check) script_execute(scr_glassbreak,15,global.facing+1);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

check = (collision_point(x,y,obj_meta,0,0));
if (check > 0){
    with (check) script_execute(scr_metabreak,15,global.facing+1);
    puff+=1;
    distance-=8;
    if (global.facing == 0) x+=8;
    else x-=8;
    }

#define scr_thor
//Velocithor
while(distance<850){
distance+=16;
if (distance==16)
    instance_create(x,y,obj_thor2);
if (global.facing==0)
    x-=16;
if (global.facing==1)
    x+=16;
if (distance>16){
    instance_create(x,y,obj_thor);
    repeat(2) instance_create(x-32+random(64),y-24+random(46),obj_thorsmoke);
    }
}
instance_destroy();
#define scr_turretkick
//Argument0 is direction
//Argument1 is precalculated force
if (!dead){
    if (armor>60)
        armor=60;
    dead=1;
    countdown=21;
    tempid=instance_create(x+6,y+8,obj_visionchecke)
    tempid.direction=0;
    tempid.speed=16;
    tempid=instance_create(x+6,y+8,obj_visionchecke)
    tempid.direction=180;
    tempid.speed=16;
    angry=0;
    state=0;
    machcycle=0;
    alarm[1]=0;
    alarm[2]=0;
    alarm[3]=0;
    alarm[4]=0;
    alarm[5]=0;
    alarm[6]=0;
    alarm[8]=0;
    image_single=-1;
    image_speed=0.6;
    image_index=0;
    speed=argument1;
    if (argument1==0){
        if (obj_iji.shredder)
            speed=abs(obj_iji.hspeed)+4;
        else
            speed=global.strengthlevel/2+11;
        }
    gravity=0.7;
    gravity_direction=270;
    (instance_create(x,y,obj_turretpole)).image_single=facing;
    
    if (argument0==1){
        sprite_index=spr_turretheadright;
        direction=160;
        if (global.specialbake==0) maximum=25;
        else maximum=120;
        if (instance_number(obj_scrapwhite)<maximum){
            repeat(10){
                tempid=instance_create(x+random(32),y+16+random(28),obj_scrapwhite);
                tempid.speed=random((global.strengthlevel+2)/2)+((global.strengthlevel+2)/2);
                tempid.direction=random(140)+60;
                }
            }
        }
    else if (argument0==2){
        sprite_index=spr_turretheadleft;
        direction=20;
        if (global.specialbake==0) maximum=25;
        else maximum=120;
        if (instance_number(obj_scrapwhite)<maximum){
            repeat(10){
                tempid=instance_create(x+random(32),y+16+random(28),obj_scrapwhite);
                tempid.speed=random((global.strengthlevel+2)/2)+((global.strengthlevel+2)/2);
                tempid.direction=random(140)-20;
                }
            }
        }
    
    if (argument0==0){
        if (global.facing==0){
            sprite_index=spr_turretheadright;
            direction=160;
            if (global.specialbake==0) maximum=25;
            else maximum=120;
            if (instance_number(obj_scrapwhite)<maximum){
                repeat(10){
                    tempid=instance_create(x+random(32),y+16+random(28),obj_scrapwhite);
                    tempid.speed=random((global.strengthlevel+2)/2)+((global.strengthlevel+2)/2);
                    tempid.direction=random(140)+60;
                    }
                }
            }
        else{
            sprite_index=spr_turretheadleft;
            direction=20;
            if (global.specialbake==0) maximum=25;
            else maximum=120;
            if (instance_number(obj_scrapwhite)<maximum){
                repeat(10){
                    tempid=instance_create(x+random(32),y+16+random(28),obj_scrapwhite);
                    tempid.speed=random((global.strengthlevel+2)/2)+((global.strengthlevel+2)/2);
                    tempid.direction=random(140)-20;
                    }
                }
            }
        }
    }
else{
    if (place_free(x,y-3))
        y-=3;
    if (argument0==0){
        if (global.facing==0)
            direction=150;
        else
            direction=30;
        }
    else if (argument0==1)
            direction=150;
    else if (argument0==2)
            direction=30;
    if (!place_free(x-4,y-16))
        direction=30;
    if (!place_free(x+4,y-16))
        direction=150;
    speed=global.strengthlevel/2+11;
    image_speed=1;
    countdown=21;
    }
#define scr_shredderstep
temphspeed=hspeed;
//Drive
if (keyboard_check(vk_left) && !goingright && !global.ignoreall){
    hspeed-=1.49;
    goingleft=1;
    global.facing=0;
    }
if (keyboard_check(vk_right) && !goingleft && !global.ignoreall){
    hspeed+=1.49;
    goingright=1;
    global.facing=1;
    }
if (!keyboard_check(vk_left))
    goingleft=0;
if (!keyboard_check(vk_right))
    goingright=0;

//Slow down
if (!goingleft && !goingright && !place_free(x,y+1)){
    if (hspeed<-1)
        hspeed+=0.4;
    if (hspeed>1)
        hspeed-=0.4;
    if (hspeed>=-1 && hspeed<=1)
        hspeed=0;
    }

//Limit speed
if (hspeed<-18)
    hspeed=-18;
if (hspeed>18)
    hspeed=18;


//Fall
if (place_free(x,y+1)){
    gravity=0.7;
    gravity_direction=270;
    if (place_free(x+hspeed,y+vspeed+2)){
        if (place_free(x+hspeed,y+vspeed-2)){
            donothing=1;
            }
        else if (place_free(x+hspeed,y+vspeed+12)){
            x-=hspeed;
            if (hspeed<0)
                move_contact_solid(180,32)
            else
                move_contact_solid(0,32)
            hspeed*=-0.5;
            if (abs(hspeed)<8)
                hspeed=0;
            }
        }
    else if (place_free(x+hspeed,y+vspeed+12)){
        x-=hspeed;
        if (hspeed<0)
            move_contact_solid(180,32)
        else
            move_contact_solid(0,32)
        hspeed*=-0.5;
        if (abs(hspeed)<8)
            hspeed=0;
        }
    }
if (vspeed>18)
    vspeed=18;

//Travel up slopes
if (hspeed<0 && place_meeting(x+hspeed-2,y+1,obj_sloper) && place_free(x+hspeed-2,y-24)){
    y-=10;
    move_contact_solid(270,32);
    }
else if (hspeed>0 && place_meeting(x+hspeed+2,y+1,obj_slopel) && place_free(x+hspeed+2,y-24)){
    y-=10;
    move_contact_solid(270,32);
    }

//Travel down slopes
else if (hspeed<0 && place_meeting(x,y+16,obj_slopel)){
    move_contact_solid(270,32);
    vspeed=0;
    gravity=0;
    }
else if (hspeed>0 && place_meeting(x,y+16,obj_sloper)){
    move_contact_solid(270,32);
    vspeed=0;
    gravity=0;
    }

//Bounce on walls
else if (hspeed<0 && !place_free(x+hspeed-2,y)){
    if (!place_meeting(x+hspeed-8,y,obj_meta) && !place_meeting(x+hspeed-8,y,obj_door) && !place_meeting(x+hspeed-8,y,obj_glass)){
        hspeed*=-0.5;
        if (hspeed<8){
            move_contact_solid(180,32)
            hspeed=0;
            }
        else
            scr_sound("glo_land");
        }
    }
else if (hspeed>0 && !place_free(x+hspeed+2,y)){
    if (!place_meeting(x+hspeed+8,y,obj_meta) && !place_meeting(x+hspeed+8,y,obj_door) && !place_meeting(x+hspeed+8,y,obj_glass)){
        hspeed*=-0.5;
        if (hspeed>-8){
            move_contact_solid(0,32)
            hspeed=0;
            }
        else
            scr_sound("glo_land");
        }
    }

//Land
if (hspeed==0 && !place_free(x,y+vspeed+2)){
    vspeed=0;
    gravity=0;
    move_contact_solid(270,32);
    }
if (vspeed>0){
    if (hspeed<0){
        if (!place_free(x+hspeed-2,y)){
            hspeed=0;
            move_contact_solid(180,32);
            }
        if (!place_free(x,y+vspeed+2)){
            vspeed=0;
            gravity=0;
            move_contact_solid(270,32);
            }
        }
    if (hspeed>0){
        if (!place_free(x+hspeed+2,y)){
            hspeed=0;
            move_contact_solid(0,32);
            }
        if (!place_free(x,y+vspeed+2)){
            vspeed=0;
            gravity=0;
            move_contact_solid(270,32);
            }
        }
    }


//Jump
if(hspeed<-10 && !place_meeting(x-140,y,obj_sloper) && place_meeting(x-46,y+4,obj_sloper))
    vspeed=-abs(hspeed)/2;
if(hspeed>10 && !place_meeting(x+140,y,obj_slopel) && place_meeting(x+46,y+4,obj_slopel))
    vspeed=-abs(hspeed)/2;
    
//Animate
if (global.facing==0 && image_index>=7 && sprite_index==spr_tasenshredder_basiciji){
    image_index=0;
    sprite_index=spr_tasenshredder_basicijileft;
    }
if (global.facing==1 && image_index>=7 && sprite_index==spr_tasenshredder_basicijileft){
    image_index=0;
    sprite_index=spr_tasenshredder_basiciji;
    }

//Stop animations
if (image_index>7)
    image_index=7;

//Fix
if (place_meeting(x,y+16,obj_slopel) || place_meeting(x,y+16,obj_sloper)){
if ((hspeed<1 && temphspeed>4) || (hspeed>-1 && temphspeed<-4))
        hspeed=temphspeed;
    }
if (place_meeting(x,y,obj_block) && !place_meeting(x,y,obj_meta)){
    if (place_free(x-4,y))
        x-=4;
    else if (place_free(x+4,y))
        x+=4;
    else if (place_free(y+5,y))
        y+=5;
    move_outside_solid(90,32);
    }

//Shredder damaged
if (shredderhp<500)
    ssmokecyc+=1;
if (shredderhp<250)
    ssmokecyc+=2;
if (ssmokecyc>=10){
    ssmokecyc=0;
    instance_create(x-40+random(80),y-20+random(40),obj_bigsmoke);
    }

#define scr_revive
//Resurrect from checkpoint
noliftride=4;
if (global.sector==7){
    instance_activate_object(obj_trigger);
    with (obj_trigger){
        if (textid="chat76")
            instance_destroy();
        }
    }
instance_activate_object(obj_checkpoint);
with (obj_checkpoint){
    image_single=0;
    state=2;
    global.erasetop=0;
    global.topmessage="CHECKPOINT USED FOR ONE-TIME REVIVAL";
    global.ignorestation=60;
    }
with (obj_komatoassassin){
    if (asha2){
        obj_sabot.asha2hp=hp;
        instance_destroy();
        obj_asha2trigger.rematch+=1;
        with (obj_asha2bar)
            instance_destroy();
        with (obj_asha2flash)
            instance_destroy();
        instance_create(6112,2944,obj_xtrigger);
        }
    else if (activated)
        instance_destroy();
    }
//Adjust music for Asha2 fight
if (room==rom_sectorx && obj_sabot.music!="mus_sec5"){
    with (obj_sabot)
        scr_music("mus_sec5");
    }
obj_sabot.checkfixw=4;
with (obj_iji){
    scr_sound("glo_teleport");
    deathscreamed=0;
    global.armor=100;
    global.hp=global.healthlevel*2;
    if (global.suddendeath)
        global.hp=1;
    global.facing=1;
    y-=30;
    sprite_index=spr_basic;
    global.state=1;
    dest=999;
    alarm[0]=0;
    alarm[1]=0;
    alarm[2]=0;
    alarm[3]=0;
    alarm[4]=0;
    alarm[5]=0;
    alarm[6]=0;
    alarm[7]=90;
    recovering=1;
    image_single=-1;
    image_speed=0.5;
    global.ignoreall=0;
    if (overloadtime>1)
        overloadtime=1;
    firing=0;
    goingleft=0;
    goingright=0;
    pressjump=0;
    running=0;
    goingleft=0;
    goingright=0;
    ignoredown=0;
    switchingpose=0;
    falldistance=0;
    gravity=0;
    speed=0;
    reloader=0;
    reloading=0;
    }
with (obj_sabot){
    faceadjust=0;
    shredderx=0;
    shreddery=0;
    shreddery2=0;
    climbx=0;
    climby=0;
    knockcycle=0;
    instance_create(x,y,obj_whiteflash2);
    }

with (obj_nanoflash)
    instance_destroy();
obj_sabot.alarm[3]=1;
obj_sabot.alarm[4]=3;
obj_sabot.ignoresmooth=1;

#define scr_techeffect
for (i=0;i<20;i+=1){
tempid=instance_create(x+cos(i*18)*60, y+sin(i*18)*60, obj_cfisspark);
tempid.direction=point_direction(tempid.x,tempid.y,obj_iji.x+6,obj_iji.y+15)+270;
if (i mod 2==0)
    tempid.speed=8;
else
    tempid.speed=4;
}
#define scr_putstain
//argument0 is dir
//0 = random
//1 = left
//2 = right

if (!global.noblood && global.hp<=0 && overload!=6 && obj_checkpoint.state!=1 && room!=rom_sector12){
    repeat(2){
        stainorigx=bbox_left+(bbox_right-bbox_left)/2;
        stainorigy=bbox_top+(bbox_bottom-bbox_top)/2-16;
        stainfacing=floor(random(2));
        if (argument0==1)
            stainfacing=1;
        else if (argument0==2)
            stainfacing=0;
        stainimg=floor(random(2));
        staindir=-30+random(60)+stainfacing*180;
        staindist=16+random(48);
        stainfinalx=stainorigx+cos(degtorad(staindir))*staindist;
        stainfinaly=stainorigy-sin(degtorad(staindir))*staindist;
        stainfinalx2=stainorigx+cos(degtorad(staindir))*staindist/2;
        stainfinaly2=stainorigy-sin(degtorad(staindir))*staindist/2;
        
        stainid=instance_create(stainfinalx,stainfinaly,obj_redstain);
        stainid.checkx=stainfinalx2;
        stainid.checky=stainfinaly2;
        if (staindir<6 || staindir>=354)
            stainid.image_single=7;
        else if (staindir>=342)
            stainid.image_single=8;
        else if (staindir>=330-5)
            stainid.image_single=9;
        else if (staindir<18)
            stainid.image_single=6;
        else if (staindir<30+5)
            stainid.image_single=5;
        
        else if (staindir>=198)
            stainid.image_single=4;
        else if (staindir>=186)
            stainid.image_single=3;
        else if (staindir>=174)
            stainid.image_single=2;
        else if (staindir>=162)
            stainid.image_single=1;
        else
            stainid.image_single=0;
        
        stainid.image_single+=stainimg*10;
        
        with (stainid){
            if (!place_free(x,y) || !place_free(checkx,checky))
                instance_destroy();
            }   
        }
    }
#define scr_levelstation
//Level station
//There's no point in writing nice-looking new code for this
//game. Might as well hack everything the old-fashioned way.
if (global.levelstation && instance_number(obj_messagetext)==0){
    //Read
    global.erasetop=0;
    global.ignorestation=120;
    if (global.refreshpoke==1)
        global.topmessage="You do not have any Points to spend";
    else if (global.refreshpoke==2){
        if (global.levelpoke==0)
            global.topmessage="Maximum Health level reached";
        else if (global.levelpoke==1)
            global.topmessage="Maximum Attack level reached";
        else if (global.levelpoke==2)
            global.topmessage="Maximum Assimilate level reached";
        else if (global.levelpoke==3)
            global.topmessage="Maximum Strength level reached";
        else if (global.levelpoke==4)
            global.topmessage="Maximum Crack level reached";
        else if (global.levelpoke==5)
            global.topmessage="Maximum Tasen level reached";
        else if (global.levelpoke==6)
            global.topmessage="Maximum Komato level reached";
        }
    else if (global.refreshpoke==3)
        global.topmessage="You cannot increase Health on Sudden Death Sector";
    else if (global.refreshpoke==4)
        global.topmessage="You cannot increase this stat on Ultimortal difficulty";
    else if (global.refreshpoke==5)
        global.topmessage="You cannot increase this stat yet";
    else{
        if (global.levelpoke==0)
            global.topmessage="Health level "+string(global.healthlevel)+" (raise maximum HP)";
        else if (global.levelpoke==1)
            global.topmessage="Attack level "+string(global.attacklevel)+" (raise power of all Nanoweaponry)";
        else if (global.levelpoke==2)
            global.topmessage="Assimilate level "+string(global.assimilatelevel)+" (increase ammo cap by "+string(global.assimilatesize)+", repair more armor)";
        else if (global.levelpoke==3)
            global.topmessage="Strength level "+string(global.strengthlevel)+" (raise power of kick attacks)";
        else if (global.levelpoke==4)
            global.topmessage="Crack level "+string(global.cracklevel)+" (crack more secure Nanotechnology)";
        else if (global.levelpoke==5)
            global.topmessage="Tasen level "+string(global.tasenlevel)+" (use more advanced Tasen Nanoweaponry)";
        else if (global.levelpoke==6)
            global.topmessage="Komato level "+string(global.komatolevel)+" (use more advanced Komato Nanoweaponry)";
        }
    //Abort
    if (keyboard_check_pressed(ord("Z")) || keyboard_check_pressed(ord("X")) || keyboard_check_pressed(vk_enter)){
        keyboard_clear(ord("Z"));
        keyboard_clear(ord("X"));
        keyboard_clear(vk_enter);
        global.ignoreall=0;
        global.levelstation=0;
        global.erasetop=0;
        global.topmessage="Disconnected from Cyborg station";
        global.ignorestation=120;
        instance_activate_object(obj_levelstation);
        with (obj_levelstation)
            touchstation=0;
        scr_sound("glo_menumove");
        }
    //Navigate
    else if (keyboard_check_pressed(vk_up)){
        if (global.levelpoke>=1 && global.levelpoke!=4){
            global.levelpoke-=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        }
    else if (keyboard_check_pressed(vk_down)){
        if (global.levelpoke<6 && global.levelpoke!=3){
            global.levelpoke+=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        }
    else if (keyboard_check_pressed(vk_left)){
        if (global.levelpoke>=4){
            global.levelpoke-=4;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        }
    else if (keyboard_check_pressed(vk_right)){
        if (global.levelpoke<=3){
            global.levelpoke+=4;
            if (global.levelpoke>=7)
                global.levelpoke=6;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        }
    //Use
    else if (keyboard_check_pressed(ord("C"))){
        if (global.randomstations)
            global.levelpoke=floor(random(7));
        if (global.levelpoke==0){
            if (global.healthlevel==10){
                global.refreshpoke=2;
                scr_sound("glo_crackfail");
                }
            else if (global.suddendeath){
                global.refreshpoke=3;
                scr_sound("glo_crackfail");
                }
            else if (global.points==0){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.points-=1;
                if (global.facing==1){
                    tempid=instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
                    tempid.sprite_index=spr_ijiflash2;
                    }
                if (global.facing==0){
                    tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
                    tempid.image_index=5;
                    tempid.sprite_index=spr_ijiflash2;
                    }
                global.healthlevel+=1;
                scr_sound("glo_pickup2");
                if (!obj_iji.hasrebooted && !global.suddendeath)
                    global.hp+=2;
                if (global.healthlevel==10){
                    global.ignoremessagescroll=30;
                    instance_activate_object(obj_station);
                    with (obj_station){
                        if (sprite_index==spr_station_health){
                            sprite_index=spr_station_blank;
                            type=0;
                            }
                        }
                    global.textid="specialtrait1";
                    script_execute(scr_beginmessage);
                    with (obj_messagetext)
                        script_execute(scr_specialmessages);
                    }
                }
            }
        else if (global.levelpoke==1){
            if (global.attacklevel==10){
                global.refreshpoke=2;
                scr_sound("glo_crackfail");
                }
            else if (global.specialtrigger16){
                global.refreshpoke=4;
                scr_sound("glo_crackfail");
                }
            else if (global.points==0){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.points-=1;
                if (global.facing==1){
                    tempid=instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
                    tempid.sprite_index=spr_ijiflash2;
                    }
                if (global.facing==0){
                    tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
                    tempid.image_index=5;
                    tempid.sprite_index=spr_ijiflash2;
                    }
                global.attacklevel += 1;
                global.topmessage="Attack level "+string(global.attacklevel);
                scr_sound("glo_pickup2");
                if (global.attacklevel == 10){
                    global.ignoremessagescroll=30;
                    instance_activate_object(obj_station);
                    with (obj_station){
                        if (sprite_index==spr_station_attack){
                            sprite_index=spr_station_blank;
                            type=1;
                            }
                        }
                    global.textid="specialtrait2";
                    script_execute(scr_beginmessage);
                    with (obj_messagetext)
                        script_execute(scr_specialmessages);
                    }
                }
            }
        else if (global.levelpoke==2){
            if (global.assimilatelevel==10){
                global.refreshpoke=2;
                scr_sound("glo_crackfail");
                }
            else if (global.specialtrigger16){
                global.refreshpoke=4;
                scr_sound("glo_crackfail");
                }
            else if (global.points==0){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.points-=1;
                if (global.facing==1){
                    tempid=instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
                    tempid.sprite_index=spr_ijiflash2;
                    }
                if (global.facing==0){
                    tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
                    tempid.image_index=5;
                    tempid.sprite_index=spr_ijiflash2;
                    }
                global.assimilatelevel += 1;
                global.topmessage="Assimilate level "+string(global.assimilatelevel);
                scr_sound("glo_pickup2");
                if (global.assimilatelevel == 10){
                    global.ignoremessagescroll=30;
                    instance_activate_object(obj_station);
                    with (obj_station){
                        if (sprite_index==spr_station_assimilate){
                            sprite_index=spr_station_blank;
                            type=2;
                            }
                        }
                    global.textid="specialtrait3";
                    script_execute(scr_beginmessage);
                    with (obj_messagetext)
                        script_execute(scr_specialmessages);
                    }
                }
            }
        else if (global.levelpoke==3){
            if (global.strengthlevel==10){
                global.refreshpoke=2;
                scr_sound("glo_crackfail");
                }
            else if (global.specialtrigger16){
                global.refreshpoke=4;
                scr_sound("glo_crackfail");
                }
            else if (global.points==0){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.points-=1;
                if (global.facing==1){
                    tempid=instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
                    tempid.sprite_index=spr_ijiflash2;
                    }
                if (global.facing==0){
                    tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
                    tempid.image_index=5;
                    tempid.sprite_index=spr_ijiflash2;
                    }
                global.strengthlevel += 1;
                global.topmessage="Strength level "+string(global.strengthlevel);
                scr_sound("glo_pickup2");
                if (global.strengthlevel == 10){
                    global.ignoremessagescroll=30;
                    instance_activate_object(obj_station);
                    with (obj_station){
                        if (sprite_index==spr_station_strength){
                            sprite_index=spr_station_blank;
                            type=3;
                            }
                        }
                    global.textid="specialtrait4";
                    script_execute(scr_beginmessage);
                    with (obj_messagetext)
                        script_execute(scr_specialmessages);
                    }
                }
            }
        else if (global.levelpoke==4){
            if (global.specialtrigger16){
                global.refreshpoke=4;
                scr_sound("glo_crackfail");
                }
            else if (global.sector==1){
                global.refreshpoke=5;
                scr_sound("glo_crackfail");
                }
            else if (global.cracklevel==10){
                global.refreshpoke=2;
                scr_sound("glo_crackfail");
                }
            else if (global.points==0){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.points-=1;
                if (global.facing==1){
                    tempid=instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
                    tempid.sprite_index=spr_ijiflash2;
                    }
                if (global.facing==0){
                    tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
                    tempid.image_index=5;
                    tempid.sprite_index=spr_ijiflash2;
                    }
                global.cracklevel += 1;
                global.topmessage="Crack level "+string(global.cracklevel);
                scr_sound("glo_pickup2");
                if (global.cracklevel == 10){
                    global.ignoremessagescroll=30;
                    instance_activate_object(obj_station);
                    with (obj_station){
                        if (sprite_index==spr_station_crack){
                            sprite_index=spr_station_blank;
                            type=4;
                            }
                        }
                    global.textid="specialtrait5";
                    script_execute(scr_beginmessage);
                    with (obj_messagetext)
                        script_execute(scr_specialmessages);
                    }
                }
            }
        else if (global.levelpoke==5){
            if (global.tasenlevel==10){
                global.refreshpoke=2;
                scr_sound("glo_crackfail");
                }
            else if (global.specialtrigger16){
                global.refreshpoke=4;
                scr_sound("glo_crackfail");
                }
            else if (global.points==0){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.points-=1;
                if (global.facing==1){
                    tempid=instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
                    tempid.sprite_index=spr_ijiflash2;
                    }
                if (global.facing==0){
                    tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
                    tempid.image_index=5;
                    tempid.sprite_index=spr_ijiflash2;
                    }
                global.tasenlevel += 1;
                global.topmessage="Tasen level "+string(global.tasenlevel);
                scr_sound("glo_pickup2");
                if (global.tasenlevel == 10){
                    global.ignoremessagescroll=30;
                    instance_activate_object(obj_station);
                    with (obj_station){
                        if (sprite_index==spr_station_tasen){
                            sprite_index=spr_station_blank;
                            type=5;
                            }
                        }
                    global.textid="specialtrait6";
                    script_execute(scr_beginmessage);
                    with (obj_messagetext)
                        script_execute(scr_specialmessages);
                    }
                }
            }
        else if (global.levelpoke==6){
            if (global.komatolevel==10){
                global.refreshpoke=2;
                scr_sound("glo_crackfail");
                }
            else if (global.specialtrigger16){
                global.refreshpoke=4;
                scr_sound("glo_crackfail");
                }
            else if (global.points==0){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.points-=1;
                if (global.facing==1){
                    tempid=instance_create(obj_iji.x-11,obj_iji.y-4,obj_ijiflash);
                    tempid.sprite_index=spr_ijiflash2;
                    }
                if (global.facing==0){
                    tempid=instance_create(obj_iji.x-19,obj_iji.y-4,obj_ijiflash);
                    tempid.image_index=5;
                    tempid.sprite_index=spr_ijiflash2;
                    }
                global.komatolevel += 1;
                global.topmessage="Komato level "+string(global.komatolevel);
                scr_sound("glo_pickup2");
                if (global.komatolevel == 10){
                    global.ignoremessagescroll=30;
                    instance_activate_object(obj_station);
                    with (obj_station){
                        if (sprite_index==spr_station_komato){
                            sprite_index=spr_station_blank;
                            type=6;
                            }
                        }
                    global.textid="specialtrait7";
                    script_execute(scr_beginmessage);
                    with (obj_messagetext)
                        script_execute(scr_specialmessages);
                    }
                }
            }
        }
    }
#define scr_weapstation
//Weapon station
//There's no point in writing nice-looking new code for this
//game. Might as well hack everything the old-fashioned way.
if (global.weapstation>0){
    //Read
    global.erasetop=0;
    global.ignorestation=120;
    if (global.refreshpoke==1)
        global.topmessage="You are already using that weapon in the combination";
    else if (global.weapstation==1)
        global.topmessage="Choose the first weapon in the combination";
    else
        global.topmessage="Choose the second weapon in the combination";
    //Abort
    if (keyboard_check_pressed(ord("Z")) || keyboard_check_pressed(ord("X")) || keyboard_check_pressed(vk_enter)){
        keyboard_clear(ord("Z"));
        keyboard_clear(ord("X"));
        keyboard_clear(vk_enter);
        global.ignoreall=0;
        global.weapstation=0;
        scr_sound("glo_menumove")
        instance_activate_object(obj_weapstation);
        with (obj_weapstation)
            touchstation=0;
        global.erasetop=0;
        global.topmessage="Disconnected from Nanoweapon station";
        global.ignorestation=120;
        }
    //Navigate
    else if (keyboard_check_pressed(vk_up)){
        if (global.weappoke==5){
            global.weappoke=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        else if (global.weappoke==6){
            if (global.weapon2)
                global.weappoke=2;
            else
                global.weappoke=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        else if (global.weappoke==7){
            if (global.weapon3)
                global.weappoke=3;
            else if (global.weapon2)
                global.weappoke=2;
            else if (global.weapon4)
                global.weappoke=4;
            else
                global.weappoke=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        else if (global.weappoke==8){
            if (global.weapon4)
                global.weappoke=4;
            else if (global.weapon3)
                global.weappoke=3;
            else if (global.weapon2)
                global.weappoke=2;
            else
                global.weappoke=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        }
    else if (keyboard_check_pressed(vk_down)){
        if (global.weappoke==1){
            if (global.weapon5 || global.weapon6 || global.weapon7 || global.weapon8){
                if (global.weapon5)
                    global.weappoke=5;
                else if (global.weapon6)
                    global.weappoke=6;
                else if (global.weapon7)
                    global.weappoke=7;
                else
                    global.weappoke=8;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==2){
            if (global.weapon5 || global.weapon6 || global.weapon7 || global.weapon8){
                if (global.weapon6)
                    global.weappoke=6;
                else if (global.weapon5)
                    global.weappoke=5;
                else if (global.weapon7)
                    global.weappoke=7;
                else
                    global.weappoke=8;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==3){
            if (global.weapon5 || global.weapon6 || global.weapon7 || global.weapon8){
                if (global.weapon7)
                    global.weappoke=7;
                else if (global.weapon6)
                    global.weappoke=6;
                else if (global.weapon8)
                    global.weappoke=8;
                else
                    global.weappoke=5;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==4){
            if (global.weapon5 || global.weapon6 || global.weapon7 || global.weapon8){
                if (global.weapon8)
                    global.weappoke=8;
                else if (global.weapon7)
                    global.weappoke=7;
                else if (global.weapon6)
                    global.weappoke=6;
                else
                    global.weappoke=5;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        }
    else if (keyboard_check_pressed(vk_left)){
        if (global.weappoke==2){
            global.weappoke=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        else if (global.weappoke==3){
            if (global.weapon2)
                global.weappoke=2;
            else
                global.weappoke=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        else if (global.weappoke==4){
            if (global.weapon3)
                global.weappoke=3;
            else if (global.weapon2)
                global.weappoke=2;
            else
                global.weappoke=1;
            global.refreshpoke=0;
            scr_sound("glo_menumove");
            }
        else if (global.weappoke==6){
            if (global.weapon5){
                global.weappoke=5;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==7){
            if (global.weapon5 || global.weapon6){
                if (global.weapon6)
                    global.weappoke=6;
                else
                    global.weappoke=5;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==8){
            if (global.weapon5 || global.weapon6 || global.weapon7){
                if (global.weapon7)
                    global.weappoke=7;
                else if (global.weapon6)
                    global.weappoke=6;
                else
                    global.weappoke=5;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        }
    else if (keyboard_check_pressed(vk_right)){
        if (global.weappoke==1){
            if (global.weapon2 || global.weapon3 || global.weapon4){
                if (global.weapon2)
                    global.weappoke=2;
                else if (global.weapon3)
                    global.weappoke=3;
                else
                    global.weappoke=4;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==2){
            if (global.weapon3 || global.weapon4){
                if (global.weapon3)
                    global.weappoke=3;
                else
                    global.weappoke=4;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==3){
            if (global.weapon4){
                global.weappoke=4;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==5){
            if (global.weapon6 || global.weapon7 || global.weapon8){
                if (global.weapon6)
                    global.weappoke=6;
                else if (global.weapon7)
                    global.weappoke=7;
                else
                    global.weappoke=8;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==6){
            if (global.weapon7 || global.weapon8){
                if (global.weapon7)
                    global.weappoke=7;
                else
                    global.weappoke=8;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        else if (global.weappoke==7){
            if (global.weapon8){
                global.weappoke=8;
                global.refreshpoke=0;
                scr_sound("glo_menumove");
                }
            }
        }
    //Use
    else if (keyboard_check_pressed(ord("C"))){
        if (global.weapstation==1){
            global.tempwsweap1=global.weappoke;
            global.weapstation=2;
            global.refreshpoke=0;
            with (obj_weapstation){
                if (touchstation)
                    obj_weapstation.weap1=global.weappoke;
                }
            scr_sound("glo_selectweapon");
            }
        else if (global.weapstation==2){
            if (global.weappoke==global.tempwsweap1){
                global.refreshpoke=1;
                scr_sound("glo_crackfail");
                }
            else{
                global.weapstation=3;
                global.refreshpoke=0;
                with (obj_weapstation){
                    if (touchstation)
                        obj_weapstation.weap2=global.weappoke;
                    }
                scr_sound("glo_selectweapon");
                }
            }
        }
    }
#define scr_pulselink
//argument0 is XP to gain
if (instance_number(obj_iji)==1){
    obj_iji.pulselinkcyc+=argument0;
    //0.5625 Nano/ammo with XPgain 1
    if (obj_iji.pulselinkcyc>=32){
        obj_iji.pulselinkcyc-=32;
        if (global.level==global.maxlevel){
            if (global.sector==0)
                tempsec="X";
            else
                tempsec=string(global.sector);
            global.erasetop=0;
            global.topmessage="Max Level for Sector "+tempsec+" reached";
            }
        else{
            instance_create(bbox_left+((bbox_right-bbox_left)/2),bbox_top+((bbox_bottom-bbox_top)/2),obj_nanoflash);
            global.xpcount+=1;
            scr_levelup();
            global.countingnano+=1;
            global.erasetop=0;
            global.topmessage="Nano +"+string(global.countingnano);
            if (global.level<global.maxlevel)
                global.topmessage+=" ("+string(global.xp)+"/"+string((global.level*(4+global.difficulty*4))+4)+")";
            }
        }
    }
#define scr_chaintracer
//obj_chaintracer end step
drawme=0;
if (!global.ignoreall && global.weapon==8 && global.passive && (global.state==1 || (global.fireanytime && (obj_iji.sprite_index==spr_jump || obj_iji.sprite_index==spr_jumpleft || obj_iji.sprite_index==spr_duck || obj_iji.sprite_index==spr_duckleft || obj_iji.sprite_index==spr_standup || obj_iji.sprite_index==spr_standupleft))) && !obj_iji.bedestroyed && (!obj_iji.shredder || obj_iji.image_index>6)){
    if (drawmecyc<1)
        drawmecyc+=1;
    else{
        drawme=1;
        if (obj_iji.shredder)
            x=obj_iji.x+6-16+global.facing*32;
        else
            x=obj_iji.x+6;
        y=obj_iji.y+14-obj_iji.shredder*27;
        if (global.state==2)
            y=obj_iji.y+14;
        else if (global.state==3 || global.state==5)
            y=obj_iji.y+30;
        dist=80+global.attacklevel*16;
        done=0;
        targettype=0;
        loops=0;
        global.tracertarget=0;
        while (done==0 && dist>0){
            loops+=1;
            if (!done){
                dist-=8;
                x+=-8+global.facing*16;
                }
            targetid=0;
            targetid=instance_place(x,y,obj_alliedenemy);
            if (targetid>0){
                if (loops>1){
                    if (global.facing==0)
                        x=targetid.bbox_right
                    else
                        x=targetid.bbox_left;
                    }
                done=1;
                targetsec=targetid.security;
                targettype=1;
                }
            if (!done){
                targetid=0;
                targetid=instance_place(x,y,obj_turret);
                if (targetid>0){
                    if (loops>1){
                        if (global.facing==0)
                            x=targetid.bbox_right
                        else
                            x=targetid.bbox_left;
                        }
                    done=1;
                    targetsec=targetid.security;
                    if (targetid.sprite_index!=spr_turret)
                        targettype=0;
                    else
                        targettype=2;
                    }
                }
            if (!done){
                targetid=0;
                targetid=instance_place(x,y,obj_crackbox);
                if (targetid>0){
                    if (global.facing==0)
                        x=targetid.bbox_right
                    else
                        x=targetid.bbox_left;
                    done=1;
                    targetsec=targetid.security;
                    targettype=3;
                    }
                }
            if (!done){
                targetid=0;
                targetid=instance_place(x,y,obj_cdoor);
                if (targetid>0){
                    move_outside_solid(0+global.facing*180,8);
                    done=1;
                    targetsec=targetid.security;
                    targettype=4;
                    }
                }
            if (!done){
                targetid=0;
                targetid=instance_place(x,y,obj_phantomhammer);
                if (targetid>0){
                    move_outside_solid(0+global.facing*180,8);
                    done=1;
                    targetsec=targetid.security;
                    targettype=5;
                    }
                }
            if (!done){
                targetid=0;
                targetid=instance_place(x,y,obj_meta);
                if (targetid>0){
                    if (global.facing==0)
                        x=targetid.bbox_right
                    else
                        x=targetid.bbox_left;
                    done=1;
                    targettype=0;
                    }
                }
            if (!done){
                targetid=0;
                targetid=instance_place(x,y,obj_glass);
                if (targetid>0){
                    if (global.facing==0)
                        x=targetid.bbox_right
                    else
                        x=targetid.bbox_left;
                    done=1;
                    targettype=0;
                    }
                }
            if (!done){
                if (!place_free(x,y)){
                    move_outside_solid(0+global.facing*180,8);
                    done=1;
                    targettype=0;
                    }
                }
            }
        }
    }
else
    drawmecyc=0;

#define scr_chaintracerdraw
x=obj_chaintracer.x;
y=obj_chaintracer.y;
targetid=obj_chaintracer.targetid;
targettype=obj_chaintracer.targettype;
targetsec=obj_chaintracer.targetsec;
pcyc+=1;
if (pcyc==4)
    pcyc2=1;
else if (pcyc==6)
    pcyc2=2;
else if (pcyc==7)
    pcyc2=3;
else if (pcyc==9)
    pcyc2=4;
else if (pcyc==13)
    pcyc2=3;
else if (pcyc==15)
    pcyc2=2;
else if (pcyc==16)
    pcyc2=1;
else if (pcyc==18){
    pcyc2=0;
    pcyc=0;
    }
drawcyc+=1;
if (drawcyc>=3)
    drawcyc=0;
if (obj_chaintracer.drawme){
    if (drawcyc>=1){
        if (targetid>0 && targettype>0){
            if (global.cracklevel>=targetsec)
                draw_sprite(spr_chaintracer,1,floor(x),floor(y));
            else
                draw_sprite(spr_chaintracer,0,floor(x),floor(y));
            }
        else
            draw_sprite(spr_chaintracer,0,floor(x),floor(y));
        }
    if (targetid>0 && targettype>=1){
        x1=targetid.bbox_left-2;
        x2=targetid.bbox_right+2;
        y1=targetid.bbox_top-2;
        y2=targetid.bbox_bottom+2;
        if (targetid.enemytype==16){
            x1-=32;
            x2-=8;
            y1+=16;
            y2-=24;
            }
        draw_sprite(spr_chainsecurity3,0,x1-pcyc2,y1-pcyc2);
        draw_sprite(spr_chainsecurity3,1,x2+pcyc2,y1-pcyc2);
        draw_sprite(spr_chainsecurity3,2,x1-pcyc2,y2+pcyc2);
        draw_sprite(spr_chainsecurity3,3,x2+pcyc2,y2+pcyc2);
        if (targetid.cracked)
            draw_sprite(spr_chainsecurity4,0,x1-9,y1-18);
        else{
            draw_sprite(spr_chainsecurity,0,x1-9,y1-18);
            if (targetsec<10)
                draw_sprite(spr_chainsecurity2,targetsec mod 10,x1+7,y1-23);
            else if (targetsec<100){
                draw_sprite(spr_chainsecurity2,floor(targetsec/10),x1+7,y1-23);
                draw_sprite(spr_chainsecurity2,targetsec mod 10,x1+15,y1-23);
                }
            else{
                draw_sprite(spr_chainsecurity2,floor(targetsec/100),x1+7,y1-23);
                draw_sprite(spr_chainsecurity2,floor(targetsec/10),x1+15,y1-23);
                draw_sprite(spr_chainsecurity2,targetsec mod 10,x1+23,y1-23);
                }
            }
        }
    }

#define scr_enemyknockdown
//Enemy knockdown
//Argument0 is precalculated knockdowntype
// 1 = left
// 2 = right
//Argument1 is a precalculated force
//Argument2 is impulse explosion

if (hp<=0 && !killawarded && argument2==0){
    if (ijikill){
        if (obj_iji.usingougi>0)
            killtype=9;
        global.kills+=1;
        global.killdata[killdataid]=killtype;
        }
    killawarded=1;
    }
if (hp<=0 && specialtriggerb2)
    global.specialtriggerb2=1;
if (place_free(x,y-6))
    y-=6;
if (argument1==0){
    velocity=2*(global.strengthlevel-resistance)+4;
    if (velocity>12){
        velocity=12;
        }
    speed=2*(global.strengthlevel-resistance)+10;
    if (speed>18){
        speed=18;
        }
    if (argument0==0)
        knockdowntype=global.facing+1;
    else
        knockdowntype=argument0;
    }
else{
    knockdowntype=argument0;
    velocity=argument1-(resistance/2);
    if (velocity>22)
        velocity=22;
    if (velocity<1)
        velocity=1;
    speed=(argument1+6)-(resistance/2);
    if (speed>22)
        speed=22;
    }
if (knockdowntype==1){
    facing=1;
    if (enemytype==0)
        sprite_index=spr_tasenscout_knockdown;
    if (enemytype==1)
        sprite_index=spr_tasensoldier_knockdown;
    if (enemytype==2)
        sprite_index=spr_tasencommander_knockdown;
    if (enemytype==10)
        sprite_index=spr_komatotrooper_knockdown;
    if (enemytype==11)
        sprite_index=spr_komatoberserker_knockdown;
    }
else{
    facing=0;
    if (enemytype==0)
        sprite_index=spr_tasenscout_knockdownleft;
    if (enemytype==1)
        sprite_index=spr_tasensoldier_knockdownleft;
    if (enemytype==2)
        sprite_index=spr_tasencommander_knockdownleft;
    if (enemytype==10)
        sprite_index=spr_komatotrooper_knockdownleft;
    if (enemytype==11)
        sprite_index=spr_komatoberserker_knockdownleft;
    }
move_outside_solid(90,32);

if (argument2==0){
    if (enemytype<10){
        repeat(3)
            instance_create(bbox_left+((bbox_right-bbox_left)/2),bbox_top+((bbox_bottom-bbox_top)/2),obj_tasenbloodspecial);
        armor=100;
        }
    else{
        repeat(3)
            instance_create(bbox_left+((bbox_right-bbox_left)/2),bbox_top+((bbox_bottom-bbox_top)/2),obj_komatobloodspecial);
        armor=200;
        }
    }
takingpain=1;
state=4;
direction=90;
image_index=0;
image_single=-1;
image_speed=0.5;
alarm[1]=0;
alarm[2]=0;
alarm[4]=0;
alarm[5]=300;
alarm[6]=0;
alarm[7]=0;
angry=1;
firingrocket=0;
swiping=0;
velocity=round(velocity);
speed=round(speed);
#define scr_enemybullet
//Enemybullet
if (room==rom_sector11)
    obj_sabot.machtot+=2;
else
    obj_sabot.machtot+=3;
hit=0;
lifespan=0;
while (hit==0 && lifespan<100){
    //Make airsparks
    temprand=random(1);
    if (temprand<0.1)
        instance_create(x,y,obj_airspark);
    //Spread bullets
    y=(y-12+random(24));

    lifespan=lifespan+2.4;
    if (argument0==0){
        if (place_meeting(x-12,y,obj_iji)==0 && place_meeting(x-12,y,obj_block)==0 && place_meeting(x-12,y,obj_glass)==0 && place_meeting(x-12,y,obj_komatoenemy)==0 && place_meeting(x-12,y,obj_shockbarrier)==0){
            x=x-12;
            }
        else{
            x=x-12;
            hit=1;
            }
    }
    if (argument0==1){
        if (place_meeting(x+12,y,obj_iji)==0 && place_meeting(x+12,y,obj_block)==0 && place_meeting(x+12,y,obj_glass)==0 && place_meeting(x+12,y,obj_komatoenemy)==0 && place_meeting(x+12,y,obj_shockbarrier)==0){
        x=x+12;
        }
    else{
        x=x+12;
        hit=1;
        }
    }
}
#define scr_dropammo
//Enemy drops ammo
//Argument0 is x
//Argument1 is y
//Argument2 is chance
//Argument3 is type
if (facing) ammofix=16;
else ammofix=-16;
ammodrop = random(argument2);
if (ammodrop < 1){
    if (argument3 == 1)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo1);
    if (argument3 == 2)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo2);
    if (argument3 == 3)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo3);
    if (argument3 == 4)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo4);
    if (argument3 == 5)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo5);
    if (argument3 == 6)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo6);
    if (argument3 == 7)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo7);
    if (argument3 == 8)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo8);
    if (argument3 == 9)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo9);
    if (argument3 == 10)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo10);
    if (argument3 == 11)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo11);
    if (argument3 == 12)
    instance_create(x+argument0-16+ammofix, y+argument1-16, obj_ammo12);
    }
#define scr_enemyplasmatrace
//Plasma trace
if (place_free(x,y)==0) distance=2001;
puff=3;
if (!global.specialbake){
    tempidzx=instance_create(x,y,obj_shockshell);
    if (argument0==1)
        tempidzx.hspeed=-tempidzx.hspeed;
    }
while(distance<2000){
if (distance==16)
if (argument0==0){
    tempid=instance_create(x,y,obj_plasma2);
    tempid.image_index=0;
    tempid.depth=-4;
    }
else{
    tempid=(instance_create(x,y,obj_plasma2));
    tempid.image_index=8;
    tempid.depth=-4;
    tempid=instance_create(x+8,y,obj_plasma);
    tempid.depth=-4;
    }
if (argument0==0){
    if (place_free(x, y) || place_meeting(x-16, y,obj_meta)==1)
        scr_enemyplasmaattack(argument0);
    else distance=2000;
    x-=16;
    }
else{
    if (place_free(x, y) || place_meeting(x+16, y,obj_meta)==1)
        scr_enemyplasmaattack(argument0);
    else distance=2000;
    x+=16;
    }
puff-=1;
if (puff==0){
    puff=5;
    tempid=instance_create(x,y,obj_plasma3);
    tempid.depth=-4;
    }
else if (distance>0){
    tempid=instance_create(x,y,obj_plasma);
    tempid.depth=-4;
    }
distance+=16;
}
instance_create(x,y,obj_enemyshockballexplosion);
instance_create(x,y,obj_enemyshockballexplosion);
instance_create(x,y,obj_enemyshockballexplosion);
with (obj_plasma)
    scr_outside();
with (obj_plasma2)
    scr_outside();
with (obj_plasma3)
    scr_outside();
with (obj_shockballexplosion)
    scr_outside();

#define scr_enemyplasmaattack
if (place_meeting(x,y,obj_disruptor)){
    with (obj_disruptor)
        scr_disruptorexplo();
    }
if (place_meeting(x,y,obj_reflector)){
    with (obj_reflector)
        scr_reflectorexplo();
    }
if (place_meeting(x,y,obj_shockbarrier)){
    with (obj_shockbarrier)
        scr_barrierexplo();
    }
if (place_meeting(x,y,obj_iji) && obj_iji.plasmaed==0 && !obj_iji.takingpain && !fromansaksie){
    if (obj_iji.shredder)
        obj_iji.shredderhp-=300;
    global.hp-=3;
    global.damage+=3;
    obj_iji.plasmaed=argument0+1;
    if (obj_iji.overload==9){
        if (global.weapon7){
            if (global.assimilatelevel<10)
                maxammo=global.assimilatebase+global.assimilatelevel*global.assimilatesize;
            else
                maxammo=99;
            if (global.ammo7==maxammo)
                global.topmessage="Shocksplinter ammo full";
            else
                global.topmessage="Shocksplinter ammo +2";
            }
        else{
            if (global.assimilatelevel<10)
                maxammo=global.assimilatebase+global.assimilatelevel*global.assimilatesize;
            else
                maxammo=99;
            if (global.ammo7==maxammo)
                global.topmessage="Unknown ammo full";
            else
                global.topmessage="Unknown ammo +2";
            }
        global.ammo7+=2;
        if (global.ammo7>global.assimilatebase+global.assimilatelevel*global.assimilatesize)
            global.ammo7=global.assimilatebase+global.assimilatelevel*global.assimilatesize;
        global.erasetop=0;
        }
    }
check = (collision_line(x,y,x+16,y,obj_glass,0,0));
if (check > 0){
    with (check) script_execute(scr_glassbreak,15,argument0+1);
    puff+=1;
    distance-=16;
    if (argument0=0) x+=16;
    else x-=16;
    }
check = (collision_line(x,y,x+16,y,obj_meta,0,0));
if (check > 0){
    with (check) script_execute(scr_metabreak,15,argument0+1);
    puff+=1;
    distance-=16;
    if (argument0=0) x+=16;
    else x-=16;
    }

check = (collision_line(x,y,x+16,y,obj_tasenscout,0,0));
if (check > 0){
    if (!check.plasmaed){
        with (check){
            hp=0;
            ijikill=0;
            plasmaed=1;
            script_execute(scr_enemyknockdown,argument0+1,12+random(3));
            }
        puff+=1;
        distance-=16;
        if (argument0=0) x+=16;
        else x-=16;
        }
    }
check = (collision_line(x,y,x+16,y,obj_tasensoldier,0,0));
if (check > 0){
    if (!check.plasmaed){
        with (check){
            hp=0;
            ijikill=0;
            plasmaed=1;
            script_execute(scr_enemyknockdown,argument0+1,12+random(3));
            }
        puff+=1;
        distance-=16;
        if (argument0=0) x+=16;
        else x-=16;
        }
    }
check = (collision_line(x,y,x+16,y,obj_tasencommander,0,0));
if (check > 0){
    if (!check.plasmaed){
        with (check){
            hp-=3;
            ijikill=0;
            plasmaed=1;
            script_execute(scr_enemyknockdown,argument0+1,12+random(3));
            }
        puff+=1;
        distance-=16;
        if (argument0=0) x+=16;
        else x-=16;
        }
    }
check = (collision_line(x,y,x+16,y,obj_tasenelite,0,0));
if (check > 0){
    if (!check.plasmaed){
        with (check){
            hp-=3;
            ijikill=0;
            plasmaed=1;
            script_execute(scr_elitepain);
            }
        puff+=1;
        distance-=16;
        if (argument0=0) x+=16;
        else x-=16;
        }
    }
check = (collision_line(x,y,x+16,y,obj_tasenshredder,0,0));
if (check > 0){
    with (check){
        shredderhp-=300;
        if (shredderhp>0){
            tempid=instance_create(x,y-30,obj_tasensoldier);
            tempid.hp=0;
            ijikill=0;
            tempid.dead=1;
            if (global.facing==0){
                with (tempid)
                    script_execute(scr_enemyknockdown,1,12+random(3));
                }
            else{
                with (tempid)
                    script_execute(scr_enemyknockdown,2,12+random(3));
                }
            tempid=instance_create(floor(x),floor(y)-1,obj_emptyshredder);
            tempid.shredderhp=shredderhp;
            if (sprite_index==spr_tasenshredder_basicleft)
                tempid.sprite_index=spr_tasenshredder_emptyleft;
            else
            tempid.sprite_index=spr_tasenshredder_empty;
            tempid.facing=facing;
            tempid.hspeed=hspeed;
            tempid.vspeed=vspeed;
            instance_destroy();
            }
        }
    puff+=1;
    distance-=16;
    if (argument0=0) x+=16;
    else x-=16;
    }
if (!fromiosa){
    check = (collision_line(x,y,x+16,y,obj_iosa,0,0));
    if (check > 0){
        if (!check.plasmaed){
            with (check){
                hp-=3;
                plasmaed=1;
                script_execute(scr_annihilatorpain);
                }
            puff+=1;
            distance-=16;
            if (argument0=0) x+=16;
            else x-=16;
            }
        }
    }
#define scr_tasenvision
//For Komato
//argument0 is x
//argument1 is y
if (global.sector==5 || global.sector==6 || global.sector==7 || global.sector==8 || global.sector==9 || global.sector==0){
visioncheckt+=1;
if ((targetrival==0 && visioncheckt>=30) || (targetrival>0 && visioncheckt>=60)){
visioncheckt=0;
tempid=instance_create(x+argument0,y+argument1,obj_visioncheckt);
tempid.speed=16;
tempid.target=id;
tempid.direction=0;
tempid=instance_create(x+argument0,y+argument1,obj_visioncheckt);
tempid.speed=16;
tempid.target=id;
tempid.direction=180;
}
}
#define scr_komatovision
//For Tasen
//argument0 is x
//argument1 is y
if (global.sector==5 || global.sector==6 || global.sector==7 || global.sector==8 || global.sector==9){
visioncheckk+=1;
if ((targetrival==0 && visioncheckk>=30) || (targetrival>0 && visioncheckk>=60)){
visioncheckk=0;
tempid=instance_create(x+argument0,y+argument1,obj_visioncheckk);
tempid.speed=16;
tempid.target=id;
tempid.direction=0;
tempid=instance_create(x+argument0,y+argument1,obj_visioncheckk);
tempid.speed=16;
tempid.target=id;
tempid.direction=180;
}
}
#define scr_enemypickupxp
//Enemy picks up nanofield
if (hp>0){
    if (other.sprite_index==spr_pickuphealth){
        if (hp<maxhp){
            scouring=0;
            hp+=1;
            scouring=0;
            if (hp>maxhp)
                hp=maxhp;
            /*
            if (enemytype<=9)
                armor=100;
            if (enemytype>=10){
                armor=200;
                if (global.suddendeath)
                    armor=100;
                }
            */
            global.tempid=id;    
            with (other){
                script_execute(scr_pickupflash,0,0,3,global.tempid);
                instance_destroy();
                }
            }
        }
    else if (armor<maxarmor/2){
        armor=maxarmor;
        global.tempid=id;    
        with (other){
            if (sprite_index==spr_xp1)
                script_execute(scr_pickupflash,0,0,1,global.tempid);
            if (sprite_index==spr_xp2)
                script_execute(scr_pickupflash,0,0,2,global.tempid);
            if (sprite_index==spr_xp3)
                script_execute(scr_pickupflash,0,0,3,global.tempid);
            if (sprite_index==spr_xp4)
                script_execute(scr_pickupflash,0,0,4,global.tempid);
            if (sprite_index==spr_pickuparmor)
                script_execute(scr_pickupflash,0,0,3,global.tempid);
            instance_destroy();
            }
        }
    }
#define scr_elitepain
//Tasen Elite pain and death
//argument0 is anger
// 0 = yes
// 1 = no
//argument1 is impulse
if (!dead){
    if (argument0==0)
        angry=1;
    alarm[5]=300;
    takingpain=1;
    swiping=0;
    firingrocket=0;
    firingrocket2=0;
    firingmpfb=0;
    rapidfirempfb=0;
    if (argument1==0){
        if (krotera)
            scr_sound("kro_pain");
        else
            scr_sound("eli_pain");
        while(armor<1)
            armor+=maxarmor;
        }
    state=3;
    alarm[1]=0;
    alarm[2]=10;
    alarm[6]=0;
    alarm[7]=0;
    image_index=0;
    if (argument1==0){
        repeat(2)
            instance_create(x+10,y+15,obj_tasenbloodspecial);
        }
    if (facing==0){
        if (krotera)
            sprite_index=spr_krotera_painleft;
        else
            sprite_index=spr_tasenelite_painleft;
        }
    if (facing==1){
        if (krotera)
            sprite_index=spr_krotera_pain;
        else
            sprite_index=spr_tasenelite_pain;
        }
    }
if (hp<=0 && !dead && argument1==0){
    dead=1;
    image_index=0;
    image_single=-1;
    image_speed=0.5;
    armor=0;
    if (ijikill && !krotera && !killawarded){
        if (obj_iji.usingougi>0)
            killtype=9;
        global.kills+=1;
        global.killdata[killdataid]=killtype;
        killawarded=1;
        }
    state=6;
    alarm[2]=0;
    alarm[3]=26;
    if (!krotera)
        alarm[4]=36;
    else{
        deathbyiji=ijikill;
        //Krotera dies
        if (obj_iji.usingougi>0)
            killtype=9;
        calmdown=0;
        scr_sound("exp_boss");
        scr_sound("kro_death");
        with (obj_sabot)
            scr_stopmusic();
        repeat(10)
            instance_create(obj_krotera.x+10,obj_krotera.y+15,obj_nanospark2);
        scr_shakescreen(3);
        obj_sabot.flash=0.8;
        repeat(150)
            instance_create(obj_krotera.x-100+random(200),obj_krotera.y-100+random(200),obj_kroteraflash);
        instance_create(obj_krotera.x+15,obj_krotera.y+45,obj_megaflare);
        obj_kroteratrigger.alarm[1]=60;
        with (obj_enemyrocket)
            instance_destroy();
        with (obj_enemympfb)
            instance_destroy();
        with (obj_kroteraspawner)
            instance_destroy();
        with (obj_turret){
            if (sprite_index==spr_turret || sprite_index==spr_turretappear){
                dead=1;
                cracked=1;
                dropnothing=1;
                armor=200;
                angry=0;
                alarm[1]=0;
                alarm[2]=0;
                alarm[3]=0;
                alarm[4]=0;
                if (facing==0){
                    alarm[5]=3;
                    sprite_index=spr_turretappear;
                    image_index=2;
                    image_speed=-1;
                    image_single=-1;
                    }
                else{
                    alarm[6]=3;
                    image_single=1;
                    }
                }
            }
        }
    repeat(3)
        instance_create(x+15,y+15,obj_tasenbloodspecial);
    if (facing==0){
        if (krotera)
            sprite_index=spr_krotera_deathleft;
        else
            sprite_index=spr_tasenelite_deathleft;
        tempid=instance_create(x+5,y+20,obj_tasenelite_weapon);
        tempid.direction=(145-random(30));
        tempid.speed=(6+random(8));
        tempid.sprite_index=spr_tasenelite_weaponleft;
        }
    if (facing==1){
        if (krotera)
            sprite_index=spr_krotera_death;
        else
            sprite_index=spr_tasenelite_death;
        tempid=instance_create (x+30,y+20,obj_tasenelite_weapon);
        tempid.direction=(35 + random(20));
        tempid.speed=(6 + random(8));
        }
    }
#define scr_assassinpain
//Argument0 one is teleporting to safety
lastx=x;
lasty=y;
activated=1;
if (global.sector==9){
    with (obj_crumble91){
        if (x==3552 && y==4256)
            instance_create(x+32,y+64,obj_enemyrocketexplosion);
        }
    }
if (ansaksie)
    scr_ansaksievoice();
else if (asha && argument0==0)
    scr_sound("ash_pain");
else if (asha2 && hp<=4 && argument0==0)
    scr_sound("ash_pain");
else if (asha2 && hp>=7 && argument0==0 && laughcool==0){
    scr_sound("ash_ambient2");
    laughcool=300+ceil(random(300));
    }
if (!asha && !asha2 && argument0==0)
    scr_sound("asa_pain");
angry=1;
if (argument0==0){
    repeat(3) instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_komatobloodspecial);
    while(armor<1)
        armor+=200;
    }
if (ashaghost)
    donothing=0;
else
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflash);
visible=0;
alarm[0]=0;
alarm[1]=0;
if (asha2 || ashaghost){
    alarm[2]=2;
    alarm[5]=0;
    plasmarage=0;
    plasmavortex=0;
    rageperform=0;
    performsmash=0;
    obj_asha2safe.visible=0;
    }
else if (asha)
    alarm[2]=random(15-(global.difficulty*5))+15-(global.difficulty*5);
else if (ansaksie)
    alarm[2]=random(15)+30;
else
    alarm[2]=random(20-(global.difficulty*5))+20-(global.difficulty*5);
alarm[3]=0;
vspeed=0;
gravity=0;
image_index=0;
image_single=0;

//Asha2 Ghost backups
if (asha2){
    if (obj_asha2.hp==6 && obj_asha2.backup==0){
        obj_asha2.backup=1;
        instance_create(obj_asha2.x,obj_asha2.y,obj_ashaghost);
        }
    if (obj_asha2.hp==3 && obj_asha2.backup==1){
        obj_asha2.backup=2;
        instance_create(obj_asha2.x,obj_asha2.y,obj_ashaghost);
        }
    }
//Death
if (hp<=0){
if (!asha){ //Regular
//instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_enemyrocketexplosion);
//instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_explosioncenter);
instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflash);
//scr_nanoexplosion((bbox_right-bbox_left)/2, (bbox_bottom-bbox_top)/2);
instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_xp4);
if (cracked)
    instance_create(bbox_left+((bbox_right-bbox_left)/2)+16, bbox_top+((bbox_bottom-bbox_top)/2), obj_ammo10);
instance_destroy();
if (crackmark==1){
    script_execute(scr_crackfail);
    script_execute(scr_terminatecrack);
    global.erasetop=0;
    global.topmessage="CRACKING FAILED: Subject is out of range";
    }
}

//Asha dies (fake)
else if (!asha2){
    //You don't actually kill Asha in Sector12; no kill awarded
    scr_sound("exp_boss");
    scr_stopashavoice();
    scr_sound("ash_pain");
    with (obj_sabot)
        scr_stopmusic();
    obj_ashatrigger.alarm[4]=20;
    with (obj_komatoberserker){
        hp=1;
        armor=-1000;
        }
    repeat(10)
        instance_create(obj_asha.bbox_left+((obj_asha.bbox_right-obj_asha.bbox_left)/2),obj_asha.bbox_top+((obj_asha.bbox_bottom-obj_asha.bbox_top)/2),obj_nanospark2);
    obj_asha.alarm[5]=1;
    obj_asha.deadfakes=13;
    scr_shakescreen(3);
    obj_sabot.flash=0.8;
    repeat(150)
        instance_create(obj_asha.x-100+random(200),obj_asha.y-100+random(200),obj_ashaflash);
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2),obj_megaflare);
    obj_ashatrigger.alarm[1]=90;
    with (obj_enemyrocket)
        instance_destroy();
    with (obj_enemympfb)
        instance_destroy();
    with (obj_enemyshock)
        instance_destroy();
    with (obj_enemyshockball)
        instance_destroy();
    with (obj_elecbomb){
        instance_destroy();
        instance_create(x,y-8,obj_bigsmoke);
        }
    }

//Asha2 dies (for real)
else{
    scr_sound("exp_boss");
    scr_sound("ash_death");
    with (obj_sabot)
        scr_stopmusic();
    obj_sabot.killedasha2=1;
    obj_asha2trigger.alarm[1]=20;
    with (obj_asha2safe)
        instance_destroy();
    with (obj_xspecialcannotfire)
        instance_destroy();
    with (obj_elecbomb){
        instance_destroy();
        instance_create(x,y-8,obj_bigsmoke);
        }
    repeat(10)
        instance_create(obj_asha2.bbox_left+((obj_asha2.bbox_right-obj_asha2.bbox_left)/2),obj_asha2.bbox_top+((obj_asha2.bbox_bottom-obj_asha2.bbox_top)/2),obj_nanospark2);
    global.kills+=1;
    global.killdata[755]=2;
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_ashagore);
    tempid=instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_ashahead);
    if (x>obj_iji.x)
        tempid.sprite_index=spr_ashaheadleft;
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_harmlessexplosion);
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflare);
    repeat(5)
        instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_smokepoint);
    scr_nanoexplosion((bbox_right-bbox_left)/2, (bbox_bottom-bbox_top)/2);
    obj_asha2trigger.alarm[0]=150;
    scr_shakescreen(4);
    obj_sabot.temporaryflash=1;
    obj_sabot.flash=0.8;
    repeat(150)
        instance_create(obj_asha2.x-100+random(200),obj_asha2.y-100+random(200),obj_asha2flash);
    with (obj_enemyrocket)
        instance_destroy();
    with (obj_enemympfb)
        instance_destroy();
    with (obj_enemyshock)
        instance_destroy();
    with (obj_enemyshockball)
        instance_destroy();
    with (obj_ashaghost)
        instance_destroy();
    instance_destroy();
    }

}
#define scr_beastdeath
if (ijikill){
obj_iji.killemote=1;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=0;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=180;
tempid.speed=16;
}

if (crackmark==1){
    script_execute(scr_terminatecrack);
    global.erasetop=0;
    global.topmessage="CRACKING FAILED: Subject is dead";
    }

if (ijikill && !killawarded){
    if (obj_iji.usingougi>0)
        killtype=9;
    global.kills+=1;
    global.killdata[killdataid]=killtype;
    killawarded=1;
    }
tempid=instance_create(x+30,y,obj_visionchecke)
tempid.direction=0;
tempid.speed=16;
tempid=instance_create(x+30,y,obj_visionchecke)
tempid.direction=180;
tempid.speed=16;
instance_create(x+40,y+20,obj_enemyshockexplosion);
instance_create(x+40,y+20,obj_explosioncenter);
repeat(6) instance_create(x+40,y+20,obj_enemyshockball);
instance_create(x+40,y+35,obj_xp3);
scr_shakescreen(3);
scr_nanoexplosion(40,20);
if (cracked)
    scr_dropammo(30,20,1,10);
instance_destroy();
if (global.specialbake==0)
    maxamount=100;
else
    maxamount=30;
if (instance_number(obj_scrapwhite)<maxamount){
    repeat(30){
        tempid=instance_create(x+20+random(20),y+20+random(30),obj_scrapwhite);
        tempid.speed=5+random(10);
        tempid.direction=random(360);
        }
    }
#define scr_annihilatorpain
//Annihilator pain
if (!iosa){
if (angry==0 && (state==0 || state==1))
    alarm[2]=1;
if (state!=10){
    angry=1;
    alarm[5]=300;
    }
}

while(armor<1)
    armor+=200;
if (!global.specialbake)
    instance_create(x,y,obj_annipainflash);
scr_sound("iji_basepain");
repeat(5){
    xoffset=random(100);
    tempid=instance_create(x+xoffset,y+50+random(50),obj_komatobloodspecial);
    if (xoffset<50)
        tempid.direction=random(90)+135;
    else{
        tempid.direction=random(90)-45;
        tempid.image_index=6;
        }

    }

//Death
if (hp<=0 && (!iosa || global.hp>0)){
    //obj_iji.killemote=1;
    repeat(5){
        sound_stop(snd_ann_find1);
        sound_stop(snd_ann_find2);
        sound_stop(snd_ann_destroy);
        }
    if (destroy){
        if (targettype==0){
            global.hp-=2;
            global.ignoreall=0;
            obj_iji.takingpain=0;
            obj_iji.invisible=0;
            obj_iji.ignorephysics=0;
            obj_iji.goingright=0;
            obj_iji.goingleft=0;
            obj_iji.running=0;
            obj_iji.kicking=0;
            obj_iji.switchingpose=0;
            obj_iji.firing=0;
            obj_iji.bedestroyed=0;
            if (facing==0){
                with (obj_iji)
                    scr_knockdown(1,10);
                }
            else{
                with (obj_iji)
                    scr_knockdown(2,10);
                }
            }
        else if (targettype==2){
            if (facing==0){
                instance_create(x-5,y+15,obj_xp3);
                if (targetcracked)
                    script_execute(scr_dropammo,15,15,1,4);
                else
                    script_execute(scr_dropammo,15,15,6,3);
                }
            else{
                instance_create(x+107,y+15,obj_xp3);
                if (targetcracked)
                    script_execute(scr_dropammo,87,15,1,4);
                else
                    script_execute(scr_dropammo,87,15,6,3);
                }
            }
        else if (targettype==3){
            if (facing==0){
                instance_create(x-5,y+15,obj_xp4);
                if (cracked)
                    script_execute(scr_dropammo,15,15,1,5);
                else{
                    script_execute(scr_dropammo,15,15,4,1);
                    if (ammodrop>1)
                        script_execute(scr_dropammo,15,15,4,3);
                    if (ammodrop>1)
                        script_execute(scr_dropammo,15,15,4,5);
                    }
                }
            else{
                instance_create(x+107,y+15,obj_xp4);
                if (cracked)
                    script_execute(scr_dropammo,87,15,1,5);
                else{
                    script_execute(scr_dropammo,87,15,4,1);
                    if (ammodrop>1)
                        script_execute(scr_dropammo,87,15,4,3);
                    if (ammodrop>1)
                        script_execute(scr_dropammo,87,15,4,5);
                    }
                }
            }
        }

    if (targettype!=0){
        repeat(10){
            xoffset=random(100);
            tempid=instance_create(x+xoffset,y+20+random(80),obj_komatobloodspecial);
            if (xoffset<50)
                tempid.direction=random(90)+135;
            else{
                tempid.direction=random(90)-45;
                tempid.image_index=6;
                }
            }
        }
    //End of Destroy

    if (global.specialbake==0)
        maximum=25;
    else
        maximum=120;
    if (instance_number(obj_scrapwhite)<maximum){
        repeat(40){
            tempid=instance_create(x+random(100),y+random(120),obj_scrapwhite);
            tempid.speed=random(10)+12;
            tempid.direction=random(360);
            }
        }
    if (crackmark){
        script_execute(scr_terminatecrack);
        global.erasetop=0;
        global.topmessage="CRACKING FAILED: subject is dead";
        }
    if (ijikill && !iosa && !killawarded){
        if (obj_iji.usingougi>0)
            killtype=9;
        global.kills+=1;
        global.killdata[killdataid]=killtype;
        killawarded=1;
        }
    scr_shakescreen(4);
    scr_nanoexplosion(50,75);
    instance_create(x,y+25,obj_enemyrocketexplosion);
    instance_create(x,y+125,obj_enemyrocketexplosion);
    instance_create(x+100,y+25,obj_enemyrocketexplosion);
    instance_create(x+100,y+125,obj_enemyrocketexplosion);
    instance_create(x+50,y+75,obj_enemympfbexplosion);
    instance_create(x+50,y+75,obj_explosioncenter);
    if ((x+50 > obj_shakescreen.x-500) && (x+50 < obj_shakescreen.x+500) && (y+75 > obj_shakescreen.y-400) && (y+75 < obj_shakescreen.y+400))
    scr_nanoexplosion(50,75);

    //Iosa dies: new backups
    if (iosa){
        scr_stopiosavoice();
        obj_sabot.backup_seconds=global.seconds;
        obj_sabot.backup_damage=global.damage;
        obj_sabot.backup_kills=global.kills;
        obj_sabot.backup_cracks=global.cracks;
        obj_sabot.backup_fails=global.fails;
        obj_sabot.backup_ammo2=global.ammo2;
        obj_sabot.backup_ammo3=global.ammo3;
        obj_sabot.backup_ammo4=global.ammo4;
        obj_sabot.backup_ammo6=global.ammo6;
        obj_sabot.backup_ammo7=global.ammo7;
        obj_sabot.backup_ammo8=global.ammo8;
        global.ignoreall=1;
        }
    if (!iosa){
        instance_create(x,y+120,obj_xp4);
        instance_create(x+25,y+40,obj_xp4);
        instance_create(x+75,y+40,obj_xp4);
        instance_create(x+100,y+120,obj_xp4);
        if (cracked){
            script_execute(scr_dropammo,50,59,1,10);
            script_execute(scr_dropammo,25,59,1,10);
            script_execute(scr_dropammo,75,59,1,10);
            }
        else{
            script_execute(scr_dropammo,25,59,2,10);
            if (ammodrop>1 && weapon==0)
                script_execute(scr_dropammo,25,59,2,8);
            script_execute(scr_dropammo,50,59,2,10);
            if (ammodrop>1 && weapon==0)
                script_execute(scr_dropammo,50,59,2,8);
            script_execute(scr_dropammo,75,59,2,10);
            if (ammodrop>1 && weapon==0)
                script_execute(scr_dropammo,75,59,1.5,8);
            }
        if (ijikill){
            tempid=instance_create(x+50,y+100,obj_visionchecke)
            tempid.direction=0;
            tempid.speed=16;
            tempid=instance_create(x+50,y+100,obj_visionchecke)
            tempid.direction=180;
            tempid.speed=16;
            }
        }
    instance_destroy();
    }
#define scr_betaannihilatorpain
//Beta Annihilator
armor=200;
instance_create(x,y,obj_annipainflash);
scr_sound("iji_basepain");
repeat(5){
    xoffset=random(100);
    tempid=instance_create(x+xoffset,y+50+random(50),obj_komatobloodspecial);
    if (xoffset<50)
        tempid.direction=random(90)+135;
    else{
        tempid.direction=random(90)-45;
        tempid.image_index=6;
        }
    }
//Death
if (hp<=0){
instance_activate_object(obj_terminal);
with (obj_terminal){
    if (trigger==36){
        cracked=1;
        sprite_index=spr_sec7terminal;
        }
    }
if (obj_sabot.annihilatorbeta){
    global.ignoreall=0;
    obj_sabot.annihilatorbeta=0;
    obj_sabot.ignoresmooth=1;
    obj_sabot.alarm[4]=2;
    obj_sabot.alarm[5]=1;
    obj_iji.takingpain=0;
    (instance_create(obj_iji.x,obj_iji.y,obj_blackblanket)).alarm[0]=2;
    }

if (global.specialbake==0)
    maximum=25;
else
    maximum=120;
if (instance_number(obj_scrapwhite)<maximum){
    repeat(40){
        tempid=instance_create(x+random(100),y+random(120),obj_scrapwhite);
        tempid.speed=random(10)+12;
        tempid.direction=random(360);
        }
    }
scr_shakescreen(4);
scr_nanoexplosion(50,75);
instance_create(x,y+25,obj_enemyrocketexplosion);
instance_create(x,y+125,obj_enemyrocketexplosion);
instance_create(x+100,y+25,obj_enemyrocketexplosion);
instance_create(x+100,y+125,obj_enemyrocketexplosion);
instance_create(x+50,y+75,obj_enemympfbexplosion);
instance_create(x+50,y+75,obj_explosioncenter);
instance_destroy();
}
#define scr_turretdestroy
global.truce=0;
scr_shakescreen(1);
if (global.specialbake==0) maximum=25;
else maximum=120;
if (instance_number(obj_scrapwhite)<maximum){
    repeat(20){
        tempid=instance_create(x+random(16),y+random(16),obj_scrapwhite);
        tempid.speed=random(9)+(10);
        tempid.direction=random(360);
        if (!dead)
            tempid.alarm[2]=4;
        }
    }
if (crackmark==1){
    scr_terminatecrack();
    global.erasetop=0;
    global.topmessage="CRACKING FAILED: Subject was destroyed";
    }
instance_destroy();

#define scr_enemythor
//Velocithor
while(distance<3000){
distance+=16;
if (distance==16){
    if (argument0==0)
        (instance_create(x,y,obj_enemythor2)).image_single=0;
    else
        (instance_create(x,y,obj_enemythor2)).image_single=1;
    }
if (argument0==0)
    x-=16;
else
    x+=16;
if (distance>16){
    instance_create(x,y,obj_enemythor);
    repeat(2) instance_create(x-32+random(64),y-24+random(46),obj_thorsmoke);
    }
}
instance_destroy();

#define scr_smasherwake
alarm[5]=300;
if (angry==0){
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=180;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=203;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=225;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=248;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=0;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=-23;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=-45;
tempid.speed=16;
tempid=instance_create(x+6,y+8,obj_visionchecke)
tempid.direction=-68;
tempid.speed=16;
}
angry=1;
#define scr_proximaarrow
if (x<view_xview[0]-64+16)
    paleft=1;
else
    paleft=0;
if (x>view_xview[0]+864-16)
    paright=1;
else
    paright=0;
if (y<view_yview[0]-64+16)
    paup=1;
else
    paup=0;
if (y>view_yview[0]+584-16)
    padown=1;
else
    padown=0;

if (x<view_xview[0]+16+24)
    paleftin=1;
else
    paleftin=0;
if (x>view_xview[0]+784-24)
    parightin=1;
else
    parightin=0;
if (y<view_yview[0]+64+24)
    paupin=1;
else
    paupin=0;
if (y>view_yview[0]+504-24)
    padownin=1;
else
    padownin=0;

if (paleft || paright || paup || padown){
    if (coldir==0){
        col+=20;
        if (col>=230)
            coldir=1;
        }
    else{
        col-=20;
        if (col<=100)
            coldir=0;
        }
    //FILL
    draw_set_color(make_color_rgb(128+col/2,128+col/2,col));
    //paupparight
    if ((paright && paup) || (parightin && paup) || (paright && paupin)){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(view_xview[0]+752,view_yview[0]+64);
        draw_vertex(view_xview[0]+784,view_yview[0]+64);
        draw_vertex(view_xview[0]+784,view_yview[0]+96);
        draw_primitive_end();
        }
    //pauppaleft
    else if ((paleft && paup) || (paleftin && paup) || (paleft && paupin)){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(view_xview[0]+16,view_yview[0]+64);
        draw_vertex(view_xview[0]+48,view_yview[0]+64);
        draw_vertex(view_xview[0]+16,view_yview[0]+96);
        draw_primitive_end();
        }
    //padownparight
    else if ((paright && padown) || (parightin && padown) || (paright && padownin)){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(view_xview[0]+752,view_yview[0]+504);
        draw_vertex(view_xview[0]+784,view_yview[0]+504);
        draw_vertex(view_xview[0]+784,view_yview[0]+472);
        draw_primitive_end();
        }
    //padownpaleft
    else if ((paleft && padown) || (paleftin && padown) || (paleft && padownin)){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(view_xview[0]+16,view_yview[0]+504);
        draw_vertex(view_xview[0]+48,view_yview[0]+504);
        draw_vertex(view_xview[0]+16,view_yview[0]+472);
        draw_primitive_end();
        }
    //paright
    else if (paright){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(view_xview[0]+784,y);
        draw_vertex(view_xview[0]+760,y-24);
        draw_vertex(view_xview[0]+760,y+24);
        draw_primitive_end();
        }
    //paup
    else if (paup){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(x,view_yview[0]+64);
        draw_vertex(x-24,view_yview[0]+88);
        draw_vertex(x+24,view_yview[0]+88);
        draw_primitive_end();
        }
    //paleft
    else if (paleft){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(view_xview[0]+16,y);
        draw_vertex(view_xview[0]+40,y-24);
        draw_vertex(view_xview[0]+40,y+24);
        draw_primitive_end();
        }
    //padown
    else if (padown){
        draw_primitive_begin(pr_trianglelist);
        draw_vertex(x,view_yview[0]+504);
        draw_vertex(x-24,view_yview[0]+480);
        draw_vertex(x+24,view_yview[0]+480);
        draw_primitive_end();
        }
    
    //OUTLINE
    draw_set_color(make_color_rgb(30+col/2,30+col/2,30));
    //paupparight
    if ((paright && paup) || (parightin && paup) || (paright && paupin)){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(view_xview[0]+752,view_yview[0]+64);
        draw_vertex(view_xview[0]+784,view_yview[0]+64);
        draw_vertex(view_xview[0]+784,view_yview[0]+96);
        draw_vertex(view_xview[0]+752,view_yview[0]+64);
        draw_primitive_end();
        }
    //pauppaleft
    else if ((paleft && paup) || (paleftin && paup) || (paleft && paupin)){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(view_xview[0]+16,view_yview[0]+64);
        draw_vertex(view_xview[0]+48,view_yview[0]+64);
        draw_vertex(view_xview[0]+16,view_yview[0]+96);
        draw_vertex(view_xview[0]+16,view_yview[0]+64);
        draw_primitive_end();
        }
    //padownparight
    else if ((paright && padown) || (parightin && padown) || (paright && padownin)){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(view_xview[0]+752,view_yview[0]+504);
        draw_vertex(view_xview[0]+784,view_yview[0]+504);
        draw_vertex(view_xview[0]+784,view_yview[0]+472);
        draw_vertex(view_xview[0]+752,view_yview[0]+504);
        draw_primitive_end();
        }
    //padownpaleft
    else if ((paleft && padown) || (paleftin && padown) || (paleft && padownin)){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(view_xview[0]+16,view_yview[0]+504);
        draw_vertex(view_xview[0]+48,view_yview[0]+504);
        draw_vertex(view_xview[0]+16,view_yview[0]+472);
        draw_vertex(view_xview[0]+16,view_yview[0]+504);
        draw_primitive_end();
        }
    //paright
    else if (paright){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(view_xview[0]+784,y);
        draw_vertex(view_xview[0]+760,y-24);
        draw_vertex(view_xview[0]+760,y+24);
        draw_vertex(view_xview[0]+784,y);
        draw_primitive_end();
        }
    //paup
    else if (paup){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(x,view_yview[0]+64);
        draw_vertex(x-24,view_yview[0]+88);
        draw_vertex(x+24,view_yview[0]+88);
        draw_vertex(x,view_yview[0]+64);
        draw_primitive_end();
        }
    //paleft
    else if (paleft){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(view_xview[0]+16,y);
        draw_vertex(view_xview[0]+40,y-24);
        draw_vertex(view_xview[0]+40,y+24);
        draw_vertex(view_xview[0]+16,y);
        draw_primitive_end();
        }
    //padown
    else if (padown){
        draw_primitive_begin(pr_linestrip);
        draw_vertex(x,view_yview[0]+504);
        draw_vertex(x-24,view_yview[0]+480);
        draw_vertex(x+24,view_yview[0]+480);
        draw_vertex(x,view_yview[0]+504);
        draw_primitive_end();
        }

    }
#define scr_iosaholdstill
//"HOLD STILL"
if (holdstill>=300 && obj_iji.y<832){
    if (global.voc_ios_ambient1==0){
        holdstillrand=random(1);
        if (holdstillrand<0.5){
            holdstillwait=200+ceil(random(200));
            holdstill=0;
            scr_sound("ios_ambient2");
            }
        }
    }
#define scr_enemycfisfire
//CFIS fire
while (stuck == 0 && distance < 288){
distance += 12;
if (global.enemycfistemp == 0){
    if (place_free(x-12, y) && !place_meeting(x-12,y,obj_screen) && !place_meeting(x-12,y,obj_leetbox)){
        x-=12;
        script_execute(scr_enemycfisattack);
        }
    else{
        stuck = 1;
        move_contact_solid(180,12);
        }
    }
if (global.enemycfistemp == 1){
    if (place_free(x+12, y) && !place_meeting(x+12,y,obj_screen) && !place_meeting(x+12,y,obj_leetbox)){
        x+=12;
        script_execute(scr_enemycfisattack);
        }
    else{
        stuck = 1;
        move_contact_solid(0,12);
        }
    }
}
#define scr_enemycfisattack
check=(collision_point(x,y,obj_iji,0,0));
if (check>0){
    if (!check.cfised && !obj_iji.takingpain && !obj_iji.recovering)
        global.armor-=30/global.armorlevel;
    check.cfised=1;
    }
check=(collision_point(x,y,obj_glass,0,0));
if (check>0){
    with (check)
        script_execute(scr_glassbreak,8,global.enemycfistemp+1);
    if (global.enemycfistemp==0)
        x+=12;
    else
        x-=12;
    }

check=(collision_point(x,y,obj_reflector,0,0));
if (check>0){
    with (check)
        scr_reflectorexplo();
    }
check=(collision_point(x,y,obj_disruptor,0,0));
if (check>0){
    with (check)
        scr_disruptorexplo();
    }
check=(collision_point(x,y,obj_shockbarrier,0,0));
if (check>0){
    with (check)
        scr_barrierexplo();
    }

#define scr_enemycfisdraw
//Draw the effect for the ENEMY CFIS
ran=8; //Magnitude of main beam chaos
mini=250; //Magnitude of lesser beam

if (global.enemycfistemp==0)
    global.enemycfisid.xadjust=-12;
else
    global.enemycfisid.xadjust=14;

if (x<(global.enemycfisid.x+6)){
    length = (global.enemycfisid.x-2)-x;
    node1x = (x+(length/6))-(length/ran)+random(length/(ran/2));
    node1y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node2x = (x+2*(length/6))-(length/ran)+random(length/(ran/2));
    node2y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node3x = (x+3*(length/6))-(length/ran)+random(length/(ran/2));
    node3y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node4x = (x+4*(length/6))-(length/ran)+random(length/(ran/2));
    node4y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node5x = (x+5*(length/6))-(length/ran)+random(length/(ran/2));
    node5y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    }
else{
    length = x-(global.enemycfisid.x+16);
    node1x = (x-(length/6))-(length/ran)+random(length/(ran/2));
    node1y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node2x = (x-2*(length/6))-(length/ran)+random(length/(ran/2));
    node2y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node3x = (x-3*(length/6))-(length/ran)+random(length/(ran/2));
    node3y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node4x = (x-4*(length/6))-(length/ran)+random(length/(ran/2));
    node4y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    node5x = (x-5*(length/6))-(length/ran)+random(length/(ran/2));
    node5y = (global.enemycfisid.y+13)-(length/ran)+random(length/(ran/2));
    }
if (!global.specialbake){
draw_set_color(make_color_rgb(220,220,0));
draw_line_width(x,y-1,node1x,node1y,5);
draw_line_width(node1x,node1y,node2x,node2y,5);
draw_line_width(node2x,node2y,node3x,node3y,5);
draw_line_width(node3x,node3y,node4x,node4y,5);
draw_line_width(node4x,node4y,node5x,node5y,5);
if (global.enemycfistemp==0){
    draw_line_width(node5x,node5y,(global.enemycfisid.x-2+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),5);
    }
if (global.enemycfistemp==1){
    draw_line_width(node5x,node5y,(global.enemycfisid.x+16+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),5);
    }
}
draw_set_color(c_white);
draw_line_width(x,y-1,node1x,node1y,3);
draw_line_width(node1x,node1y,node2x,node2y,3);
draw_line_width(node2x,node2y,node3x,node3y,3);
draw_line_width(node3x,node3y,node4x,node4y,3);
draw_line_width(node4x,node4y,node5x,node5y,3);
if (global.enemycfistemp==0){
    draw_line_width(node5x,node5y,(global.enemycfisid.x-2+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),3);
    }
if (global.enemycfistemp==1){
    draw_line_width(node5x,node5y,(global.enemycfisid.x+16+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),3);
    }

if (!global.specialbake){
//Shockwave lines
newlength=length/40;
if (global.enemycfistemp==0){
    draw_line((global.enemycfisid.x-2+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),(global.enemycfisid.x-(1*(newlength))+global.enemycfisid.xadjust),node5y-(mini/6));
    draw_line((global.enemycfisid.x-(1*(newlength))+global.enemycfisid.xadjust),node5y-(mini/6),(global.enemycfisid.x-(2*(newlength))+global.enemycfisid.xadjust),node4y-(mini/5));
    draw_line((global.enemycfisid.x-(2*(newlength))+global.enemycfisid.xadjust),node4y-(mini/5),(global.enemycfisid.x-(3*(newlength))+global.enemycfisid.xadjust),node3y-(mini/4));
    draw_line((global.enemycfisid.x-(3*(newlength))+global.enemycfisid.xadjust),node3y-(mini/4),(global.enemycfisid.x-(4*(newlength))+global.enemycfisid.xadjust),node2y-(mini/5));
    draw_line((global.enemycfisid.x-2+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),(global.enemycfisid.x-(1*(newlength))+global.enemycfisid.xadjust),node5y+(mini/6));
    draw_line((global.enemycfisid.x-(1*(newlength))+global.enemycfisid.xadjust),node5y+(mini/6),(global.enemycfisid.x-(2*(newlength))+global.enemycfisid.xadjust),node4y+(mini/5));
    draw_line((global.enemycfisid.x-(2*(newlength))+global.enemycfisid.xadjust),node4y+(mini/5),(global.enemycfisid.x-(3*(newlength))+global.enemycfisid.xadjust),node3y+(mini/4));
    draw_line((global.enemycfisid.x-(3*(newlength))+global.enemycfisid.xadjust),node3y+(mini/4),(global.enemycfisid.x-(4*(newlength))+global.enemycfisid.xadjust),node2y+(mini/5));
    }
if (global.enemycfistemp==1){
    draw_line((global.enemycfisid.x+16+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),(global.enemycfisid.x+16+(1*(newlength))+global.enemycfisid.xadjust),node5y-(mini/6));
    draw_line((global.enemycfisid.x+16+(1*(newlength))+global.enemycfisid.xadjust),node5y-(mini/6),(global.enemycfisid.x+16+(2*(newlength))+global.enemycfisid.xadjust),node4y-(mini/5));
    draw_line((global.enemycfisid.x+16+(2*(newlength))+global.enemycfisid.xadjust),node4y-(mini/5),(global.enemycfisid.x+16+(3*(newlength))+global.enemycfisid.xadjust),node3y-(mini/4));
    draw_line((global.enemycfisid.x+16+(3*(newlength))+global.enemycfisid.xadjust),node3y-(mini/4),(global.enemycfisid.x+16+(4*(newlength))+global.enemycfisid.xadjust),node2y-(mini/5));
    draw_line((global.enemycfisid.x+16+global.enemycfisid.xadjust),(global.enemycfisid.y+13+global.enemycfisid.yadjust),(global.enemycfisid.x+16+(1*(newlength))+global.enemycfisid.xadjust),node5y+(mini/6));
    draw_line((global.enemycfisid.x+16+(1*(newlength))+global.enemycfisid.xadjust),node5y+(mini/6),(global.enemycfisid.x+16+(2*(newlength))+global.enemycfisid.xadjust),node4y+(mini/5));
    draw_line((global.enemycfisid.x+16+(2*(newlength))+global.enemycfisid.xadjust),node4y+(mini/5),(global.enemycfisid.x+16+(3*(newlength))+global.enemycfisid.xadjust),node3y+(mini/4));
    draw_line((global.enemycfisid.x+16+(3*(newlength))+global.enemycfisid.xadjust),node3y+(mini/4),(global.enemycfisid.x+16+(4*(newlength))+global.enemycfisid.xadjust),node2y+(mini/5));
    }
    //Sparks
global.cfissparkcycle=global.cfissparkcycle+1;
if (global.cfissparkcycle==6){
    global.cfissparkcycle=0;
    instance_create(node1x,node1y,obj_cfisspark);
    instance_create(node2x,node2y,obj_cfisspark);
    instance_create(node3x,node3y,obj_cfisspark);
    instance_create(node4x,node4y,obj_cfisspark);
    instance_create(node5x,node5y,obj_cfisspark);
    instance_create(x,y,obj_cfisspark);
    }
    //Flash
for (i=0; i<3; i+=1){
    if (place_free(x-2,y)==0 || place_free(x+2,y)==0){
        randx=random(120)-60;
        randy=random(120)-60;
        draw_line(x,y,x+randx,y+randy);
        }
    }
}
#define scr_turretchargetell
if (weapon!=0 && weapon!=5){
    if (weapon==3 || weapon==6){
        scr_sound("tor_gather");
        }
    else
        scr_sound("wea_charge");
    if (facing==0)
        (instance_create(x-4,y+20,obj_chargetell)).tempid=id;
    else
        (instance_create(x+36,y+20,obj_chargetell)).tempid=id;
    }
#define scr_ansaksievoice
if (voice<=0){
    temprand=random(1);
    if (temprand<1){
        voice=200+random(200);
        voicenum=ceil(random(2));
        if (obj_iosa.hp<200){
            voicenum=ceil(random(3));
            if (voicenum==3)
                voicenum=4;
            }
        if (obj_iosa.hp<40)
            voicenum=4;
        scr_voice("ext_ansaksie",voicenum);
        }
    }
#define scr_resolutionsabotcreate
global.rrkills=1; //Should reflector award kills?
global.nomercy=0;
global.fireanytime=0;
global.randomstations=0;
global.noreloads=0;
global.debug=0;

global.niosas=1; //depracated, but set for safety
set=0;
fade=0;
repeat(250)
    instance_create(random(800),random(600),obj_resolutionpart);
scr_addfonts();
scr_loadmusic();
#define scr_facecreate
repeat(5)
    sound_stop_all();
scr_musicvolume();
scr_appendsave();
if (!file_exists("ijisaveext.sav"))
    scr_createkillfile();

//Stuff
global.assimilatebase=0; //base ammo cap
global.assimilatesize=5; //plus ammo per assimilate level
global.horse=0;
global.neutralkc=5; //OVER this is neutral
global.berserkkc=30; //OVER this is berserk
obj_menutext.difinfoy=-256;
instance_create(0,0,obj_gamma);
for (i=0;i<800;i+=1)
    global.killdata[i]=0;
intropic=floor(random(3));
if (intropic>=2)
    intropic=0;
drawsubtitle=0;
subtitle="";
soundtestmax=214;
warp=1;
sdwarp=1;
weaponinfo=1;
enemyinfo=1;
sectormaps=1;
soundtest=0;
//global.scrambler=0;
global.passive=0;
global.trucefix=0;
global.truce=0;
global.truce2=0;
global.tormaximumcharge=0;
global.iosaphase=0;
global.hiddenskill1=0;
global.hiddenskill2=0;
global.hiddenskill3=0;
global.poster1=0;
global.poster2=0;
global.poster3=0;
global.poster4=0;
global.poster5=0;
global.poster6=0;
global.poster7=0;
global.poster8=0;
global.poster9=0;
global.poster10=0;
global.extras1=0;
global.extras2=0;
global.extras3=0;
global.extras4=0;
global.extras5=0;
global.extras6=0;
global.extras7=0;
global.extras8=0;
global.specialtrigger1=0;
global.specialtrigger2=0;
global.specialtrigger4=0;
global.specialtrigger8=0;
global.specialtrigger16=0;
global.specialtrigger32=0;
global.specialtriggerb1=0;
global.specialtriggerb2=0;
global.specialtriggerb4=0;
global.specialtriggerc=0;
global.nhours=9;
global.nminutes=59;
global.nseconds=59;
global.hhours=9;
global.hminutes=59;
global.hseconds=59;
global.ehours=9;
global.eminutes=59;
global.eseconds=59;
global.uhours=9;
global.uminutes=59;
global.useconds=59;
global.maxribbons=0;
global.numribbons=0;
global.sds1=0;
global.sds2=0;
global.sds3=0;
global.sds4=0;
global.sds5=0;
global.sds6=0;
global.sds7=0;
global.sds8=0;
global.sds9=0;
global.sds10=0;
//global.outfit=0;
global.suddendeath=0;
global.sswarp=0;
global.seconds=0;
global.difficulty=0;
global.facing=0;
global.state=0;
global.shakescreen=0;
global.dead=0;
global.armor=0;
global.hp=0;
global.chat=0;
global.chats=0;
global.maxlevel=0;
global.time=0;
global.erasetop=0;
global.cut=0;
global.ignoremessagescroll=0;
global.tempshred=0;
global.tempid=0;
global.xpcount=0;
global.ignorestation=0;
global.annitemp=0;
global.tempcru1=0;
global.tempcru2=0;
global.security=0;
global.cracktext="0";
global.running=0;
global.cracking=0;
global.colcount=0;
global.nodes=0;
global.youcol=0;
global.yourow=0;
global.cracktime=0;
global.weapstation=0;
global.levelstation=0;
global.cfissparkcycle=0;
global.outline=0;
global.bosshint=0;
global.really=0;

global.gamma=0;
global.gammared=0;
global.gammagreen=0;
global.gammablue=0;
alarm[0]=1;
keyboard_unset_map();
if (file_exists("ijisave.sav")==0){
    scr_createfile();
    scr_writesum();
    }
scr_readsum(1);
if (wrongsum){
    global.kickkey=ord("Z");
    global.firekey=ord("X");
    global.usekey=ord("C");
    global.weap5key=ord("Q");
    global.weap6key=ord("W");
    global.weap7key=ord("E");
    global.weap8key=ord("R");
    global.prevkey=ord("A");
    global.specialkey=ord("S");
    global.nextkey=ord("D");
    global.noshake=0;
    global.detaillevel=0; //UNUSED: global.specialbake is the real variable
    global.nosound=0;
    global.novoice=0;
    global.nomusic=0;
    global.nogamma=0;
    global.noblood=0;
    global.specialbake=0;
    global.hidetime=1;
    }
else
    scr_loadkeys();
if (global.kickkey!=global.firekey && global.kickkey!=global.usekey && global.kickkey!=global.weap5key && global.kickkey!=global.weap6key && global.kickkey!=global.weap7key && global.kickkey!=global.weap8key && global.firekey!=global.usekey && global.firekey!=global.weap5key && global.firekey!=global.weap6key && global.firekey!=global.weap7key && global.firekey!=global.weap8key && global.usekey!=global.weap5key && global.usekey!=global.weap6key && global.usekey!=global.weap7key && global.usekey!=global.weap8key && global.weap5key!=global.weap6key && global.weap5key!=global.weap7key && global.weap5key!=global.weap8key && global.weap6key!=global.weap7key && global.weap6key!=global.weap8key && global.weap7key!=global.weap8key && global.prevkey!=global.usekey && global.prevkey!=global.firekey && global.prevkey!=global.kickkey && global.prevkey!=global.weap5key && global.prevkey!=global.weap6key && global.prevkey!=global.weap7key && global.prevkey!=global.weap8key && global.prevkey!=global.nextkey && global.prevkey!=global.specialkey && global.nextkey!=global.usekey && global.nextkey!=global.firekey && global.nextkey!=global.kickkey && global.nextkey!=global.weap5key && global.nextkey!=global.weap6key && global.nextkey!=global.weap7key && global.nextkey!=global.weap8key && global.nextkey!=global.specialkey && global.specialkey!=global.usekey && global.specialkey!=global.firekey && global.specialkey!=global.kickkey && global.specialkey!=global.weap5key && global.specialkey!=global.weap6key && global.specialkey!=global.weap7key && global.specialkey!=global.weap8key){
    //Nothing
    }
else{
    global.kickkey=ord("Z");
    global.firekey=ord("X");
    global.usekey=ord("C");
    global.weap5key=ord("Q");
    global.weap6key=ord("W");
    global.weap7key=ord("E");
    global.weap8key=ord("R");
    global.prevkey=ord("A");
    global.specialkey=ord("S");
    global.nextkey=ord("D");
    }

menu=0;
menuappear=0;
menuwait=210;
count=14;
temptier="nonexistant";
tier="nonexistant";
image_speed=0.25;
instance_create(0,0,obj_mainsdindicator);
//scrolling stuff
x-=110;
background_x[1]-=90;
background_x[2]+=16;
background_x[3]+=16;
background_x[4]+=16;
background_x[5]+=16;
global.wty=0;
#define scr_facedraw
fimgcyc+=1;
if (fimgcyc>=4){
    image_single+=1;
    fimgcyc=0;
    if (image_single>=4)
        image_single=0;
    }
draw_sprite(sprite_index,image_single,x,y);
if (drawkonami){
    konamicyc+=4;
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(800-konamicyc,570,konamitext,28,8000);
    if (konamicyc>800+string_length(konamitext)*12){
        ignoreall=0;
        code=0;
        dcode=0;
        scode=0;
        konamicyc=0;
        drawkonami=0;
        }
    }
draw_set_font(global.fontwhite);
draw_set_color(c_white);
draw_text_ext(400-string_length(subtitle)*6,538,subtitle,28,8000);
#define scr_mainload
//Obsolete
#define scr_mainmenu
//seczmusic
if (seczmusic)
    scr_seczmusicplay();

//Quit
if (keyboard_check(vk_f12)){
    f12quit+=1;
    if (f12quit>=20){
        sound_stop_all();
        game_end();
        }
    }
else
    f12quit=0;

//sound test fix
if (tier="extras3" && selected==4)
    iamthemenu=1;
else
    iamthemenu=0;

//scrolling
if (menuwait<90 && bgscrollcyc<82){
    bgscrollcyc+=1;
    x+=1;
    background_x[1]+=1;
    if (bgscrollcyc2==0)
        bgscrollcyc2=1;
    else{
        bgscrollcyc2=0;
        background_x[2]-=1;
        background_x[3]-=1;
        background_x[4]-=1;
        background_x[5]-=1;
        }
    }

//Binary
if (bgscrollcyc>=82){
    step1-=1;
    if (step1<=0){
        temprand=floor(random(6));
        tempid=instance_create(-10,2,obj_mainbinary);
        tempid.hspeed=1;
        tempid.image_single=temprand;
        step1=12;
        tempid.alarm[0]=130+random(90);
        
        tempid=instance_create(810,583,obj_mainbinary);
        tempid.hspeed=-1;
        tempid.image_single=temprand;
        tempid.alarm[0]=160+random(90);
        }
    step2-=2;
    if (step2<=0){
        temprand=floor(random(6));
        tempid=instance_create(-10,32,obj_mainbinary);
        tempid.hspeed=2;
        tempid.image_single=temprand;
        step2=12;
        tempid.alarm[0]=125+random(70);
        
        tempid=instance_create(810,553,obj_mainbinary);
        tempid.hspeed=-2;
        tempid.image_single=temprand;
        tempid.alarm[0]=155+random(80);
        }
    step3-=1;
    if (step3<=0){
        temprand=floor(random(6));
        tempid=instance_create(-10,52,obj_mainbinary);
        tempid.hspeed=1;
        tempid.image_single=temprand;
        step3=12;
        tempid.alarm[0]=200+random(100);
        
        tempid=instance_create(810,533,obj_mainbinary);
        tempid.hspeed=-1;
        tempid.image_single=temprand;
        tempid.alarm[0]=250+random(120);
        }
    step4-=2;
    if (step4<=0){
        temprand=floor(random(6));
        tempid=instance_create(-10,92,obj_mainbinary);
        tempid.hspeed=2;
        tempid.image_single=temprand;
        step4=12;
        tempid.alarm[0]=30+random(50);
        
        tempid=instance_create(810,503,obj_mainbinary);
        tempid.hspeed=-2;
        tempid.image_single=temprand;
        tempid.alarm[0]=45+random(50);
        }
    }



//Main covers
if (delcover<10){
    with (obj_maincover){
        if (x==380+obj_face.delcover*60 || x==380+obj_face.delcover*60-12 || x==380+obj_face.delcover*60-24 || x==380+obj_face.delcover*60-36 || x==380+obj_face.delcover*60-48){
            alarm[0]=5;
            image_single=-1;
            }
        }
    delcover+=1;
    }

if (temptier!=tier){
    delcover=0;
    temptier=tier;
    with (obj_maincover)
        instance_destroy();
    if (nocovers)
        nocovers=0;
    else{
        for (i=0; i<7; i+=1){
            for (j=0; j<26; j+=1)
                instance_create(380+j*12,282+i*28,obj_maincover);
            }
        }
    }

//begin real menu
if (count==0 && menu==0){
    menu=1;
    instance_create(360,273,obj_marker);
    if (global.extras1==0)
        selections=6;
    else
        selections=7;
    selected=1;
    tier="main";
    temptier="main";
    delcover=0;
    for (i=0; i<7; i+=1){
        for (j=0; j<26; j+=1)
            instance_create(380+j*12,282+i*28,obj_maincover);
        }
    }
//erase intro
menuwait-=1;
if (menuwait<=105 && menuwait>90)
    flash=(7-(menuwait/15))
if (menuwait==90){
    with(obj_intro1) instance_destroy();
    with(obj_intro2) instance_destroy();
    with(obj_introtext) instance_destroy();
    scr_music("mus_mainmenu");
    flash=1;
    fadeflash=1;
    }
if (fadeflash==1 && flash>0)
    flash-=1/60;
if (lastfadeout==0){
    //if (!global.nogamma)
        //global.gamma=flash;
    }
//set menu to appear
if (menuwait==8 && menuappear==0){
    menuappear=1;
    }
//logo & menu appears
if (menuappear==1 && count>0){
    if (count==13) instance_create(419,13,obj_logotext);
    if (count==10) instance_create(497,90,obj_logotext);
    if (count==7) instance_create(574,90,obj_logotext);
    if (count==4) instance_create(496,39,obj_logotext);
    if (count==1) instance_create(573,39,obj_logotext);
    if (count>0 && count<13){
        instance_create(314+(count*16),240,obj_menuback);
        instance_create(314+(count*16+8),240,obj_menuback);
        instance_create(714-(count*16),240,obj_menuback);
        instance_create(714-(count*16+8),240,obj_menuback);
        }
    count-=1;
    }

//Fade out
if (lastfadeout>0){
    lastfadeout-=0.05;
    global.gamma=lastfadeout-1;
    }
else if (lastfadeout!=0 && lastfadeout!=-5){
    lastfadeout=-5;
    global.gamma=-1;
    }

//sudden death completion indicator
if (menu==1 && tier="extras2" && global.extras2==1){
    obj_mainsdindicator.visible=0;
    if (sdwarp==1 && global.sds1)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==2 && global.sds2)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==3 && global.sds3)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==4 && global.sds4)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==5 && global.sds5)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==6 && global.sds6)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==7 && global.sds7)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==8 && global.sds8)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==9 && global.sds9)
        obj_mainsdindicator.visible=1;
    else if (sdwarp==0 && global.sds10)
        obj_mainsdindicator.visible=1;
    }
else
    obj_mainsdindicator.visible=0;

//rapidly scroll through the sound effects
if (tier=="extras3" && global.extras1 && selected==4){
    if (keyboard_check(vk_left) && !keyboard_check(vk_right)){
        if (turboscroll<100)
            turboscroll+=1;
        }
    else if (keyboard_check(vk_right) && !keyboard_check(vk_left)){
        if (turboscroll<100)
            turboscroll+=1;
        }
    else
        turboscroll=0;
    if (turboscroll>=15){
        if (keyboard_check(vk_left)){
            soundtest-=1;
            repeat(10)
                sound_stop_all();
            if (turboscroll>60)
                soundtest-=1;
            if (soundtest<0)
                soundtest=soundtestmax;
            }
        if (keyboard_check(vk_right)){
            soundtest+=1;
            repeat(10)
                sound_stop_all();
            if (turboscroll>60)
                soundtest+=1;
            if (soundtest>soundtestmax)
                soundtest=0;
            }
        }
    }

//really
if (tier="new" && keyboard_check(vk_right) && !really){
    reallytick+=1;
    if (reallytick==150 && global.extras3){
        reallytick=0;
        scr_sound("glo_menumove");
        really=1;
        scr_menutext();
        selections=6;
        }
    }
else
    reallytick=0;
#define scr_menutext
//black background
if (obj_face.menuwait>90){
    draw_set_color(c_black);
    draw_rectangle(-1,-1,801,601,0);
    text="       MAIN MENU          New game                  Load game                 Options                   Controls                  Extras                    Quit";
    }
//menu text draw
if (obj_face.menu=1){
    depth= -2;
    if (obj_face.tier="main"){
    if (global.extras1)
    text="       MAIN MENU          New game                  Load game                 Options                   Controls                  Extras                    Records                   Quit";
    else
    text="       MAIN MENU          New game                  Load game                 Options                   Controls                  Extras                    Quit";
    }
    else if (obj_face.tier="new"){
    if (obj_face.really)
    text="   SELECT DIFFICULTY      Normal                    Hard                      Extreme                   Ultimortal                reallyjoel's dad          Back to Main menu         ~~~                       ";
    else
    text="   SELECT DIFFICULTY      Normal                    Hard                      Extreme                   Ultimortal                Back to Main menu         ~~~                       ";
        if (obj_face.selected==4 && !global.extras3)
            text+="~>Beat Extreme to unlock"
        }
    else if (obj_face.tier="load")
    text="       LOAD GAME          Back to Main menu         "+obj_face.readsaves;
    else if (obj_face.tier="options")
    text="       OPTIONS 1          Back to Main menu         Screen shaking            Voices                    Sound effects             Music                     Show~time~~~~~~~~~~~~~~~~ More|~~~~~~~~~~~~~~~~~~~";
    else if (obj_face.tier="options2")
    text="       OPTIONS 2          Back to Options 1         Screen color FX           Special effects           Human blood               ";
    else if (obj_face.tier="controls")
    text="   CONFIGURE CONTROLS     Back to Main menu         Restore defaults          ("+chr(global.kickkey)+") Kick                  ("+chr(global.firekey)+") Fire                  ("+chr(global.usekey)+") Use                   Secondary weapon keys|    ~>Push a letter to set key";
    else if (obj_face.tier="controls2")
    text="  SECONDARY WEAPON KEYS   Back to Controls menu     Restore defaults          ("+chr(global.prevkey)+") Previous weapon       ("+chr(global.nextkey)+") Next weapon           ("+chr(global.specialkey)+") Select super-weapon   Tertiary weapon keys|     ~>Push a letter to set key";
    else if (obj_face.tier="weapons")
    text="   TERTIARY WEAPON KEYS   Back to Secondary keys    Restore defaults          ("+chr(global.weap5key)+") Weapon 5              ("+chr(global.weap6key)+") Weapon 6              ("+chr(global.weap7key)+") Weapon 7              ("+chr(global.weap8key)+") Weapon 8              ~>Push a letter to set key";

    if (obj_face.tier="extras"){
    text="        EXTRAS 1          Back to Main menu         ";
    //POSTER VIEWER
    if (global.poster1 || global.poster2 || global.poster3 || global.poster4 || global.poster5 || global.poster6 || global.poster7 || global.poster8 || global.poster9 || global.poster10){
        text+="Poster viewer             ";
        }
    else
        text+="???                       ";
    //SINGLE SECTOR WARP
    if (global.extras1){
        text+="Single Sector play < ";
        if (obj_face.warp==10)
            text+="X";
        else if (obj_face.warp==0)
            text+="Z";
        else
            text+=string(obj_face.warp);
        text+=" >  ";
        }
    else
        text+="???                       ";
    //PLAY HERO 3D
    if (global.extras2)
        text+="Play Hero 3D              ";
    else
        text+="???                       ";
    //ALTERNATE OUTFIT
    if (global.extras3){
        text+="Alternate outfit ";
        if (global.outfit==0)
            text+="< OFF >  ";
        else
            text+="< ON  >  ";
        }
    else
        text+="???                       ";
    //More
    text+="More|                     ";
    if (obj_face.selected==2) text+="~>Find well-hidden posters";
    if (obj_face.selected==3) text+="~>Beat the game on Normal";
    if (obj_face.selected==4) text+="~>Beat the game on Hard";
    if (obj_face.selected==5) text+="~>Beat the game on Extreme";
    }
    //EXTRAS 2
    if (obj_face.tier="extras2"){
    text="        EXTRAS 2          Back to Extras 1          ";
    //WEAPON INFORMATION
    if (global.extras4){
        text+="Weapon information < ";
        if (obj_face.weaponinfo>=19){
            text+="P"
            text+=string(obj_face.weaponinfo-18);
            }
        else{
            if (obj_face.weaponinfo<10)
                text+="0"
            text+=string(obj_face.weaponinfo);
            }
        text+=" > "
        }
    else
        text+="???                       ";
    //ENEMY INFORMATION
    if (global.extras6){
        text+="Enemy information < ";
        if (obj_face.enemyinfo<10)
            text+="0"
        text+=string(obj_face.enemyinfo);
        text+=" >  "
        }
    else
        text+="???                       ";
    //SECTOR MAPS
    if (global.extras1){
        text+="Sector maps < ";
        if (obj_face.sectormaps!=0)
            text+=string(obj_face.sectormaps);
        else
            text+="X"
        text+=" >         "
        }
    else
        text+="???                       ";
    //SUDDEN DEATH
    if (global.extras2){
        text+="Sudden Death Sector < ";
        if (obj_face.sdwarp!=0)
            text+=string(obj_face.sdwarp);
        else
            text+="X";
        text+=" > ";
        }
    else
        text+="???                       ";
    text+="More|                     ";

    if (obj_face.selected==2) text+="~>Get `Nanomaster` rank";
    if (obj_face.selected==3) text+="~>Get `Immortal` rank";
    if (obj_face.selected==4) text+="~>Beat the game on Normal";
    if (obj_face.selected==5){
        text+="~>Beat the game on Hard";
        }
    }

    //EXTRAS 3
    if (obj_face.tier="extras3"){
        text="        EXTRAS 3          Back to Extras 2          ";
        //TURBO MODE
        if (global.extras8){
            text+="Turbo mode ";
            if (global.turbomode==0)
                text+="< OFF >        ";
            else if (global.turbomode==1)
                text+="< ON  >        ";
            }
        else
            text+="???                       ";
        //SCRAMBLER
        if (global.extras7){
            text+="Scrambler ";
            if (global.scrambler==0)
                text+="< OFF >        ";
            else if (global.scrambler==1)
                text+="< ON  >        ";
            }
        else
            text+="???                       ";
        //SOUND TEST
        if (global.extras1){
            if (obj_face.selected==4){
                text+="<~";
                scr_mainsoundtexts();
                text+="~>#";
                }
            else{
                text+="<~Sound test~>#";
                }
            }
        else{
            text+="~~~                       ";
            text+="~~~                       ";
            }
//        text+="~~~                       ";
        text+="~~~                       ";
        if (obj_face.selected==2) text+="~>Beat game on Ultimortal";
        if (obj_face.selected==3) text+="~>Find the Scrambler";
        if (obj_face.selected==4) text+="~>Beat the game on Normal";
        }

    if (obj_face.tier="quit")
    text="       QUIT GAME?         Yes                       No";
    if (obj_face.tier="error")
    text="          ERROR           Back to Controls menu#$#SOME OF THE ACTIONS ARE   ASSIGNED TO THE SAME KEY. PLEASE RE-ASSIGN THE      CONTROLS AND WEAPON KEYS.";
    if (obj_face.tier="error2")
    text="          ERROR           Back to Main menu#$#THE SAVE FILE (ijisave)   IS CORRUPT. SAVE FILES    COULD NOT BE READ. PLEASE START A NEW GAME TO FIX   THE SAVEFILE.";
    if (obj_face.tier="error3")
    text="         WARNING          Continue (cannot save)    Fix/reset savefile        Abort#$#THE SAVE FILE (ijisave)   IS CORRUPT. CONTROLS AND  OPTIONS HAVE BEEN RESET.";
    if (obj_face.tier="ultimortal")
    text="      ARE YOU SURE?       Yes, bring it on          No, not really";
    if (obj_face.tier="really")
    text="ARE YOU REALLYJOEL'S DAD? Of course                 Maybe not";
    if (obj_face.tier="secret")
    text="       TOP SECRET         Back to Main menu         Information               1.6 Reflector             No mercy                  Fire anytime              Random stations           No reloads              ";
    if (obj_face.tier="supersecret")
    text="      FINAL SECRET        Back to Main menu         Information               Debug mode                ";
        //                          |                         |                         |                         |                         |                         |                         |

//DRAW
    draw_set_font(global.fontblue);
    draw_set_color(c_white);
    draw_text_ext(380,254,text,28,326);
    if (obj_face.tier="extras"){
        draw_set_font(global.fontblue2);
        draw_set_color(c_white);
        if (!global.poster1 && !global.poster2 && !global.poster3 && !global.poster4 && !global.poster5 && !global.poster6 && !global.poster7 && !global.poster8 && !global.poster9 && !global.poster10)
            draw_text_ext(380,310,"Poster~viewer~~~~~~~~~~~~~",28,326);
        if (!global.extras1)
            draw_text_ext(380,338,"Single~Sector~play~~~~~~~~",28,326);
        if (!global.extras2)
            draw_text_ext(380,366,"Play~Hero~3D~~~~~~~~~~~~~~",28,326);
        if (!global.extras3)
            draw_text_ext(380,394,"Alternate~outfit~~~~~~~~~~",28,326);
        }
    else if (obj_face.tier="extras2"){
        draw_set_font(global.fontblue2);
        draw_set_color(c_white);
        if (!global.extras4)
            draw_text_ext(380,310,"Weapon~information~~~~~~~~",28,326);
        if (!global.extras6)
            draw_text_ext(380,338,"Enemy~information~~~~~~~~~",28,326);
        if (!global.extras1)
            draw_text_ext(380,366,"Sector~maps~~~~~~~~~~~~~~~",28,326);
        if (!global.extras2)
            draw_text_ext(380,394,"Sudden~Death~Sector~~~~~~~",28,326);
        }
    else if (obj_face.tier="extras3"){
        draw_set_font(global.fontblue2);
        draw_set_color(c_white);
        if (!global.extras8)
            draw_text_ext(380,310,"Turbo~mode~~~~~~~~~~~~~~~~",28,326);
        if (!global.extras7)
            draw_text_ext(380,338,"Scrambler~~~~~~~~~~~~~~~~~",28,326);
        if (!global.extras1)
            draw_text_ext(380,366,"Sound~test~~~~~~~~~~~~~~~~",28,326);
        }
    else if (obj_face.tier="new" && !global.extras3){
        draw_set_font(global.fontblue2);
        draw_set_color(c_white);
        draw_text_ext(380,366,"Ultimortal~~~~~~~~~~~~~~~~",28,326);
        }
    }

//Difficulty info
if (obj_face.tier=="new"){
    if (difinfoy<0)
        difinfoy+=64;
    }
else if (difinfoy>-256)
    difinfoy-=64;
difinfotext="";
if (obj_face.tier="new"){
    if (obj_face.selected==1)
        difinfotext="You can gain 5 levels per Sector#Normal cracking time limit#Low cracking failure penalties#Red Nanofields recover 2 HP#Reduced amount of enemies";
    else if (obj_face.selected==2)
        difinfotext="You can gain 4 levels per Sector#Stricter cracking time limit#High cracking failure penalties#Red Nanofields recover 1 HP#Tougher bosses";
    else if (obj_face.selected==3)
        difinfotext="You can gain 3 levels per Sector#Very strict cracking time limit#Extreme cracking failure penalties#Red Nanofields recover 1 HP#Super tough bosses#No Nano Overloads";
    else if (obj_face.selected==4 && global.extras3)
        difinfotext="Same as Extreme, plus:#Each Sector has a time limit#Only Health can be upgraded#No Red or Green Nanofields#Most enemies are faster";
    else if (obj_face.selected==5 && obj_face.really)
        difinfotext="You cannot gain levels#Nuclear cracking failure penalties#Each Sector has a time limit#No Nanofields or Overloads#Bosses are impossible#More enemies, enemy stats doubled";
    }
for (i=0;i<14;i+=1){
    if (i==0)
        draw_sprite(spr_difinfo,0,294+i*32,24+difinfoy);
    else if (i==13)
        draw_sprite(spr_difinfo,2,294+i*32,24+difinfoy);
    else
        draw_sprite(spr_difinfo,1,294+i*32,24+difinfoy);
    }
draw_set_font(global.fontwhite);
draw_set_color(c_white);
draw_text_ext(312,40+difinfoy,difinfotext,28,800);

#define scr_menuselection
if(menuwait>91 && menuwait<205)
    menuwait=91;
if(menuwait>10 && menuwait<88)
    menuwait=9;
if(menu && !ignoreall){
//MAIN
if(tier="main"){
    if(selected==1){
        scr_sound("glo_menuselect");
        scr_readsum();
        if (wrongsum){
            tier="error3";
            global.kickkey=ord("Z");
            global.firekey=ord("X");
            global.usekey=ord("C");
            global.weap5key=ord("Q");
            global.weap6key=ord("W");
            global.weap7key=ord("E");
            global.weap8key=ord("R");
            global.prevkey=ord("A");
            global.specialkey=ord("S");
            global.nextkey=ord("D");
            global.noshake=0;
            global.detaillevel=0; //UNUSED: global.specialbake is the real variable
            global.nosound=0;
            global.nomusic=0;
            global.novoice=0;
            global.nogamma=0;
            global.noblood=0;
            global.hidetime=1;
            global.specialbake=0;
            global.rrkills=1;
            global.nomercy=0;
            global.fireanytime=0;
            global.noreloads=0;
            global.randomstations=0;
            global.debug=0;
            }
        else
            tier="new";
        selected=1;
        }
    else if(selected==2){
        scr_readsum();
        if (wrongsum){
            tier="error2"
            selected=1;
            scr_sound("glo_menuselect");
            }
        else{
            scr_readsaves();
            tier="load";
            selected=1;
            scr_sound("glo_menuselect");
            }
        }
    else if(selected==3){
        tier="options";
        instance_create(596,311,obj_onoff);
        instance_create(596,339,obj_onoff);
        instance_create(596,367,obj_onoff);
        instance_create(596,395,obj_onoff);
        instance_create(596,423,obj_onoff);
        //instance_create(596,451,obj_onoff);
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==4){
        tier="controls";
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==5){
        tier="extras";
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==6 && global.extras1){
        scr_menufulltexts(); //This must happen before tier change
        tier="wait";
        waittype=3;
        scr_sound("glo_menuselect");
        instance_create(0,0,obj_mainfullcover);
        }
    else if((selected==6 && global.extras1==0) || (selected==7 && global.extras1==1)){
        tier="quit";
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==8){
        tier="secret";
        instance_create(596,339,obj_onoff);
        instance_create(596,367,obj_onoff);
        instance_create(596,395,obj_onoff);
        instance_create(596,423,obj_onoff);
        instance_create(596,451,obj_onoff);
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==9){
        tier="supersecret";
        instance_create(596,339,obj_onoff);
        selected=1;
        scr_sound("glo_menuselect");
        }
    }
//NEW
else if(tier="new"){
    if (selected<4){
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        alarm[1]=14;
        scr_sound("glo_menuselect");
        }
    else if(selected==4 && global.extras3==1){
        tier="ultimortal";
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==5 && !really){
        tier="main";
        selected=1;
        scr_sound("glo_menuback");
        }
    else if(selected==5 && really){
        tier="really";
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==6){
        tier="main";
        selected=1;
        scr_sound("glo_menuback");
        }
    }
//LOAD
else if(tier="load"){
    if(selected==1){
        tier="main";
        selected=2;
        scr_sound("glo_menuback");
        }
    else if(selected>=2 && loadable[selected]==1){
        scr_readsum();
        if (wrongsum){
            tier="error2";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else{
            ignoreall=1;
            instance_create(0,0,obj_endtransition);
            alarm[2]=14;
            scr_sound("glo_menuselect");
            }
        }
    }
//OPTIONS
else if(tier="options"){
    if(selected==1){
        tier="main";
        selected=3;
        with(obj_onoff) instance_destroy();
        scr_sound("glo_menuback");
        scr_readsum();
        if (!wrongsum)
            scr_save(0);
        }
    else if(selected==2){
        if(global.noshake){
            global.noshake=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.noshake=1;
            scr_sound("glo_menuback");
            }
        }
    else if(selected==3){
        if(global.novoice){
            global.novoice=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.novoice=1;
            scr_sound("glo_menuback");
            }
        }
    else if(selected==4){
        if(global.nosound){
            global.nosound=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.nosound=1;
            scr_sound("glo_menuback");
            }
        }
    else if(selected==5){
        if(global.nomusic){
            global.nomusic=0;
            scr_sound("glo_menuselect");
            //Play currently playing music
            scr_music("mus_mainmenu");
            soundtested=0;
            }
        else{
            global.nomusic=1;
            scr_sound("glo_menuback");
            with (obj_face)
                scr_stopmusic();
                }
        }
    else if(selected==6){
        if(global.hidetime){
            global.hidetime=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.hidetime=1;
            scr_sound("glo_menuback");
            }
        }
    else if(selected==7){
        with(obj_onoff) instance_destroy();
        instance_create(596,311,obj_onoff);
        instance_create(596,339,obj_onoff);
        instance_create(596,367,obj_onoff);
        tier="options2";
        selected=1;
        scr_sound("glo_menuselect");
        }
    }
//OPTIONS 2
else if(tier="options2"){
    if(selected==1){
        tier="options";
        selected=1;
        with(obj_onoff) instance_destroy();
        scr_sound("glo_menuback");
        instance_create(596,311,obj_onoff);
        instance_create(596,339,obj_onoff);
        instance_create(596,367,obj_onoff);
        instance_create(596,395,obj_onoff);
        instance_create(596,423,obj_onoff);
        }
    else if (selected==2){
        if(global.nogamma){
            global.nogamma=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.nogamma=1;
            scr_sound("glo_menuback");
            nocovers=1;
            tier="wait";
            waittype=4;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            }
        }
    else if(selected==3){
        if(global.specialbake){
            global.specialbake=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.specialbake=1;
            scr_sound("glo_menuback");
            nocovers=1;
            tier="wait";
            waittype=5;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            }
        }
    else if (selected==4){
        if(global.noblood){
            global.noblood=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.noblood=1;
            scr_sound("glo_menuback");
            /*
            nocovers=1;
            tier="wait";
            waittype=6;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            */
            }
        }
    }
//CONTROLS
else if(tier="controls"){
    if(selected==1){
        if (global.kickkey!=global.firekey && global.kickkey!=global.usekey && global.kickkey!=global.weap5key && global.kickkey!=global.weap6key && global.kickkey!=global.weap7key && global.kickkey!=global.weap8key && global.firekey!=global.usekey && global.firekey!=global.weap5key && global.firekey!=global.weap6key && global.firekey!=global.weap7key && global.firekey!=global.weap8key && global.usekey!=global.weap5key && global.usekey!=global.weap6key && global.usekey!=global.weap7key && global.usekey!=global.weap8key && global.weap5key!=global.weap6key && global.weap5key!=global.weap7key && global.weap5key!=global.weap8key && global.weap6key!=global.weap7key && global.weap6key!=global.weap8key && global.weap7key!=global.weap8key && global.prevkey!=global.usekey && global.prevkey!=global.firekey && global.prevkey!=global.kickkey && global.prevkey!=global.weap5key && global.prevkey!=global.weap6key && global.prevkey!=global.weap7key && global.prevkey!=global.weap8key && global.prevkey!=global.nextkey && global.prevkey!=global.specialkey && global.nextkey!=global.usekey && global.nextkey!=global.firekey && global.nextkey!=global.kickkey && global.nextkey!=global.weap5key && global.nextkey!=global.weap6key && global.nextkey!=global.weap7key && global.nextkey!=global.weap8key && global.nextkey!=global.specialkey && global.specialkey!=global.usekey && global.specialkey!=global.firekey && global.specialkey!=global.kickkey && global.specialkey!=global.weap5key && global.specialkey!=global.weap6key && global.specialkey!=global.weap7key && global.specialkey!=global.weap8key){
            tier="main";
            scr_sound("glo_menuback");
            selected=4;
            }
        else{
            tier="error";
            scr_sound("glo_menuselect");
            scr_sound("glo_crackfail");
            selected=1;
            }
        }
    else if(selected==2){
        global.kickkey=ord("Z");
        global.firekey=ord("X");
        global.usekey=ord("C");
        scr_sound("glo_menuselect");
        }
    else if(selected==6){
        tier="controls2";
        selected=1;
        scr_sound("glo_menuselect");
        }
    }
//CONTROLS 2
else if(tier="controls2"){
    if(selected==1){
        tier="controls";
        scr_sound("glo_menuback");
        selected=1;
        }
    else if(selected==2){
        global.prevkey=ord("A");
        global.nextkey=ord("D");
        global.specialkey=ord("S");
        scr_sound("glo_menuselect");
        }
    else if(selected==6){
        tier="weapons";
        selected=1;
        scr_sound("glo_menuselect");
        }
    }
//WEAPONS
else if(tier="weapons"){
    if(selected==1){
        tier="controls2";
        selected=1;
        scr_sound("glo_menuback");
        }
    else if(selected==2){
        global.weap5key=ord("Q");
        global.weap6key=ord("W");
        global.weap7key=ord("E");
        global.weap8key=ord("R");
        scr_sound("glo_menuselect");
        }
    }
//EXTRAS1
else if(tier="extras"){
    if(selected==1){
        tier="main";
        selected=5;
        scr_sound("glo_menuback");
        }
    //POSTER VIEWER
    else if(selected==2 && (global.poster1 || global.poster2 || global.poster3 || global.poster4 || global.poster5 || global.poster6 || global.poster7 || global.poster8 || global.poster9 || global.poster10)){
        tier="wait3";
        nocovers=1;
        instance_create(0,0,obj_mainposters);
        scr_sound("glo_menuselect");
        }
    //SINGLE SECTOR WARP
    else if(selected==3 && global.extras1){
        global.sswarp=1;
        scr_sound("glo_menuselect");
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        alarm[1]=14;
        //SSwarp totkills
        if (warp==1)
            global.totkills=0;
        else if (warp==2)
            global.totkills=10;
        else if (warp==3)
            global.totkills=20;
        else if (warp==4)
            global.totkills=30;
        else if (warp==5)
            global.totkills=40;
        else if (warp==6)
            global.totkills=50;
        else if (warp==7)
            global.totkills=60;
        else if (warp==8)
            global.totkills=70;
        else if (warp==9)
            global.totkills=80;
        else if (warp==10)
            global.totkills=90;
        }
    //PLAY HERO 3D
    else if(selected==4 && global.extras2){
        ignoreall=1;
        instance_create(0,0,obj_mainhero3d);
        scr_sound("glo_menuselect");
        }
    //ALTERNATE OUTFIT
    else if(selected==5 && global.extras3){
        scr_sound("glo_menumove");
        if (global.outfit==0)
            global.outfit=1;
        else
            global.outfit=0;
        }
    //Options2
    else if(selected==6){
        tier="extras2";
        selected=1;
        scr_sound("glo_menuselect");
        }
    }
//EXTRAS2
else if(tier="extras2"){
    if(selected==1){
        tier="extras";
        selected=1;
        scr_sound("glo_menuback");
        }
    //WEAPON INFORMATION
    else if(selected==2 && global.extras4){
        tier="wait2";
        nocovers=1;
        scr_menufulltexts();
        instance_create(0,0,obj_mainfullcover);
        scr_sound("glo_menuselect");
        }
    //ENEMY INFORMATION
    else if(selected==3 && global.extras6){
        tier="wait2";
        nocovers=1;
        scr_menufulltexts();
        instance_create(0,0,obj_mainfullcover);
        scr_sound("glo_menuselect");
        }
    //SECTOR MAPS
    else if(selected==4 && global.extras1 && instance_number(obj_secmap)==0){
        instance_create(1017,234,obj_secmap);
        scr_sound("glo_menuselect");
        }
    //SUDDEN DEATH SECTOR
    else if(selected==5 && global.extras2){
        global.suddendeath=1;
        global.sswarp=1;
        //global.sector=sdwarp;
        warp=sdwarp;
        if (sdwarp==0)
            warp=10;
        scr_sound("glo_menuselect");
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        alarm[1]=14;
        //SSwarp totkills
        if (warp==1)
            global.totkills=0;
        else if (warp==2)
            global.totkills=10;
        else if (warp==3)
            global.totkills=20;
        else if (warp==4)
            global.totkills=30;
        else if (warp==5)
            global.totkills=40;
        else if (warp==6)
            global.totkills=50;
        else if (warp==7)
            global.totkills=60;
        else if (warp==8)
            global.totkills=70;
        else if (warp==9)
            global.totkills=80;
        else if (warp==10)
            global.totkills=90;
        }
    else if (selected==6){
        tier="extras3";
        selected=1;
        scr_sound("glo_menuselect");
        }
    }
//EXTRAS3
else if(tier="extras3"){
    if (selected==1){
        if (soundtested){
            soundtested=0;
            repeat(10)
                sound_stop_all();
            scr_stopmusic();
            seczmusic=0;
            scr_music("mus_mainmenu");
            }
        tier="extras2";
        scr_sound("glo_menuback");
        selected=1;
        }
    else if (selected==2 && global.extras8){
        scr_sound("glo_menumove");
        if (global.turbomode==0)
            global.turbomode=1;
        else
            global.turbomode=0;
        }
    else if (selected==3 && global.extras7){
        scr_sound("glo_menumove");
        if (global.scrambler==0)
            global.scrambler=1;
        else
            global.scrambler=0;
        }
    else if (selected==4 && global.extras1){
        scr_mainsoundstop();
        }
    }

//QUIT
else if(tier="quit"){
    if(selected==1){
        sound_stop_all();
        scr_stopmusic();
        game_end();
        }
    else if(selected==2){
        tier="main";
        if (global.extras1==0)
            selected=6;
        else
            selected=7;
        scr_sound("glo_menuback");
        }
    }
//ERROR
else if(tier="error"){
    tier="controls";
    selected=1;
    scr_sound("glo_menuback");
    }
//ERROR2
else if(tier="error2"){
    tier="main";
    selected=1;
    scr_sound("glo_menuback");
    }
//ERROR3
else if(tier="error3"){
    if(selected==1){
        tier="new";
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==2){
        scr_createfile();
        scr_writesum();
        tier="new";
        selected=1;
        scr_sound("glo_menuselect");
        }
    else if(selected==3){
        tier="main";
        selected=1;
        scr_sound("glo_menuback");
        }
    }
//ULTIMORTAL
else if(tier="ultimortal"){
    if (selected==1){
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        global.difficulty=2;
        global.specialtrigger16=1;
        alarm[1]=14;
        scr_sound("glo_menuselect");
        }
    else if(selected==2){
        tier="new";
        selected=4;
        scr_sound("glo_menuback");
        }
    }
//REALLY
else if(tier="really"){
    if (selected==1){
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        global.difficulty=2;
        global.specialtrigger16=1;
        global.really=1;
        alarm[1]=14;
        scr_sound("glo_menuselect");
        }
    else if(selected==2){
        tier="new";
        selected=5;
        scr_sound("glo_menuback");
        }
    }
//WAIT (go back to extras)
else if (tier="wait"){
    if (waittype==1)
        tier="extras";
    else if (waittype==2)
        tier="extras2";
    else if (waittype==3)
        tier="main";
    else if (waittype==4)
        tier="options2";
    else if (waittype==5)
        tier="options2";
    else if (waittype==6)
        tier="options2";
    else if (waittype>=7 && waittype<=12)
        tier="secret";
    else if (waittype>=13 && waittype<=14)
        tier="supersecret";
    nocovers=1;
    waittype=0;
    scr_sound("glo_menuback");
    with (obj_mainfullcover)
        instance_destroy();
    }
//WAIT2 (go back to extras2)
else if (tier="wait2"){
    tier="extras2";
    nocovers=1;
    scr_sound("glo_menuback");
    with (obj_mainfullcover)
        instance_destroy();
    }
//WAIT3 (viewing posters - an extra step before WAIT)
else if (tier="wait3"){
    tier="wait";
    waittype=1;
    nocovers=1;
    instance_create(0,0,obj_mainfullcover);
    with (obj_mainposters)
        instance_destroy();
    scr_menufulltexts();
    scr_sound("glo_menuselect");
    }
//SECRET
else if(tier="secret"){
    if(selected==1){
        tier="main";
        selected=1;
        with(obj_onoff) instance_destroy();
        scr_sound("glo_menuback");
        }
    else if (selected==2){
        scr_sound("glo_menuselect");
        nocovers=1;
        tier="wait";
        waittype=7;
        scr_menufulltexts();
        instance_create(0,0,obj_mainfullcover);
        }
    else if (selected==3){
        if (global.rrkills){
            global.rrkills=0;
            scr_sound("glo_menuselect");
            nocovers=1;
            tier="wait";
            waittype=8;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            }
        else{
            global.rrkills=1;
            scr_sound("glo_menuback");
            }
        }
    else if (selected==4){
        if (global.nomercy){
            global.nomercy=0;
            scr_sound("glo_menuback");
            }
        else{
            global.nomercy=1;
            nocovers=1;
            tier="wait";
            waittype=9;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            scr_sound("glo_menuselect");
            }
        }
    else if (selected==5){
        if (global.fireanytime){
            global.fireanytime=0;
            scr_sound("glo_menuback");
            }
        else{
            global.fireanytime=1;
            nocovers=1;
            tier="wait";
            waittype=10;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            scr_sound("glo_menuselect");
            }
        }
    else if (selected==6){
        if (global.randomstations){
            global.randomstations=0;
            scr_sound("glo_menuback");
            }
        else{
            global.randomstations=1;
            nocovers=1;
            tier="wait";
            waittype=11;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            scr_sound("glo_menuselect");
            }
        }
    else if (selected==7){
        if (global.noreloads){
            global.noreloads=0;
            scr_sound("glo_menuback");
            }
        else{
            global.noreloads=1;
            nocovers=1;
            tier="wait";
            waittype=12;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            scr_sound("glo_menuselect");
            }
        }
    }
//SUPERSECRET
else if(tier="supersecret"){
    if(selected==1){
        tier="main";
        selected=1;
        with(obj_onoff) instance_destroy();
        scr_sound("glo_menuback");
        }
    else if (selected==2){
        scr_sound("glo_menuselect");
        nocovers=1;
        tier="wait";
        waittype=13;
        scr_menufulltexts();
        instance_create(0,0,obj_mainfullcover);
        }
    else if (selected==3){
        if (global.debug){
            global.debug=0;
            scr_sound("glo_menuback");
            }
        else{
            global.debug=1;
            nocovers=1;
            tier="wait";
            waittype=14;
            scr_menufulltexts();
            instance_create(0,0,obj_mainfullcover);
            scr_sound("glo_menuselect");
            }
        }
    }

//settings
if (tier=="main" && global.extras1==0)
    selections=6;
else if (tier=="main" && global.extras1==1)
    selections=7;
else if (tier=="new"){
    if (really)
        selections=6;
    else
        selections=5;
    }
else if (tier=="load")
    selections=6;
else if (tier=="options")
    selections=7;
else if (tier=="options2")
    selections=4;
else if (tier=="controls")
    selections=6;
else if (tier=="controls2")
    selections=6;
else if (tier=="weapons")
    selections=6;
else if (tier=="extras")
    selections=6;
else if (tier=="extras2")
    selections=6;
else if (tier=="extras3")
    selections=4;
else if (tier=="quit")
    selections=2;
else if (tier=="error")
    selections=1;
else if (tier=="error2")
    selections=1;
else if (tier=="error3")
    selections=3;
else if (tier=="ultimortal")
    selections=2;
else if (tier=="really")
    selections=2;
else if (tier=="secret")
    selections=7;
else if (tier=="supersecret")
    selections=3;
}
#define scr_controlmapping
if (menu==1 && selected>2){
if (tier=="controls" || tier=="controls2" ||tier=="weapons"){
if (keyboard_lastkey!=vk_up && keyboard_lastkey!=vk_down){
keycheck=keyboard_lastkey;
if (keycheck==ord("A") || keycheck==ord("B")
 || keycheck==ord("C") || keycheck==ord("D")
 || keycheck==ord("E") || keycheck==ord("F")
 || keycheck==ord("G") || keycheck==ord("H")
 || keycheck==ord("I") || keycheck==ord("J")
 || keycheck==ord("K") || keycheck==ord("L")
 || keycheck==ord("M") || keycheck==ord("N")
 || keycheck==ord("O") || keycheck==ord("P")
 || keycheck==ord("Q") || keycheck==ord("R")
 || keycheck==ord("S") || keycheck==ord("T")
 || keycheck==ord("U") || keycheck==ord("V")
 || keycheck==ord("W") || keycheck==ord("X")
 || keycheck==ord("Y") || keycheck==ord("Z")){
    if (tier=="controls"){
        if ((selected==3 || selected==4 || selected==5) && tklast!=keycheck)
            scr_sound("glo_selectweapon");
        if (selected==3)
            global.kickkey=keycheck;
        if (selected==4)
            global.firekey=keycheck;
        if (selected==5)
            global.usekey=keycheck;
        }
    if (tier=="controls2"){
        if ((selected==3 || selected==4 || selected==5) && tklast!=keycheck)
            scr_sound("glo_selectweapon");
        if (selected==3)
            global.prevkey=keycheck;
        if (selected==4)
            global.nextkey=keycheck;
        if (selected==5)
            global.specialkey=keycheck;
        }
    if (tier=="weapons"){
        if ((selected==3 || selected==4 || selected==5 || selected==6) && tklast!=keycheck)
            scr_sound("glo_selectweapon");
        if (selected==3)
            global.weap5key=keycheck;
        if (selected==4)
            global.weap6key=keycheck;
        if (selected==5)
            global.weap7key=keycheck;
        if (selected==6)
            global.weap8key=keycheck;
        }
    }
}
}
}
tklast=keyboard_lastkey;
#define scr_init
//init stats at game start

//loads a file from pause menu
if (instance_number(obj_paused)==1){
    global.passive=0;
    global.suddendeath=0;
    global.sswarp=0;
    global.seconds=0;
    global.difficulty=0;
    global.facing=0;
    global.state=0;
    global.shakescreen=0;
    global.dead=0;
    global.armor=0;
    global.hp=0;
    global.chat=0;
    global.chats=0;
    global.maxlevel=0;
    global.time=0;
    global.erasetop=0;
    global.cut=0;
    global.ignoremessagescroll=0;
    global.tempshred=0;
    global.tempid=0;
    global.xpcount=0;
    global.ignorestation=0;
    global.annitemp=0;
    global.tempcru1=0;
    global.tempcru2=0;
    global.security=0;
    global.cracktext="0";
    global.running=0;
    global.cracking=0;
    global.colcount=0;
    global.nodes=0;
    global.youcol=0;
    global.yourow=0;
    global.cracktime=0;
    global.weapstation=0;
    global.levelstation=0;
    global.cfissparkcycle=0;
    global.outline=0;
    global.bosshint=0;
    global.tormaximumcharge=0;
    global.iosaphase=0;
    }
else{
    if (!global.sswarp)
        global.sector=1;
    }
global.wty=0;
global.truce=0;
global.truce2=0;
global.numribbons=0;
global.weapon=1;
global.weapon2=0;
global.weapon3=0;
global.weapon4=0;
global.weapon5=0;
global.weapon6=0;
global.weapon7=0;
global.weapon8=0;
global.weapon9=0;
global.weapon10=0;
global.weapon11=0;
global.weapon12=0;
global.weapon13=0;
global.weapon14=0;
global.weapon15=0;
global.weapon16=0;
global.weapon17=0;
global.weapon21=0;
global.points=0;
global.xp=0;
global.xpcount=0;
global.level=0;
global.healthlevel=1;
global.attacklevel=1;
global.assimilatelevel=1;
global.strengthlevel=1;
global.cracklevel=1;
global.tasenlevel=1;
global.komatolevel=1;
global.jumplevel=1;
global.armorlevel=1;
global.ammo2=0;
global.ammo2part=0;
global.ammo2partpart=0;
global.ammo3=0;
global.ammo4=0;
global.ammo6=0;
global.ammo6part=0;
global.ammo7=0;
global.ammo8=0;
global.ammo8part=0;
global.kills=0;
global.damage=0;
global.cracks=0;
global.fails=0;
if (!global.sswarp)
    global.totkills=0;
global.totdamage=0;
global.totcracks=0;
global.totfails=0;
global.totalseconds=0;
for (i=0;i<800;i+=1)
    global.killdata[i]=0;
global.killdata[0]=1;
#define scr_menufulltexts
//Fetch screen covering texts here

//Records screen
if (tier=="main" && selected==6){
screentext="~~~~~~~~~~~Your~best~times~~~~~~Remar~Games'~best~times~~~~~~ ";

screentext+="~~~~~~~~~~~Normal:~"+string(global.nhours)+":";
if (global.nminutes)<10
    screentext+="0"
screentext+=string(global.nminutes)+".";
if (global.nseconds)<10
    screentext+="0"
screentext+=string(global.nseconds)+"~~~~~~~~~~~~Normal:~0:24.04~~~~~~~~ ";

screentext+="~~~~~~~~~~~~~Hard:~"+string(global.hhours)+":";
if (global.hminutes)<10
    screentext+="0"
screentext+=string(global.hminutes)+".";
if (global.hseconds)<10
    screentext+="0"
screentext+=string(global.hseconds)+"~~~~~~~~~~~~~~Hard:~0:30.12~~~~~~~~ ";

screentext+="~~~~~~~~~~Extreme:~"+string(global.ehours)+":";
if (global.eminutes)<10
    screentext+="0"
screentext+=string(global.eminutes)+".";
if (global.eseconds)<10
    screentext+="0"
screentext+=string(global.eseconds)+"~~~~~~~~~~~Extreme:~0:32.32~~~~~~~~ ";

screentext+="~~~~~~~Ultimortal:~"+string(global.uhours)+":";
if (global.uminutes)<10
    screentext+="0"
screentext+=string(global.uminutes)+".";
if (global.useconds)<10
    screentext+="0"
screentext+=string(global.useconds)+"~~~~~~~~Ultimortal:~0:38.12~~~~~~~~ ";

screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~Posters~found:~";
numcounter=0;
if (global.poster1) numcounter+=1;
if (global.poster2) numcounter+=1;
if (global.poster3) numcounter+=1;
if (global.poster4) numcounter+=1;
if (global.poster5) numcounter+=1;
if (global.poster6) numcounter+=1;
if (global.poster7) numcounter+=1;
if (global.poster8) numcounter+=1;
if (global.poster9) numcounter+=1;
if (global.poster10) numcounter+=1;
if (numcounter<10)
    screentext+="~";
screentext+=string(numcounter);
screentext+="/10~~~~~~~~~~~~~~~~ ";

screentext+="~~~~~~~~~~~~~~~~~~~Extras~and~features:~";
numcounter=0;
if (global.extras1) numcounter+=3;
if (global.extras2) numcounter+=2;
if (global.extras3) numcounter+=2;
if (global.extras4) numcounter+=1;
if (global.extras5) numcounter+=1;
if (global.extras6) numcounter+=1;
if (global.extras7) numcounter+=1;
if (global.extras8) numcounter+=1;
if (numcounter<10)
    screentext+="~";
screentext+=string(numcounter);
screentext+="/12~~~~~~~~~~~~~~~~ ";

screentext+="~~~~~~~~~~~~~~~~~~~~~Max~ribbons~found:~";
if (global.maxribbons<10)
    screentext+="~";
screentext+=string(global.maxribbons);
screentext+="/10~~~~~~~~~~~~~~~~~~ ";

screentext+="~~~~~~~~Sudden~Death~Sectors~conquered:~";
numcounter=0;
if (global.sds1) numcounter+=1;
if (global.sds2) numcounter+=1;
if (global.sds3) numcounter+=1;
if (global.sds4) numcounter+=1;
if (global.sds5) numcounter+=1;
if (global.sds6) numcounter+=1;
if (global.sds7) numcounter+=1;
if (global.sds8) numcounter+=1;
if (global.sds9) numcounter+=1;
if (global.sds10) numcounter+=1;
if (numcounter<10)
    screentext+="~";
screentext+=string(numcounter);
screentext+="/10~~~~~~~~~~~~~~~~ ";

screentext+="~~~~~~~~~~~~~~Hidden~Skills~discovered:~~";
numcounter=1;
if (global.hiddenskill1) numcounter+=1;
if (global.hiddenskill2) numcounter+=1;
if (global.hiddenskill3) numcounter+=1;
screentext+=string(numcounter);
screentext+="/4~~~~~~~~~~~~~~~~~ ";

screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~--------------~ENDGAME~RANKINGS~INFORMATION~--------------- ";
screentext+="~~~~~~~~KILLS~~~~~~~~~~~~~~~~DAMAGE~~~~~~~~CRACKS~minus~FAILS ";
screentext+="~~300:~One~Woman~Army~~400:~Hopeless~~~~~~~~~100:~Nanomaster~ ";
screentext+="~~200:~Genocidal~~~~~~~300:~Overconfident~~~~~70:~Cybergeek~~ ";
screentext+="~~~51:~Destroyer~~~~~~~200:~Careless~~~~~~~~~~40:~Adept~~~~~~ ";
screentext+="~~~~1:~Pacifistic~~~~~~100:~Skilled~~~~~~~~~~~20:~Lame~~~~~~~ ";
screentext+="~~~~0:~Innocent~~~~~~~~~~0:~Immortal~~~~~~~~~~~0:~Clueless~~~";
}



//Weapon information
if (tier=="wait2" && selected==2){
if (weaponinfo==1)
screentext="1. SHOTGUN#Damage: 72 armor (8 pellets, 9 armor / pellet)#Reload time: 1 second#DPS: 72 armor#Muzzle velocity: 420 m/s#Requirements: None#Function: Fires a wide, short-range pellet blast#$#A low-end, short-ranged Nanoweapon, the Shotgun is still capable of causing severe damage in close combat. Hardly anyone uses it anymore, but it shouldn't be underestimated, especially with a high Attack stat.";
if (weaponinfo==2)
screentext="2. MACHINEGUN#Damage: 10 armor#Reload time: 1/10 second#DPS: 100 armor#Muzzle velocity: 720 m/s#Requirements: Tasen level 3#Function: Fires weak but accurate long-range bullets#$#An accurate long-range Nanoweapon, the Machinegun is effective even against larger enemies. Most Tasen are equipped with one, though few higher-ranking ones rely on it as their primary weapon. Due to Iji's rare Tasen Nanogun, her Machinegun is more accurate and deals more damage than the standard Tasen version.";
if (weaponinfo==3)
screentext="3. ROCKET LAUNCHER#Damage: 2 HP#Reload time: 2 seconds#DPS: 1 HP#Muzzle velocity: 19 m/s#Requirements: Tasen level 6#Function: Fires a single rocket#$#Very powerful, and able to knock enemies flying, but the low travel speed of the rockets make them easier to duck or reflect than other projectiles.";
if (weaponinfo==4)
screentext="4. MPFB DEVASTATOR#Damage: 9 HP (3 projectiles, 3 HP / projectile)#Reload time: 3 seconds#DPS: 3 HP#Muzzle velocity: 24 m/s#Requirements: Tasen level 10#Function: Fires three high-explosive MPFB projectiles#$#The MPFB Devastator is one of the most powerful handheld Nanoweapons the Tasen have conceived. It launches three massively concentrated crystals that cause spontaneous nuclear fission upon contact with any object. The crystals even violently react to the air around them, making them glow in a light blue and enlargening the area of impact. A real beast of a weapon favored by Tasen Elites, as only they can fire the Devastator without flying back from the recoil.";
if (weaponinfo==5)
screentext="5. RESONANCE DETONATOR#Damage: 1 HP#Reload time: 4 seconds#DPS: 0.2 HP#Muzzle velocity: 50 m/s#Requirements: None#Function: Works exactly like your kick attack, but has a longer reach. This weapon can destroy Shield doors.#$#A weapon stolen from the Komato race, it creates a shockwave that can knock back enemies and send them flying, depending entirely on the user's Strength stat. It uses no ammunition, but has a rather long reload time.";
if (weaponinfo==6)
screentext="6. PULSE CANNON#Damage: 6 armor (3 projectiles, 2 armor / projectile)#Reload time: 1/30 second#DPS: 180 armor#Muzzle velocity: 27 m/s#Requirements: Komato level 3#Function: Fires a short-range pulse beam#$#A standard issue Nanoweapon among the Komato troops, the Pulse cannon is effective only at short range. Its clear green beam inflicts so much pain that enemies are usually unable to retaliate as their Nanofields are slowly destroyed. Due to Iji's rare Tasen Nanogun, her Pulse cannon deals twice the damage of the standard Komato version.";
if (weaponinfo==7)
screentext="7. SHOCKSPLINTER#Damage: 2 HP + 180 armor#Reload time: 2 seconds#DPS: 1 HP + 60 armor#Muzzle velocity: 23 m/s#Requirements: Komato level 6#Function: Fires a fast Shocksplinter projectile#$#A basic but powerful Komato weapon, its explosive projectiles shatter into six armor-draining spheres on impact. These 'splinters' explode after a short time or if they hit a solid object.";
if (weaponinfo==8)
screentext="8. CYCLIC FUSION IGNITION SYSTEM#Damage: 15 armor#Reload time: 1/30 second#DPS: 450 armor#Muzzle velocity: 5600 m/s#Requirements: Komato level 10#Function: Fires a short-range beam that cuts through enemies#$#This weapon ignites series of small fusion detonations in the Nanogun's core to power a high-velocity coilgun. The tiny slugs are quickly destroyed due to air friction, so the weapon has a short but devastating range, rippling through Nanofields and striking multiple enemies with ease. The Komato prefer not to use it in dangerous clashes with the Tasen, seen as how they could steal and reverse-engineer it.";
if (weaponinfo==9)
screentext="9. BUSTER GUN#Damage: 72 armor (8 pellets, 9 armor / pellet)#Reload time: 8/30 seconds#DPS: 270 armor#Muzzle velocity: 420 m/s#Requirements: Shotgun, Machinegun, Crack level 3#Function: Fires rapid Shotgun blasts#$#This weapon uses Machinegun ammo to fire pellet blasts more than thrice as fast as the regular Shotgun. While not as ammunition efficient as the Machinegun, the Buster gun takes out enemies much faster if they are close enough.";
if (weaponinfo==10)
screentext="10. SPLINTERGUN#Damage: 30 armor#Reload time: 1/10 seconds#DPS: 300 armor#Muzzle velocity: 23 m/s#Requirements: Machinegun, Shocksplinter, Crack level 7#Function: Fires armor-damaging `splinters` rapidly#$#This powerful Nanoweapon uses Machinegun ammo to fire small shards of Shocksplinter. While the splinters deal no knockback, they rapidly drain the armor of any target. Perfectly concentrated fire will take down opponents much faster and slightly more ammunition efficiently than the Machinegun.";
if (weaponinfo==11)
screentext="11. SPREAD ROCKETS#Damage: 6 HP#Reload time: 3 seconds#DPS: 2 HP#Muzzle velocity: 19 m/s#Requirements: Shotgun, Rocket launcher, Crack level 5#Function: Fires three spread-out rockets at the cost of three Launcher ammo#$#Offering twice the destructive power per second as the regular Rocket launcher, it makes for a formidable weapon to mow down hordes of enemies or clear out corridors. It's also a force to be reckoned with when dealing with huge, powerful foes. Berserkers have been specially trained in dealing with this Nanoweapon, usually resulting in all three rockets ending up reflected back at the user.";
if (weaponinfo==12)
screentext="12. NUKE#Damage: 5 HP#Reload time: 3 seconds#DPS: 1.67 HP#Muzzle velocity: 280 m/s#Requirements: Rocket launcher, MPFB Devastator, Crack level 9  Function: Deals instant moderate damage to all enemies within 15 meters of the user at the cost of 3 MPFB ammo#$#A sophisticated weapon despite its seemingly simplistic effect, the Nuke temporarily shields the person firing it from external thermal and kinetic energy, and detonates the surrounding area with an enormous force, destroying most lesser enemies in one blow. While the user is normally knocked to the ground from the resulting shockwave, he or she suffers no damage. Despite its effectiveness in instantly hitting multiple enemies, its damage output is inferior to the MPFB Devastator.";
if (weaponinfo==13){
if (global.rrkills)
screentext="13. RESONANCE REFLECTOR#Damage: 0#Reload time: 4 seconds#DPS: 0#Muzzle velocity: 50 m/s#Requirements: Shotgun, Resonance detonator, Crack level 4#Function: Reflects rockets and other projectiles#$#This devious Nanoweapon reflects mass-based projectiles, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the reflector. The reflected projectile gets stronger or weaker depending on the user's Attack stat.#$#NOTE: reflected projectiles count as YOUR projectiles, and will award you kills when striking enemies.";
else
screentext="13. RESONANCE REFLECTOR#Damage: 0#Reload time: 4 seconds#DPS: 0#Muzzle velocity: 50 m/s#Requirements: Shotgun, Resonance detonator, Crack level 4#Function: Reflects rockets and other projectiles#$#This devious Nanoweapon reflects mass-based projectiles, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the reflector. The reflected projectile gets stronger or weaker depending on the user's Attack stat.#$#NOTE: reflected projectiles will NOT award you kills when striking enemies.";
}
if (weaponinfo==14)
screentext="14. HYPER PULSE#Damage: 8 armor (4 projectiles, 2 armor / projectile)#Reload time: 1/30 second#DPS: 240 armor#Muzzle velocity: 30 m/s#Requirements: Resonance detonator, Pulse cannon, Crack level 6 Function: Damages enemies, and uses your Strength to knock them flying when their armor has been drained low enough. This weapon can destroy Shield doors.#$#The Nanoweapon of choice when plowing through weaker enemies, if one's Strength level is high enough - when an enemy has less than 33% of its maximum armor left, the Hyper pulse will inflict a violent blow as if the enemy had been struck with a Resonance detonator. In other words, this weapon requires both physical strength and weapon skill to handle well.";
if (weaponinfo==15)
screentext="15. PLASMA CANNON#Damage: 3 HP#Reload time: 2.5 seconds#DPS: 1.2 HP#Muzzle velocity: 6700 m/s#Requirements: Pulse cannon, Shocksplinter, Crack level 8#Function: Fires a long-range beam that cuts through enemies at the cost of 2 Shock ammo#$#An unusual weapon that fires a thin instant-hit beam, hitting multiple targets while piercing defensive barriers and reflectors. When it hits a solid wall, it also causes a powerful splinter explosion. Not much is known about how the weapon system actually works, but if it's as relatively simple as combining a Pulse cannon with the volatile Shocksplinter, no-one's complaining.";
if (weaponinfo==16)
screentext="16. VELOCITHOR V2-10#Damage: 35 armor#Reload time: 1/30 seconds#DPS: 1050 armor#Muzzle velocity: 12000 m/s#Requirements: MPFB Devastator, CFIS, Crack level 10#Function: Fires a beam that cuts through enemies and walls#$#Arguably the peak of Generation 1 Nanoweaponry, the Velocithor is a much rumored upgrade of the Cyclic Fusion Ignition System. It fires a massive beam consisting of thousands of electrically charged slugs, and can shoot clean through most materials. While less ammunition efficient than the regular CFIS, it ends battles so fast that it's hard to notice.";
if (weaponinfo==17)
screentext="17. BANANA GUN#Damage: 3 HP#Reload time: 4 seconds#DPS: 0.75 HP#Muzzle velocity: 9 m/s#Requirements: All 8 basic Nanoweapons#Function: Fires a banana at the cost of 1 of each ammo type#$#Only the most demented of alien minds would create a Nanoweapon that launches squeaky inflatable rubber bananas with high-explosive payloads. This bizarre weapon requires that the user's Nanogun is equipped with the eight most common Tasen and Komato Nanoweapons in order to function, and requires 1 of each ammo type to fire. The creator of the Banana gun could probably explain why, but he died in a fit of hysteric laughter shortly after his creation was complete. It is not possible to combine the Banana gun with any other Nanoweapon, nor would such a thing likely be desirable.";
if (weaponinfo==18)
screentext="18. MASSACRE#Damage: 96 HP#Reload time: 2.5 seconds#DPS: 34.8 HP#Muzzle velocity: 90 m/s#Requirements: None#Function: Fires a spread of rapidly exploding projectiles at the cost of 50 armor#$#Komato Imperial Research has managed to keep most Generation 2 weaponry secret even from the mass-manufacturer Imperial Weapon Industries. The nature of these weapons makes it nigh impossible planting one in a conventional Nanogun, and thus the Massacre was the first of the Generation 2 weapons to be considerably toned down in power, allowing it to be easily assimilated into a standard Nanogun. The only field tested copy was used on Ciretako - to devastating results.#$#Your Attack stat does not affect this weapon's damage output.";
if (weaponinfo==19)
screentext="PASSIVE 1. STUN GUN#Damage: 0#Reload time: 3 seconds#DPS: 0#Muzzle velocity: 160 m/s#Requirements: None#Function: Fires a wide, short-range stunning blast#$#This short-ranged weapon deals no damage, but instead stuns any enemy capable of being stunned. Most enemies can only be stunned if they are standing on the ground. Particularly strong individuals may not be affected at all. You take no contact damage from stunned enemies.#$#Your Attack stat increases the stun time.";
if (weaponinfo==20)
screentext="PASSIVE 2. IMPACT MACHINEGUN#Damage: 0#Reload time: 8/30 Seconds#DPS: 0#Muzzle velocity: 160 m/s#Requirements: Tasen level 3#Function: Fires a single staggering bullet#$#Like all passive weapons, the Impact machinegun is not designed to damage Nanofields, but rather fires tiny Nanofield-enveloped bullets that strike enemies with enough force to knock them off balance without causing serious harm. It is best used to interrupt enemies preparing powerful attacks.#$#Your Attack stat increases the range of the projectile.";
if (weaponinfo==21)
screentext="PASSIVE 3. IMPULSE LAUNCHER#Damage: 0#Reload time: 3 seconds#DPS: 0#Muzzle velocity: 20 to 28 m/s#Requirements: Tasen level 6#Function: Fires an impulse rocket#$#While Impulse rockets deal no damage, they are still capable of throwing enemies (and the user) clear across the room.#$#Your Attack stat increases the projectile speed, making it more difficult to dodge or reflect.";
if (weaponinfo==22)
screentext="PASSIVE 4. MPFB NEUTRALIZER#Damage: 0#Reload time: 4 seconds#DPS: 0#Muzzle velocity: 240 m/s#Requirements: Tasen level 10#Function: Stuns all enemies in a 15 meter area around the user at the cost of 3 MPFB ammo#$#The massive shockwave emitted by this weapon harmlessly stuns enemies for a much longer period of time than the Stun gun. Most enemies can only be stunned if they are standing on the ground. Particularly strong individuals may not be affected at all. You take no contact damage from stunned enemies.#$#Your Attack stat increases the stun time.";
if (weaponinfo==23)
screentext="PASSIVE 5. RESONANCE DISRUPTOR#Damage: 0#Reload time: 4 seconds#DPS: 0#Muzzle velocity: 50 m/s#Requirements: None#Function: Nullifies rockets and other projectiles#$#This strange Nanoweapon harmlessly dismantles the same mass-based projectiles as the Resonance reflector, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the disruptor field.#$#Your Attack stat increases the active time of the disruptor field.";
if (weaponinfo==24)
screentext="PASSIVE 6. PULSE LINKER#Damage: 0#Reload time: 1/30 seconds#DPS: 0#Muzzle velocity: 21 to 30 m/s#Requirements: Komato level 3#Function: Harmlessly drains Nano from enemies#$#The Pulse linker is unique among Generation 1 Nanoweapons, being able to transfer the base components of other Nanofields into the user's own. While extremely ammunition hungry, it drains more Nano per second the more powerful the Nanofield it targets, but particularly secure targets may reject the Pulse link entirely.#$#Your Attack stat increases the projectile speed and range.";
if (weaponinfo==25)
screentext="PASSIVE 7. SHOCK BARRIER#Damage: 0#Reload time: 2 seconds#DPS: 0#Muzzle velocity: 0 m/s#Requirements: Komato level 6#Function: Sets up a barrier that nullifies rockets, other projectiles, and some lesser weapons#$#The barrier created by this Nanoweapon harmlessly dismantles the same mass-based projectiles as the Resonance reflector, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. It also blocks Machinegun and Pulse cannon fire. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the disruptor field.#$#Your Attack stat increases the active time of the shock barrier.";
if (weaponinfo==26)
screentext="PASSIVE 8. CHAIN FRACTAL INJECTION SHELL#Damage: 0#Reload time: 2 seconds#DPS: 0#Muzzle velocity: 800 m/s#Requirements: Komato level 10#Function: Performs an instant cracking attempt from a distance at the cost of 3 CFIS ammo#$#This weapon fires a tiny shell with a short-lived Nanofield that connects to whatever it hits, then attempts to inject a vast number of viruses. The payload becomes more sophisticated the higher the user's Crack stat, and will likely only be effective if they could manually crack the target themselves. If the injection succeeds, it will count as a successful crack for the user. If it fails, it will not count as a failed crack, nor will it have any negative consequences.#$#Your Attack stat increases the range of the projectile.";
}

//Enemy information
else if (tier=="wait2" && selected==3){
if (enemyinfo==1)
screentext="1. BLIT#Invulnerable#Height: 0.1 m#Weapon: Nibble#$#Blits are a strange breed of parasite, consisting entirely of Nano and resistant even to most Nanoweaponry. These pesky slug-like bugs infested one of the Tasen ships, and spread like wildfire when they landed on the surface of Earth. Alone, they're hardly a threat, but a large group of Blits can drain the armor off their victims at a frightening rate.";
if (enemyinfo==2)
screentext="2. TASEN TURRET#Armor: 200   HP: 1#Weight: 1   Security: 1 + weapon#Height: 1.8 m#Drops: Nothing#Drops when cracked: ammo matching weapon#Weapon: Machinegun / Rocket launcher / Spread rockets / MPFB / Shocksplinter / Splintergun / Plasma cannon#$#These defense turrets were set up by the Tasen to specifically protect the complex from humans. They also target anyone who doesn't have the proper subroutine programming in their personal Nanofield. The Tasen are by no means subtle when it comes to dealing with humans - some turrets weild absolutely devastating Nanoweapons, and will only stop firing when they have no more targets in their field of view, or when they are destroyed. Normally the ammunition being pumped into the turret makes it explode when shot, but if knocked off its support pole it becomes completely harmless.";
if (enemyinfo==3)
screentext="3. TASEN SCOUT#Armor: 100   HP: 1#Weight: 3   Security: 2   Speed: 2#Height: 2.0 m#Drops: 2 Nano#Drops when cracked: machinegun ammo#Weapon: Machinegun#$#Armed with a burst Machinegun, these grunts are usually the first to be sent into hostile areas. Having not reacted entirely well to the drugs the Tasen use to boost their senses during combat training, the Scouts sometimes appear slow and dull, and most are incapable of dodging projectiles or performing similar feats that require quick reaction.";
if (enemyinfo==4)
screentext="4. TASEN SOLDIER#Armor: 100   HP: 2#Weight: 4   Security: 4   Speed: 3#Height: 2.0 m#Drops: 4 Nano, machinegun ammo, launcher ammo#Drops when cracked: launcher ammo#Weapons 1: Machinegun, Rocket launcher#Weapons 2: Machinegun, Spread rockets#$#The shock troops of the Tasen, the Soldiers use both a Machinegun and Rocket launcher, making them a versatile foe. They are not very strong and are easy to overwhelm with more advanced weapons, but their agility allows them to dodge incoming projectiles, as long as they see them coming.";
if (enemyinfo==5)
screentext="5. TASEN COMMANDER#Armor: 100   HP: 5#Weight: 6   Security: 5   Speed: 3#Height: 2.5 m#Drops: 8 Nano, launcher ammo#Drops when cracked: large launcher ammo#Weapons 1: Melee attack, Rocket launcher#Weapons 2: Melee attack, Spread rockets#$#Commanders are fitted with an enormous claw which can smack their opponents clear across the room. They prefer explosive weaponry, and don't go down easily. The Commanders are usually the ones giving orders on the battlefield, but while their strength is respected by the lesser troops, they're too large to dodge projectiles.";
if (enemyinfo==6)
screentext="6. TASEN ELITE#Armor: 100   HP: 15#Weight: 9   Security: 6   Speed: 4#Height: 2.9 m#Drops: 16 Nano, mach ammo, launcher ammo, MPFB ammo#Drops when cracked: MPFB ammo#Weapons 1: Melee attack, Machinegun, Rocket Launcher, MPFB#Weapons 2: Melee attack, Dual Machinegun, Spread rockets, MPFB#$#These walking death machines carry exceptionally dense Nanofields that use gravitational forces to lock them in place, making them impossible to knock back - even with the most explosive of weapons. As the most powerful type of Tasen combatant, the Elites fear no enemy, and even boss around the Commanders on the battlefield. The only way to stop an Elite in its tracks is to hit it repeatedly with powerful weapons, so that it has no time to react. Like the Commanders, they are too big to duck incoming projectiles.";
if (enemyinfo==7)
screentext="7. TASEN SHREDDER#Special armor: 1000#Driver weight: 4   Security: 5   Speed: 18#Shredder height: 1.8 m#Driver drops: 4 Nano, machinegun ammo, launcher ammo#Driver drops when cracked: launcher ammo#Weapon: Machinegun#$#Despite three tonnes of compressed metal and ramming spikes, these armed personal hovercrafts are extremely mobile, giving Tasen ground troops a much-needed edge in most fights with the Komato. However, a rocket explosion or a well-timed melee attack could knock the driver off without damaging the vehicle too badly. Due to the unstable power cores, Shredders usually explode violently after taking heavy damage. Most are built to electrocute the driver if they contain Komato subroutine programming, to avoid Shredders being stolen during combat - a daring cracker could trigger this mechanism manually to take over a vehicle with an idle driver.";
if (enemyinfo==8)
screentext="8. KOMATO TROOPER#Armor: 200   HP: 3#Weight: 6   Security: 5   Speed: 3#Height: 1.9 m#Drops: 8 Nano, pulse ammo, shocksplinter ammo#Drops when cracked: shocksplinter ammo#Weapons 1: Pulse cannon, Shocksplinter#Weapons 2: Hyper pulse, Shocksplinter#$#Equipped with Pulse cannons and heavy armor, a small squad of Troopers can survive most Tasen encounters even while heavily outnumbered. While not the most powerful of Komato, they get the job done, and can dodge projectiles with surprising agility. Some carry Hyper pulse, making them notably more dangerous.";
if (enemyinfo==9)
screentext="9. KOMATO BERSERKER#Armor: 200   HP: 10#Weight: 8   Security: 7   Speed: 4#Height: 2.5 m#Drops: 16 Nano, shocksplinter ammo#Drops when cracked: shocksplinter ammo#Weapons 1: Reso detonator, Reso reflector, Shocksplinter#Weapons 2: Reso detonator, Reso reflector, Plasma cannon#$#A frightening class of combatants that quickly earned its reputation in the Tasen-Komato war, these upgraded Komato Troopers are well trained with Resonance-type Nanoweapons. They have abandoned the Pulse cannon in favor of the Shocksplinter, and can use a local teleportation device to lunge head-first into battle, though it takes a few hours to recharge this device. Being too large to dodge projectiles, they use Resonance reflectors instead, but can only reflect projectiles they can see coming. Trained in handling high-powered impacts, Berserkers can keep their calm even while flying through the air.";
if (enemyinfo==10)
screentext="10. KOMATO BEAST#Armor: 100   HP: 1#Weight: 7   Security: 6   Walkspeed: 4   Runspeed: 8#Height: 1.9 m#Drops: 8 Nano#Drops when cracked: shocksplinter ammo#Weapon: Body slam#$#The unfortunate Komato Troopers who suffer severe brain damage from the combat drugs taken during training, and thus would be useless as ordinary soldiers, are instead turned into Beasts. While they lack armaments in the form of weaponry, their strength and speed makes up for it, as well as the fear they strike into the Tasen - the Beasts' armor contains extremely volatile Shocksplinter explosives. Cracking a Beast will usually cause a feedback loop in the mechanical part of its brain, stunning it for a considerable amount of time.";
if (enemyinfo==11)
screentext="11. KOMATO ASSASSIN#Armor: 200   HP: 3 (Normal), 4 (Hard), 5 (Extreme)#Weight: 1   Security: 9   Speed: -#Height: 2.2 m#Drops: 16 Nano#Drops when cracked: large shocksplinter ammo#Weapons: Teleport, Laser daggers, dual Plasma cannon, automatic Resonance reflector#$#The Assassins are high-speed killers with an almost unlimited local teleportation ability, armed with dual Plasma cannons and laser daggers. Their light Nanofields and extreme reflexes allow them to teleport away from melee attacks and instant-hit weapons alike, depending on their skill, and their rapid-fire reflectors makes them completely impervious to mass-based projectile weaponry. An injured Assassin will drop some Nano and flee the battlefield, leaving any surviving opponents shaken and paranoid.";
if (enemyinfo==12)
screentext="12. KOMATO ANNIHILATOR#Armor: 200   HP: 80#Weight: 10   Security: 10   Speed: 3#Height: 4.7 m#Drops: 64 Nano, large pulse*3, large shock*3#Drops when cracked: large shocksplinter ammo*3#Weapons 1: Destroy, Plasma cannon, Shocksplinter, Hyper pulse  Weapons 2: Destroy, Plasma cannon, Shocksplinter, Splintergun#$#The war between the Tasen and Komato led to new types of cyborg soldiers being created, and the Annihilators are the top of the line - these walking tanks can withstand such incredible damage that they appear invincible. Incabable of feeling fear or pain, they are known to pick nearby victims up with one hand - even Tasen Elites - and force their Nanofields to self-destruct. The lesser Komato forces have a deep fear of their commanding Annihilators and obey their every word, even if it means their own death.";
if (enemyinfo==13)
screentext="13. KOMATO SKYSMASHER#Armor: 400   HP: 1#Weight: 1   Security: 25   Speed: 5#Height: 1.0 m#Drops: Shocksplinter ammo#Weapon: Shocksplinter#$#Skysmashers are the original line of Komato defense robots, later stolen and modified by the Tasen into stationary turrets. Using gravitational manipulation to fly freely, they are able to target enemies more effectively than their Tasen-made counterpart, although they primarily focus on staying alive by using unpredictable movement patterns. The Skysmasher nickname comes from their widespread use against smaller Tasen vessels in surface combat, where hundreds of them would fly up and pelt incoming ships with Shocksplinter. The only way to destroy a Skysmasher without triggering the self-destruct explosives is with a direct physical attack, or a Resonance detonator.";
if (enemyinfo==14)
screentext="14. KOMATO SENTINEL#Armor: 200   HP: 200#Weight: 1   Security: 40   Speed: 20#Height: 4.0 m#Drops: Nothing#Weapons: Spread rockets, Rocket hail, Multidirectional Splintergun, Multidirectional MPFB, Plasma cannon, Tackle, Nuke#$#Sentinels are automated destroyers fitted with triple composite alloy armor and a limited free-floating ability. Most armor-damaging weapons don't even scratch them, and their heavy internal plating makes explosives half as effetive. Relying on simple charge-and-attack tactics with everything from MPFB Devastators to their own body, Sentinels are programmed with the belief that they are indestructible, which lets their confidence and tireless barrage of attacks overwhelm their opponents. The Cyclic Fusion Ignition System and Velocithor V2-10 can pierce through their armor, however.";
if (enemyinfo==15)
screentext="15. KOMATO GENERAL#Armor: 200   HP: 900#Weight: 250   Security: 250   Speed: -#Height: 13.2 m#Drops: Nothing#---WEAPON TIERS---#1: Ragebomb, Tyrian claw, Ripper, Heavy stomp#2: Arch devastator, Ultra shotgun, Zica burst, Fractal rockets 3: Death hail, Eruption, Megamissile#Final: Charge, Nanostorm#$#These high-ranking Komato pilot the most advanced Eidolon-class exoskeletons available, designed to destroy entire armies by themselves. Like the Sentinels, they carry triple composite alloy armor making nearly all armor-damaging Nanoweapons useless, although they still take full damage from explosives. No Generals have ever fallen in battle.";
if (enemyinfo==16)
screentext="16. TASEN ELITE KROTERA#HP: 25#Height: 2.9 m#Superweapon: Rapid-fire MPFB#$#A Tasen top dog whose word is law. He believes himself to always be right, as long as enough people agree with him - or as long as he tells them to. He believes that there is nothing wrong with destroying mankind to make room for the Tasen, but not all of his troops seem to share that sentiment.";
if (enemyinfo==17)
screentext="17. KOMATO ASSASSIN ASHA#HP: 8#Height: 2.2 m#Superweapon: Raining Laser daggers#$#An Assassin whose extreme skills are matched only by his ego. While he constantly boasts about one day being recognized as the best unit in the Komato Imperial Army, he certainly has the bite to match his bark. When it really matters, his down-to-earth logic proves that behind his cocky attitude lies a calculating, militaristic heart of stone.";
if (enemyinfo==18)
screentext="18. KOMATO SENTINEL PROXIMA#HP: 200#Height: 4.0 m#Superweapon: Nuke#$#One of the deadly (and highly expensive) Sentinels of the Imperial Army, Proxima doesn't take direct orders from anyone but General Tor. It resides aboard a Fleet 1089 Phantom Reaver, ready to be dropped to ground level and automatically target the most powerful nearby enemy unit.";
if (enemyinfo==19)
screentext="19. KOMATO ANNIHILATOR IOSA#HP: 400#Height: 4.7 m#Superweapon: Velocithor V2-10#$#The famous immortal warmachine of the Komato Imperial Army, this young woman has since her successful implantation of a unique Nanofield been dubbed `Iosa the Invincible`. Her psyche was left remarkably intact after watching her friends and colleagues blown to dust by a full-force Tasen Alpha Strike, which she alone survived thanks to her Nanofield. Her hatred for the Tasen is beyond fanatic.";
if (enemyinfo==20)
screentext="20. IOSA THE INVINCIBLE#HP: ?#Height: 2.3 m#Supermove: Storm of death#$#Outside her exoskeleton, the unarmed Iosa is even more terrifying. With her blazing speed, razor-sharp claws and impenetrable Nanofield, she's a terror most foes don't behold for long.";
if (enemyinfo==21)
screentext="21. KOMATO ASSASSIN ASHA 2#HP: 10#Height: 2.2 m#Superweapons: Megasmash, Plasma rage, Plasma vortex#$#Already known for losing his right arm in combat, Asha was further insulted by losing to the Human Anomaly in Sector 5. Back with a vengeance in Sector X, he is determined to destroy the Anomaly or die trying. With a severely improved arsenal and upgraded teleportation ability, the odds weigh heavily in his favor. Despite having learnt to avoid any and all possible attacks, however, his one weakness is that he still considers the low-end Shotgun and Buster gun too harmless to take seriously.";
if (enemyinfo==22)
screentext="22. KOMATO GENERAL TOR#HP: 900 (Normal), 1050 (Hard), 1200 (Extreme)#Height outside exoskeleton: 4.0 m#Superweapon: Phantom Hammer#$#A battleworn hero of the Komato Imperial Army, Tor is content with going with the flow of Komato politics, never being stupid enough to raise a voice against the Army or High Command. He does what he is told, and does it exceptionally well. He has mixed feelings for Origin, but is prepared to destroy it if necessary. Known as the killer of the legendary Tasen war hero, Hel Sarie, he is as feared as he is hated among the Tasen.";
if (enemyinfo==23)
screentext="23. TASEN SOLDIER YUKABACERA#HP: 50#Height: 2.0 m#Superweapons: Plasma cannon, CFIS#$#A laid-back Soldier who took his own advice and used his collection of rare hot drink cans to buy his way on board the first and only fleet to escape Elem Sioz, one of the last Tasen planets, before the Komato Alpha Struck it. Yukabacera doesn't really care for the world outside of his recreational cracking, news reading and hot drink drinking, but he's no dummy - using his ties with various crackers, he's obtained some truly remarkable weapons and Nanofield upgrades. He has even written a somewhat defective translator for human languages, a game for standard Tasen terminals, and a sound pitcher for his own helmet to give him a more imposing voice. Soldier Vateilika shares many of Yukabacera's interests and has received both outlawed and homebrew technologies from him.";
if (enemyinfo==24)
screentext="24. KOMATO ASSASSIN ANSAKSIE#HP: ?#Height: 2.2 m#Superweapon: Massacre#$#This selectively pacifistic Assassin carries several illegal Nanoweapons and Generation 2 Nanoguns `acquired` for her by Imperial Research insiders, and her helmet contains a live tracking system of potential targets, including Komato Generals. She is opposed to weapons development and the morals of the Imperial Army, but is on the other hand fiercely dogmatic and self-involved, having killed Komato who simply did not agree with her. Ansaksie rarely uses the weapons she carries, as it could draw the attention of her superiors. Iji would have to be very pacifistic to earn her respect, should she want it.";
if (enemyinfo==25)
screentext="25. HUMAN ANOMALY#Unit name: Iji Kataiser   Armor: 100   HP: 20#Weight: 1   Security: 1   Speed: 6#Height: 1.9 m#Skills: Air brake, Teching, Nanofield reboot, Retribution#$#The Anomaly's deceptively low statistics and standard Tasen Soldier Nanofield are outweighed by a her nimble frame and massive array of Nanoweapons. Her Nanogun is a rare Tasen-made replica of a Komato General's Generation 2 Pre-loader, meaning it preemptively generates and loads ammunition into the firing mechanism, letting it fire even the heaviest of Nanoweapons without warning. This priceless replica is so small in size as to be carried by a single Trooper, unlike the huge versions normally weilded by the Generals outside of their exoskeletons, making it an extremely valuable target for the Komato fleet that descended on Origin.";
}

//Poster info
else if (tier=="wait"){
    //Posters
    if (waittype==1){
        if (global.poster1 && global.poster2 && global.poster3 && global.poster4 && global.poster5 && global.poster6 && global.poster7 && global.poster8 && global.poster9 && global.poster10){
            screentext="CONGRATULATIONS!#$#You found all ten of the Posters! Amazing!";
            }
        else{
            screentext="FINDING THE POSTERS#$#The Posters are strewn around the complex in the most well-hidden areas. Some of them can only be found on Normal difficulty, but none of them require you to play on a higher difficulty level. The Nanofield reboot and Rocket jump can aid you in finding the Posters, as well as most other advanced techniques you can discover in the enemy logbooks. Certain unlockables will also help you in your search (but not in reaching the Posters themselves, in other words, no unlockables will alter the gameplay itself to favor the finding of Posters). Learn to use the enemies and architecture to your advantage, and be creative - most of all, make sure you understand the function of each and every Nanoweapon in your arsenal.#$#Good luck!";
            }
        }
    //Old turbo mode
    else if (waittype==2){
        if (global.turbomode==1){
            screentext="TURBO MODE EXPLANATION#$#Turbo mode `DOUBLE` will double the maximum Frames Per Second limit. On a good computer, the game will run twice as fast at a constant framerate. On a slow computer, however, you may not notice a difference, or the game will run choppily.";
            }
        if (global.turbomode==2){
            screentext="TURBO MODE EXPLANATION#$#Turbo mode `NO LIMIT` will remove the maximum Frames Per Second limit. The game speed now depends entirely on the power of your computer, and may run at over five to ten times the normal speed at a highly fluctating frame rate. On a slow computer, however, you may not notice a difference, or the game will run choppily.";
                }
            }
    //No gamma
    else if (waittype==4){
        screentext="SCREEN COLOR EXPLANATION#$#The full-screen color changing effects may cause the game to slow down. Turn this option off only if you experience this problem. For technical reasons this option is only available here in the Main menu.";
        }
    //Detail level
    else if (waittype==5){
        screentext="SPECIAL EFFECTS EXPLANATION#$#Setting this option to `low` limits or removes many effects where possible, plus reduces detail like debris and smoke puffs. Only set this to `low` if you experience problems with slowdown. For technical reasons this option is only available here in the Main menu.";
        }
    //No blood
    else if (waittype==6){
        screentext="HUMAN BLOOD EXPLANATION#$#Setting this option to `off` removes the red blood coming from Iji and other humans.";
        }
    //Secret information
    else if (waittype==7){
        screentext="Welcome to the top secret options menu!#$#Be aware that these options may break the game in interesting ways. Also, they will be set to `off` when you quit the game.#$#Setting any of these options to `on` will set the game timer to 10.00 at the start of each Sector to prevent accidentally getting an unfairly low speedrun time.";
        }
    //Secret option 1
    else if (waittype==8){
        screentext="1.6 REFLECTOR EXPLANATION#$#When this option is set to `on`, projectiles reflected with the Resonance reflector will NOT award you kills when they strike enemies.#$#Certain in-game text will be updated to reflect this.";
        }
    //Secret option 2
    else if (waittype==9){
        screentext="NO MERCY EXPLANATION#$#When this option is set to `on`, Iji will have only 0.2 seconds of mercy invulnerability after being damaged, without exception. This is true no matter what state she is in, so certain enemy attacks can hit Iji repeatedly when they couldn't do so before.#$#Be warned that this mode has plenty of instant death situations and is extremely unfair - or perhaps more fair from the enemies' point of view.";
        }
    //Secret option 3
    else if (waittype==10){
        screentext="FIRE ANYTIME EXPLANATION#$#When this option is set to `on`, Iji may fire while jumping, falling and ducking, although she has no animations for this.";
        }
    //Secret option 4
    else if (waittype==11){
        screentext="RANDOM STATIONS EXPLANATION#$#When this option is set to `on`, whenever you attempt to spend a Point in a Cyborg station, it is assigned to a random stat.#$#Be warned that performing a Nanofield reboot in this mode will reset your level to zero and remove ALL of your Points and Nano.";
        }
    //Secret option 5
    else if (waittype==12){
        screentext="NO RELOADS EXPLANATION#$#When this option is set to `on`, Iji's weapons have no reload time, with the exception of those with infinite ammunition and the Chain Fractal Injection Shell (for technical reasons).";
        }
    //Supersecret information
    else if (waittype==13){
        screentext="Welcome to Iji's final secret!#$#There's nothing more to give you, so I might as well give you access to the game's debug mode, which was used for testing during development. You've already done everything there is to do, so why not just let you obliterate the game?#$#There really are no more secrets, but using the debug mode will let you do all sorts of unintended things, like skipping story triggers and messing up the boss fights. Please read the instructions for each key, and have fun!#$#Setting debug mode to `on` will set the game timer to 10.00 at the start of each Sector to prevent accidentally getting an unfairly low speedrun time.#$#Of course, the debug mode will not work on reallyjoel's dad difficulty.";
        }
    //Supersecret option 1
    else if (waittype==14){
        screentext="DEBUG MODE EXPLANATION#$#F7: Mute loopable sounds#F8: Go to end cutscene (may cause problems)#F9: Give Tor 3 chargeballs#Shift: Count various#Backspace: level skip/level advance (also works in HORSEGUN)#Shift+Page down: Give all extras (but you already have them|)#Page down: Increase all stats#End: Increase ammo#Home: Destroy enemies and nearby doors#Insert: Spawn Nano overload (if difficulty level permits it)#Delete: Give all weapons including secret ones#Keypad +: Level up#Keypad -: Max Health, Jump and Armor#Keypad *: Press while holding arrow key to warp#Space+Page up: Lock enemies and show killdata on mouseover#Shift+Page up: Fill killdata#Ctrl+Page up: Show killdata discrepancies";
        }
    }

#define scr_setmaps
keyboard_set_map(ord("Z"),vk_end);
keyboard_set_map(ord("X"),vk_end);
keyboard_set_map(ord("C"),vk_end);
keyboard_set_map(ord("Q"),vk_end);
keyboard_set_map(ord("W"),vk_end);
keyboard_set_map(ord("E"),vk_end);
keyboard_set_map(ord("R"),vk_end);
keyboard_set_map(ord("A"),vk_end);
keyboard_set_map(ord("S"),vk_end);
keyboard_set_map(ord("D"),vk_end);
keyboard_set_map(global.kickkey,ord("Z"));
keyboard_set_map(global.firekey,ord("X"));
keyboard_set_map(global.usekey,ord("C"));
keyboard_set_map(global.weap5key,ord("Q"));
keyboard_set_map(global.weap6key,ord("W"));
keyboard_set_map(global.weap7key,ord("E"));
keyboard_set_map(global.weap8key,ord("R"));
keyboard_set_map(global.prevkey,ord("A"));
keyboard_set_map(global.specialkey,ord("S"));
keyboard_set_map(global.nextkey,ord("D"));
#define scr_drawunlocks
textyadjust=-28*2;
text="";

if (unlocked[1]){
text+="~For beating Normal or higher, you unlocked SINGLE SECTOR PLAY~#$#";
text+="~~~~For beating Normal or higher, you unlocked SOUND TEST~~~~~~#$#";
text+="~~~~For beating Normal or higher, you unlocked SECTOR MAPS~~~~~#$#";
textyadjust+=28*2;
}
if (unlocked[2]){
text+="~~~~~For beating Hard or higher, you unlocked PLAY HERO 3D~~~~~#$#";
text+="~For beating Hard or higher, you unlocked SUDDEN DEATH SECTOR~~#$#";
textyadjust+=28;
}
if (unlocked[3]){
text+="~~~~~~For beating Extreme, you unlocked ALTERNATE OUTFIT~~~~~~~#$#";
text+="~~~~For beating Extreme, you unlocked ULTIMORTAL DIFFICULTY~~~~#$#";
textyadjust+=28;
}
if (unlocked[4]){
text+="For achieving Nanomaster rank, you unlocked WEAPON INFORMATION~#$#";
}
if (unlocked[6]){
text+="~~For achieving Immortal rank, you unlocked ENEMY INFORMATION~~#$#";
}
if (unlocked[8]){
text+="~~~~~~~~For beating Ultimortal, you unlocked TURBO MODE~~~~~~~~#$#";
}
text+="~~~~~~~~~~~~Press Escape to return to the Main menu~~~~~~~~~~~~";

for (i=1; i<8; i+=1){
if (unlocked[i]==1)
    textyadjust+=28;
}

draw_set_font(global.fontspecial);
draw_set_color(c_white);
draw_text_ext(22,224-textyadjust,text,28,756);

#define scr_mainmenuescape
//FACE (menusabot) pressed escape in main menu
if (!ignoreall){
if (tier="main"){
    if (global.extras1==0)
        selected=6;
    else
        selected=7;
    scr_menuselection();
    }
else if (tier="new"){
    if (really)
        selected=6;
    else
        selected=5;
    scr_menuselection();
    }
else if (tier="load"){
    selected=1;
    scr_menuselection();
    }
else if (tier="options"){
    selected=1;
    scr_menuselection();
    }
else if (tier="options2"){
    selected=1;
    scr_menuselection();
    }
else if (tier="controls"){
    selected=1;
    scr_menuselection();
    }
else if (tier="controls2"){
    selected=1;
    scr_menuselection();
    }
else if (tier="weapons"){
    selected=1;
    scr_menuselection();
    }
else if (tier="extras"){
    selected=1;
    scr_menuselection();
    }
else if (tier="extras2"){
    selected=1;
    scr_menuselection();
    }
else if (tier="extras3"){
    selected=1;
    seczmusic=0;
    scr_menuselection();
    }
else if (tier="quit"){
    selected=2;
    scr_menuselection();
    }
else if (tier="error"){
    scr_menuselection();
    }
else if (tier="error2"){
    scr_menuselection();
    }
else if (tier="error3"){
    selected=3;
    scr_menuselection();
    }
else if (tier="ultimortal"){
    selected=2;
    scr_menuselection();
    }
else if (tier="really"){
    selected=2;
    scr_menuselection();
    }
else if (tier="wait"){
    scr_menuselection();
    }
else if (tier="wait2"){
    scr_menuselection();
    }
else if (tier="wait3"){
    scr_menuselection();
    }
else if (tier="secret"){
    selected=1;
    scr_menuselection();
    }
}
#define scr_mainsoundtexts
if (obj_face.soundtest<100)
    text+="0"
if (obj_face.soundtest<10)
    text+="0"
text+=string(obj_face.soundtest)+"~";
if (obj_face.soundtest==0) text+="glo_menuselect";
else if (obj_face.soundtest==1) text+="glo_menuback";
else if (obj_face.soundtest==2) text+="glo_menumove";
else if (obj_face.soundtest==3) text+="glo_shell";
else if (obj_face.soundtest==4) text+="glo_door";
else if (obj_face.soundtest==5) text+="glo_doorclose";
else if (obj_face.soundtest==6) text+="glo_swipe";
else if (obj_face.soundtest==7) text+="glo_kick";
else if (obj_face.soundtest==8) text+="glo_land";
else if (obj_face.soundtest==9) text+="glo_crackbegin";
else if (obj_face.soundtest==10) text+="glo_cracktick";
else if (obj_face.soundtest==11) text+="glo_crackfail";
else if (obj_face.soundtest==12) text+="glo_cracksuccess";
else if (obj_face.soundtest==13) text+="glo_pickup";
else if (obj_face.soundtest==14) text+="glo_pickup2";
else if (obj_face.soundtest==15) text+="glo_getoverload";
else if (obj_face.soundtest==16) text+="glo_reflect";
else if (obj_face.soundtest==17) text+="glo_thunder";
else if (obj_face.soundtest==18) text+="glo_teleport";
else if (obj_face.soundtest==19) text+="glo_liftstart";
else if (obj_face.soundtest==20) text+="glo_liftend";
else if (obj_face.soundtest==21) text+="glo_rico1";
else if (obj_face.soundtest==22) text+="glo_rico2";
else if (obj_face.soundtest==23) text+="glo_rico3";
else if (obj_face.soundtest==24) text+="glo_selectweapon";
else if (obj_face.soundtest==25) text+="glo_debris1";
else if (obj_face.soundtest==26) text+="glo_debris2";
else if (obj_face.soundtest==27) text+="glo_shard1";
else if (obj_face.soundtest==28) text+="glo_shard2";
else if (obj_face.soundtest==29) text+="glo_destroy";
else if (obj_face.soundtest==30) text+="glo_levelup";
else if (obj_face.soundtest==31) text+="glo_spark1";
else if (obj_face.soundtest==32) text+="glo_spark2";
else if (obj_face.soundtest==33) text+="glo_electrocute";
else if (obj_face.soundtest==34) text+="glo_bootelec";
else if (obj_face.soundtest==35) text+="glo_blit";

else if (obj_face.soundtest==36) text+="wea_shot";
else if (obj_face.soundtest==37) text+="wea_imach";
else if (obj_face.soundtest==38) text+="wea_mach";
else if (obj_face.soundtest==39) text+="wea_charge";
else if (obj_face.soundtest==40) text+="wea_rock";
else if (obj_face.soundtest==41) text+="wea_mpfb";
else if (obj_face.soundtest==42) text+="wea_reso";
else if (obj_face.soundtest==43) text+="wea_puls";
else if (obj_face.soundtest==44) text+="wea_pulsend";
else if (obj_face.soundtest==45) text+="wea_shoc";
else if (obj_face.soundtest==46) text+="wea_cfis";
else if (obj_face.soundtest==47) text+="wea_cfisend";
else if (obj_face.soundtest==48) text+="wea_spli";
else if (obj_face.soundtest==49) text+="wea_plas";
else if (obj_face.soundtest==50) text+="wea_thor";
else if (obj_face.soundtest==51) text+="wea_thorend";
else if (obj_face.soundtest==52) text+="wea_banana";

else if (obj_face.soundtest==53) text+="exp_turret";
else if (obj_face.soundtest==54) text+="exp_rock";
else if (obj_face.soundtest==55) text+="exp_mpfb";
else if (obj_face.soundtest==56) text+="exp_nuke";
else if (obj_face.soundtest==57) text+="exp_shoc";
else if (obj_face.soundtest==58) text+="exp_spli";
else if (obj_face.soundtest==59) text+="exp_nano";
else if (obj_face.soundtest==60) text+="exp_meta1";
else if (obj_face.soundtest==61) text+="exp_meta2";
else if (obj_face.soundtest==62) text+="exp_glass";
else if (obj_face.soundtest==63) text+="exp_miniglass";
else if (obj_face.soundtest==64) text+="exp_boss";
else if (obj_face.soundtest==65) text+="exp_pew";

else if (obj_face.soundtest==66) text+="iji_hitfloor";
else if (obj_face.soundtest==67) text+="iji_swiped";
else if (obj_face.soundtest==68) text+="iji_sworded";
else if (obj_face.soundtest==69) text+="iji_land";
else if (obj_face.soundtest==70) text+="iji_land2";
else if (obj_face.soundtest==71) text+="iji_jump";
else if (obj_face.soundtest==72) text+="iji_jump2";
else if (obj_face.soundtest==73) text+="iji_kick";
else if (obj_face.soundtest==74) text+="iji_kick2";
else if (obj_face.soundtest==75) text+="iji_pain1";
else if (obj_face.soundtest==76) text+="iji_pain2";
else if (obj_face.soundtest==77) text+="iji_pain3";
else if (obj_face.soundtest==78) text+="iji_bigpain1";
else if (obj_face.soundtest==79) text+="iji_bigpain2";
else if (obj_face.soundtest==80) text+="iji_death";
else if (obj_face.soundtest==81) text+="iji_damnit";
else if (obj_face.soundtest==82) text+="iji_cry1";
else if (obj_face.soundtest==83) text+="iji_cry2";
else if (obj_face.soundtest==84) text+="iji_berserk1";
else if (obj_face.soundtest==85) text+="iji_berserk2";
else if (obj_face.soundtest==86) text+="iji_berserk3";
else if (obj_face.soundtest==87) text+="iji_ougi1";
else if (obj_face.soundtest==88) text+="iji_ougi2";
else if (obj_face.soundtest==89) text+="iji_breathe";
else if (obj_face.soundtest==90) text+="iji_basepain";

else if (obj_face.soundtest==91) text+="dan_choke";
else if (obj_face.soundtest==92) text+="dan_death";
else if (obj_face.soundtest==93) text+="tur_appear";
else if (obj_face.soundtest==94) text+="tur_find";
else if (obj_face.soundtest==95) text+="tur_lose";
else if (obj_face.soundtest==96) text+="sco_find1";
else if (obj_face.soundtest==97) text+="sco_find2";
else if (obj_face.soundtest==98) text+="sco_death1";
else if (obj_face.soundtest==99) text+="sco_death2";
else if (obj_face.soundtest==100) text+="sol_find1";
else if (obj_face.soundtest==101) text+="sol_find2";
else if (obj_face.soundtest==102) text+="sol_pain1";
else if (obj_face.soundtest==103) text+="sol_pain2";
else if (obj_face.soundtest==104) text+="sol_death1";
else if (obj_face.soundtest==105) text+="sol_death2";
else if (obj_face.soundtest==106) text+="com_find1";
else if (obj_face.soundtest==107) text+="com_find2";
else if (obj_face.soundtest==108) text+="com_pain1";
else if (obj_face.soundtest==109) text+="com_pain2";
else if (obj_face.soundtest==110) text+="com_death1";
else if (obj_face.soundtest==111) text+="com_death2";
else if (obj_face.soundtest==112) text+="eli_find1";
else if (obj_face.soundtest==113) text+="eli_find2";
else if (obj_face.soundtest==114) text+="eli_pain1";
else if (obj_face.soundtest==115) text+="eli_pain2";
else if (obj_face.soundtest==116) text+="eli_death1";
else if (obj_face.soundtest==117) text+="eli_death2";
else if (obj_face.soundtest==118) text+="shr_step";
else if (obj_face.soundtest==119) text+="tro_find1";
else if (obj_face.soundtest==120) text+="tro_find2";
else if (obj_face.soundtest==121) text+="tro_pain1";
else if (obj_face.soundtest==122) text+="tro_pain2";
else if (obj_face.soundtest==123) text+="tro_death1";
else if (obj_face.soundtest==124) text+="tro_death2";
else if (obj_face.soundtest==125) text+="ber_find1";
else if (obj_face.soundtest==126) text+="ber_find2";
else if (obj_face.soundtest==127) text+="ber_pain1";
else if (obj_face.soundtest==128) text+="ber_pain2";
else if (obj_face.soundtest==129) text+="ber_ciretako";
else if (obj_face.soundtest==130) text+="bea_find1";
else if (obj_face.soundtest==131) text+="bea_find2";
else if (obj_face.soundtest==132) text+="bea_jump";
else if (obj_face.soundtest==133) text+="asa_pain1";
else if (obj_face.soundtest==134) text+="asa_pain2";
else if (obj_face.soundtest==135) text+="ann_step";
else if (obj_face.soundtest==136) text+="ann_find1";
else if (obj_face.soundtest==137) text+="ann_find2";
else if (obj_face.soundtest==138) text+="ann_destroy";

else if (obj_face.soundtest==139) text+="kro_pain1";
else if (obj_face.soundtest==140) text+="kro_pain2";
else if (obj_face.soundtest==141) text+="kro_death";
else if (obj_face.soundtest==142) text+="kro_ambient1";
else if (obj_face.soundtest==143) text+="kro_ambient2";
else if (obj_face.soundtest==144) text+="kro_ambient3";
else if (obj_face.soundtest==145) text+="kro_win";
else if (obj_face.soundtest==146) text+="kro_emote2";
else if (obj_face.soundtest==147) text+="ash_ambient1";
else if (obj_face.soundtest==148) text+="ash_ambient2";
else if (obj_face.soundtest==149) text+="ash_ambient3";
else if (obj_face.soundtest==150) text+="ash_ambient4";
else if (obj_face.soundtest==151) text+="ash_pain";
else if (obj_face.soundtest==152) text+="ash_death";
else if (obj_face.soundtest==153) text+="ash_win";
else if (obj_face.soundtest==154) text+="ash_win2";
else if (obj_face.soundtest==155) text+="pro_powerdown";
else if (obj_face.soundtest==156) text+="pro_beep1";
else if (obj_face.soundtest==157) text+="pro_beep2";
else if (obj_face.soundtest==158) text+="pro_beep3";

else if (obj_face.soundtest==159) text+="ios_ambient1";
else if (obj_face.soundtest==160) text+="ios_ambient2";
else if (obj_face.soundtest==161) text+="ios_ambient3";
else if (obj_face.soundtest==162) text+="ios_ambient4";
else if (obj_face.soundtest==163) text+="ios_ambient5";
else if (obj_face.soundtest==164) text+="ios_win";
else if (obj_face.soundtest==165) text+="ios_pain";
else if (obj_face.soundtest==166) text+="io2_jump";
else if (obj_face.soundtest==167) text+="io2_kicked";
else if (obj_face.soundtest==168) text+="io2_melee";
else if (obj_face.soundtest==169) text+="io2_melee2";
else if (obj_face.soundtest==170) text+="io2_death";
else if (obj_face.soundtest==171) text+="io2_win";
else if (obj_face.soundtest==172) text+="tor_fire";
else if (obj_face.soundtest==173) text+="tor_fly";
else if (obj_face.soundtest==174) text+="tor_gather";
else if (obj_face.soundtest==175) text+="tor_spark";
else if (obj_face.soundtest==176) text+="tor_eruption";
else if (obj_face.soundtest==177) text+="tor_ambient1";
else if (obj_face.soundtest==178) text+="tor_ambient2";
else if (obj_face.soundtest==179) text+="tor_ambient3";
else if (obj_face.soundtest==180) text+="tor_ambient4";
else if (obj_face.soundtest==181) text+="tor_win";
else if (obj_face.soundtest==182) text+="tor_pain";
else if (obj_face.soundtest==183) text+="tor_emote2";
else if (obj_face.soundtest==184) text+="tor_emote3";

else if (obj_face.soundtest==185) text+="mus_secintro";
else if (obj_face.soundtest==186) text+="mus_sec1";
else if (obj_face.soundtest==187) text+="mus_sec2";
else if (obj_face.soundtest==188) text+="mus_sec3";
else if (obj_face.soundtest==189) text+="mus_sec4";
else if (obj_face.soundtest==190) text+="mus_sec5";
else if (obj_face.soundtest==191) text+="mus_boss";
else if (obj_face.soundtest==192) text+="mus_tor";
else if (obj_face.soundtest==193) text+="mus_ending";
else if (obj_face.soundtest==194) text+="mus_mainmenu";
else if (obj_face.soundtest==195) text+="mus_clear";
else if (obj_face.soundtest==196) text+="mus_darkstroke";
else if (obj_face.soundtest==197) text+="mus_lightstroke";
else if (obj_face.soundtest==198) text+="mus_calm";
else if (obj_face.soundtest==199) text+="mus_dark";
else if (obj_face.soundtest==200) text+="mus_sad";
else if (obj_face.soundtest==201) text+="mus_asha";
else if (obj_face.soundtest==202) text+="mus_gameover";
else if (obj_face.soundtest==203) text+="mus_hero3d";
else if (obj_face.soundtest==204) text+="mus_doom";
else if (obj_face.soundtest==205) text+="mus_}fabrikat";

else if (obj_face.soundtest==206) text+="ext_ansaksie1";
else if (obj_face.soundtest==207) text+="ext_ansaksie2";
else if (obj_face.soundtest==208) text+="ext_ansaksie3";
else if (obj_face.soundtest==209) text+="ext_ansaksie4";
else if (obj_face.soundtest==210) text+="ext_ansaksie5";
else if (obj_face.soundtest==211) text+="ext_ansaksie6";
else if (obj_face.soundtest==212) text+="ext_impulseexplo";
else if (obj_face.soundtest==213) text+="ext_barrier";
else if (obj_face.soundtest==214) text+="ext_barrierexplo";

#define scr_mainsoundstop
repeat(10)
    sound_stop_all();
scr_stopmusic();
soundtested=1;
ignoreall=1;
seczmusic=0;
alarm[3]=1;

//DUMP MUSIC (don't care about performance impact)
//Obsolete

//DUMP OLD SOUNDS
//Obsolete
#define scr_mainsoundplay
ignoreall=0;
seczmusic=0;

//PLAY IT SAM
if (obj_face.soundtest==0) scr_sound("glo_menuselect");
if (obj_face.soundtest==1) scr_sound("glo_menuback");
if (obj_face.soundtest==2) scr_sound("glo_menumove");
if (obj_face.soundtest==3) scr_sound("glo_shell",1);
if (obj_face.soundtest==4) scr_sound("glo_door");
if (obj_face.soundtest==5) scr_sound("glo_doorclose");
if (obj_face.soundtest==6) scr_sound("glo_swipe");
if (obj_face.soundtest==7) scr_sound("glo_kick");
if (obj_face.soundtest==8) scr_sound("glo_land");
if (obj_face.soundtest==9) scr_sound("glo_crackbegin");
if (obj_face.soundtest==10) scr_sound("glo_cracktick");
if (obj_face.soundtest==11) scr_sound("glo_crackfail");
if (obj_face.soundtest==12) scr_sound("glo_cracksuccess");
if (obj_face.soundtest==13) scr_sound("glo_pickup");
if (obj_face.soundtest==14) scr_sound("glo_pickup2");
if (obj_face.soundtest==15) scr_sound("glo_getoverload");
if (obj_face.soundtest==16) scr_sound("glo_reflect");
if (obj_face.soundtest==17) scr_sound("glo_thunder");
if (obj_face.soundtest==18) scr_sound("glo_teleport");
if (obj_face.soundtest==19) scr_sound("glo_liftstart");
if (obj_face.soundtest==20) scr_sound("glo_liftend");
if (obj_face.soundtest==21) scr_sound("glo_rico",1);
if (obj_face.soundtest==22) scr_sound("glo_rico",2);
if (obj_face.soundtest==23) scr_sound("glo_rico",3);
if (obj_face.soundtest==24) scr_sound("glo_selectweapon");
if (obj_face.soundtest==25) scr_sound("glo_debris",1);
if (obj_face.soundtest==26) scr_sound("glo_debris",2);
if (obj_face.soundtest==27) scr_sound("glo_shard",1);
if (obj_face.soundtest==28) scr_sound("glo_shard",2);
if (obj_face.soundtest==29) scr_sound("glo_destroy");
if (obj_face.soundtest==30) scr_sound("glo_levelup");
if (obj_face.soundtest==31) scr_sound("glo_spark",1);
if (obj_face.soundtest==32) scr_sound("glo_spark",2);
if (obj_face.soundtest==33) scr_sound("glo_electrocute");
if (obj_face.soundtest==34) scr_sound("glo_bootelec");
if (obj_face.soundtest==35) scr_sound("glo_blit");

if (obj_face.soundtest==36) scr_sound("wea_shot");
if (obj_face.soundtest==37) scr_sound("wea_imach");
if (obj_face.soundtest==38) scr_sound("wea_mach");
if (obj_face.soundtest==39) scr_sound("wea_charge");
if (obj_face.soundtest==40) scr_sound("wea_rock");
if (obj_face.soundtest==41) scr_sound("wea_mpfb");
if (obj_face.soundtest==42) scr_sound("wea_reso");
if (obj_face.soundtest==43) scr_sound("wea_puls");
if (obj_face.soundtest==44) scr_sound("wea_pulsend");
if (obj_face.soundtest==45) scr_sound("wea_shoc");
if (obj_face.soundtest==46) scr_sound("wea_cfis");
if (obj_face.soundtest==47) scr_sound("wea_cfisend");
if (obj_face.soundtest==48) scr_sound("wea_spli");
if (obj_face.soundtest==49) scr_sound("wea_plas");
if (obj_face.soundtest==50) scr_sound("wea_thor");
if (obj_face.soundtest==51) scr_sound("wea_thorend");
if (obj_face.soundtest==52) scr_sound("wea_banana");

if (obj_face.soundtest==53) scr_sound("exp_turret");
if (obj_face.soundtest==54) scr_sound("exp_rock");
if (obj_face.soundtest==55) scr_sound("exp_mpfb");
if (obj_face.soundtest==56) scr_sound("exp_nuke");
if (obj_face.soundtest==57) scr_sound("exp_shoc");
if (obj_face.soundtest==58) scr_sound("exp_spli");
if (obj_face.soundtest==59) scr_sound("exp_nano");
if (obj_face.soundtest==60) scr_sound("exp_meta",1);
if (obj_face.soundtest==61) scr_sound("exp_meta",2);
if (obj_face.soundtest==62) scr_sound("exp_glass");
if (obj_face.soundtest==63) scr_sound("exp_miniglass");
if (obj_face.soundtest==64) scr_sound("exp_boss");
if (obj_face.soundtest==65) scr_sound("exp_pew");

if (obj_face.soundtest==66) scr_sound("iji_hitfloor");
if (obj_face.soundtest==67) scr_sound("iji_swiped");
if (obj_face.soundtest==68) scr_sound("iji_sworded");
if (obj_face.soundtest==69) scr_sound("iji_land");
if (obj_face.soundtest==70) scr_sound("iji_land2");
if (obj_face.soundtest==71) scr_sound("iji_jump",1);
if (obj_face.soundtest==72) scr_sound("iji_jump",2);
if (obj_face.soundtest==73) scr_sound("iji_kick",1);
if (obj_face.soundtest==74) scr_sound("iji_kick",2);
if (obj_face.soundtest==75) scr_sound("iji_pain",1);
if (obj_face.soundtest==76) scr_sound("iji_pain",2);
if (obj_face.soundtest==77) scr_sound("iji_pain",3);
if (obj_face.soundtest==78) scr_sound("iji_bigpain",1);
if (obj_face.soundtest==79) scr_sound("iji_bigpain",2);
if (obj_face.soundtest==80) scr_sound("iji_death");
if (obj_face.soundtest==81) {scr_sound("iji_damnit"); subtitle="`Hhh, damnit`";}
if (obj_face.soundtest==82) {scr_sound("iji_cry",1); subtitle="`No`";}
if (obj_face.soundtest==83) {scr_sound("iji_cry",2); subtitle="`I'm sorry`";}
if (obj_face.soundtest==84) {scr_sound("iji_berserk",1); subtitle="`Die`";}
if (obj_face.soundtest==85) {scr_sound("iji_berserk",2); subtitle="`Huh, you die`";}
if (obj_face.soundtest==86) {scr_sound("iji_berserk",3); subtitle="`Yaaah`";}
if (obj_face.soundtest==87) {scr_sound("iji_ougi1"); subtitle="`Oh yeah?`";}
if (obj_face.soundtest==88) scr_sound("iji_ougi2");
if (obj_face.soundtest==89) scr_sound("iji_breathe");
if (obj_face.soundtest==90) scr_sound("iji_basepain");

if (obj_face.soundtest==91) scr_sound("dan_choke");
if (obj_face.soundtest==92) scr_sound("dan_death");
if (obj_face.soundtest==93) scr_sound("tur_appear");
if (obj_face.soundtest==94) scr_sound("tur_find");
if (obj_face.soundtest==95) scr_sound("tur_lose");
if (obj_face.soundtest==96) {scr_sound("sco_find",1); subtitle="`Stop`";}
if (obj_face.soundtest==97) {scr_sound("sco_find",2); subtitle="`Hold it`";}
if (obj_face.soundtest==98) scr_sound("sco_death",1);
if (obj_face.soundtest==99) scr_sound("sco_death",2);
if (obj_face.soundtest==100) {scr_sound("sol_find",1); subtitle="`Halt`";}
if (obj_face.soundtest==101) {scr_sound("sol_find",2); subtitle="`Hey`";}
if (obj_face.soundtest==102) scr_sound("sol_pain",1);
if (obj_face.soundtest==103) scr_sound("sol_pain",2);
if (obj_face.soundtest==104) scr_sound("sol_death",1);
if (obj_face.soundtest==105) scr_sound("sol_death",2);
if (obj_face.soundtest==106) {scr_sound("com_find",1); subtitle="`Contact`";}
if (obj_face.soundtest==107) {scr_sound("com_find",2); subtitle="`Incoming`";}
if (obj_face.soundtest==108) scr_sound("com_pain",1);
if (obj_face.soundtest==109) scr_sound("com_pain",2);
if (obj_face.soundtest==110) scr_sound("com_death",1);
if (obj_face.soundtest==111) scr_sound("com_death",2);
if (obj_face.soundtest==112) {scr_sound("eli_find",1); subtitle="`Intruder`";}
if (obj_face.soundtest==113) {scr_sound("eli_find",2); subtitle="`Hostile`";}
if (obj_face.soundtest==114) scr_sound("eli_pain",1);
if (obj_face.soundtest==115) scr_sound("eli_pain",2);
if (obj_face.soundtest==116) scr_sound("eli_death",1);
if (obj_face.soundtest==117) scr_sound("eli_death",2);
if (obj_face.soundtest==118) scr_sound("shr_step");
if (obj_face.soundtest==119) {scr_sound("tro_find",1); subtitle="`Get 'em`";}
if (obj_face.soundtest==120) {scr_sound("tro_find",2); subtitle="`Die`";}
if (obj_face.soundtest==121) scr_sound("tro_pain",1);
if (obj_face.soundtest==122) scr_sound("tro_pain",2);
if (obj_face.soundtest==123) scr_sound("tro_death",1);
if (obj_face.soundtest==124) scr_sound("tro_death",2);
if (obj_face.soundtest==125) {scr_sound("ber_find",1); subtitle="`Come here`";}
if (obj_face.soundtest==126) {scr_sound("ber_find",2); subtitle="`Kill`";}
if (obj_face.soundtest==127) scr_sound("ber_pain",1);
if (obj_face.soundtest==128) scr_sound("ber_pain",2);
if (obj_face.soundtest==129) {scr_sound("ber_ciretako",1); subtitle="`Ciretako`";}
if (obj_face.soundtest==130) scr_sound("bea_find",1);
if (obj_face.soundtest==131) scr_sound("bea_find",2);
if (obj_face.soundtest==132) scr_sound("bea_jump");
if (obj_face.soundtest==133) scr_sound("asa_pain",1);
if (obj_face.soundtest==134) scr_sound("asa_pain",2);
if (obj_face.soundtest==135) scr_sound("ann_step");
if (obj_face.soundtest==136) {scr_sound("ann_find",1); subtitle="`Annihilate`";}
if (obj_face.soundtest==137) {scr_sound("ann_find",2); subtitle="`Terminate`";}
if (obj_face.soundtest==138) scr_sound("ann_destroy");

if (obj_face.soundtest==139) scr_sound("kro_pain",1);
if (obj_face.soundtest==140) scr_sound("kro_pain",2);
if (obj_face.soundtest==141) scr_sound("kro_death");
if (obj_face.soundtest==142) {scr_sound("kro_ambient1"); subtitle="`Hold still`";}
if (obj_face.soundtest==143) {scr_sound("kro_ambient2"); subtitle="`You can't hide`";}
if (obj_face.soundtest==144) {scr_sound("kro_ambient3"); subtitle="`Try to stop this`";}
if (obj_face.soundtest==145) {scr_sound("kro_win"); subtitle="`The strong prevail, Anomaly - your race is history`";}
if (obj_face.soundtest==146) scr_sound("kro_emote2");
if (obj_face.soundtest==147) {scr_sound("ash_ambient",1); subtitle="`Just die`";}
if (obj_face.soundtest==148) {scr_sound("ash_ambient2",1); subtitle="`Ahahahahahahaha`";}
if (obj_face.soundtest==149) {scr_sound("ash_ambient",3); subtitle="`Come on`";}
if (obj_face.soundtest==150) {scr_sound("ash_ambient",4); subtitle="`You're mine`";}
if (obj_face.soundtest==151) scr_sound("ash_pain");
if (obj_face.soundtest==152) scr_sound("ash_death");
if (obj_face.soundtest==153) {scr_sound("ash_win"); subtitle="`Huh, easiest bounty yet`";}
if (obj_face.soundtest==154) {scr_sound("ash_win2"); subtitle="`Finally`";}
if (obj_face.soundtest==155) scr_sound("pro_powerdown");
if (obj_face.soundtest==156) scr_sound("pro_beep1");
if (obj_face.soundtest==157) scr_sound("pro_beep2",1);
if (obj_face.soundtest==158) scr_sound("pro_beep3");

if (obj_face.soundtest==159) {scr_sound("ios_ambient1",1); subtitle="`Get down here and fight`";}
if (obj_face.soundtest==160) {scr_sound("ios_ambient2",1); subtitle="`Hold still`";}
if (obj_face.soundtest==161) {scr_sound("ios_ambient3",1); subtitle="`Gotcha`";}
if (obj_face.soundtest==162) {scr_sound("ios_ambient4",1); subtitle="`Huh, yeah right`";}
if (obj_face.soundtest==163) {scr_sound("ios_ambient5",1); subtitle="`Ahahahahaha`";}
if (obj_face.soundtest==164) {scr_sound("ios_win"); subtitle="`Nothing but a mortal`";}
if (obj_face.soundtest==165) scr_sound("ios_pain");
if (obj_face.soundtest==166) scr_sound("io2_jump");
if (obj_face.soundtest==167) scr_sound("io2_kicked");
if (obj_face.soundtest==168) scr_sound("io2_melee");
if (obj_face.soundtest==169) scr_sound("io2_melee2");
if (obj_face.soundtest==170) scr_sound("io2_death");
if (obj_face.soundtest==171) {scr_sound("io2_win"); subtitle="`Nothing but a mortal`";}
if (obj_face.soundtest==172) scr_sound("tor_fire");
if (obj_face.soundtest==173) scr_sound("tor_fly");
if (obj_face.soundtest==174) scr_sound("tor_gather");
if (obj_face.soundtest==175) scr_sound("tor_spark");
if (obj_face.soundtest==176) scr_sound("tor_eruption");
if (obj_face.soundtest==177) {scr_sound("tor_ambient",1); subtitle="`It's useless, human`";}
if (obj_face.soundtest==178) {scr_sound("tor_ambient",2); subtitle="`Die`";}
if (obj_face.soundtest==179) {scr_sound("tor_ambient",3); subtitle="`You're fighting death, human`";}
if (obj_face.soundtest==180) {scr_sound("tor_ambient",4); subtitle="`Don't think it's over so easily`";}
if (obj_face.soundtest==181) {scr_sound("tor_win"); subtitle="`Like a spark to the fire`";}
if (obj_face.soundtest==182) scr_sound("tor_pain");
if (obj_face.soundtest==183) scr_sound("tor_emote2");
if (obj_face.soundtest==184) scr_sound("tor_emote3");

if (obj_face.soundtest==185)
    scr_music("mus_secintro");
if (obj_face.soundtest==186)
    scr_music("mus_sec1");
if (obj_face.soundtest==187)
    scr_music("mus_sec2");
if (obj_face.soundtest==188)
    scr_music("mus_sec3");
if (obj_face.soundtest==189)
    scr_music("mus_sec4");
if (obj_face.soundtest==190)
    scr_music("mus_sec5");
if (obj_face.soundtest==191)
    scr_music("mus_boss");
if (obj_face.soundtest==192)
    scr_music("mus_tor");
if (obj_face.soundtest==193)
    scr_music("mus_ending");
if (obj_face.soundtest==194)
    scr_music("mus_mainmenu");
if (obj_face.soundtest==195)
    scr_music("mus_clear");
if (obj_face.soundtest==196)
    scr_music("mus_darkstroke");
if (obj_face.soundtest==197)
    scr_music("mus_lightstroke");
if (obj_face.soundtest==198)
    scr_music("mus_calm");
if (obj_face.soundtest==199)
    scr_music("mus_dark");
if (obj_face.soundtest==200)
    scr_music("mus_sad");
if (obj_face.soundtest==201)
    scr_music("mus_asha");
if (obj_face.soundtest==202)
    scr_music("mus_gameover");
if (obj_face.soundtest==203)
    scr_music("mus_hero3d");
if (obj_face.soundtest==204)
    scr_music("mus_doom");
if (obj_face.soundtest==205){
    scr_seczmusicinit();
    scr_seczmusicchange();
    alarm[4]=512;
    seczmusic=1;
    }
if (obj_face.soundtest==206){scr_sound("ext_ansaksie",1); subtitle="`Not a chance`";}
if (obj_face.soundtest==207){scr_sound("ext_ansaksie",2); subtitle="`Nice try`";}
if (obj_face.soundtest==208){scr_sound("ext_ansaksie",3); subtitle="`Oh shut up, Iosa`";}
if (obj_face.soundtest==209){scr_sound("ext_ansaksie",4); subtitle="`Not so tough anymore huh?`";}
if (obj_face.soundtest==210){scr_sound("ext_ansaksie",5); subtitle="`Let's go, Anomaly`";}
if (obj_face.soundtest==211){scr_sound("ext_ansaksie",6); subtitle="`Stop fooling around, Anomaly`";}
if (obj_face.soundtest==212) scr_sound("ext_impulseexplo");
if (obj_face.soundtest==213) scr_sound("ext_barrier");
if (obj_face.soundtest==214) scr_sound("ext_barrierexplo");

#define scr_pausecreate
alarm[0]=10;
tier="main";
temptier="main";
selected=1;
selections=7;
if (global.horse){
    tier="horse";
    temptier="horse";
    selections=6;
    }
weaponinfo=1;
enemyinfo=1;
pausemenu=1;
nocovers=0;
(instance_create(view_xview[0]+242,view_yview[0]+166,obj_marker)).depth=-1000005;

//build weapon list
weaponlist[1]=1;
step=1;
weaponlistlength=1;
if (global.weapon2){
    step+=1;
    weaponlist[step]=2;
    weaponlistlength+=1;
    }
if (global.weapon3){
    step+=1;
    weaponlist[step]=3;
    weaponlistlength+=1;
    }
if (global.weapon4){
    step+=1;
    weaponlist[step]=4;
    weaponlistlength+=1;
    }
if (global.weapon5){
    step+=1;
    weaponlist[step]=5;
    weaponlistlength+=1;
    }
if (global.weapon6){
    step+=1;
    weaponlist[step]=6;
    weaponlistlength+=1;
    }
if (global.weapon7){
    step+=1;
    weaponlist[step]=7;
    weaponlistlength+=1;
    }
if (global.weapon8){
    step+=1;
    weaponlist[step]=8;
    weaponlistlength+=1;
    }
if (global.weapon9){
    step+=1;
    weaponlist[step]=9;
    weaponlistlength+=1;
    }
if (global.weapon10){
    step+=1;
    weaponlist[step]=10;
    weaponlistlength+=1;
    }
if (global.weapon11){
    step+=1;
    weaponlist[step]=11;
    weaponlistlength+=1;
    }
if (global.weapon12){
    step+=1;
    weaponlist[step]=12;
    weaponlistlength+=1;
    }
if (global.weapon13){
    step+=1;
    weaponlist[step]=13;
    weaponlistlength+=1;
    }
if (global.weapon14){
    step+=1;
    weaponlist[step]=14;
    weaponlistlength+=1;
    }
if (global.weapon15){
    step+=1;
    weaponlist[step]=15;
    weaponlistlength+=1;
    }
if (global.weapon16){
    step+=1;
    weaponlist[step]=16;
    weaponlistlength+=1;
    }
if (global.weapon17){
    step+=1;
    weaponlist[step]=17;
    weaponlistlength+=1;
    }
if (global.weapon21){
    step+=1;
    weaponlist[step]=18;
    weaponlistlength+=1;
    }
if (global.weapon20){
    step+=1;
    weaponlist[step]=19;
    weaponlistlength+=1;
    }
step+=1;
weaponlist[step]=20;
weaponlistlength+=1;
if (global.weapon2){
    step+=1;
    weaponlist[step]=21;
    weaponlistlength+=1;
    }
if (global.weapon3){
    step+=1;
    weaponlist[step]=22;
    weaponlistlength+=1;
    }
if (global.weapon4){
    step+=1;
    weaponlist[step]=23;
    weaponlistlength+=1;
    }
if (global.weapon5){
    step+=1;
    weaponlist[step]=24;
    weaponlistlength+=1;
    }
if (global.weapon6){
    step+=1;
    weaponlist[step]=25;
    weaponlistlength+=1;
    }
if (global.weapon7){
    step+=1;
    weaponlist[step]=26;
    weaponlistlength+=1;
    }
if (global.weapon8){
    step+=1;
    weaponlist[step]=27;
    weaponlistlength+=1;
    }

//build enemy list
if (room==rom_sector1 || room==rom_sectorz){
    enemylist[1]=3;
    enemylist[2]=4;
    enemylistlength=2;
    }
else if (room==rom_sector2){
    enemylist[1]=1;
    enemylist[2]=3;
    enemylist[3]=4;
    enemylistlength=3;
    }
else if (room==rom_sector3 || room==rom_sector11){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylistlength=6;
    }
else if (room==rom_sector4){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylist[7]=8;
    enemylistlength=7;
    }
else if (room==rom_sector5 || room==rom_sector12){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylist[7]=7;
    enemylist[8]=8;
    enemylistlength=8;
    }
else if (room==rom_sector6){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylist[7]=7;
    enemylist[8]=8;
    enemylist[9]=9;
    enemylistlength=9;
    }
else if (room==rom_sector7 || room==rom_sector13){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylist[7]=7;
    enemylist[8]=8;
    enemylist[9]=9;
    enemylist[10]=11;
    enemylistlength=10;
    }
else if (room==rom_sector8){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylist[7]=7;
    enemylist[8]=8;
    enemylist[9]=9;
    enemylist[10]=10;
    enemylist[11]=11;
    enemylistlength=11;
    }
else if (room==rom_sector9 || room==rom_sector14){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylist[7]=7;
    enemylist[8]=8;
    enemylist[9]=9;
    enemylist[10]=10;
    enemylist[11]=11;
    enemylist[12]=12;
    enemylistlength=12;
    }
else if (room==rom_sectorx || room==rom_sector15){
    enemylist[1]=1;
    enemylist[2]=2;
    enemylist[3]=3;
    enemylist[4]=4;
    enemylist[5]=5;
    enemylist[6]=6;
    enemylist[7]=7;
    enemylist[8]=8;
    enemylist[9]=9;
    enemylist[10]=10;
    enemylist[11]=11;
    enemylist[12]=12;
    enemylist[13]=13;
    enemylistlength=13;
    }

#define scr_pausemenudraw
//Draw menuback and text
x=view_xview[0]+400;
y=view_yview[0]+300;
for (i=0;i<47;i+=1){
    if (i==0)
        img=0;
    else if (i==46)
        img=2;
    else
        img=1;
    draw_sprite(spr_menuback,img,view_xview[0]+212+i*8,view_yview[0]+114)
    }
scr_pausemenutext();
draw_set_font(global.fontblue);
draw_set_color(c_white);
draw_text_ext(view_xview[0]+262,view_yview[0]+128,text,28,326);

//SECTOR MAPS
if (!global.extras1 && obj_sabot.sec6mapped){
    draw_sprite(spr_secmap6,0,x,y+286);
    }
if (global.extras1 && !global.horse){
    pxadjust=-517;
    pyadjust=52;
    if (room==rom_sector1){
        draw_sprite(spr_secmap1,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster1,x+pxadjust+362,y+pyadjust+201);
            draw_sprite(spr_postermarker,2,x-172+(floor(obj_sabot.currentijix/32)),y+152+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector2){
        draw_sprite(spr_secmap2,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster2,x+pxadjust+627,y+pyadjust+158);
            draw_sprite(spr_postermarker,2,x-137+(floor(obj_sabot.currentijix/32)),y+58+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector3){
        draw_sprite(spr_secmap3,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster3,x+pxadjust+499,y+pyadjust+73);
            draw_sprite(spr_postermarker,2,x-196+(floor(obj_sabot.currentijix/32)),y+83+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector4){
        draw_sprite(spr_secmap4,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster4,x+pxadjust+508,y+pyadjust+213);
            draw_sprite(spr_postermarker,2,x-125+(floor(obj_sabot.currentijix/32)),y+102+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector5){
        draw_sprite(spr_secmap5,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster5,x+pxadjust+568,y+pyadjust+34);
            draw_sprite(spr_postermarker,2,x-209+(floor(obj_sabot.currentijix/32)),y+56+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector6){
        draw_sprite(spr_secmap6,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster6,x+pxadjust+469,y+pyadjust+101);
            draw_sprite(spr_postermarker,2,x-133+(floor(obj_sabot.currentijix/32)),y+128+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector7){
        draw_sprite(spr_secmap7,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster7,x+pxadjust+525,y+pyadjust+42);
            if (!obj_sabot.deepsector)
                draw_sprite(spr_postermarker,2,x-169+(floor(obj_sabot.currentijix/32)),y+74+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector8){
        draw_sprite(spr_secmap8,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster8,x+pxadjust+490,y+pyadjust+131);
            draw_sprite(spr_postermarker,2,x-182+(floor(obj_sabot.currentijix/32)),y+139+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sector9){
        draw_sprite(spr_secmap9,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster9,x+pxadjust+568,y+pyadjust+34);
            if (!obj_sabot.deepsector)
                draw_sprite(spr_postermarker,2,x-204+(floor(obj_sabot.currentijix/32)),y+69+(floor(obj_sabot.currentijiy/32)));
            }
        }
    else if (room==rom_sectorx){
        draw_sprite(spr_secmapx,0,x,y+286);
        if (marker){
            draw_sprite(spr_postermarker,global.poster10,x+pxadjust+353,y+pyadjust+122);
            if (!obj_sabot.deepsector)
                draw_sprite(spr_postermarker,2,x-198+(floor(obj_sabot.currentijix/32)),y+115+(floor(obj_sabot.currentijiy/32)));
            }
        }
    }

//Pause covers
if (delcover<10){
    with (obj_maincover){
        if (x==view_xview[0]+262+obj_paused.delcover*60 || x==view_xview[0]+262+obj_paused.delcover*60-12 || x==view_xview[0]+262+obj_paused.delcover*60-24 || x==view_xview[0]+262+obj_paused.delcover*60-36 || x==view_xview[0]+262+obj_paused.delcover*60-48){
            alarm[0]=5;
            image_single=-1;
            }
        }
    delcover+=1;
    }
if (temptier!=tier){
    delcover=0;
    temptier=tier;
    with (obj_maincover)
        instance_destroy();
    if (nocovers)
        nocovers=0;
    else{
        for (i=0; i<7; i+=1){
            for (j=0; j<26; j+=1)
                (instance_create(view_xview[0]+262+j*12,view_yview[0]+156+i*28,obj_maincover)).depth=-1000008;
            }
        }
    }

//Cover the screen when reloading graphics
if (showloading){
    depth=-1000100
    obj_marker.visible=0;
    obj_fade.visible=0;
    draw_set_color(c_black);
    draw_rectangle(view_xview[0]-50,view_yview[0]-50,view_xview[0]+850,view_yview[0]+650,0);
    draw_sprite(spr_loading,0,view_xview[0]+400,view_yview[0]+300);
    }
else
    depth=-1000002

#define scr_pausemenutext
//menu text draw
//        |                         |                         |                         |                         |                         |                         |                         |
if (tier="main")
    text="       PAUSE MENU         Continue                  Current statistics        Help/info                 Options                   Retry Sector/boss         Quit to Main menu         Quit game                 ";
if (tier="help"){
    text="       HELP / INFO        Back to Pause menu        Game basics|              Stats and Special traits  Basic weapon info < ";
    if (weaponlist[weaponinfo]>=20 && weaponlist[weaponinfo]<=27){
        text+="P";
        text+=string(weaponlist[weaponinfo]-19)+" >  ";
        }
    else{
        if (weaponlist[weaponinfo]<10)
            text+="0";
        text+=string(weaponlist[weaponinfo])+" >  ";
        }
    text+="Basic enemy info < ";
    if (enemyinfo<10)
        text+="0";
    text+=string(enemyinfo)+" >   ";
    text+="Hidden skills             ";
    if (global.extras7){
        text+="Scrambler < ";
        if (global.scrambler)
            text+="ON  >"
        else
            text+="OFF >"
        }
    }
if (tier="help2"){
    if (global.sector==1)
        text="       GAME BASICS        Back to Help menu         Full controls             Difficulty level info     Sectors and saving        Health                    Nanofields and leveling";
    else
        text="       GAME BASICS        Back to Help menu         Full controls             Difficulty level info     Sectors and saving        Health                    Nanofields and leveling   Cracking interface        ";
    }
if (tier="options")
    text="        OPTIONS           Back to Pause menu        Screen shaking            Voices                    Sound effects             Music                     Show time                 Human blood";
if (tier="retry"){
    if (global.horse)
    text="          RETRY?          Yes (lose a life)         No#$#Note: Hold F4 to retry~at any time in-game";
    else
    text="          RETRY?          Yes                       No#$#Note: Hold F4 to retry~at any time in-game";
    }
if (tier="quitmain")
    text="    QUIT TO MAIN MENU?    Yes                       No#$#Note: Hold F2 to return~~ to~the main menu at~~~~~~ any time";
if (tier="quit")
    text="        QUIT GAME?        Yes                       No#$#Note: Press Alt+F4 to~~~~ immediately quit the game at any time";
if (tier="horse")
    text="       PAUSE MENU         Continue                  Instructions              Hints                     Retry stage               Quit to Main menu         Quit game                 ";
if (tier="wait")
    text="~~~";
#define scr_pauseselection
if (!ignoreall){
    //PAUSE MENU
    if (tier="main"){
        if (selected==1){
            ignoreall=1;
            scr_unpause();
            }
        else if (selected==2){
            getinfo=1;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==3){
            tier="help";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==4){
            tier="options";
            selected=1;
            scr_sound("glo_menuselect");
            (instance_create(view_xview[0]+478,view_yview[0]+185,obj_onoff)).depth=-1000006;
            (instance_create(view_xview[0]+478,view_yview[0]+213,obj_onoff)).depth=-1000006;
            (instance_create(view_xview[0]+478,view_yview[0]+241,obj_onoff)).depth=-1000006;
            (instance_create(view_xview[0]+478,view_yview[0]+269,obj_onoff)).depth=-1000006;
            (instance_create(view_xview[0]+478,view_yview[0]+297,obj_onoff)).depth=-1000006;
            (instance_create(view_xview[0]+478,view_yview[0]+325,obj_onoff)).depth=-1000006;
            }
        else if (selected==5){
            tier="retry";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==6){
            tier="quitmain";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==7){
            tier="quit";
            selected=1;
            scr_sound("glo_menuselect");
            }
        }
    //HELP/INFO
    else if (tier=="help"){
        if (selected==1){
            tier="main";
            selected=3;
            scr_sound("glo_menuback");
            }
        else if (selected==2){
            tier="help2";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==3){
            getinfo=2;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==4){
            getinfo=10;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==5){
            getinfo=11;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==6){
            getinfo=3;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==7 && global.extras7){
            if (!global.scrambler){
                global.scrambler=1;
                scr_sound("glo_menuselect");
                }
            else{
                global.scrambler=0;
                scr_sound("glo_menuback");
                }
            }
        }
    //GAME BASICS
    else if (tier=="help2"){
        if (selected==1){
            tier="help";
            selected=2;
            scr_sound("glo_menuback");
            }
        else if (selected==2){
            getinfo=4;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==3){
            getinfo=5;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==4){
            getinfo=6;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==5){
            getinfo=7;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==6){
            getinfo=8;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==7){
            getinfo=9;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        }
    //OPTIONS
    else if (tier=="options"){
        if (selected==1){
            tier="main";
            selected=4;
            scr_sound("glo_menuback");
            with (obj_onoff)
                instance_destroy();
            scr_readsum();
            if (!wrongsum)
                scr_save(0);
            }
        else if (selected==2){
            if(global.noshake){
                global.noshake=0;
                scr_sound("glo_menuselect");
                }
            else{
                global.noshake=1;
                scr_sound("glo_menuback");
                }
            }
        else if (selected==3){
            if(global.novoice){
                global.novoice=0;
                scr_sound("glo_menuselect");
                }
            else{
                global.novoice=1;
                scr_sound("glo_menuback");
                }
            }
        else if (selected==4){
            if(global.nosound){
                global.nosound=0;
                scr_sound("glo_menuselect");
                }
            else{
                global.nosound=1;
                scr_sound("glo_menuback");
                }
            }
        else if (selected==5){
            if(global.nomusic){
                global.nomusic=0;
                scr_sound("glo_menuselect");
                //Play currently playing music
                with (obj_sabot){
                    forcemusic=1;
                    scr_music(global.music);
                    }
                }
            else{
                global.nomusic=1;
                scr_sound("glo_menuback");
                with (obj_sabot)
                    scr_stopmusic();
                }
            }
        else if (selected==6){
            if(global.hidetime){
                global.hidetime=0;
                scr_sound("glo_menuselect");
                }
            else{
                global.hidetime=1;
                scr_sound("glo_menuback");
                }
            }
        else if (selected==7){
            if(global.noblood){
                global.noblood=0;
                scr_sound("glo_menuselect");
                if (room==rom_sector1)
                    tile_layer_show(999999);
                }
            else{
                global.noblood=1;
                scr_sound("glo_menuback");
                if (room==rom_sector1)
                    tile_layer_hide(999999);
                }
            }
        }
    //RETRY
    else if (tier=="retry"){
        if (selected==1){
            ignoreall=1;
            if (global.horse){
                global.horsepoints=global.backuphorsepoints;
                global.horselives-=1;
                room_restart();
                }
            else
                scr_retrysector();
            }
        else if (selected==2){
            if (global.horse){
                tier="horse";
                selected=4;
                }
            else{
                tier="main";
                selected=5;
                }
            scr_sound("glo_menuback");
            }
        }
    //QUIT TO MAIN MENU
    else if (tier=="quitmain"){
        if (selected==1){
            ignoreall=1;
            repeat(10)
                sound_stop_all();
            room_goto(rom_main);
            }
        else if (selected==2){
            if (global.horse){
                tier="horse";
                selected=5;
                }
            else{
                tier="main";
                selected=6;
                }
            scr_sound("glo_menuback");
            }
        }
    //QUIT GAME
    else if (tier=="quit"){
        if (selected==1){
            ignoreall=1;
            sound_stop_all();
            game_end();
            }
        else if (selected==2){
            if (global.horse){
                tier="horse";
                selected=6;
                }
            else{
                tier="main";
                selected=7;
                }
            scr_sound("glo_menuback");
            }
        }
    //HORSE MENU
    else if (tier="horse"){
        if (selected==1){
            ignoreall=1;
            scr_unpause();
            }
        else if (selected==2){
            getinfo=12;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==3){
            getinfo=13;
            scr_pausefulltexts();
            instance_create(obj_sabot.x,obj_sabot.y,obj_pausefullcover);
            nocovers=1;
            tier="wait";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==4){
            if (global.horselives>0){
                tier="retry";
                selected=1;
                scr_sound("glo_menuselect");
                }
            else
                scr_sound("glo_crackfail");
            }
        else if (selected==5){
            tier="quitmain";
            selected=1;
            scr_sound("glo_menuselect");
            }
        else if (selected==6){
            tier="quit";
            selected=1;
            scr_sound("glo_menuselect");
            }
        }
    //WAIT FOR FULLCOVER
    else if (tier=="wait"){
        with (obj_pausefullcover)
            instance_destroy();
        scr_sound("glo_menuback");
        nocovers=1;
        //Current statistics
        if (getinfo==1){
            tier="main";
            selected=2;
            }
        //Stats and special traits
        if (getinfo==2){
            tier="help";
            selected=3;
            }
        //Hidden skills
        else if (getinfo==3){
            tier="help";
            selected=6;
            }
        //Full controls
        else if (getinfo==4){
            tier="help2";
            selected=2;
            }
        //Difficulty level info
        else if (getinfo==5){
            tier="help2";
            selected=3;
            }
        //Sectors and saving
        else if (getinfo==6){
            tier="help2";
            selected=4;
            }
        //Health
        else if (getinfo==7){
            tier="help2";
            selected=5;
            }
        //Nanofields and leveling
        else if (getinfo==8){
            tier="help2";
            selected=6;
            }
        //Cracking interface
        else if (getinfo==9){
            tier="help2";
            selected=7;
            }
        //Weapon info
        else if (getinfo==10){
            tier="help";
            selected=4;
            }
        //Enemy info
        else if (getinfo==11){
            tier="help";
            selected=5;
            }
        //Horse info
        else if (getinfo==12){
            tier="horse";
            selected=2;
            }
        //Horse hints
        else if (getinfo==13){
            tier="horse";
            selected=3;
            }
        }
    }

//settings
if (tier=="main")
    selections=7;
else if (tier=="help"){
    if (global.extras7)
        selections=7;
    else
        selections=6;
    }
else if (tier=="help2"){
    if (global.sector==1)
        selections=6;
    else
        selections=7;
    }
else if (tier=="options")
    selections=7;
else if (tier=="retry")
    selections=2;
else if (tier=="quitmain")
    selections=2;
else if (tier=="quit")
    selections=2;
else if (tier=="horse")
    selections=6;
else if (tier=="wait")
    selections=1;

#define scr_pausefulltexts
//Fetch screen covering pause menu texts here

//Current statistics
if (getinfo==1){
screentext="CURRENT STATISTICS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~Sector~";
if (room==rom_sector1 && !global.wty) screentext+="1";
if (room==rom_sector2) screentext+="2";
if (room==rom_sector3 || room==rom_sector11) screentext+="3";
if (room==rom_sector4) screentext+="4";
if (room==rom_sector5 || room==rom_sector12) screentext+="5";
if (room==rom_sector6) screentext+="6";
if (room==rom_sector7 || room==rom_sector13) screentext+="7";
if (room==rom_sector8) screentext+="8";
if (room==rom_sector9 || room==rom_sector14) screentext+="9";
if (room==rom_sectorx || room==rom_sector15 || room==rom_sector16) screentext+="X";
if (room==rom_sectorz) screentext+="Z";
if (room==rom_sector1 && global.wty) screentext+="Y";
screentext+=", ";
if (global.difficulty==0)
    screentext+="Normal~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
else if (global.difficulty==1)
    screentext+="Hard~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
else if (global.difficulty==2){
    if (global.really)
        screentext+="reallyjoel's dad~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
    else if (global.specialtrigger16)
        screentext+="Ultimortal~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
    else
        screentext+="Extreme~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
    }

temp=global.sector;
if (temp==0)
    temp=10;
screentext+="~~Level:~"+string(global.level)+"/"+string(global.maxlevel)+"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~Nano:~"
if (global.level<global.maxlevel){
    screentext+=string(global.xp);
    screentext+="/";
    screentext+=string((global.level*(4+global.difficulty*4))+4);
    }
else screentext+="---/---";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~"
if (global.extras1){
    screentext+="Poster: ";
    if (room==rom_sector1 && global.wty) screentext+="N/A";
    else if (room==rom_sector1 && global.poster1) screentext+="Yes";
    else if (room==rom_sector2 && global.poster2) screentext+="Yes";
    else if ((room==rom_sector3 || room==rom_sector11) && global.poster3) screentext+="Yes";
    else if (room==rom_sector4 && global.poster4) screentext+="Yes";
    else if ((room==rom_sector5 || room==rom_sector12) && global.poster5) screentext+="Yes";
    else if (room==rom_sector6 && global.poster6) screentext+="Yes";
    else if ((room==rom_sector7 || room==rom_sector13) && global.poster7) screentext+="Yes";
    else if (room==rom_sector8 && global.poster8) screentext+="Yes";
    else if ((room==rom_sector9 || room==rom_sector14) && global.poster9) screentext+="Yes";
    else if ((room==rom_sectorx || room==rom_sector15 || room==rom_sector16) && global.poster10) screentext+="Yes";
    else if (room==rom_sectorz) screentext+="N/A";
    else
        screentext+="No~";
    }
else
    screentext+="~~~~~~~~~~~";
screentext+="~~~~~~~~~~~~Current~/~Total~~~~~~~~~~~~~~~~~~~~~~ "
screentext+="~~~~~~~~~~~~~~~~~~~Time:~"+obj_sabot.drawtimestring+"~~~~"+obj_sabot.drawtottimestring+"~~~~~~~~~~~~~~~~~~~ ";

adjust1="";
if (global.kills<10) adjust1="~~"
else if (global.kills<100) adjust1="~"
adjust2="";
totkills=global.kills+global.totkills;
if (totkills>999) totkills=999;
if (totkills<10) adjust2="~~"
else if (totkills<100) adjust2="~"
screentext+="~~~~~~~~~~~~~~~~~~Kills:~"+adjust1+string(global.kills)+"~~~~~~~~"+adjust2+string(totkills)+"~~~~~~~~~~~~~~~~~~~~~~~ ";

adjust1="";
if (global.damage<10) adjust1="~~"
else if (global.damage<100) adjust1="~"
adjust2="";
totdamage=global.damage+global.totdamage;
if (totdamage>999) totdamage=999;
if (totdamage<10) adjust2="~~"
else if (totdamage<100) adjust2="~"
screentext+="~~~~~~~~~~~Damage taken:~"+adjust1+string(global.damage)+"~~~~~~~~"+adjust2+string(totdamage)+"~~~~~~~~~~~~~~~~~~~~~~~ ";

adjust1="";
if (global.cracks<10) adjust1="~~"
else if (global.cracks<100) adjust1="~"
adjust2="";
totcracks=global.cracks+global.totcracks;
if (totcracks>999) totcracks=999;
if (totcracks<10) adjust2="~~"
else if (totcracks<100) adjust2="~"
screentext+="~~~~~~Successful cracks:~"+adjust1+string(global.cracks)+"~~~~~~~~"+adjust2+string(totcracks)+"~~~~~~~~~~~~~~~~~~~~~~~ ";

adjust1="";
if (global.fails<10) adjust1="~~"
else if (global.fails<100) adjust1="~"
adjust2="";
totfails=global.fails+global.totfails;
if (totfails>999) totfails=999;
if (totfails<10) adjust2="~~"
else if (totfails<100) adjust2="~"
screentext+="~~~~~~~~~~Failed cracks:~"+adjust1+string(global.fails)+"~~~~~~~~"+adjust2+string(totfails)+"~~~~~~~~~~~~~~~~~~~~~~~ ";

screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
if (global.extras1){
screentext+="~~--------------~ENDGAME~RANKINGS~INFORMATION~---------------~ ";
screentext+="~~~~~~~~~KILLS~~~~~~~~~~~~~~~~DAMAGE~~~~~~~~CRACKS~minus~FAILS ";
screentext+="~~~300:~One~Woman~Army~~400:~Hopeless~~~~~~~~~100:~Nanomaster~ ";
screentext+="~~~200:~Genocidal~~~~~~~300:~Overconfident~~~~~70:~Cybergeek~~ ";
screentext+="~~~~51:~Destroyer~~~~~~~200:~Careless~~~~~~~~~~40:~Adept~~~~~~ ";
screentext+="~~~~~1:~Pacifistic~~~~~~100:~Skilled~~~~~~~~~~~20:~Lame~~~~~~~ ";
screentext+="~~~~~0:~Innocent~~~~~~~~~~0:~Immortal~~~~~~~~~~~0:~Clueless~~ ";
}
}

//Stats and special traits
else if (getinfo==2){
tempnumtraits=0;
if (global.healthlevel==10) tempnumtraits+=1;
if (global.attacklevel==10) tempnumtraits+=1;
if (global.assimilatelevel==10) tempnumtraits+=1;
if (global.strengthlevel==10) tempnumtraits+=1;
if (global.tasenlevel==10) tempnumtraits+=1;
if (global.komatolevel==10) tempnumtraits+=1;
if (global.cracklevel==10) tempnumtraits+=1;
screentext="STATS AND SPECIAL TRAITS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="HEALTH: Determines amount of hit points~~~~~~~~~~~~~~~~~~~~~~~ ";
if (global.healthlevel==10)
    screentext+="~>Special trait: Lowers damage taken from heavy attacks by 1~~ ";
if (tempnumtraits<=5)
    screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="ATTACK: Determines power of all Nanoweapons~~~~~~~~~~~~~~~~~~~ ";
if (global.attacklevel==10)
    screentext+="~>Special trait: Decrease non-rapidfire reload time by 20%~~~~ ";
if (tempnumtraits<=5)
    screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="ASSIMILATE: Increase ammo capacity, more armor from Nanofields ";
if (global.assimilatelevel==10)
    screentext+="~>Special trait: More HP from red Nanofields, 1 HP from green~ ";
if (tempnumtraits<=5)
    screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="STRENGTH: Kick down stronger doors, kick heavier enemies~~~~~~ ";
if (global.strengthlevel==10)
    screentext+="~>Special trait: Invincibility time after being damaged +50%~~ ";
if (tempnumtraits<=5)
    screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="TASEN: Weild more advanced Tasen Nanoweapons~~~~~~~~~~~~~~~~~~ ";
if (global.tasenlevel==10)
    screentext+="~>Special trait: +1 to all Tasen ammunition you pick up~~~~~~~ ";
if (tempnumtraits<=5)
    screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="KOMATO: Weild more advanced Komato Nanoweapons~~~~~~~~~~~~~~~~ ";
if (global.komatolevel==10)
    screentext+="~>Special trait: +1 to all Komato ammunition you pick up~~~~~~ ";
if (tempnumtraits<=5)
    screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="CRACK: Crack more secure Nanotechnology~~~~~~~~~~~~~~~~~~~~~~~ ";
if (global.cracklevel==10)
    screentext+="~>Special trait: No adverse effects on failure, more cracktime ";
if (tempnumtraits==0)
    screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ No~Special~traits~have~been~earned~yet.~~~~~~~~~~~~~~~~~~~~~~~ Special~traits~are~earned~by~increasing~a~stat~to~level~10.~~~ They~are~permanent~ability~boosts,~and~are~unique~to~each~stat.";
}

//Hidden skills
else if (getinfo==3){
screentext="HIDDEN SKILLS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Air~braking:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Hold~left~or~right~when~being~knocked~flying~to~slow~down.~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
if (global.hiddenskill1)
screentext+="Teching (learned in Sector 7):~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Press~the~Use~key~immediately~before~being~damaged~to~reduce~~ knockback~and~land~on~your~feet,~or~avoid~pain~staggering.~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
if (global.hiddenskill2)
screentext+="Nanofield~reboot (learned in Sector X):~~~~~~~~~~~~~~~~~~~~~~~ While~ducking,~press~the~Use~key~four~times~followed~by~the~~~ Kick~key.~Most~ammo~and~all~Health~and~stats~are~lost,~but~~~~ all~points~are~returned.~You~won't~gain~bonus~HP~when~~~~~~~~~ upgrading~Health~for~the~rest~of~the~Sector.~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
if (global.hiddenskill3)
screentext+="Retribution (learned in Sector 8):~~~~~~~~~~~~~~~~~~~~~~~~~~~~ With~all~8~basic~weapons,~at~least~1~ammo~for~each~and~5~or~~~ less~HP~left,~hold~the~Use~key~while~getting~up~after~being~~~ damaged.~Retribution~can~only~be~performed~once~per~Sector~or~ boss~room.~Also,~your~Nanogun~must~be~set~to~Active~mode.~~~~ ";
if (!global.hiddenskill1 || !global.hiddenskill2 || !global.hiddenskill3)
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Find~certain~enemy~logbooks~to~discover~additional~skills.";
}

//Full controls
else if (getinfo==4){
screentext="FULL CONTROLS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="Left, Right: Move~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="Up: Jump~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="Down: Duck / turn pages when reading text ~~~~~~~~~~~~~~~~~~~~ ";
screentext+=chr(global.kickkey)+": Kick ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+=chr(global.firekey)+": Fire ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+=chr(global.usekey)+": Use ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="Enter: Change Nanogun mode / Abort cracking ~~~~~~~~~~~~~~~~~~ ";
screentext+="Escape: Pause / skip certain chats / skip cutscenes ~~~~~~~~~~ ";
screentext+="Numpad: Move the view ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="1: Weapon 1 ~~~ 5 or "+chr(global.weap5key)+": Weapon 5 ~~~ "+chr(global.prevkey)+": Previous weapon~~~~~~~ ";
screentext+="2: Weapon 2 ~~~ 6 or "+chr(global.weap6key)+": Weapon 6 ~~~ "+chr(global.nextkey)+": Next weapon~~~~~~~~~~~ ";
screentext+="3: Weapon 3 ~~~ 7 or "+chr(global.weap7key)+": Weapon 7 ~~~ "+chr(global.specialkey)+": Select super-weapon~~~ ";
screentext+="4: Weapon 4 ~~~ 8 or "+chr(global.weap8key)+": Weapon 8 ~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="Hold F2: Quit to Main menu ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="Hold F4: Retry Sector/boss ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
screentext+="Alt+F4 or hold F12: Quit game~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
}

//Difficulty level info
else if (getinfo==5){
screentext="DIFFICULTY LEVEL INFO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
if (global.difficulty==0){
    if (global.suddendeath)
        screentext+="Normal (Sudden Death Sector):~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
    else if (global.sswarp)
        screentext+="Normal (Single Sector Play):~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
    else
        screentext+="Normal:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ";
    screentext+="You can gain 5 levels per Sector~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Cracking time is normal~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Some enemies may dodge/reflect projectiles~~~~~~~~~~~~~~~~~~~~ When failing to crack a security box:~~~~~~~~~~~~~~~~~~~~~~~~~ ~There's a 25% chance its Security will increase by 1~~~~~~~~~ When failing to crack a door:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~There's a 25% chance its Security will increase by 1~~~~~~~~~ When failing to crack a weapon combination:~~~~~~~~~~~~~~~~~~~ ~There's a 25% chance to lose 5 ammo for those weapons~~~~~~~~ Red Nanofields recover 2 HP~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Bosses are of normal difficulty~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ There are 14% less enemies compared to higher difficulties~~~~ ";
    if (global.suddendeath)
        screentext+="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~---~SUDDEN~DEATH~SPECIFIC~---~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Everything has one hit point and 100 armor~~~~~~~~~~~~~~~~~~~~ Health~cannot~be~upgraded~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Red~and~Green~Nanofields~do~not~exist~~~~~~~~~~~~~~~~~~~~~~~~~ ";
    }
else if (global.difficulty==1){
    screentext+="Hard:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ You can gain 4 levels per Sector~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Cracking time is decreased by 2 seconds~~~~~~~~~~~~~~~~~~~~~~~ Certain enemies attack at a faster rate~~~~~~~~~~~~~~~~~~~~~~~ Certain enemies dodge/reflect projectiles more often~~~~~~~~~~ When failing to crack a security box:~~~~~~~~~~~~~~~~~~~~~~~~~ ~The box has a 25% chance of breaking~~~~~~~~~~~~~~~~~~~~~~~~~ When failing to crack a door:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~There's a 50% chance its Security will increase by 1~~~~~~~~~ When failing to crack a weapon combination:~~~~~~~~~~~~~~~~~~~ ~There's a 50% chance to lose 5 ammo for those weapons~~~~~~~~ Red Nanofields recover 1 HP~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Bosses are more difficult~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
    }
else if (global.difficulty==2 && global.specialtrigger16==0){
    screentext+="Extreme:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ You can gain 3 levels per Sector~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Cracking time is decreased by 4 seconds~~~~~~~~~~~~~~~~~~~~~~~ Certain enemies attack at a very fast rate~~~~~~~~~~~~~~~~~~~~ Certain enemies almost always dodge/reflect projectiles~~~~~~~ When failing to crack a security box:~~~~~~~~~~~~~~~~~~~~~~~~~ ~The box has a 25% chance of exploding~~~~~~~~~~~~~~~~~~~~~~~~ When failing to crack a door:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~There's a 75% chance its Security will increase by 1~~~~~~~~~ When failing to crack a weapon combination:~~~~~~~~~~~~~~~~~~~ ~There's a 75% chance to lose 5 ammo for those weapons~~~~~~~~ Red Nanofields recover 1 HP~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Bosses are very difficult~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Nano Overloads do not exist~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
    }
else if (global.difficulty==2 && global.really==1){
    screentext+="reallyjoel's dad:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ You cannot gain levels ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Cracking time is decreased to 1 second~~~~~~~~~~~~~~~~~~~~~~~~ All enemies attack as often as possible~~~~~~~~~~~~~~~~~~~~~~~ All enemies catch projectiles with their teeth~~~~~~~~~~~~~~~~ When failing to crack a security box:~~~~~~~~~~~~~~~~~~~~~~~~~ ~The box has a 100% chance of exploding in a nuclear fireball~ When failing to crack a door:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~There's a 100% chance it will explode in a nuclear fireball~~ Red and green Nanofields do not exist~~~~~~~~~~~~~~~~~~~~~~~~~ Bosses are impossible for everyone but reallyjoel's dad~~~~~~~ Nano Overloads do not exist~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Each Sector has a strict time limit~~~~~~~~~~~~~~~~~~~~~~~~~~~ No stats can be upgraded~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ There are more enemies compared to all lower difficulties~~~~~ Enemy HP, armor, speed, security and weight doubled~~~~~~~~~~~ ";
    }
else if (global.difficulty==2 && global.specialtrigger16==1){
    screentext+="Ultimortal:~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ You can gain 3 levels per Sector~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Cracking time is decreased by 4 seconds~~~~~~~~~~~~~~~~~~~~~~~ Certain enemies attack at a very fast rate~~~~~~~~~~~~~~~~~~~~ Certain enemies almost always dodge/reflect projectiles~~~~~~~ When failing to crack a security box:~~~~~~~~~~~~~~~~~~~~~~~~~ ~The box has a 25% chance of exploding~~~~~~~~~~~~~~~~~~~~~~~~ Bosses are very difficult~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Nano Overloads do not exist~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ~---~ULTIMORTAL SPECIFIC~---~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Each Sector has a time limit~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Only Health can be upgraded~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Red and green Nanofields do not exist~~~~~~~~~~~~~~~~~~~~~~~~~ Most enemies are faster~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
    }
}

//Sectors and saving
else if (getinfo==6){
screentext="SECTORS AND SAVING#$#The military complex is built of Sectors. At the end of a Sector, you can save. If you quit the game without saving, all progress in the current Sector is lost, with the exception of unlocked Posters and Hidden skills.#$#Around the middle of most Sectors, you'll find a Checkpoint. If Iji dies, she'll be revived at the Checkpoint - but only once per Sector! Particularly long Sectors may have more than one Checkpoint, in which case activating the second will deactivate the first. The game will notify you when this happens.";
}

//Health
else if (getinfo==7){
screentext="HEALTH#$#Like the Tasen, Iji's body is maintained by a personal Nanofield, which doubles as a shield to protect her from harm.#$#You have a health bar and an armor bar. If your armor is reduced to zero, you lose one hit point and the armor regenerates to 100%. Whenever your health is damaged, you will be invulnerable for a short while.#$#Particularly powerful attacks will instantly reduce your hit points regardless of your armor, and the armor regenerates to 100%.#$#To recover health, assimilate Red Nanofields. To recover armor, assimilate blue, green or red Nanofields. You cannot recover past 100% armor.";
}

//Nanofields and leveling
else if (getinfo==8){
screentext="NANO AND LEVELING#$#Scattered around the Sectors are free-floating gatherings of Nano that Iji's personal Nanofield can assimilate.#$#BLUE pickups recover armor, but also add to your total Nano. When you reach a certain amount of Nano, you will level up and get a `point`. Points are spent at Cyborg station, which will upgrade one of your seven stats. Leveling up does not make you stronger unless you spend the points you get at the Cyborg stations!#$#RED pickups recover health and armor. They don't help you level up.#$#GREEN pickups recover armor. They don't help you level up.";
}

//Cracking interface
else if (getinfo==9){
screentext="CRACKING INTERFACE#$#Press the Use key to touch things and crack them. Then press the Use key to get started (or Enter/Escape to bail out), then move your green dot around using the arrow keys, until you reach the red dot. If you hit a dark blue node or the time runs out, the cracking attempt fails. The length of the puzzle depends on the security of the object. Note that if you press Enter or Escape to bail out of an ONGOING cracking attempt, it counts as a failure.#$#Security doors and multi-colored Security boxes must be cracked. Cracking an enemy will often disable its most powerful weapons, and if you're lucky you'll heavily damage it as well. Cracking enemies CANNOT directly kill them - their malfunctioning weapons may cause them to self-destruct, but this will not count as your kill.#$#Cracking an enemy will also make it guaranteed to drop some ammo upon its death.";
}

//Weapon information (getinfo 10)
else if (getinfo==10){
if (weaponlist[weaponinfo]==1)
screentext="1. SHOTGUN#$#$#Requirements: None#Function: Fires a wide, short-range pellet blast#$#A low-end, short-ranged Nanoweapon, the Shotgun is still capable of causing severe damage in close combat. Hardly anyone uses it anymore, but it shouldn't be underestimated, especially with a high Attack stat.";
if (weaponlist[weaponinfo]==2)
screentext="2. MACHINEGUN#$#$#Requirements: Tasen level 3#Function: Fires weak but accurate long-range bullets#$#An accurate long-range Nanoweapon, the Machinegun is effective even against larger enemies. Most Tasen are equipped with one, though few higher-ranking ones rely on it as their primary weapon. Due to Iji's rare Tasen Nanogun, her Machinegun is more accurate and deals more damage than the standard Tasen version.";
if (weaponlist[weaponinfo]==3)
screentext="3. ROCKET LAUNCHER#$#$#Requirements: Tasen level 6#Function: Fires a single rocket#$#Very powerful, and able to knock enemies flying, but the low travel speed of the rockets make them easier to duck or reflect than other projectiles.";
if (weaponlist[weaponinfo]==4)
screentext="4. MPFB DEVASTATOR#$#$#Requirements: Tasen level 10#Function: Fires three high-explosive MPFB projectiles#$#The MPFB Devastator is one of the most powerful handheld Nanoweapons the Tasen have conceived. It launches three massively concentrated crystals that cause spontaneous nuclear fission upon contact with any object. The crystals even violently react to the air around them, making them glow in a light blue and enlargening the area of impact. A real beast of a weapon favored by Tasen Elites, as only they can fire the Devastator without flying back from the recoil.";
if (weaponlist[weaponinfo]==5)
screentext="5. RESONANCE DETONATOR#$#$#Requirements: None#Function: Works exactly like your kick attack, but has a longer reach. This weapon can destroy Shield doors.#$#A weapon stolen from the Komato race, it creates a shockwave that can knock back enemies and send them flying, depending entirely on the user's Strength stat. It uses no ammunition, but has a rather long reload time.";
if (weaponlist[weaponinfo]==6)
screentext="6. PULSE CANNON#$#$#Requirements: Komato level 3#Function: Fires a short-range pulse beam#$#A standard issue Nanoweapon among the Komato troops, the Pulse cannon is effective only at short range. Its clear green beam inflicts so much pain that enemies are usually unable to retaliate as their Nanofields are slowly destroyed. Due to Iji's rare Tasen Nanogun, her Pulse cannon deals twice the damage of the standard Komato version.";
if (weaponlist[weaponinfo]==7)
screentext="7. SHOCKSPLINTER#$#$#Requirements: Komato level 6#Function: Fires a fast Shocksplinter projectile#$#A basic but powerful Komato weapon, its explosive projectiles shatter into six armor-draining spheres on impact. These 'splinters' explode after a short time or if they hit a solid object.";
if (weaponlist[weaponinfo]==8)
screentext="8. CYCLIC FUSION IGNITION SYSTEM#$#$#Requirements: Komato level 10#Function: Fires a short-range beam that cuts through enemies#$#This weapon ignites series of small fusion detonations in the Nanogun's core to power a high-velocity coilgun. The tiny slugs are quickly destroyed due to air friction, so the weapon has a short but devastating range, rippling through Nanofields and striking multiple enemies with ease. The Komato prefer not to use it in dangerous clashes with the Tasen, seen as how they could steal and reverse-engineer it.";
if (weaponlist[weaponinfo]==9)
screentext="9. BUSTER GUN#$#$#Requirements: Shotgun, Machinegun, Crack level 3#Function: Fires rapid Shotgun blasts#$#This weapon uses Machinegun ammo to fire pellet blasts more than thrice as fast as the regular Shotgun. While not as ammunition efficient as the Machinegun, the Buster gun takes out enemies much faster if they are close enough.";
if (weaponlist[weaponinfo]==10)
screentext="10. SPLINTERGUN#$#$#Requirements: Machinegun, Shocksplinter, Crack level 7#Function: Fires armor-damaging `splinters` rapidly#$#This powerful Nanoweapon uses Machinegun ammo to fire small shards of Shocksplinter. While the splinters deal no knockback, they rapidly drain the armor of any target. Perfectly concentrated fire will take down opponents much faster and slightly more ammunition efficiently than the Machinegun.";
if (weaponlist[weaponinfo]==11)
screentext="11. SPREAD ROCKETS#$#$#Requirements: Shotgun, Rocket launcher, Crack level 5#Function: Fires three spread-out rockets at the cost of three Launcher ammo#$#Offering twice the destructive power per second as the regular Rocket launcher, it makes for a formidable weapon to mow down hordes of enemies or clear out corridors. It's also a force to be reckoned with when dealing with huge, powerful foes. Berserkers have been specially trained in dealing with this Nanoweapon, usually resulting in all three rockets ending up reflected back at the user.";
if (weaponlist[weaponinfo]==12)
screentext="12. NUKE#$#$#Requirements: Rocket launcher, MPFB Devastator, Crack level 9  Function: Deals instant moderate damage to all enemies within 15 meters of the user at the cost of 3 MPFB ammo#$#A sophisticated weapon despite its seemingly simplistic effect, the Nuke temporarily shields the person firing it from external thermal and kinetic energy, and detonates the surrounding area with an enormous force, destroying most lesser enemies in one blow. While the user is normally knocked to the ground from the resulting shockwave, he or she suffers no damage. Despite its effectiveness in instantly hitting multiple enemies, its damage output is inferior to the MPFB Devastator.";
if (weaponlist[weaponinfo]==13){
if (global.rrkills)
screentext="13. RESONANCE REFLECTOR#$#$#Requirements: Shotgun, Resonance detonator, Crack level 4#Function: Reflects rockets and other projectiles#$#This devious Nanoweapon reflects mass-based projectiles, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the reflector. The reflected projectile gets stronger or weaker depending on the user's Attack stat.#$#NOTE: reflected projectiles count as YOUR projectiles, and will award you kills when striking enemies.";
else
screentext="13. RESONANCE REFLECTOR#$#$#Requirements: Shotgun, Resonance detonator, Crack level 4#Function: Reflects rockets and other projectiles#$#This devious Nanoweapon reflects mass-based projectiles, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the reflector. The reflected projectile gets stronger or weaker depending on the user's Attack stat.#$#NOTE: reflected projectiles will NOT award you kills when striking enemies.";
}
if (weaponlist[weaponinfo]==14)
screentext="14. HYPER PULSE#$#$#Requirements: Resonance detonator, Pulse cannon, Crack level 6 Function: Damages enemies, and uses your Strength to knock them flying when their armor has been drained low enough. This weapon can destroy Shield doors.#$#The Nanoweapon of choice when plowing through weaker enemies, if one's Strength level is high enough - when an enemy has less than 33% of its maximum armor left, the Hyper pulse will inflict a violent blow as if the enemy had been struck with a Resonance detonator. In other words, this weapon requires both physical strength and weapon skill to handle well.";
if (weaponlist[weaponinfo]==15)
screentext="15. PLASMA CANNON#$#$#Requirements: Pulse cannon, Shocksplinter, Crack level 8#Function: Fires a long-range beam that cuts through enemies at the cost of 2 Shock ammo#$#An unusual weapon that fires a thin instant-hit beam, hitting multiple targets while piercing defensive barriers and reflectors. When it hits a solid wall, it also causes a powerful splinter explosion. Not much is known about how the weapon system actually works, but if it's as relatively simple as combining a Pulse cannon with the volatile Shocksplinter, no-one's complaining.";
if (weaponlist[weaponinfo]==16)
screentext="16. VELOCITHOR V2-10#$#$#Requirements: MPFB Devastator, CFIS, Crack level 10#Function: Fires a beam that cuts through enemies and walls#$#Arguably the peak of Generation 1 Nanoweaponry, the Velocithor is a much rumored upgrade of the Cyclic Fusion Ignition System. It fires a massive beam consisting of thousands of electrically charged slugs, and can shoot clean through most materials. While less ammunition efficient than the regular CFIS, it ends battles so fast that it's hard to notice.";
if (weaponlist[weaponinfo]==17)
screentext="17. BANANA GUN#$#$#Requirements: All 8 basic Nanoweapons#Function: Fires a banana at the cost of 1 of each ammo type#$#Only the most demented of alien minds would create a Nanoweapon that launches squeaky inflatable rubber bananas with high-explosive payloads. This bizarre weapon requires that the user's Nanogun is equipped with the eight most common Tasen and Komato Nanoweapons in order to function, and requires 1 of each ammo type to fire. The creator of the Banana gun could probably explain why, but he died in a fit of hysteric laughter shortly after his creation was complete. It is not possible to combine the Banana gun with any other Nanoweapon, nor would such a thing likely be desirable.";
if (weaponlist[weaponinfo]==18)
screentext="18. MASSACRE#$#$#Requirements: ?#Function: ?#$#Already the next generation of Nanoweapons are being developed by Komato Imperial Research, and most of the projects are kept secret even from the mass-manufacturer Imperial Weapon Industries. The development costs and fickle nature of these weapons makes it nigh impossible planting one in a conventional Nanogun, however. Thus the Massacre was the first of the Generation 2 weapons to be considerably toned down in power, allowing it to be easily assimilated into a standard Nanogun. The only field tested copy was used on Ciretako, and if the results are any indication, anyone weilding these devastating weapons may experience a combat rush unlike anything seen before.";
if (weaponlist[weaponinfo]==19)
screentext="19. NULL DRIVER#$#$#Requirements: Beats me, it's not even supposed to run on standard Nanoguns#Function: Forces temporary gravity spikes? May bypass planetary shields, no maximum range#$#Guys, I'm sorry. I shouldn't have poked my nose in their business. I shouldn't have made that deal with Ansaksie, I knew she was way deeper in illegal weapons than we've ever been. This glitched prototype| trust me, don't even pull the trigger. The wormholes aren't exactly stable. Don't blame me if you start seeing things. This is supposedly the first step towards the Star Strike, so imagine the power output if it actually worked| the moment I've served my punishment for all the other stuff I cracked, I'm going undercover for the rest of my life, 'cause if Imperial Research traces this back to me we're all dead. Wipe this message as soon as you've read it. OmnikrakR out.";
if (weaponlist[weaponinfo]==20)
screentext="PASSIVE 1. STUN GUN#$#$#Requirements: None#Function: Fires a wide, short-range stunning blast#$#This short-ranged weapon deals no damage, but instead stuns any enemy capable of being stunned. Most enemies can only be stunned if they are standing on the ground. Particularly strong individuals may not be affected at all. You take no contact damage from stunned enemies.#$#Your Attack stat increases the stun time.";
if (weaponlist[weaponinfo]==21)
screentext="PASSIVE 2. IMPACT MACHINEGUN#$#$#Requirements: Tasen level 3#Function: Fires a single staggering bullet#$#Like all passive weapons, the Impact machinegun is not designed to damage Nanofields, but rather fires tiny Nanofield-enveloped bullets that strike enemies with enough force to knock them off balance without causing serious harm. It is best used to interrupt enemies preparing powerful attacks.#$#Your Attack stat increases the range of the projectile.";
if (weaponlist[weaponinfo]==22)
screentext="PASSIVE 3. IMPULSE LAUNCHER#$#$#Requirements: Tasen level 6#Function: Fires an impulse rocket#$#While Impulse rockets deal no damage, they are still capable of throwing enemies (and the user) clear across the room.#$#Your Attack stat increases the projectile speed, making it more difficult to dodge or reflect.";
if (weaponlist[weaponinfo]==23)
screentext="PASSIVE 4. MPFB NEUTRALIZER#$#$#Requirements: Tasen level 10#Function: Stuns all enemies in a 15 meter area around the user at the cost of 3 MPFB ammo#$#The massive shockwave emitted by this weapon harmlessly stuns enemies for a much longer period of time than the Stun gun. Most enemies can only be stunned if they are standing on the ground. Particularly strong individuals may not be affected at all. You take no contact damage from stunned enemies.#$#Your Attack stat increases the stun time.";
if (weaponlist[weaponinfo]==24)
screentext="PASSIVE 5. RESONANCE DISRUPTOR#$#$#Requirements: None#Function: Nullifies rockets and other projectiles#$#This strange Nanoweapon harmlessly dismantles the same mass-based projectiles as the Resonance reflector, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the disruptor field.#$#Your Attack stat increases the active time of the disruptor field.";
if (weaponlist[weaponinfo]==25)
screentext="PASSIVE 6. PULSE LINKER#$#$#Requirements: Komato level 3#Function: Harmlessly drains Nano from enemies#$#The Pulse linker is unique among Generation 1 Nanoweapons, being able to transfer the base components of other Nanofields into the user's own. While extremely ammunition hungry, it drains more Nano per second the more powerful the Nanofield it targets, but particularly secure targets may reject the Pulse link entirely.#$#Your Attack stat increases the projectile speed and range.";
if (weaponlist[weaponinfo]==26)
screentext="PASSIVE 7. SHOCK BARRIER#$#$#Requirements: Komato level 6#Function: Sets up a barrier that nullifies rockets, other projectiles, and some lesser weapons#$#The barrier created by this Nanoweapon harmlessly dismantles the same mass-based projectiles as the Resonance reflector, and as such can be used against the Rocket launcher, Spread rockets, Shocksplinter, MPFB Devastator and more. It also blocks Machinegun and Pulse cannon fire. However, particularly powerful projectiles and certain weapons may not be nullified, and will instead destroy the disruptor field.#$#Your Attack stat increases the active time of the shock barrier.";
if (weaponlist[weaponinfo]==27)
screentext="PASSIVE 8. CHAIN FRACTAL INJECTION SHELL#$#$#Requirements: Komato level 10#Function: Performs an instant cracking attempt from a distance at the cost of 3 CFIS ammo#$#This weapon fires a tiny shell with a short-lived Nanofield that connects to whatever it hits, then attempts to inject a vast number of viruses. The payload becomes more sophisticated the higher the user's Crack stat, and will likely only be effective if they could manually crack the target themselves. If the injection succeeds, it will count as a successful crack for the user. If it fails, it will not count as a failed crack, nor will it have any negative consequences.#$#Your Attack stat increases the range of the projectile.";
}

//Enemy information (getinfo 11)
else if (getinfo==11){
if (enemylist[enemyinfo]==1)
screentext="1. BLIT#$#$#$#Blits are a strange breed of parasite, consisting entirely of Nano and resistant even to most Nanoweaponry. These pesky slug-like bugs infested one of the Tasen ships, and spread like wildfire when they landed on the surface of Earth. Alone, they're hardly a threat, but a large group of Blits can drain the armor off their victims at a frightening rate.";
if (enemylist[enemyinfo]==2)
screentext="2. TASEN TURRET#$#$#$#These defense turrets were set up by the Tasen to specifically protect the complex from humans. They also target anyone who doesn't have the proper subroutine programming in their personal Nanofield. The Tasen are by no means subtle when it comes to dealing with humans - some turrets weild absolutely devastating Nanoweapons, and will only stop firing when they have no more targets in their field of view, or when they are destroyed. Normally the ammunition being pumped into the turret makes it explode when shot, but if knocked off its support pole it becomes completely harmless.";
if (enemylist[enemyinfo]==3)
screentext="3. TASEN SCOUT#$#$#$#Armed with a burst Machinegun, these grunts are usually the first to be sent into hostile areas. Having not reacted entirely well to the drugs the Tasen use to boost their senses during combat training, the Scouts sometimes appear slow and dull, and most are incapable of dodging projectiles or performing similar feats that require quick reaction.";
if (enemylist[enemyinfo]==4)
screentext="4. TASEN SOLDIER#$#$#$#The shock troops of the Tasen, the Soldiers use both a Machinegun and Rocket launcher, making them a versatile foe. They are not very strong and are easy to overwhelm with more advanced weapons, but their agility allows them to dodge incoming projectiles, as long as they see them coming.";
if (enemylist[enemyinfo]==5)
screentext="5. TASEN COMMANDER#$#$#$#Commanders are fitted with an enormous claw which can smack their opponents clear across the room. They prefer explosive weaponry, and don't go down easily. The Commanders are usually the ones giving orders on the battlefield, but while their strength is respected by the lesser troops, they're too large to dodge projectiles.";
if (enemylist[enemyinfo]==6)
screentext="6. TASEN ELITE#$#$#$#These walking death machines carry exceptionally dense Nanofields that use gravitational forces to lock them in place, making them impossible to knock back - even with the most explosive of weapons. As the most powerful type of Tasen combatant, the Elites fear no enemy, and even boss around the Commanders on the battlefield. The only way to stop an Elite in its tracks is to hit it repeatedly with powerful weapons, so that it has no time to react. Like the Commanders, they are too big to duck incoming projectiles.";
if (enemylist[enemyinfo]==7)
screentext="7. TASEN SHREDDER#$#$#$#Despite three tonnes of compressed metal and ramming spikes, these armed personal hovercrafts are extremely mobile, giving Tasen ground troops a much-needed edge in most fights with the Komato. However, a rocket explosion or a well-timed melee attack could knock the driver off without damaging the vehicle too badly. Due to the unstable power cores, Shredders usually explode violently after taking heavy damage. Most are built to electrocute the driver if they contain Komato subroutine programming, to avoid Shredders being stolen during combat - a daring cracker could trigger this mechanism manually to take over a vehicle with an idle driver.";
if (enemylist[enemyinfo]==8)
screentext="8. KOMATO TROOPER#$#$#$#Equipped with Pulse cannons and heavy armor, a small squad of Troopers can survive most Tasen encounters even while heavily outnumbered. While not the most powerful of Komato, they get the job done, and can dodge projectiles with surprising agility. Some carry Hyper pulse, making them notably more dangerous.";
if (enemylist[enemyinfo]==9)
screentext="9. KOMATO BERSERKER#$#$#$#A frightening class of combatants that quickly earned its reputation in the Tasen-Komato war, these upgraded Komato Troopers are well trained with Resonance-type Nanoweapons. They have abandoned the Pulse cannon in favor of the Shocksplinter, and can use a local teleportation device to lunge head-first into battle, though it takes a few hours to recharge this device. Being too large to dodge projectiles, they use Resonance reflectors instead, but can only reflect projectiles they can see coming. Trained in handling high-powered impacts, Berserkers can keep their calm even while flying through the air.";
if (enemylist[enemyinfo]==10)
screentext="10. KOMATO BEAST#$#$#$#The unfortunate Komato Troopers who suffer severe brain damage from the combat drugs taken during training, and thus would be useless as ordinary soldiers, are instead turned into Beasts. While they lack armaments in the form of weaponry, their strength and speed makes up for it, as well as the fear they strike into the Tasen - the Beasts' armor contains extremely volatile Shocksplinter explosives. Cracking a Beast will usually cause a feedback loop in the mechanical part of its brain, stunning it for a considerable amount of time.";
if (enemylist[enemyinfo]==11)
screentext="11. KOMATO ASSASSIN#$#$#$#The Assassins are high-speed killers with an almost unlimited local teleportation ability, armed with dual Plasma cannons and laser daggers. Their light Nanofields and extreme reflexes allow them to teleport away from melee attacks and instant-hit weapons alike, depending on their skill, and their rapid-fire reflectors makes them completely impervious to mass-based projectile weaponry. An injured Assassin will drop some Nano and flee the battlefield, leaving any surviving opponents shaken and paranoid.";
if (enemylist[enemyinfo]==12)
screentext="12. KOMATO ANNIHILATOR#$#$#$#The war between the Tasen and Komato led to new types of cyborg soldiers being created, and the Annihilators are the top of the line - these walking tanks can withstand such incredible damage that they appear invincible. Incabable of feeling fear or pain, they are known to pick nearby victims up with one hand - even Tasen Elites - and force their Nanofields to self-destruct. The lesser Komato forces have a deep fear of their commanding Annihilators and obey their every word, even if it means their own death.";
if (enemylist[enemyinfo]==13)
screentext="13. KOMATO SKYSMASHER#$#$#$#Drops: Shocksplinter ammo#Weapon: Shocksplinter#$#Skysmashers are the original line of Komato defense robots, later stolen and modified by the Tasen into stationary turrets. Using gravitational manipulation to fly freely, they are able to target enemies more effectively than their Tasen-made counterpart, although they primarily focus on staying alive by using unpredictable movement patterns. The Skysmasher nickname comes from their widespread use against smaller Tasen vessels in surface combat, where hundreds of them would fly up and pelt incoming ships with Shocksplinter. The only way to destroy a Skysmasher without triggering the self-destruct explosives is with a direct physical attack, or a Resonance detonator.";
}

//Horse information (getinfo 12)
else if (getinfo==12){
screentext="MISSILE PONY X instructions#$#Steer with arrows. Shoot Space n^rds. Collect powerups.#$#$Standard n^rd: 100 points#$Blue n^rd: 200 points#$Green n^rd: 500 points#$Red n^rd: 1000 points#$Dark grey n^rd: 1700 points#$Final n^rd core brain: 9999 points#$#$Coin: 50 points#$Weapon: 1000 points#$Second weapon of same type: 2500 points#$Multihorse: 2000, 3000, 4000, 5000 points, then 2000 points#$Health: 50 points, or 200 points when at full health#$Shoot an enemy: 1 point#$#When you die, your score is reset to what you had when you entered the level. You earn a life for each level completed.";
}

//Horse information (getinfo 12)
else if (getinfo==13){
screentext="MISSILE PONY X hints#$#To get a high score, you need to learn the layout of each stage. Just try to survive your first time through the game.#$#The game doesn't save your high score, and there are no rewards for obtaining a high score.#$#The boss gets more agressive the closer it is to death. It also has a limit to how much damage it can take per second, so don't worry about what weapon you're using.#$#Damage per second (doubles when weapon is at level 2):#Blit Thrower: 10#Volcano Cannon: 20#Meteoric Shredder: 20#Rocket Gun: 60#Corona Lance: 40#$#My high score is 578370.$$$$$$$$$$$$$$$$$$$$$$$$$$$-Yukabacera";
}

#define scr_pausemenuescape
//Pause menu pressed escape
if (!ignoreall){
if (tier="main"){
    selected=1;
    scr_pauseselection();
    }
else if (tier="help"){
    selected=1;
    scr_pauseselection();
    }
else if (tier="help2"){
    selected=1;
    scr_pauseselection();
    }
else if (tier="options"){
    selected=1;
    scr_pauseselection();
    }
else if (tier="reload"){
    selected=2;
    scr_pauseselection();
    }
else if (tier="retry"){
    selected=2;
    scr_pauseselection();
    }
else if (tier="quitmain"){
    selected=2;
    scr_pauseselection();
    }
else if (tier="quit"){
    selected=2;
    scr_pauseselection();
    }
else if (tier="horse"){
    selected=1;
    scr_pauseselection();
    }
else if (tier="wait"){
    selected=1;
    scr_pauseselection();
    }
else if (tier="secret"){
    selected=1;
    scr_pauseselection();
    }
}
#define scr_clearselection
if (!ignoreall){
//Init
if ((ready==1 || ready==2)){
    if (global.sector==1 || global.sswarp || global.wty){
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        alarm[1]=14;
        scr_sound("glo_menuselect");
        }
    else if (ready==1){
        if (global.sector==2){
            ready=3;
            tier=2;
            selected=1;
            selections=4;
            instance_create(332,248,obj_marker);
            scr_sound("glo_menuselect");
            }
        else{
            ready=2;
            tier=100;
            scr_sound("glo_menuselect");
            }
        }
    else if (ready==2){
        ready=3;
        tier=2;
        selected=1;
        selections=4;
        instance_create(332,248,obj_marker);
        scr_sound("glo_menuselect");
        }
    }
//Menu
else if (tier==2){
    if (selected==1)
        tier=3;
    if (selected==2){
        script_execute(scr_readsum);
        if (wrongsum){
            tier=7;
            hassaved=0;
            }
        else{
            script_execute(scr_readsaves);
            //REMOVED
            //Had the choice of sparing Iosa
            /*
            if (global.sector==0 && !hassaved && global.kills+global.totkills<=9*global.neutralkc && !global.specialtriggerb2){
                tier=10;
                obj_marker.visible=0;
                obj_fade.visible=0;
                }
            else
                tier=4;
            */
            tier=4;
            }
        }
    if (selected==3){
        script_execute(scr_readsum);
        if (wrongsum){
            tier=7;
            hassaved=0;
            }
        else{
            script_execute(scr_readsaves);
            tier=5;
            }
        }
    if (selected==4){
        instance_create(596-52,311-46,obj_clearonoff);
        instance_create(596-52,339-46,obj_clearonoff);
        instance_create(596-52,367-46,obj_clearonoff);
        instance_create(596-52,395-46,obj_clearonoff);
        instance_create(596-52,423-46,obj_clearonoff);
        tier=9;
        }
    if (selected==5)
        tier=6;
    selected=1;
    scr_sound("glo_menuselect");
    }
//Continue
else if (tier==3){
    if (selected==1){
        scr_sound("glo_menuselect");
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        alarm[1]=14;
        }
    if (selected==2){
        tier=2;
        scr_sound("glo_menuback");
        }
    selected=1;
    }
//Save
else if (tier==4){
    if (selected==1){
        tier=2;
        scr_sound("glo_menuback");
        with (obj_clearwbox)
            instance_destroy();
        }
    if (selected>=2){
        script_execute(scr_readsum);
        if (wrongsum){
            tier=8;
            selected=1;
            hassaved=0;
            }
        else{
            scr_sound("glo_getoverload");
            script_execute(scr_save,selected-1);
            script_execute(scr_readsaves);
            instance_create(351,264+((selected-2)*28),obj_clearwbox);
            selected=1;
            hassaved=1;
            }
        }
    }
//Load
else if (tier==5){
    if (selected==1){
        tier=2;
        selected=1;
        scr_sound("glo_menuback");
        }
    if (selected>=2 && loadable[selected]==1){
        scr_sound("glo_menuselect");
        script_execute(scr_readsum);
        if (wrongsum){
            tier=7;
            selected=1;
            hassaved=0;
            }
        else{
            ignoreall=1;
            instance_create(0,0,obj_endtransition);
            alarm[2]=14;
            }
        }
    }
//Quit
else if (tier==6){
    if (selected==1){
        ignoreall=1;
        instance_create(0,0,obj_endtransition);
        alarm[3]=14;
        scr_sound("glo_menuselect");
        }
    if (selected==2){
        tier=2;
        scr_sound("glo_menuback");
        }
    selected=1;
    }
//ERROR
else if (tier==7 || tier==8){
    //if (selected==1){
    tier=2;
    selected=1;
    scr_sound("glo_menuback");
    }
//Options
else if (tier==9){
    if (selected==1){
        tier=2;
        selected=1;
        with(obj_clearonoff) instance_destroy();
        scr_sound("glo_menuback");
        //save the settings now!
        scr_readsum();
        if (!wrongsum)
            scr_save(0);
        }
    if (selected==2){
        if(global.noshake){
            global.noshake=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.noshake=1;
            scr_sound("glo_menuback");
            }
        }
    if (selected==3){
        if(global.novoice){
            global.novoice=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.novoice=1;
            scr_sound("glo_menuback");
            }
        }
    if (selected==4){
        if(global.nosound){
            global.nosound=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.nosound=1;
            scr_sound("glo_menuback");
            }
        }
    if (selected==5){
        if(global.nomusic){
            global.nomusic=0;
            scr_sound("glo_menuselect");
            scr_music(global.music);
            }
        else{
            global.nomusic=1;
            scr_sound("glo_menuback");
            scr_stopmusic();
            }
        }
    if (selected==6){
        if(global.hidetime){
            global.hidetime=0;
            scr_sound("glo_menuselect");
            }
        else{
            global.hidetime=1;
            scr_sound("glo_menuback");
            }
        }
    }
//Continue
else if (tier==10){
    tier=4;
    selected=1;
    scr_sound("glo_menuselect");
    obj_marker.visible=1;
    obj_fade.visible=1;
    }

}
#define scr_loadingdestination
//Destinations
//In obj_loading
repeat(10)
    sound_stop_all();
global.gamma=0;
global.gammared=0;
global.gammagreen=0;
global.gammablue=0;
screen_redraw();
if (destination=="0")
    room_goto_next();
if (destination=="clear")
    room_goto(rom_clear);
if (destination=="sector1")
    room_goto(rom_sector1);
if (destination=="sector2")
    room_goto(rom_sector2);
if (destination=="sector3")
    room_goto(rom_sector3);
if (destination=="sector11")
    room_goto(rom_sector11);
if (destination=="sector4")
    room_goto(rom_sector4);
if (destination=="sector5")
    room_goto(rom_sector5);
if (destination=="sector12")
    room_goto(rom_sector12);
if (destination=="sector6")
    room_goto(rom_sector6);
if (destination=="sector7")
    room_goto(rom_sector7);
if (destination=="sector13")
    room_goto(rom_sector13);
if (destination=="sector8")
    room_goto(rom_sector8);
if (destination=="sector9")
    room_goto(rom_sector9);
if (destination=="sector14")
    room_goto(rom_sector14);
if (destination=="sector15"){
    room_goto(rom_sector15);
    global.sector=15;
    }
if (destination=="sector16"){
    room_goto(rom_sector16);
    global.sector=15;
    }
if (destination=="sectorx")
    room_goto(rom_sectorx);
if (destination=="sectorz")
    room_goto(rom_sectorz);
if (destination=="endgame")
    room_goto(rom_endgame);
if (destination=="cut")
    room_goto(rom_cut);
if (destination=="restart")
    room_goto(rom_main);

#define scr_clearnextsector
//Next sector from Clear screen
tier=1337;
instance_create(400,300,obj_loading);
instance_create(0,0,obj_loadingback);
stopfadingout=1;
lastfadeout=-4;
if (global.wty)
obj_loading.destination="sector1";
else if (global.sswarp && global.sector!=1)
obj_loading.destination="restart";
else if(global.sector==2)
obj_loading.destination="sector2";
else if(global.sector==3)
obj_loading.destination="sector3";
else if(global.sector==4)
obj_loading.destination="sector4";
else if(global.sector==5)
obj_loading.destination="sector5";
else if(global.sector==6)
obj_loading.destination="sector6";
else if(global.sector==7)
obj_loading.destination="sector7";
else if(global.sector==8)
obj_loading.destination="sector8";
else if(global.sector==9)
obj_loading.destination="sector9";
else if(global.sector==0)
obj_loading.destination="sectorx";
else if(global.sector==1){
    obj_loading.destination="cut";
    if (global.killdata[797]>0)
        global.cut=12;
    else if (global.killdata[798]>0)
        global.cut=14;
    else
        global.cut=8;
    }

if (room==rom_endgame){
obj_loading.destination="restart";
}

#define scr_clearpickdest
//Go to other room from Sector
if (room==rom_sector3 || room==rom_sector5 || room==rom_sector7 || room==rom_sector9 || room==rom_sectorx)
    instance_create(x,y,obj_loading);
else
    (instance_create(x,y,obj_loading)).visible=0;
instance_create(x,y,obj_loadingback);
//if (global.sswarp)
//    obj_loading.destination="restart";
//else
    obj_loading.destination="clear";

//Cuts from Sectors
if (room==rom_sector2){
    obj_loading.destination="cut";
    global.cut=3;
    }
if (room==rom_sector4){
    obj_loading.destination="cut";
    global.cut=4;
    }
if (room==rom_sector6){
    obj_loading.destination="cut";
    global.cut=5;
    }
if (room==rom_sector8){
    obj_loading.destination="cut";
    if (global.specialtrigger1==1)
        global.cut=7;
    else
        global.cut=6;
    }

//Go to Elite Krotera
if (room==rom_sector3){
    obj_loading.destination="sector11";
    global.sector=11;
    }
//Go to Assassin Asha
if (room==rom_sector5){
    obj_loading.destination="sector12";
    global.sector=12;
    }
//Go to Sentinel Proxima
if (room==rom_sector7){
    obj_loading.destination="sector13";
    global.sector=13;
    }
//Go to Annihilator Iosa
if (room==rom_sector9){
    obj_loading.destination="sector14";
    global.sector=14;
    }
//Spared Annihilator Iosa
if (room==rom_sector14 && global.killdata[797]==1){
    obj_loading.destination="cut";
    global.cut=11;
    }
//Go to pre-General Tor room
if (room==rom_sectorx){
    obj_loading.destination="sector16";
    global.sector=15;
    }
//General Tor
if (room==rom_sector16){
    obj_loading.destination="sector15";
    global.sector=15;
    }

#define scr_jumpfromcut
//Go to other room from cutscene

repeat(10)
    sound_stop_all();

instance_create(400,300,obj_loading);
instance_create(0,0,obj_loadingback);

obj_loading.destination="clear";

if (global.cut==1){
    obj_loading.destination="cut";
    global.cut=2;
    }
else if (global.cut==2){
    obj_loading.destination="sector1";
    }

else if (global.cut==8){
    obj_loading.destination="cut";
    global.cut=10;
    }
else if (global.cut==10 || global.cut==13 || global.cut==15){
    if (global.sswarp)
        obj_loading.destination="restart";
    else
        obj_loading.destination="endgame";
    obj_loading.visible=0;
    }
else if (global.cut==12){
    obj_loading.destination="cut";
    global.cut=13;
    }
else if (global.cut==14){
    obj_loading.destination="cut";
    global.cut=15;
    }

#define scr_clearmenuescape
//clearsabot pressed escape in clear menu
if (!ignoreall){
if (ready==1 || ready==2)
    scr_clearselection();
else{
    if (tier==2){
        selected=1;
        scr_clearselection();
        }
    else if (tier==3){
        selected=2;
        scr_clearselection();
        }
    else if (tier==4){
        selected=1;
        scr_clearselection();
        }
    else if (tier==5){
        selected=1;
        scr_clearselection();
        }
    else if (tier==6){
        selected=2;
        scr_clearselection();
        }
    else if (tier==7 || tier==8){
        scr_clearselection();
        }
    else if (tier==9){
        selected=1;
        scr_clearselection();
        }
    }
}
#define scr_cleardraw
//Restart/quit
if (keyboard_check(vk_f2)){
    f2restart+=1;
    if (f2restart>=20){
        repeat(10)
            sound_stop_all();
        scr_stopmusic();
        room_goto(rom_main);
        }
    }
else
    f2restart=0;
if (keyboard_check(vk_f12)){
    f12quit+=1;
    if (f12quit>=20){
        repeat(10)
            sound_stop_all();
        scr_stopmusic();
        game_end();
        }
    }
else
    f12quit=0;

//Fade out
if (lastfadeout>0 && !stopfadingout){
    lastfadeout-=0.05;
    global.gamma=lastfadeout-1;
    }
else if (lastfadeout!=0 && lastfadeout!=-5){
    lastfadeout=-5;
    global.gamma=0;
    }

//Clearcovers
if (delcover<10){
    with (obj_clearcover){
        if (x==352+obj_clearsabot.delcover*60 || x==352+obj_clearsabot.delcover*60-12 || x==352+obj_clearsabot.delcover*60-24 || x==352+obj_clearsabot.delcover*60-36 || x==352+obj_clearsabot.delcover*60-48){
            alarm[0]=5;
            image_single=-1;
            }
        }
    delcover+=1;
    }

if (temptier!=tier && !ignoreall && tier!=1){
    delcover=0;
    temptier=tier;
    with (obj_clearcover)
        instance_destroy();
    for (i=0; i<6; i+=1){
        for (j=0; j<26; j+=1)
            instance_create(352+j*12,237+i*28,obj_clearcover);
        }
    }

//Results
if (tier==1){
    if (global.kills>0){
        if (global.kills>100){
            kills+=9;
            global.kills-=9;
            }
        kills+=1;
        global.kills-=1;
        }
    if (global.damage>0){
        if (global.damage>100){
            damage+=9;
            global.damage-=9;
            }
        damage+=1;
        global.damage-=1;
        }
    if (global.cracks>0){
        if (global.cracks>100){
            cracks+=9;
            global.cracks-=9;
            }
        cracks+=1;
        global.cracks-=1;
        }
    if (global.fails>0){
        if (global.fails>100){
            fails+=9;
            global.fails-=9;
            }
        fails+=1;
        global.fails-=1;
        }
    if (global.seconds>=60){
        global.seconds-=60;
        minutes+=1;
        global.totalseconds+=60;
        }
    else if (global.seconds>=1){
        global.seconds-=1;
        seconds+=1;
        global.totalseconds+=1;
        }
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209,"  RESULTS",28,-1);
    draw_text_ext(352,237," Kills:",28,-1);
    draw_text_ext(352,265,"Damage:",28,-1);
    draw_text_ext(352,293,"Cracks:",28,-1);
    draw_text_ext(352,321," Fails:",28,-1);
    draw_text_ext(352,349,"Time:",28,-1);
    if (kills<10) offset=24;
    else if (kills<100) offset=12;
    else offset=0;
    draw_text_ext(448+offset,237,string(kills),28,-1);
    if (damage<10) offset=24;
    else if (damage<100) offset=12;
    else offset=0;
    draw_text_ext(448+offset,265,string(damage),28,-1);
    if (global.sector!=2){
        if (cracks<10) offset=24;
        else if (cracks<100) offset=12;
        else offset=0;
        draw_text_ext(448+offset,293,string(cracks),28,-1);
        }
    else
        draw_text_ext(448,293,"N/A",28,-1);
    if (global.sector!=2){
        if (fails<10) offset=24;
        else if (fails<100) offset=12;
        else offset=0;
        draw_text_ext(448+offset,321,string(fails),28,-1);
        }
    else
        draw_text_ext(448,321,"N/A",28,-1);
    if (minutes<10)
        zeromin="0"+string(minutes);
    else
        zeromin=string(minutes);
    if (seconds<10)
        zerosec="0"+string(seconds);
    else
        zerosec=string(seconds);
    draw_text_ext(424,349,zeromin+":"+zerosec,28,-1);

    if (global.kills==0 && global.damage==0 && global.cracks==0 && global.fails==0 && global.seconds==0){
        ready=1;
        draw_text_ext(352,377,"PRESS ENTER",28,-1);
        }
    }
//Totals
else if (tier==100){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209,"  TOTALS",28,-1);
    draw_text_ext(352,237," Kills:",28,-1);
    draw_text_ext(352,265,"Damage:",28,-1);
    draw_text_ext(352,293,"Cracks:",28,-1);
    draw_text_ext(352,321," Fails:",28,-1);
    draw_text_ext(352,349,"Time:",28,-1);
    if (global.totkills<10) offset=24;
    else if (global.totkills<100) offset=12;
    else offset=0;
    draw_text_ext(448+offset,237,string(global.totkills),28,-1);
    if (global.totdamage<10) offset=24;
    else if (global.totdamage<100) offset=12;
    else offset=0;
    draw_text_ext(448+offset,265,string(global.totdamage),28,-1);
    if (global.totcracks<10) offset=24;
    else if (global.totcracks<100) offset=12;
    else offset=0;
    draw_text_ext(448+offset,293,string(global.totcracks),28,-1);
    if (global.totfails<10) offset=24;
    else if (global.totfails<100) offset=12;
    else offset=0;
    draw_text_ext(448+offset,321,string(global.totfails),28,-1);
    //Draw time
    drawtimesecs=global.totalseconds+global.seconds;
    drawtimehours=floor((drawtimesecs-(drawtimesecs mod 3600))/3600);
    drawtimesecs-=drawtimehours*3600;
    drawtimemins=floor((drawtimesecs-(drawtimesecs mod 60))/60);
    drawtimesecs=drawtimesecs mod 60;
    drawtimestring=string(drawtimehours)+":";
    if (drawtimemins<10)
        drawtimestring+="0";
    drawtimestring+=string(drawtimemins)+".";
    if (drawtimesecs<10)
        drawtimestring+="0";
    drawtimestring+=string(drawtimesecs);
    draw_text_ext(424,349,drawtimestring,28,-1);
    draw_text_ext(352,377,"PRESS ENTER",28,-1);
    }

//Menu
else if (tier==2){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209," MENU                     Continue                  Save game                 Load game                 Options                   Quit",28,326);
    selections=5;
    }
else if (tier==3){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    if (hassaved)
        draw_text_ext(352,209," GO TO NEXT SECTOR?       Yes                       No",28,326);
    else
        draw_text_ext(352,209," CONTINUE WITHOUT SAVING? Yes                       No",28,326);
    selections=2;
    }
else if (tier==4){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209," SAVE GAME                Back to Menu              "+readsaves,28,326);
    selections=6;
    }
else if (tier==5){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209," LOAD GAME                Back to Menu              "+readsaves,28,326);
    selections=6;
    }
else if (tier==6){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    if (hassaved)
        draw_text_ext(352,209," QUIT TO MAIN MENU?       Yes                       No",28,326);
    else
        draw_text_ext(352,209," QUIT WITHOUT SAVING?     Yes                       No",28,326);
    selections=2;
    }
else if (tier==7){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209," ERROR                    Back to menu#$#THE SAVE FILE (ijisave)   IS CORRUPT. SAVE FILES COULD NOT BE READ.",28,326);
    selections=1;
    }
else if (tier==8){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209," ERROR                    Back to menu#$#THE SAVE FILE (ijisave)   IS CORRUPT. GAME CANNOT   BE SAVED.",28,326);
    selections=1;
    }
else if (tier==9){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209," OPTIONS                  Back to menu              Screen shaking            Voices                    Sound effects             Music                     Show time",28,326);
    selections=6;
    }
else if (tier==10){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(352,209," NOTICE                   You may want to save your game in a different slot. Press Enter to continue.  ",28,326);
    selections=1;
    }

#define scr_crackframe
with (obj_frame) instance_destroy();
with (obj_crackbar) instance_destroy();
with (obj_nodecol) instance_destroy();
with (obj_noderow) instance_destroy();
with (obj_younode) instance_destroy();
with (obj_goalnode) instance_destroy();
with (obj_icenode) instance_destroy();
with (obj_binary) instance_destroy();
with (obj_colnumber) instance_destroy();
count=0;
while (count<100){
    instance_create(obj_shakescreen.x-400+(8*count),obj_shakescreen.y+172,obj_frame);
    count+=1;
    }
instance_create(obj_shakescreen.x-160,obj_shakescreen.y+175,obj_crackbar);
sweep=0;
if (global.cracking){
    while (sweep<global.colcount){
        instance_create(obj_shakescreen.x-142+(sweep*32),obj_shakescreen.y+198,obj_nodecol);
        tempid=instance_create(obj_shakescreen.x-146+(sweep*32),obj_shakescreen.y+278,obj_binary);
        tempid.image_single=sweep;
        if (sweep<global.colcount-1)
            instance_create(obj_shakescreen.x-131+(sweep*32),obj_shakescreen.y+202,obj_noderow);
        sweep+=1;
        }
    //Draw colnumbers
    tempid=instance_create(obj_shakescreen.x-107,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=1;
    if (global.security>1){
    tempid=instance_create(obj_shakescreen.x-75,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=3;
    }
    if (global.security>2){
    tempid=instance_create(obj_shakescreen.x-43,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=0;
    tempid=instance_create(obj_shakescreen.x-11,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=2;
    }  
    if (global.security>3){
    tempid=instance_create(obj_shakescreen.x+21,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=2;
    }  
    if (global.security>4){
    tempid=instance_create(obj_shakescreen.x+53,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=0;
    tempid=instance_create(obj_shakescreen.x+85,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=4;
    }  
    if (global.security>5){
    tempid=instance_create(obj_shakescreen.x+117,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=0;
    tempid=instance_create(obj_shakescreen.x+149,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=1;
    }  
    if (global.security>6){
    tempid=instance_create(obj_shakescreen.x+181,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=3;
    }  
    if (global.security>7){
    tempid=instance_create(obj_shakescreen.x+213,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=0;
    tempid=instance_create(obj_shakescreen.x+245,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=2;
    }  
    if (global.security>8){
    tempid=instance_create(obj_shakescreen.x+277,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=2;
    }  
    if (global.security>9){
    tempid=instance_create(obj_shakescreen.x+309,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=0;
    tempid=instance_create(obj_shakescreen.x+341,obj_shakescreen.y+184,obj_colnumber);
    tempid.image_single=4;
    }  
    //Draw nodes
    row=0; col=0;
    younodeim+=1;
    if (younodeim==4)
        younodeim=0;
    while (col<global.colcount){
        while(row<5){
            if (global.nodes[row,col]==1){
            tempid=instance_create(obj_shakescreen.x-140+(col*32),obj_shakescreen.y+200+(row*16),obj_icenode);
            temprand=random(1);
            if (temprand<0.04 && global.cracklevel!=10)
                tempid.visible=0;
            }
            if (global.nodes[row,col]==2)
            (instance_create(obj_shakescreen.x-140+(col*32),obj_shakescreen.y+200+(row*16),obj_younode)).image_single=younodeim;
            if (global.nodes[row,col]==3)
            instance_create(obj_shakescreen.x-140+(col*32),obj_shakescreen.y+200+(row*16),obj_goalnode);
            row+=1;
            }
        row=0;
        col+=1;
        }
    }
#define scr_begincrack
//Begin cracking
with(obj_pushbox) instance_destroy();
instance_create(obj_iji.x,obj_iji.y,obj_cracktext);
global.ignoreall=1;
obj_iji.goingleft=0;
obj_iji.goingright=0;
global.running=0;
obj_iji.cannotpause=1;

global.cracking=0;
if (global.security==1) global.colcount=3;
if (global.security==2) global.colcount=4;
if (global.security==3) global.colcount=6;
if (global.security==4) global.colcount=7;
if (global.security==5) global.colcount=9;
if (global.security==6) global.colcount=11;
if (global.security==7) global.colcount=12;
if (global.security==8) global.colcount=14;
if (global.security==9) global.colcount=15;
if (global.security==10) global.colcount=17;
row=0; col=0;
while(col<global.colcount){
    while(row<5){
        global.nodes[row,col]=0;
        row+=1;
        }
    row=0;
    col+=1;
    }
global.nodes[0,0]=2;
global.nodes[4,global.colcount-1]=3;
global.yourow=0;
global.youcol=0;

//Randomize dark blue nodes
sweepnum=1;
while (sweepnum<global.security+1){
    if (sweepnum=1){icenum=1; colnum=1}
    if (sweepnum=2){icenum=3; colnum=2}
    if (sweepnum=3){icenum=2; colnum=4}
    if (sweepnum=4){icenum=2; colnum=5}
    if (sweepnum=5){icenum=4; colnum=7}
    if (sweepnum=6){icenum=1; colnum=9}
    if (sweepnum=7){icenum=3; colnum=10}
    if (sweepnum=8){icenum=2; colnum=12}
    if (sweepnum=9){icenum=2; colnum=13}
    if (sweepnum=10){icenum=4; colnum=15}
    sweepnum+=1;
    marknum=0;
    while(marknum<icenum){
        mark=floor(random(5));
        if (!global.nodes[mark,colnum]){
            global.nodes[mark,colnum]=1;
            marknum+=1;
            }
        }
    }
#define scr_cracksuccess
//Successfully cracked something
scr_sound("glo_cracksuccess");
with (obj_iji){
    if (crackmark){
        instance_activate_object(obj_station);
        with (obj_station){
            if (sprite_index=spr_station_blank){
                if (type=0)
                    sprite_index=spr_station_health;
                if (type=1)
                    sprite_index=spr_station_attack;
                if (type=2)
                    sprite_index=spr_station_assimilate;
                if (type=3)
                    sprite_index=spr_station_strength;
                if (type=4)
                    sprite_index=spr_station_crack;
                if (type=5)
                    sprite_index=spr_station_tasen;
                if (type=6)
                    sprite_index=spr_station_komato;
                if (global.suddendeath && sprite_index==spr_station_health)
                    sprite_index=spr_station_blank;
                }
            }
        hasrebooted=1;
        global.ignorestation=120;
        global.topmessage="SYSTEM REPORT: PERSONAL NANOFIELD REBOOTED";
        global.points+=global.healthlevel-1;
        global.points+=global.attacklevel-1;
        global.points+=global.assimilatelevel-1;
        global.points+=global.strengthlevel-1;
        global.points+=global.tasenlevel-1;
        global.points+=global.komatolevel-1;
        global.points+=global.cracklevel-1;
        global.hp=2;
        if (global.randomstations){
            global.points=0;
            global.level=0;
            global.xp=0;
            global.xpcount=0;
            }
        global.armor=0;
        global.damage-=1;
        global.healthlevel=1;
        global.attacklevel=1;
        global.assimilatelevel=1;
        global.strengthlevel=1;
        global.cracklevel=1;
        global.tasenlevel=1;
        global.komatolevel=1;
        if (global.ammo2>10)
            global.ammo2=10;
        if (global.ammo3>10)
            global.ammo3=10;
        if (global.ammo4>10)
            global.ammo4=10;
        if (global.ammo6>10)
            global.ammo6=10;
        if (global.ammo7>10)
            global.ammo7=10;
        if (global.ammo8>10)
            global.ammo8=10;
        if (global.weapon9){
            if (global.cracks>0)
                global.cracks-=1;
            else{
                global.totcracks-=1;
                obj_sabot.totreduced+=1;
                }
            }
        if (global.weapon10){
            if (global.cracks>0)
                global.cracks-=1;
            else{
                global.totcracks-=1;
                obj_sabot.totreduced+=1;
                }
            }
        if (global.weapon11){
            if (global.cracks>0)
                global.cracks-=1;
            else{
                global.totcracks-=1;
                obj_sabot.totreduced+=1;
                }
            }
        if (global.weapon12){
            if (global.cracks>0)
                global.cracks-=1;
            else{
                global.totcracks-=1;
                obj_sabot.totreduced+=1;
                }
            }
        if (global.weapon14){
            if (global.cracks>0)
                global.cracks-=1;
            else{
                global.totcracks-=1;
                obj_sabot.totreduced+=1;
                }
            }
        if (global.weapon15){
            if (global.cracks>0)
                global.cracks-=1;
            else{
                global.totcracks-=1;
                obj_sabot.totreduced+=1;
                }
            }
        if (global.weapon16){
            if (global.cracks>0)
                global.cracks-=1;
            else{
                global.totcracks-=1;
                obj_sabot.totreduced+=1;
                }
            }
        global.weapon=1;
        global.weapon2=0;
        global.weapon3=0;
        global.weapon4=0;
        global.weapon6=0;
        global.weapon7=0;
        global.weapon8=0;
        global.weapon9=0;
        global.weapon10=0;
        global.weapon11=0;
        global.weapon12=0;
        if (!xcannotfire){
            if (global.weapon13){
                if (global.cracks>0)
                    global.cracks-=1;
                else{
                    global.totcracks-=1;
                    obj_sabot.totreduced+=1;
                    }
                }
            global.weapon13=0;
            }
        global.weapon14=0;
        global.weapon15=0;
        global.weapon16=0;
        global.cracks-=1;
        if (global.cracks<=0)
            global.cracks=-1;
        if (global.totcracks<0)
            global.totcracks=0;
        obj_weapon1.image_single=1;
        with (obj_weapon2){
            instance_destroy();
            instance_create(obj_iji.x-51,obj_iji.y+30,obj_pickupmach);
            }
        with (obj_weapon3){
            instance_destroy();
            instance_create(obj_iji.x-41,obj_iji.y+30,obj_pickuprokt);
            }
        with (obj_weapon4){
            instance_destroy();
            instance_create(obj_iji.x-31,obj_iji.y+30,obj_pickupmpfb);
            }
        with (obj_weapon5){
            image_single=0;
            if (global.weapon13==1)
                image_single=2;
            }
        with (obj_weapon6){
            instance_destroy();
            instance_create(obj_iji.x-21,obj_iji.y+30,obj_pickuppuls);
            }
        with (obj_weapon7){
            instance_destroy();
            instance_create(obj_iji.x-11,obj_iji.y+30,obj_pickupshok);
            }
        with (obj_weapon8){
            instance_destroy();
            instance_create(obj_iji.x-1,obj_iji.y+30,obj_pickupcfis);
            }
        if (global.weapon17==1)
            instance_create(obj_iji.x-26,obj_iji.y+30,obj_pickupbanana);
        global.weapon17=0;
        }
    }
with (obj_weapstation){
    if (crackmark){
        global.ignoremessagescroll=40;
        crackmark=0;
        global.topmessage="SYSTEM REPORT: New Nanoweapon created";
        obj_iji.takingpain=1;
        obj_iji.recovering=0;
        obj_iji.goaroundtrigger=1;
        alarm[0]=10;
        global.ignorestation=120;
        goaround=1;
        if (weap3==9){
            global.weapon9=1;
            global.textid="weapstation9";
            obj_weapon1.image_single+=2;
            }
        if (weap3==10){
            global.weapon10=1;
            global.textid="weapstation10";
            obj_weapon2.image_single+=2;
            }
        if (weap3==11){
            global.weapon11=1;
            global.textid="weapstation11";
            obj_weapon3.image_single+=2;
            }
        if (weap3==12){
            global.weapon12=1;
            global.textid="weapstation12";
            obj_weapon4.image_single+=2;
            }
        if (weap3==13){
            global.weapon13=1;
            global.textid="weapstation13";
            obj_weapon5.image_single+=2;
            }
        if (weap3==14){
            global.weapon14=1;
            global.textid="weapstation14";
            obj_weapon6.image_single+=2;
            }
        if (weap3==15){
            global.weapon15=1;
            global.textid="weapstation15";
            obj_weapon7.image_single+=2;
            }
        if (weap3==16){
            global.weapon16=1;
            global.textid="weapstation16";
            obj_weapon8.image_single+=2;
            }
        }
    }
with (obj_crackbox){
    if (crackmark){
        successed=1;
        xfix=0; yfix=0;
        if (prize==obj_ammo1 || prize==obj_ammo2 || prize==obj_ammo3 || prize==obj_ammo4 || prize==obj_ammo5 || prize==obj_ammo6 || prize==obj_ammo7 || prize==obj_ammo8 || prize==obj_ammo9 || prize==obj_ammo10 || prize==obj_ammo11 || prize==obj_ammo12)
            xfix=16;
        if (prize==obj_xp1 || prize==obj_xp2 || prize==obj_xp3 || prize==obj_xp4 || prize==obj_pickuphealth || prize==obj_pickuparmor){
            xfix=32;
            yfix=16;
            }
        if ((prize==obj_xp1 || prize==obj_xp2 || prize==obj_xp3 || prize==obj_xp4) && global.level==global.maxlevel)
            prize=obj_pickuphealth;
        instance_create(x+xfix,y+yfix,prize);
        script_execute(scr_metabreak,4,0)
        global.topmessage="SYSTEM REPORT: Security box destroyed without harming contents";
        }
    }
with (obj_cdoor){
    if (crackmark){
        scr_sound("glo_door");
        cracked=1;
        vspeed=-16;
        alarm[0]=6;
        global.ignorestation=90;
        global.topmessage="SYSTEM REPORT: Level "+string(security)+" Security door opened";
        if (trigger==2){
            instance_activate_object(obj_terminal)
            with (obj_terminal){
                if (trigger==2){
                    cracked=1;
                    sprite_index=spr_sec7terminal;
                    }
                }
            instance_activate_object(obj_trigger)
            with (obj_trigger){
                if (textid=="chat29")
                    instance_destroy();
                }
            }
        if (trigger==3){
            instance_activate_object(obj_terminal)
            with (obj_terminal){
                if (trigger==3){
                    cracked=1;
                    sprite_index=spr_sec7terminal;
                    }
                }
            }
        if (trigger==10){
            instance_activate_object(obj_terminal)
            with (obj_terminal){
                if (trigger==10){
                    cracked=1;
                    sprite_index=spr_sec7terminal;
                    }
                }
            }
        }
    }
with (obj_terminal){
    if (crackmark){
        sprite_index=spr_sec7terminal;
        cracked=1;
        if (global.sector==2){
            global.ignorestation=60;
            global.topmessage="SYSTEM REPORT: SECURITY DOOR ON FLOOR 14 OPENED";
            instance_activate_object(obj_cdoor);
            instance_activate_object(obj_trigger);
            with (obj_cdoor){
                if (trigger==2)
                    instance_destroy();
                }
            with (obj_trigger){
                if (textid="chat24")
                    instance_destroy();
                if (textid="chat29")
                    instance_destroy();
                }
            }
        if (global.sector==5){
            global.ignorestation=60;
            global.topmessage="SYSTEM REPORT: SECURITY DOOR ON FLOOR 2 OPENED";
            instance_activate_object(obj_cdoor);
            with (obj_cdoor){
                if (trigger==10)
                    instance_destroy();
                }
            }
        if (global.sector==6){
            global.ignorestation=60;
            global.topmessage="SYSTEM REPORT: SECURITY DOOR ON FLOOR 13 OPENED";
            instance_activate_object(obj_cdoor);
            with (obj_cdoor){
                if (trigger==12){
                    scr_sound("glo_door");
                    cracked=1;
                    vspeed=-16;
                    alarm[0]=6;
                    }
                }
            }
        }
    }
with (obj_acmachine){
    if (crackmark){
        global.ignorestation=60;
        cracked=1;
        global.topmessage="SYSTEM REPORT: Security bypassed, display text overwritten";
        }
    }
with (obj_turret){
    if (crackmark){
        scr_sound("tur_appear");
        dead=1;
        cracked=1;
        armor=200;
        angry=0;
        state=100;
        alarm[1]=0;
        alarm[2]=0;
        alarm[3]=0;
        alarm[4]=0;
        global.topmessage="SYSTEM REPORT: Subject permanently powered down";
        if (facing==0){
            alarm[5]=3;
            sprite_index=spr_turretappear;
            image_index=2;
            image_speed=-1;
            image_single=-1;
            }
        else{
            alarm[6]=3;
            image_single=1;
            }
        }
    }
with (obj_tasenscout){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
        global.topmessage="SYSTEM REPORT: Subject's weapons malfunctioning";
        if (state==2){
            state=1;
            if (instance_number(obj_iji)==1){
                if (x>obj_iji.x)
                    facing=1;
                else
                    facing=0;
                }
            }
        }
    }
with (obj_tasensoldier){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
        temprand=random(1);
        if (temprand<0.5){
            targetiji=300;
            hp/=2;
            if (hp<=1){
                hp=1;
                armor=100;
                }
            script_execute(scr_nanoexplosion,6,26);
            script_execute(scr_enemyknockdown,(global.facing+1),2);
            global.topmessage="SYSTEM REPORT: Subject damaged, heavy weapons malfunctioning";
            }
        else
            global.topmessage="SYSTEM REPORT: Subject's heavy weapons malfunctioning";
        }
    }
with (obj_tasencommander){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
        temprand=random(1);
        if (temprand<0.5){
            targetiji=300;
            hp/=2;
            if (hp<=1){
                hp=1;
                armor=100;
                }
            script_execute(scr_nanoexplosion,10,40);
            script_execute(scr_enemyknockdown,(global.facing+1),2);
            global.topmessage="SYSTEM REPORT: Subject damaged, heavy weapons malfunctioning";
            }
        else
            global.topmessage="SYSTEM REPORT: Subject's heavy weapons malfunctioning";
        }
    }
with (obj_tasenelite){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
        temprand=random(1);
        if (temprand<0.5){
            targetiji=300;
            angry=1;
            hp/=2;
            if (hp<=1){
                hp=1;
                armor=100;
                }
            script_execute(scr_elitepain);
            script_execute(scr_nanoexplosion,15,45);
            global.topmessage="SYSTEM REPORT: Subject damaged, heavy weapons malfunctioning";
            }
        else
            global.topmessage="SYSTEM REPORT: Subject's heavy weapons malfunctioning";
        }
    }
with (obj_tasenshredder){
    if (crackmark){
        cracked=1;
        script_execute(scr_nanoexplosion,0,-15);
        tempid=instance_create(x,y-30,obj_tasensoldier);
        //tempid.killtype=4;
        //tempid.hp=1;
        //tempid.dead=1;
        //tempid.cracked=1;
        //tempid.ijikill=1;
        tempid.hp=1;
        tempid.angry=1;
        tempid.targetiji=300;
        tempid.alarm[5]=300;
        tempid.killdataid=killdataid;
        if (facing==0){
            with (tempid)
                script_execute(scr_enemyknockdown,2,1);
            }
        else{
            with (tempid)
                script_execute(scr_enemyknockdown,1,1);
            }
        instance_destroy();
        tempid=instance_create(floor(x),floor(y)-1,obj_emptyshredder);
        tempid.shredderhp=shredderhp;
        if (sprite_index==spr_tasenshredder_basicleft)
            tempid.sprite_index=spr_tasenshredder_emptyleft;
        else
            tempid.sprite_index=spr_tasenshredder_empty;
        tempid.facing=facing;
        tempid.hspeed=hspeed;
        tempid.vspeed=vspeed;
        global.topmessage="SYSTEM REPORT: Theft sensors triggered, driver electrocuted";
        }
    }
with (obj_komatotrooper){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
        temprand=random(1);
        if (temprand<0.5){
            targetiji=300;
            hp/=2;
            if (hp<=1){
                hp=1;
                armor=200;
                }
            script_execute(scr_nanoexplosion,10,30);
            script_execute(scr_enemyknockdown,(global.facing+1),2);
            global.topmessage="SYSTEM REPORT: Subject damaged, heavy weapons malfunctioning";
            }
        else
            global.topmessage="SYSTEM REPORT: Subject's heavy weapons malfunctioning";
        }
    }
with (obj_komatoberserker){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
        temprand=random(1);
        if (temprand<0.5){
            targetiji=300;
            hp/=2;
            if (hp<=1){
                hp=1;
                armor=200;
                }
            script_execute(scr_nanoexplosion,15,40);
            script_execute(scr_enemyknockdown,(global.facing+1),4);
            global.topmessage="SYSTEM REPORT: Subject damaged, heavy weapons malfunctioning";
            }
        else
            global.topmessage="SYSTEM REPORT: Subject's heavy weapons malfunctioning";
        }
    }
with (obj_komatoassassin){
    if (crackmark){
        cracked=1;
        temprand=random(1);
        if (temprand<0.5){
            hp/=2;
            if (hp<=1){
                hp=1;
                armor=200;
                }
            scr_nanoexplosion(12,40);
            scr_assassinpain(0);
            global.topmessage="SYSTEM REPORT: Subject damaged, heavy weapons malfunctioning";
            }
        else{
            scr_assassinpain(1);
            global.topmessage="SYSTEM REPORT: Subject's heavy weapons malfunctioning";
            }
        }
    }
with (obj_komatobeast){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
            alarm[2]=600;
            alarm[7]=4;
        if (state==3)
            wanttostun=1;
        else{
            state=4;
            if (facing==0)
                sprite_index=spr_komatobeast_painleft;
            else
                sprite_index=spr_komatobeast_pain;
            image_single=-1;
            image_index=0;
            image_speed=0.5;
            }
        global.topmessage="SYSTEM REPORT: Subject stunned";
        }
    }
with (obj_komatoannihilator){
    if (crackmark){
        cracked=1;
        if (killtype<4)
            killtype=4;
        temprand=random(1);
        if (temprand<2){
            targetiji=300;
            hp/=2;
            if (hp<=1){
                hp=1;
                armor=200;
                }
            script_execute(scr_annihilatorpain);
            script_execute(scr_nanoexplosion,50,100);
            if (other.angry==0 && (other.state==0 || other.state==1))
                alarm[2]=45;
            global.topmessage="SYSTEM REPORT: Subject damaged, heavy weapons malfunctioning";
            }
        else
            global.topmessage="SYSTEM REPORT: Subject's heavy weapons malfunctioning";
        }
    }
with (obj_iosa2){
    if (crackmark){
        if (state==10){
            if (global.specialtriggerb2){
                obj_iosatrigger.alarm[2]=75;
                obj_iosatrigger.alarm[3]=90;
                }
            else if (global.kills+global.totkills<=9*global.neutralkc){
                obj_iosatrigger.pacifistend=1;
                }
            else if (global.kills+global.totkills<=9*global.berserkkc){
                obj_iosatrigger.pacifistend=1;
                }
            else{
                obj_iosatrigger.alarm[2]=88;
                obj_iosatrigger.alarm[3]=90;
                }
            state=11;
            image_single=0;
            sprite_index=spr_iosa2_death;
            alarm[0]=18; //death sound
            with (obj_sabot)
                scr_music("mus_lightstroke");
            obj_iji.takingpain=1;
            if (global.passive){
                global.passive=0;
                global.killdata[799]=0;
                }
            if (global.weapon!=1){
                global.ignoreall=0;
                scr_changeweapon(1);
                global.ignoreall=1;
                }
            obj_sabot.ultimatecannotpause=1;
            global.topmessage="SYSTEM REPORT: Subject's Nanofield deactivated";
            repeat(800)
                instance_create(obj_iosa2.x-38+random(80),obj_iosa2.y-10+random(95),obj_redpixel);
            }
        else{
            global.cracks-=1;
            global.topmessage="CRACKING FAILED";
            }
        }
    }

global.cracks+=1;
scr_terminatecrack();
global.erasetop=0;
//Iosa2 goaroundcrack
if (room=rom_sector14 && obj_iosa2.state==11){
    global.ignoreall=1;
    obj_iji.alarm[5]=0;
    }
//Weapstation goaroundcrack
if (obj_iji.goaroundtrigger){
    global.ignoreall=1;
    obj_iji.alarm[5]=0;
    obj_iji.goaroundtrigger=0;
    }
#define scr_crackfail
global.fails+=1;
scr_sound("glo_crackfail");
if (global.cracklevel!=10){
//Failure
with (obj_iji){
if (crackmark){
    global.topmessage="CRACKING FAILED";
    global.fails-=1;
    global.ignorestation=90;
    }
}
with (obj_cdoor){
if (crackmark){
tempincrease=random(1);
if (tempincrease < (0.25*global.difficulty)+0.25 && security>1){
    security+=1;
    global.topmessage="CRACKING FAILED - DOOR SECURITY INCREASED";
    global.ignorestation=90;
    }
else{
    global.topmessage="CRACKING FAILED";
    global.ignorestation=90;
    }
}
}
with (obj_weapstation){
if (crackmark){
lostammo=0;
if (random(1)<(0.25*global.difficulty)+0.25){
    if (weap1==2 || weap2==2){
        lostammo=1;
        global.ammo2-=5;
        if (global.ammo2<=0){
            global.ammo2=0;
            global.ammo2part=0;
            }
        }
    if (weap1==3 || weap2==3){
        lostammo=1;
        global.ammo3-=5;
        if (global.ammo3<=0)
            global.ammo3=0;
        }
    if (weap1==4 || weap2==4){
        lostammo=1;
        global.ammo4-=5;
        if (global.ammo4<=0)
            global.ammo4=0;
        }
    if (weap1==6 || weap2==6){
        lostammo=1;
        global.ammo6-=5;
        if (global.ammo6<=0){
            global.ammo6=0;
            global.ammo6part=0;
            }
        }
    if (weap1==7 || weap2==7){
        lostammo=1;
        global.ammo7-=5;
        if (global.ammo7<=0)
            global.ammo7=0;
        }
    if (weap1==8 || weap2==8){
        lostammo=1;
        global.ammo8-=5;
        if (global.ammo8<=0){
            global.ammo8=0;
            global.ammo8part=0;
            }
        }
    }
if (lostammo)
    global.topmessage="CRACKING FAILED - 5 AMMUNITION LOST";
else
    global.topmessage="CRACKING FAILED";
global.ignorestation=90;
}
}
with (obj_turret){
if (crackmark){
if (angry==0)
    alarm[2]=15;
angry=1;
alarm[3]=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_tasenscout){
if (crackmark){
if (angry==0)
    alarm[2]=ceil(random(15));
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_tasensoldier){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_tasencommander){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_tasenelite){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_tasenshredder){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_komatotrooper){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_komatoberserker){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_komatoassassin){
if (crackmark){
if (angry==0){
    alarm[2]=random(60-(global.difficulty*20))+30-(global.difficulty*10);
    angry=1;
    visible=0;
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflash);
    }
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_komatobeast){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}
with (obj_komatoannihilator){
if (crackmark){
if (angry==0)
    alarm[2]=1;
angry=1;
alarm[5]=300;
targetiji=300;
global.topmessage="CRACKING FAILED - SUBJECT ALERTED";
global.ignorestation=90;
}
}

with (obj_crackbox){
if (crackmark){
    if (global.difficulty==0){
        temp=random(1);
        if (temp>0.75 && security>1 && security<10){
            global.topmessage="CRACKING FAILED - BOX SECURITY INCREASED";
            global.ignorestation=90;
            security+=1;
            }
        }
    if (global.difficulty==1){
        temp=random(1);
        if (temp>0.75){
            script_execute(scr_metabreak,4);
            global.topmessage="CRACKING FAILED - SECURITY BOX DESTROYED";
            global.ignorestation=90;
            }
        }
    if (global.difficulty==2){
        temp=random(1);
        if (temp>0.75){
            instance_create(x+32,y+16,obj_enemyrocketexplosion);
            instance_create(x+32,y+16,obj_explosioncenter);
            script_execute(scr_shakescreen,2)
            global.topmessage="CRACKING FAILED - SECURITY BOX EXPLODED";
            global.ignorestation=90;
            }
        }
    }
}
with (obj_iosa2){
if (state==10){
    woozycyc=0;
    uppercutcyc=0;
    state=4;
    sprite_index=spr_iosa2_uppercut;
    image_single=0;
    }
global.topmessage="CRACKING FAILED";
global.ignorestation=90;
}

}
scr_terminatecrack();
#define scr_terminatecrack
with (obj_iji) crackmark=0;
with (obj_cdoor) crackmark=0;
with (obj_turret) crackmark=0;
with (obj_tasenscout) crackmark=0;
with (obj_tasensoldier) crackmark=0;
with (obj_tasencommander) crackmark=0;
with (obj_tasenelite) crackmark=0;
with (obj_tasenshredder) crackmark=0;
with (obj_komatotrooper) crackmark=0;
with (obj_komatoberserker) crackmark=0;
with (obj_komatoassassin) crackmark=0;
with (obj_komatobeast) crackmark=0;
with (obj_komatoannihilator) crackmark=0;
with (obj_crackbox) crackmark=0;
with (obj_weapstation) crackmark=0;
with (obj_terminal) crackmark=0;
with (obj_acmachine) crackmark=0;
with (obj_iosa2) crackmark=0;
with (obj_cracktext) instance_destroy();
with (obj_frame) instance_destroy();
with (obj_crackbar) instance_destroy();
with (obj_noderow) instance_destroy();
with (obj_nodecol) instance_destroy();
with (obj_younode) instance_destroy();
with (obj_goalnode) instance_destroy();
with (obj_icenode) instance_destroy();
with (obj_binary) instance_destroy();
with (obj_colnumber) instance_destroy();
obj_iji.niacrack=1;
obj_iji.alarm[5]=6;
global.cracking=0;
global.cracktime=1;
obj_shakescreen.alarm[1]=3;
#define scr_kickkey
if (!place_meeting(x,y,obj_end)){
if (!shredder){
if (!global.ignoreall){
    lookingaround=0;
    if (global.state==1){
        if (!place_free(x,y+4)){
            if (place_free(x,y+1))
                move_contact_solid(270,-1);
            image_index=0;
            global.state=5;
            kicking=1;
            alarm[1]=16;
            scr_sound("iji_kick");
            if (global.facing==0)
                sprite_index=spr_kickstrongleft;
            if (global.facing==1)
                sprite_index=spr_kickstrong;
            }
        }
    }
}

//Reboot
if (!global.ignoreall && !shredder && !place_meeting(x,y,obj_emptyshredder) && !takingpain && !recovering){
if (sprite_index==spr_duck || sprite_index==spr_duckleft){
    if (rebootcyc==4){
        if (cannotreboot){
            global.erasetop=0;
            global.topmessage="You cannot reboot here";
            }
        else if (!global.specialtrigger16){
            global.ignoreall=1;
            rebootcyc=0;
            obj_sabot.alarm[6]=1;
            }
        else{
            global.erasetop=0;
            if (global.really)
                global.topmessage="You cannot reboot on reallyjoel's dad difficulty";
            else
                global.topmessage="You cannot reboot on Ultimortal difficulty";
            }
        }
    else
        rebootcyc=0;
    }
}
}
#define scr_usekey
//Use
if (!place_meeting(x,y,obj_end)){
if (!global.ignoreall && !shredder && !place_meeting(x,y,obj_emptyshredder)){
    lookingaround=0;
    if (global.state==1){
        if (!place_free(x,y+4)){
            if (place_free(x,y+1))
                move_contact_solid(270,-1);
            image_index=0;
            global.state=5;
            switchingpose=1;
            goingright=0;
            goingleft=0;
            running=0;
            alarm[1]=12;
            if (global.facing==0)
                sprite_index=spr_pushbuttonleft;
            if (global.facing==1)
                sprite_index=spr_pushbutton;
            }
        }
    }

//Reboot
if (!global.ignoreall && !shredder && !place_meeting(x,y,obj_emptyshredder) && !takingpain && !recovering){
if (sprite_index==spr_duck || sprite_index==spr_duckleft){
    rebootcyc+=1;
    }
}
}

tech=1;
#define scr_firekey
//Deep into the Iji code peering, long I stood there
//Wondering, fearing, doubting... but mostly wondering

if (!global.wty){
if (!global.ignoreall){
if (!place_meeting(x,y,obj_end)){
if (!shredder || (shredder && image_index>6)){
lookaround=0;
lookingaround=0;
if (global.state==1 || (global.fireanytime && !stopanyfire && (sprite_index==spr_jump || sprite_index==spr_jumpleft || sprite_index==spr_duck || sprite_index==spr_duckleft || sprite_index==spr_standup || sprite_index==spr_standupleft))){
if (!place_free(x+0,y+4) || shredder || global.fireanytime){
if (global.fireanytime){
    if (!place_free(x+0,y+4) && place_free(x+0,y+1) && !shredder && sprite_index!=spr_jump && sprite_index!=spr_jumpleft)
        move_contact_solid(270,32);
    }
else{
    if (place_free(x+0,y+1) && !shredder)
        move_contact_solid(270,-1);
    }

//"CLICK"
if (overload==7 && global.weapon==6 && global.passive){
    scr_sound("glo_noammo");
    global.topmessage="THIS WEAPON IS INCOMPATIBLE WITH NANORAGE";
    global.erasetop=0;
    exit;
    }

//"CLICK"
if (overload!=7){
    if (global.weapon==2 && global.ammo2==0){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==3 && global.ammo3==0){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==4 && global.ammo4==0 && !global.passive){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==4 && global.ammo4<=2 && global.passive){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==6 && global.ammo6==0){
        scr_sound("glo_noammo");
        if (global.passive){
            if (string_copy(global.topmessage,1,6)!="Nano +"){
                global.topmessage="INSUFFICIENT AMMUNITION";
                global.erasetop=0;
                }
            }
        else{
            global.topmessage="INSUFFICIENT AMMUNITION";
            global.erasetop=0;
            }
        }
    else if (global.weapon==7 && global.ammo7==0){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==8 && global.ammo8==0 && !global.passive){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==8 && global.ammo8<=2 && global.passive){
        scr_sound("glo_noammo");
        if (ignorenoammomsg==0){
            global.topmessage="INSUFFICIENT AMMUNITION";
            global.erasetop=0;
            }
        }
    else if (global.weapon==9 && global.ammo2==0){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==10 && global.ammo2==0){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==11 && global.ammo3<=2){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==12 && global.ammo4<=2){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==14 && global.ammo6==0){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==15 && global.ammo7<=1){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==16 && global.ammo8==0){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==17 && (global.ammo2==0 || global.ammo3==0 || global.ammo4==0 || global.ammo6==0 || global.ammo7==0 || global.ammo8==0)){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    else if (global.weapon==21 && global.hp==1 && global.armor<=51){
        scr_sound("glo_noammo");
        global.topmessage="INSUFFICIENT ARMOR";
        global.erasetop=0;
        }
    }

if (reloading==0){
firing=1;

if (xcannotfire==1){
global.erasetop=0;
global.topmessage="There's no need to fire your Nanogun here";
exit;
}


//Nanorage
if (overload==7){
    if (global.weapon==2){
        if (global.ammo2==0){
            global.ammo2=1;
            global.ammo2part=9;
            }
        else{
            if (!global.passive)
                global.ammo2part-=1;
            else
                global.ammo2part-=3;
            }
        }
    else if (global.weapon==3){
        global.ammo3+=1;
        }
    else if (global.weapon==4){
        if (!global.passive)
            global.ammo4+=1;
        else
            global.ammo4+=3;
        }
    else if (global.weapon==6){
        if (global.ammo6==0){
            global.ammo6=1;
            global.ammo6part=24;
            }
        else
            global.ammo6part-=1;
        }
    else if (global.weapon==7){
        global.ammo7+=1;
        }
    else if (global.weapon==8){
        if (global.ammo8==0){
            global.ammo8=1;
            global.ammo8part=9;
            }
        else{
            if (!global.passive)
                global.ammo8part-=1;
            else
                global.ammo8+=3;
            }
        }
    else if (global.weapon==9)
        global.ammo2+=1;
    else if (global.weapon==10){
        if (global.ammo2==0){
            global.ammo2=1;
            global.ammo2part=9;
            }
        else
            global.ammo2part-=4;
        }
    else if (global.weapon==11)
        global.ammo3+=3;
    else if (global.weapon==12)
        global.ammo4+=3;
    else if (global.weapon==14){
        if (global.ammo6==0){
            global.ammo6=1;
            global.ammo6part=24;
            }
        else
            global.ammo6part-=1.5;
        }
    else if (global.weapon==15)
        global.ammo7+=2;
    else if (global.weapon==16){
        if (global.ammo8==0){
            global.ammo8=1;
            global.ammo8part=9;
            }
        else
            global.ammo8part-=3;
        }
    }


//-------------------------------
//SHOTGUN / BUSTER GUN / STUN GUN
//-------------------------------
if (global.weapon==1 || (global.weapon==9 && global.ammo2>0)){
if (global.passive){
    scr_sound("glo_bootelec");
    scr_sound("glo_spark");
    }
else
    scr_sound("wea_shot");
scr_firesprite();
scr_nextfv();
alarm[2]=30;
reloader=30;
if (global.passive){
    alarm[2]=90;
    reloader=90;
    }
else if (global.weapon==9){
    alarm[2]=8;
    reloader=1000;
    if (running)
        alarm[4]=8;
    }
reloading=1;
if (global.facing == 0){
    if (global.passive){
        repeat(8)
            (instance_create(x+14+xadjust,y+14+yadjust,obj_pellet)).stun=1;
        }
    else{
        repeat(8)
            instance_create(x+14+xadjust,y+14+yadjust,obj_pellet);
        }
    if (overload==4 && !global.passive)
        instance_create(x+14+xadjust,y+14+yadjust,obj_blastpellet);
    instance_create(x-4+xadjust,y+13+yadjust,obj_shotgunflash);
    if(instance_number(obj_shell)<40 && !global.specialbake){
        repeat(2-global.passive){
            tempid = instance_create(x+11+xadjust,y+11+yadjust,obj_shell);
            tempid.speed = random(2)+5;
            tempid.direction = random(15)+40;
            if (overload==4)
                tempid.alarm[2]=1+random(5);
            tempid.depth=0;
            }
        }
    }
if (global.facing == 1){
    if (global.passive){
        repeat(8)
            (instance_create(x+xadjust,y+14+yadjust,obj_pellet)).stun=1;
        }
    else{
        repeat(8)
            instance_create(x+xadjust,y+14+yadjust,obj_pellet);
        }
    if (overload==4)
        instance_create(x+xadjust,y+14+yadjust,obj_blastpellet);
    instance_create(x+66+xadjust,y+13+yadjust,obj_shotgunflash);
    if(instance_number(obj_shell)<40 && !global.specialbake){
        repeat(2-global.passive){
            tempid = instance_create(x+1+xadjust,y+11+yadjust,obj_shell);
            tempid.speed = random(2)+5;
            tempid.direction = random(15)+130;
            if (overload==4)
                tempid.alarm[2]=1+random(5);
            }
        }
    }
}
if (global.weapon==9 && global.ammo2==0){
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    with (obj_sabot)
        scr_changeweapon(1);
    }
if (global.weapon==9 && global.ammo2>0)
    global.ammo2-=1;
//------------------------------
//MACHINEGUN / IMPACT MACHINEGUN
//------------------------------
if (global.weapon==2){
if (global.ammo2 > 0){
if (global.passive){
    scr_sound("wea_imach");
    scr_sound("exp_spli");
    }
else
    scr_sound("wea_imach");
scr_firesprite();
scr_nextfv();
if (global.passive){
    alarm[2]=8;
    reloader=1000;
    global.ammo2part+=3;
    }
else{
    alarm[2]=3;
    reloader=1000;
    global.ammo2part+=1;
    }
reloading=1;
if (global.ammo2part > 9){
    global.ammo2part=0;
    global.ammo2-=1;
    }
if (global.facing == 0){
    tempid=instance_create(x+14+xadjust,y+14+yadjust,obj_bullet);
    if (global.passive)
        tempid.stagger=1;
    tempid=instance_create(x-5+xadjust,y+14+yadjust,obj_muzzleflash);
    if (instance_number(obj_shell)<40 && !global.specialbake){
        tempid = instance_create(x+11+xadjust,y+11+yadjust,obj_shell);
        tempid.speed = random(2)+5;
        tempid.direction = random(15)+40;
        tempid.depth=0;
        }
    }
if (global.facing == 1){
    tempid=instance_create(x+xadjust,y+14+yadjust,obj_bullet);
    if (global.passive)
        tempid.stagger=1;
    tempid=instance_create(x+50+xadjust,y+14+yadjust,obj_muzzleflash);
    tempid.image_single = random(5)+5;
    if (instance_number(obj_shell)<40 && !global.specialbake){
        tempid = instance_create(x+7+xadjust,y+11+yadjust,obj_shell);
        tempid.speed = random(2)+5;
        tempid.direction = random(15)+130;
        }
    }
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//----------------------------------
//ROCKET LAUNCHER / IMPULSE LAUNCHER
//----------------------------------
if (global.weapon == 3){
if (global.ammo3 > 0){
scr_sound("wea_rock");
scr_firesprite();
scr_nextfv();
if (global.passive){
    alarm[2]=90;
    reloader=90;
    global.ammo3-=1;
    }
else{
    alarm[2]=60;
    reloader=60;
    global.ammo3-=1;
    }
reloading=1;
if (global.facing == 0){
    tempid = instance_create(x+4+xadjust,y+13+yadjust,obj_rocket);
    if (global.passive)
        tempid.speed=-(20+(global.attacklevel));
    else
        tempid.speed=-global.rocketspeed;
    tempid.image_single = 1;
    tempid.ijis=1;
    if (global.passive){
        tempid.impulse=1;
        tempid.sprite_index=spr_impulserocket;
        }
    tempid = instance_create(x-4+xadjust,y+13+yadjust,obj_rocketlaunch);
    tempid.sprite_index = spr_rocketlaunchleft;
    }
if (global.facing == 1){
    tempid = instance_create(x-4+xadjust,y+13+yadjust,obj_rocket);
    if (global.passive)
        tempid.speed=20+(global.attacklevel);
    else
        tempid.speed=global.rocketspeed;
    tempid.image_single = 0;
    tempid.ijis=1;
    if (global.passive){
        tempid.impulse=1;
        tempid.sprite_index=spr_impulserocket;
        }
    instance_create(x+18+xadjust,y+13+yadjust,obj_rocketlaunch);
    }
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//MPFB DEVASTATOR
//--------------------
if (global.weapon == 4 && !global.passive){
    if (global.ammo4 > 0){
        scr_firesprite();
        scr_sound("wea_mpfb");
        scr_nextfv();
        alarm[2]=90;
        reloader=90;
        reloading=1;
        global.ammo4-=1;
        script_execute(scr_shakescreen,2);
        if (global.facing == 0){
            tempid = instance_create(x+8+xadjust,y+13+shredderadjust,obj_mpfb);
            tempid.speed = global.mpfbspeed;
            tempid.direction = 180;
            tempid.ijis=1;
            tempid = instance_create(x+8+xadjust,y+13+shredderadjust,obj_mpfb);
            tempid.speed = global.mpfbspeed-4;
            tempid.direction = 180;
            tempid.ijis=1;
            tempid = instance_create(x+8+xadjust,y+13+shredderadjust,obj_mpfb);
            tempid.speed = global.mpfbspeed-8;
            tempid.direction = 180;
            tempid.ijis=1;
            }
        if (global.facing == 1){
            tempid = instance_create(x+6+xadjust,y+13+shredderadjust,obj_mpfb);
            tempid.speed = global.mpfbspeed;
            tempid.direction = 0;
            tempid.ijis=1;
            tempid = instance_create(x+6+xadjust,y+13+shredderadjust,obj_mpfb);
            tempid.speed = global.mpfbspeed-4;
            tempid.direction = 0;
            tempid.ijis=1;
            tempid = instance_create(x+6+xadjust,y+13+shredderadjust,obj_mpfb);
            tempid.speed = global.mpfbspeed-8;
            tempid.direction = 0;
            tempid.ijis=1;
            }
        //Knockback
        if (recovering==0 && takingpain==0 && shredder==0 && global.strengthlevel<10){
            notech=10;
            visible=1;
            goaroundcyen=1;
            //Nanochaos
            if (overload==1){
                overload=0;
                scr_knockdown(2-global.facing,2,1,1,1);
                overload=1;
                }
            else
                scr_knockdown(2-global.facing,2,1,1,1);
            velocity=3;
            recovering=0;
            takingpain=0;
            }
        }
    else{
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    }
//-----------------------------------------
//RESONANCE DETONATOR / RESONANCE DISRUPTOR
//-----------------------------------------
if (global.weapon == 5){
scr_sound("wea_reso");
scr_firesprite();
scr_nextfv();
alarm[2]=120;
reloader=120;
reloading=1;
if (!shredder){
    xadjust=0;
    yadjust=0;
    }
if (global.passive)
    instance_create(x+6+xadjust,y+15+yadjust,obj_disruptor);
else
    instance_create(x+6+xadjust,y+15+yadjust,obj_detonator);
}
//---------------------------
//PULSE CANNON / PULSE LINKER
//---------------------------
if (global.weapon == 6){
if (global.ammo6 > 0){
scr_firesprite();
scr_nextfv();
alarm[2]=1;
reloader=1000;
reloading=1;
firingpulse=2;
if (global.passive)
    global.ammo6part+=4;
else
    global.ammo6part+=1;
if (global.ammo6part >= 24){
    global.ammo6part=0;
    global.ammo6-=1;
    }
if (global.passive){
    projspd=22+(global.attacklevel*1);
    if (global.facing==0){
        tempid=instance_create(x-11+xadjust+projspd,y+13+yadjust,obj_pulse);
        tempid.speed=-projspd;
        tempid.image_index=21;
        tempid.image_speed=0.75;
        tempid.alarm[0]=10;
        tempid.linker=1;
        tempid=instance_create(x-19+xadjust+projspd,y+13+yadjust,obj_pulse);
        tempid.speed=-projspd;
        tempid.image_index=21;
        tempid.image_speed=0.75;
        tempid.alarm[0]=10;
        tempid.linker=1;
        tempid=instance_create(x-3+xadjust+projspd,y+13+yadjust,obj_pulse);
        tempid.speed=-projspd;
        tempid.image_index=21;
        tempid.image_speed=0.75;
        tempid.alarm[0]=10;
        tempid.linker=1;
        }
    if (global.facing==1){
        tempid=instance_create(x+23+xadjust-projspd,y+13+yadjust,obj_pulse);
        tempid.speed=projspd;
        tempid.image_index=21;
        tempid.image_speed=0.75;
        tempid.alarm[0]=10;
        tempid.linker=1;
        tempid=instance_create(x+31+xadjust-projspd,y+13+yadjust,obj_pulse);
        tempid.speed=projspd;
        tempid.image_index=21;
        tempid.image_speed=0.75;
        tempid.alarm[0]=10;
        tempid.linker=1;
        tempid=instance_create(x+15+xadjust-projspd,y+13+yadjust,obj_pulse);
        tempid.speed=projspd;
        tempid.image_index=21;
        tempid.image_speed=0.75;
        tempid.alarm[0]=10;
        tempid.linker=1;
        }
    }
else{
    if (global.facing==0){
        tempid=instance_create(x+28+xadjust,y+13+yadjust,obj_pulse);
        tempid.speed=-29;
        tempid=instance_create(x+36+xadjust,y+13+yadjust,obj_pulse);
        tempid.speed=-29;
        tempid=instance_create(x+20+xadjust,y+13+yadjust,obj_pulse);
        tempid.speed=-29;
        }
    if (global.facing==1){
        tempid=instance_create(x-9+xadjust,y+13+yadjust,obj_pulse);
        tempid.speed=29;
        tempid=instance_create(x-17+xadjust,y+13+yadjust,obj_pulse);
        tempid.speed=29;
        tempid=instance_create(x-1+xadjust,y+13+yadjust,obj_pulse);
        tempid.speed=29;
        }
    }
}
else{
    if (global.passive){
        if (string_copy(global.topmessage,1,6)!="Nano +"){
            global.topmessage="INSUFFICIENT AMMUNITION";
            global.erasetop=0;
            }
        }
    else{
        global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    }
}
//--------------------
//SHOCKSPLINTER
//--------------------
if (global.weapon==7 && !global.passive){
if (global.ammo7>0){
scr_sound("wea_shoc");
scr_firesprite();
scr_nextfv();
alarm[2]=60;
reloader=60;
reloading=1;
global.ammo7-=1;
if (global.facing==0){
    tempid=instance_create(x+16+xadjust,y+13+yadjust,obj_shock);
    tempid.speed=-global.shockspeed;
    tempid.ijis=1;
    tempid=instance_create(x+xadjust,y+14+yadjust,obj_shockspark);
    tempid.speed=-3;
    }
if (global.facing==1){
    tempid=instance_create(x+xadjust,y+13+yadjust,obj_shock);
    tempid.speed=global.shockspeed;
    tempid.ijis=1;
    tempid=instance_create(x+16+xadjust,y+14+yadjust,obj_shockspark);
    tempid.speed=3;
    }
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//-----------------------------
//CYCLIC FUSION IGNITION SYSTEM
//-----------------------------
if (global.weapon == 8 && !global.passive){
if (global.ammo8 > 0){
scr_firesprite();
scr_nextfv();
alarm[2]=2;
reloader=1000;
reloading=1;
global.ammo8part+=1;
if (global.ammo8part > 9){
global.ammo8part=0;
global.ammo8-=1;
}
if (global.facing == 0)
    instance_create(x+15+xadjust,y+14+yadjust,obj_cfistrace);
if (global.facing == 1)
    instance_create(x-3+xadjust,y+14+yadjust,obj_cfistrace);
script_execute(scr_shakescreen,1);
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//SPLINTERGUN
//--------------------
if (global.weapon == 10){
if (global.ammo2 > 0){
scr_sound("wea_spli");
scr_firesprite();
scr_nextfv();
alarm[2]=3;
reloader=1000;
reloading=1;
global.ammo2part+=4;
if (global.ammo2part > 9){
global.ammo2part=0;
global.ammo2-=1;
}
if (global.facing==0){
    tempid=instance_create(x+18+xadjust,y+13+yadjust,obj_shockball);
    tempid.ijis=1;
    tempid.speed=25;
    tempid.direction=180;
    tempid.dud=0;
    tempid=instance_create(x+xadjust,y+14+yadjust,obj_shockspark);
    tempid.speed=-3;
    if (!global.specialbake)
        (instance_create(x+11+xadjust,y+11+yadjust,obj_shockshell)).short=1;
    }
if (global.facing==1){
    tempid=instance_create(x-4+xadjust,y+13+yadjust,obj_shockball);
    tempid.ijis=1;
    tempid.speed=25;
    tempid.direction=0;
    tempid.dud=0;   
    tempid=instance_create(x+16+xadjust,y+14+yadjust,obj_shockspark);
    tempid.speed=3;
    if (!global.specialbake){
        tempid=instance_create(x+1+xadjust,y+11+yadjust,obj_shockshell);
        tempid.hspeed=-tempid.hspeed;
        tempid.short=1;
        }
    }
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//SPREAD ROCKETS
//--------------------
if (global.weapon == 11){
if (global.ammo3 > 2){
    scr_sound("wea_rock");
    scr_firesprite();
    scr_nextfv();
    alarm[2]=90;
    reloader=90;
    reloading=1;
    global.ammo3-=3;
    if (global.facing == 0){
        tempid = instance_create(x+8+xadjust,y+13+shredderadjust,obj_rocket);
        tempid.ijis=1;
        tempid.speed = -global.rocketspeed;
        tempid.image_single = 1;
        tempid = instance_create(x+8+xadjust,y+13+shredderadjust,obj_rocket);
        tempid.ijis=1;
        tempid.speed = global.rocketspeed-2;
        tempid.direction = 174;
        tempid.image_single = 1;
        tempid = instance_create(x+8+xadjust,y+13+shredderadjust,obj_rocket);
        tempid.ijis=1;
        tempid.speed = global.rocketspeed-4;
        tempid.direction = 186;
        tempid.image_single = 1;
        tempid = instance_create(x-4+xadjust,y+13+shredderadjust,obj_rocketlaunch);
        tempid.sprite_index = spr_rocketlaunchleft;
        }
    if (global.facing == 1){
        tempid = instance_create(x-8+xadjust,y+13+shredderadjust,obj_rocket);
        tempid.ijis=1;
        tempid.speed = global.rocketspeed;
        tempid.image_single = 0;
        tempid = instance_create(x-8+xadjust,y+13+shredderadjust,obj_rocket);
        tempid.ijis=1;
        tempid.speed = global.rocketspeed-2;
        tempid.direction = 6;
        tempid.image_single = 0;
        tempid = instance_create(x-8+xadjust,y+13+shredderadjust,obj_rocket);
        tempid.ijis=1;
        tempid.speed = global.rocketspeed-4;
        tempid.direction = -6;
        tempid.image_single = 0;
        instance_create(x+18+xadjust,y+13+shredderadjust,obj_rocketlaunch);
        }
    }
}
//--------------------
//NUKE
//--------------------
if (global.weapon==12){
if (global.ammo4 > 2){
scr_sound("exp_nuke");
scr_firesprite();
scr_nextfv();
alarm[2]=90;
reloader=90;
reloading=1;
global.ammo4-=3;
script_execute(scr_shakescreen,5);
script_execute(scr_nuke);
instance_create(x+6,y+15,obj_harmlessexplosion);
instance_create(x,y,obj_nuke);
}
else{
    if (overload==7)
        global.topmessage="NANOWEAPON TEMPORARILY JAMMED";
    else
        global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//RESONANCE REFLECTOR
//--------------------
if (global.weapon == 13){
scr_sound("wea_reso");
scr_firesprite();
scr_nextfv();
alarm[2]=120;
reloader=120;
reloading=1;
if (!shredder){
    xadjust=0;
    yadjust=0;
    }
instance_create(x+6+xadjust,y+15+yadjust,obj_reflector);
}
//--------------------
//HYPER PULSE
//--------------------
if (global.weapon == 14){
if (global.ammo6 > 0){
scr_firesprite();
scr_nextfv();
alarm[2]=1;
reloader=1000;
reloading=1;
firingpulse=2;
global.ammo6part+=1.5;
if (global.ammo6part >= 24){
global.ammo6part=0;
global.ammo6-=1;
}
if (global.facing == 0){
repeat(4){
    tempid=instance_create(x+20+xadjust,y+13+yadjust+(random(21)-10),obj_pulse);
    tempid.speed=30+random(5);
    tempid.direction=random(20)+170;
    tempid.hyper=1;
    tempid.image_index=14;
    }
    }
if (global.facing == 1){
repeat(4){
    tempid = instance_create(x-7+xadjust,y+13+yadjust+(random(21)-10),obj_pulse);
    tempid.speed = 30+random(5);
    tempid.direction = random(20)-10;
    tempid.hyper = 1;
    tempid.image_index = 7;
    }
    }
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//PLASMA CANNON
//--------------------
if (global.weapon == 15){
if (global.ammo7 > 1){
scr_sound("wea_plas");
scr_shakescreen(3);
scr_firesprite();
scr_nextfv();
alarm[2]=75;
reloader=75;
reloading=1;
global.ammo7-=2;
if (global.facing == 0)
    instance_create(x+2+xadjust,y+13+yadjust,obj_plasmatrace);
if (global.facing == 1)
    instance_create(x+11+xadjust,y+13+yadjust,obj_plasmatrace);
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//VELOCITHOR V2-10
//--------------------
if (global.weapon == 16){
if (global.ammo8 > 0){
scr_firesprite();
scr_nextfv();
alarm[2]=2;
reloader=1000;
reloading=1;
global.ammo8part+=3;
if (global.ammo8part>9){
global.ammo8part=0;
global.ammo8-=1;
}
if (global.facing==0){
    instance_create(x-16+xadjust,y+14+yadjust,obj_thortrace);
    repeat(2){
        tempid=instance_create(x-14+xadjust,y+14+yadjust,obj_smokepoint);
        tempid.direction=random(20);
        tempid.speed=20+random(20);
        tempid.massive=1;
        tempid.alarm[0]=8+random(5);
        }
    instance_create(x-1+xadjust,y+14+yadjust,obj_thorspark);
    }
if (global.facing==1){
    instance_create(x+31+xadjust,y+14+yadjust,obj_thortrace);
    repeat(2){
        tempid=instance_create(x+27+xadjust,y+14+yadjust,obj_smokepoint);
        tempid.direction=random(20)+160;
        tempid.speed=20+random(20);
        tempid.massive=1;
        tempid.alarm[0]=8+random(5);
        }
    instance_create(x+15+xadjust,y+14+yadjust,obj_thorspark);
    }
script_execute(scr_shakescreen,2);
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//BANANA GUN
//--------------------
if (global.weapon==17){
if (global.ammo2>0 && global.ammo3>0 && global.ammo4>0 && global.ammo6>0 && global.ammo7>0 && global.ammo8>0){
scr_firesprite();
scr_nextfv();
scr_sound("wea_banana");
alarm[2]=120;
reloader=120;
reloading=1;
global.ammo2-=1;
global.ammo3-=1;
global.ammo4-=1;
global.ammo6-=1;
global.ammo7-=1;
global.ammo8-=1;
if (global.facing == 0){
    tempid=instance_create(x+2+xadjust,y+13+shredderadjust,obj_banana);
    tempid.speed=10;
    tempid.direction=165;
    tempid.image_speed=-1;
    }
if (global.facing == 1){
    tempid=instance_create(x+11+xadjust,y+13+shredderadjust,obj_banana);
    tempid.speed=10;
    tempid.direction=15;
    }
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//-----------------------
//NULL DRIVER PROTOTYPE
//-----------------------
if (global.weapon==20){
if (global.really){
    global.topmessage="The Null driver cannot be fired on reallyjoel's dad difficulty";
    global.erasetop=0;
    }
else{
if (global.ammo2>=0){
    obj_sabot.firednulldriver=1;
    scr_sound("glo_cracktick");
    alarm[2]=30;
    reloader=30;
    reloading=1;
    global.seconds=3599;
    global.points=99;
    if (global.assimilatelevel<10)
        maxammo=global.assimilatebase+global.assimilatelevel*global.assimilatesize;
    else
        maxammo=99;
    global.ammo2=maxammo;
    global.ammo3=maxammo;
    global.ammo4=maxammo;
    global.ammo6=maxammo;
    global.ammo7=maxammo;
    global.ammo8=maxammo;
    instance_activate_object(obj_warpback);
    with (obj_warpback)
        instance_destroy();
    with (all){
        temprand=random(1);
        if (temprand<0.3 && !iji && hp<=0 && visible){
            if (mask_index==-1)
                tempmask=sprite_index;
            else
                tempmask=-1;
            spr1=floor(random(920));
            while (!sprite_exists(spr1))
                spr1=floor(random(920));
            sprite_index=spr1;
            if (tempmask!=-1)
                mask_index=tempmask;
            image_single=random(32);
            }
        }
    repeat(50){
        backg1=floor(random(150));
        backg2=floor(random(150));
        while (!background_exists(backg1)){backg1=floor(random(150));}
        while (!background_exists(backg2)){backg2=floor(random(150));}
        background_assign(backg1,backg2);
        }
    with (obj_alliedenemy){
        temprand=floor(random(10));
        if (enemytype<=15 && !krotera && !asha && !iosa && !ansaksie && !proxima && !nullresistant){
            if (temprand==0){
                repeat(5){
                    tempid=instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_paper);
                    with (tempid){
                        cyc=0;
                        state=1;
                        y-=2;
                        vspeed=-(3+random(5));
                        hspeed=-6+random(12);
                        maxspeed=1+random(0.5);
                        gr=maxspeed*0.1;
                        sprite_index=spr_paperfly;
                        image_index=floor(random(18));
                        image_speed=0.4+random(0.4);
                        }
                    }
                instance_destroy();
                }
            else if (temprand==1){
                instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_screen);
                instance_destroy();
                }
            else if (temprand==2){
                tempid=instance_create(bbox_left+((bbox_right-bbox_left)/2)-32, bbox_top+((bbox_bottom-bbox_top)/2), obj_crackbox);
                tempid.security=1;
                temprand=floor(random(4))
                if (temprand==0)
                    tempid.prize=obj_skysmasher;
                else if (temprand==1)
                    tempid.prize=obj_emptyshredder;
                else if (temprand==2)
                    tempid.prize=obj_blit;
                else if (temprand==3)
                    tempid.prize=obj_dan;
                instance_destroy();
                }
            else if (temprand==3){
                (instance_create(bbox_left+((bbox_right-bbox_left)/2)-16, bbox_top+((bbox_bottom-bbox_top)/2)-32, obj_terminal)).trigger=41;
                instance_destroy();
                }
            else if (temprand==4){
                repeat(30){
                    tempid=instance_create(bbox_left+((bbox_right-bbox_left)/2)-16, bbox_top+((bbox_bottom-bbox_top)/2)-32, obj_shell);
                    tempid.direction=random(360);
                    tempid.speed=random(25);
                    }
                instance_destroy();
                }
            else{
                (instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_shockexplosion)).ijis=1;
                instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_explosioncenter);
                }
            }
        else{
            if (enemytype!=16 || vulnerable){
                (instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_shockexplosion)).ijis=1;
                instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_explosioncenter);
                }
            }
        }
    with (obj_blit){
        instance_create(x,y,obj_komatosplat);
        instance_create(x,y-8,obj_xp4);
        instance_create(x-8,y-8,obj_xp4);
        instance_create(x+8,y-8,obj_xp4);
        instance_create(x-4,y-16,obj_xp4);
        instance_create(x+4,y-16,obj_xp4);
        instance_destroy();
        scr_sound("glo_reflect")
        }
    with (obj_turret)
        weapon=7;
    with (obj_shape){
        bone+=1;
        if (bone>9)
            bone=0;
        }
    with (obj_tor){
        if (hp>2 && vulnerable)
            hp=floor(hp*0.66);
        }
    obj_tor.wty=30;
    }
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
}
//--------------------
//MASSACRE
//--------------------
if (global.weapon==21){
if (global.hp>1 || global.armor>51){
global.armor-=50;
if (global.armor<=1){
    global.armor+=100;
    global.hp-=1;
    }
obj_sabot.firedmassacre=1;
scr_sound("wea_nuke");
scr_sound("wea_plas");
scr_firesprite();
scr_nextfv();
alarm[2]=75;
reloader=75;
reloading=1;
(instance_create(x,y,obj_whiteblanket)).alarm[0]=2;
scr_shakescreen(4);
if (global.facing==1){
    repeat(6)
        (instance_create(x+20,y+15,obj_massprojectile)).dir=1;
    }
if (global.facing==0){
    repeat(6)
        (instance_create(x-10,y+15,obj_massprojectile)).dir=0;
    }
}
else{
    global.topmessage="INSUFFICIENT ARMOR";
    global.erasetop=0;
    }
}
//--------------------
//MPPB NEUTRALIZER
//--------------------
if (global.weapon == 4 && global.passive){
    if (global.ammo4 > 2){
        scr_sound("exp_mpfb");
        scr_sound("glo_electrocute");
        scr_firesprite();
        scr_nextfv();
        alarm[2]=120;
        reloader=120;
        reloading=1;
        global.ammo4-=3;
        script_execute(scr_shakescreen,3);
        script_execute(scr_neutralizer);
        (instance_create(x,y,obj_neutralizer)).maxcycle=50+floor(10*global.attacklevel);
        }
    else{
        if (overload==7)
            global.topmessage="NANOWEAPON TEMPORARILY JAMMED";
        else
            global.topmessage="INSUFFICIENT AMMUNITION";
        global.erasetop=0;
        }
    }
//--------------------
//SHOCK BARRIER
//--------------------
if (global.weapon == 7 && global.passive){
if (global.ammo7 > 0){
    global.ammo7-=1;
    scr_sound("ext_barrier");
    scr_firesprite();
    scr_nextfv();
    alarm[2]=60;
    reloader=60;
    reloading=1;
    if (!shredder){
        xadjust=0;
        yadjust=0;
        }
    with (obj_shockbarrier){
        instance_create(x,y,obj_barrierexplo);
        //scr_sound("ext_barrierexplo")
        instance_destroy();
        }
    if (global.facing==0){
        tempid=instance_create(x+6-32+xadjust,y+29+yadjust,obj_shockbarrier);
        with (tempid){
            repeat(8){
                if (!place_free(x,y) || place_meeting(x,y,obj_meta))
                    x+=4;
                }
            }
        instance_create(obj_shockbarrier.x,obj_shockbarrier.y,obj_barrierexplo);
        }
    else{
        tempid=instance_create(x+6+32+xadjust,y+29+yadjust,obj_shockbarrier);
        with (tempid){
            repeat(8){
                if (!place_free(x,y) || place_meeting(x,y,obj_meta))
                    x-=4;
                }
            }
        instance_create(obj_shockbarrier.x,obj_shockbarrier.y,obj_barrierexplo);
        }
    }
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//-----------------------------
//CHAIN FRACTAL INJECTION SHELL
//-----------------------------
if (global.weapon == 8 && global.passive && obj_chaintracer.drawme){
if (global.ammo8 > 2){
global.ammo8-=3;
scr_sound("glo_reflect");
scr_sound("glo_cracktick");
scr_firesprite();
scr_nextfv();
alarm[2]=60;
reloader=60;
reloading=1;
tempid=instance_create(obj_chaintracer.x,obj_chaintracer.y,obj_barrierexplo);
tempid.sprite_index=spr_chainproj;
tempid.alarm[0]=8;
targetid=obj_chaintracer.targetid;
ignorenoammomsg=30;
if (obj_chaintracer.targettype==0){
    global.ignorestation=90;
    global.topmessage="Injection failed - no target found";
    global.erasetop=0;
    }
else if (obj_chaintracer.targettype==1){
    if (targetid.angry==0 && targetid.dead==0){
        tempid=instance_create(obj_chaintracer.x,obj_chaintracer.y,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(obj_chaintracer.x,obj_chaintracer.y,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    if (targetid.dead){
        global.ignorestation=90;
        global.topmessage="Unable to connect to nanofield; subject is dead";
        global.erasetop=0;
        }
    else if (global.cracklevel>=targetid.security && targetid.enemytype!=20){
        if (targetid.cracked){
            global.ignorestation=90;
            global.topmessage="Subject has already been cracked";
            global.erasetop=0;
            }
        else{
            targetid.crackmark=1;
            scr_cracksuccess();
            }
        }
    else{
        scr_sound("glo_crackfail");
        global.ignorestation=90;
        global.erasetop=0;
        if (targetid.krotera==1) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack Elite Krotera";
        else if (targetid.asha==1) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack Assassin Asha";
        else if (targetid.enemytype==17) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack Sentinel Proxima";
        else if (targetid.enemytype==14 && targetid.annihilatorbeta) global.topmessage="Unable to connect; subject is inactive";
        else if (targetid.enemytype==14 && targetid.iosa) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack Annihilator Iosa";
        else if (targetid.enemytype==20) global.topmessage="Injection shell rejected by target Nanofield";
        else if (targetid.enemytype==16) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack General Tor";
        else if (targetid.enemytype==0) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Tasen Scout";
        else if (targetid.enemytype==1 && targetid.golden) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack Yukabacera";
        else if (targetid.enemytype==1 && !targetid.golden) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Tasen Soldier";
        else if (targetid.enemytype==2) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Tasen Commander";
        else if (targetid.enemytype==3) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Tasen Elite";
        else if (targetid.enemytype==5) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Tasen Shredder";
        else if (targetid.enemytype==10) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Komato Trooper";
        else if (targetid.enemytype==11) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Komato Berserker";
        else if (targetid.enemytype==12) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Komato Assassin";
        else if (targetid.enemytype==13) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Komato Beast";
        else if (targetid.enemytype==14) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Komato Annihilator";
        else if (targetid.enemytype==15) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Komato Skysmasher";
        else if (targetid.enemytype==18) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Mobile power core";
        }
    }
else if (obj_chaintracer.targettype==2){
    if (targetid.angry==0){
        tempid=instance_create(obj_chaintracer.x,obj_chaintracer.y,obj_visionchecke)
        tempid.direction=0;
        tempid.speed=16;
        tempid=instance_create(obj_chaintracer.x,obj_chaintracer.y,obj_visionchecke)
        tempid.direction=180;
        tempid.speed=16;
        }
    if (global.cracklevel>=targetid.security){
        targetid.crackmark=1;
        scr_cracksuccess();
        }
    else{
        scr_sound("glo_crackfail");
        global.ignorestation=90;
        global.erasetop=0;
        if (targetid.weapon==0) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Machinegun Turret";
        else if (targetid.weapon==1) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Rocket Turret";
        else if (targetid.weapon==2) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Spread Turret";
        else if (targetid.weapon==3) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Devastator Turret";
        else if (targetid.weapon==4) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Shock Turret";
        else if (targetid.weapon==5) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Splinter Turret";
        else if (targetid.weapon==6) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Plasma Turret";
        else if (targetid.weapon==7) global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack a Corrupted Turret";
        }
    }
else if (obj_chaintracer.targettype==3 || obj_chaintracer.targettype==4){
    if (global.cracklevel>=targetid.security){
        targetid.crackmark=1;
        scr_cracksuccess();
        }
    else{
        scr_sound("glo_crackfail");
        global.ignorestation=90;
        global.erasetop=0;
        if (obj_chaintracer.targettype==3)
            global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack this Security box";
        else if (obj_chaintracer.targettype==4)
            global.topmessage="You need a Crack skill of "+string(targetid.security)+" to crack this Security door";
        }
    }
else if (obj_chaintracer.targettype==5){
    scr_sound("glo_crackfail");
    global.ignorestation=90;
    global.erasetop=0;
    if (targetid.dead)
        global.topmessage="Structure is inoperational";
    else
        global.topmessage="You need a Crack level of 30 to crack this structure";
    }
}
else{
    global.topmessage="INSUFFICIENT AMMUNITION";
    global.erasetop=0;
    }
}
//--------------------
//END OF WEAPONS
//--------------------
//Improved autoloading
if (alarm[2]>=30 && global.attacklevel==10){
    alarm[2]=floor(alarm[2]*0.8);
    reloader=alarm[2];
    }
}
}
}
}//(indentation on vacation)
}
}
}
else{
    if (room==rom_sector1){
        global.topmessage="NANOWEAPON MALFUNCTION";
        global.erasetop=0;
        }
    }
#define scr_prevweap
//more laziness -_-
if (global.weapon==1 || global.weapon==9){
    if ((global.weapon20 || global.weapon21) && !global.passive){ scr_changeweapon(10); scr_changeweapon(10);}
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==20){
    if (global.weapon21) scr_changeweapon(10);
    else if (global.weapon17) scr_changeweapon(9);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==21){
    if (global.weapon17) scr_changeweapon(9);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==17){
    if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==8 || global.weapon==16){
    if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==7 || global.weapon==15){
    if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==6 || global.weapon==14){
    if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==5 || global.weapon==13){
    if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==4 || global.weapon==12){
    if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==3 || global.weapon==11){
    if (global.weapon2) scr_changeweapon(2);
    else scr_changeweapon(1);
    }
else if (global.weapon==2 || global.weapon==10){
    scr_changeweapon(1);
    }

#define scr_specialweap
//marginally less lazy >_>
if (!global.passive){
    if (global.weapon==1 || global.weapon==9)
        scr_changeweapon(1);
    else if (global.weapon==2 || global.weapon==10)
        scr_changeweapon(2);
    else if (global.weapon==3 || global.weapon==11)
        scr_changeweapon(3);
    else if (global.weapon==4 || global.weapon==12)
        scr_changeweapon(4);
    else if (global.weapon==5 || global.weapon==13)
        scr_changeweapon(5);
    else if (global.weapon==6 || global.weapon==14)
        scr_changeweapon(6);
    else if (global.weapon==7 || global.weapon==15)
        scr_changeweapon(7);
    else if (global.weapon==8 || global.weapon==16)
        scr_changeweapon(8);
    else if (global.weapon==17)
        scr_changeweapon(9);
    else if (global.weapon==20 || global.weapon==21)
        scr_changeweapon(10);
    }
#define scr_nextweap
//the lazy way :o
if (global.weapon==1 || global.weapon==9){
    if (global.weapon2) scr_changeweapon(2);
    else if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    }
else if (global.weapon==2 || global.weapon==10){
    if (global.weapon3) scr_changeweapon(3);
    else if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==3 || global.weapon==11){
    if (global.weapon4) scr_changeweapon(4);
    else if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==4 || global.weapon==12){
    if (global.weapon5) scr_changeweapon(5);
    else if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==5 || global.weapon==13){
    if (global.weapon6) scr_changeweapon(6);
    else if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==6 || global.weapon==14){
    if (global.weapon7) scr_changeweapon(7);
    else if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==7 || global.weapon==15){
    if (global.weapon8) scr_changeweapon(8);
    else if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==8 || global.weapon==16){
    if (global.weapon17 && !global.passive) scr_changeweapon(9);
    else if (global.weapon21 && !global.passive) scr_changeweapon(10);
    else if (global.weapon20 && !global.passive) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==17){
    if (global.weapon21 || global.weapon20) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==21){
    if (global.weapon20) scr_changeweapon(10);
    else scr_changeweapon(1);
    }
else if (global.weapon==20){
    scr_changeweapon(1);
    }
#define scr_pressfirekey
scr_getup();
//Trapmine
if (global.sector==8){
    if ((sprite_index==spr_duck || sprite_index==spr_duckleft) && (image_index>3 || image_single==5)){
        if (place_meeting(x,y,obj_teledest) && trapmine){
            with (obj_teledest){
                if (place_meeting(x,y,obj_iji)){
                    if (dest!=3){
                        obj_iji.trapmine=0;
                        (instance_create(x+10,y+24,obj_armed_trapmine)).dest=dest;
                        global.erasetop=0;
                        global.topmessage="Trapmine placed";
                        global.ignorestation=60;
                        }
                    else{
                        global.erasetop=0;
                        global.topmessage="Cannot place Trapmine - teleporter destination security too high";
                        global.ignorestation=60;
                        }
                    }
                }
            }
        }
    }
#define scr_enterkey
//Passive / Standard mode
if (!obj_sabot.playinghero3d && !obj_sabot.pause){
if (!global.ignoreall || place_meeting(x,y+32,obj_lift) || alwayschangeweapon){
    if (global.passive==0){
        global.passive=1;
        global.killdata[799]=1;
        global.erasetop=0;
        global.topmessage="Nanogun switched to Passive mode";
        global.ignorestation=60;
        if (global.weapon>=9 && global.weapon<=16){
            temppweap=global.weapon-8;
            global.weapon=0;
            scr_changeweapon(temppweap);
            }
        else if (global.weapon>=17){
            global.weapon=0;
            scr_changeweapon(1);
            }
        else{
            temppweap=global.weapon;
            global.weapon=0;
            scr_changeweapon(temppweap);
            }
        }
    else if (global.passive==1){
        global.passive=0;
        global.killdata[799]=0;
        global.erasetop=0;
        global.topmessage="Nanogun switched to Active mode";
        global.ignorestation=60;
        temppweap=global.weapon;
        global.weapon=0;
        scr_changeweapon(temppweap);
        }
    }
}
#define scr_save
//Argument0 is slot (1-5), if 0 it saves only the keymaps
if (file_exists("ijisave.sav")){
var tempstring;
var tempweapons;
var fileid;
fileid=file_text_open_read("ijisave.sav");
tempstring[1]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[2]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[3]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[4]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[5]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[6]=file_text_read_string(fileid);
file_text_close(fileid);

//Save file
if (argument0>=1 && argument0<=5){
tempstring[argument0]="1";
tempstring[argument0]+=string(global.sector);
if (global.specialtrigger16)
    tempstring[argument0]+="3";
else
    tempstring[argument0]+=string(global.difficulty);
if (global.level<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.level);
if (global.points<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.points);
if (global.weapon2) tempweapons+=1;
if (global.weapon3) tempweapons+=2;
if (global.weapon4) tempweapons+=4;
if (global.weapon5) tempweapons+=8;
if (global.weapon6) tempweapons+=16;
if (global.weapon7) tempweapons+=32;
if (global.weapon8) tempweapons+=64;
if (global.weapon9) tempweapons+=128;
if (global.weapon10) tempweapons+=256;
if (global.weapon11) tempweapons+=512;
if (global.weapon12) tempweapons+=1024;
if (global.weapon13) tempweapons+=2048;
if (global.weapon14) tempweapons+=4096;
if (global.weapon15) tempweapons+=8192;
if (global.weapon16) tempweapons+=16384;
if (global.weapon17) tempweapons+=32768;
if (tempweapons<10000)
    tempstring[argument0]+=("0");
if (tempweapons<1000)
    tempstring[argument0]+=("0");
if (tempweapons<100)
    tempstring[argument0]+=("0");
if (tempweapons<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(tempweapons);
tempstring[argument0]+=string(global.healthlevel-1);
tempstring[argument0]+=string(global.attacklevel-1);
tempstring[argument0]+=string(global.assimilatelevel-1);
tempstring[argument0]+=string(global.strengthlevel-1);
tempstring[argument0]+=string(global.cracklevel-1);
tempstring[argument0]+=string(global.tasenlevel-1);
tempstring[argument0]+=string(global.komatolevel-1);

specialtriggerb=global.specialtriggerb1+(global.specialtriggerb2*2)+(global.specialtriggerb4*4)
tempstring[argument0]+=string(specialtriggerb);

tempstring[argument0]+=string(global.armorlevel-1+global.specialtriggerc*4);
if (global.ammo2<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.ammo2);
if (global.ammo3<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.ammo3);
if (global.ammo4<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.ammo4);
if (global.ammo6<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.ammo6);
if (global.ammo7<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.ammo7);
if (global.ammo8<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.ammo8);

if (global.totkills<100)
    tempstring[argument0]+=("0");
if (global.totkills<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.totkills);
if (global.totdamage<100)
    tempstring[argument0]+=("0");
if (global.totdamage<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.totdamage);
if (global.totcracks<100)
    tempstring[argument0]+=("0");
if (global.totcracks<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.totcracks);
if (global.totfails<100)
    tempstring[argument0]+=("0");
if (global.totfails<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.totfails);
if (global.xp<100)
    tempstring[argument0]+=("0");
if (global.xp<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.xp);
//Specialtriggers
specialtrigger=global.specialtrigger1+(global.specialtrigger2*2)+(global.specialtrigger4*4)+(global.specialtrigger8*8)+(global.specialtrigger16*16)+(global.specialtrigger32*32);
if (specialtrigger<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(specialtrigger);
//Total time in seconds
if (global.totalseconds<10000)
    tempstring[argument0]+=("0");
if (global.totalseconds<1000)
    tempstring[argument0]+=("0");
if (global.totalseconds<100)
    tempstring[argument0]+=("0");
if (global.totalseconds<10)
    tempstring[argument0]+=("0");
tempstring[argument0]+=string(global.totalseconds);
}


//Save keymap, options, posters+extras and records
tempstring[6]=chr(global.kickkey)+chr(global.firekey)+chr(global.usekey)+chr(global.weap5key)+chr(global.weap6key)+chr(global.weap7key)+chr(global.weap8key);
tempstring[6]+=string(global.noshake+global.nogamma*2+global.noblood*4); //Bake in nogamma and noblood
tempstring[6]+=string(global.novoice+global.specialbake*2) //Bake in lowdetail
tempstring[6]+=string(global.nosound)+string(global.nomusic)+string(global.hidetime);
temp=global.poster1+(global.poster2*2)+(global.poster3*4)+(global.poster4*8)+(global.poster5*16)+(global.poster6*32)+(global.poster7*64)+(global.poster8*128)+(global.poster9*256)+(global.poster10*512)+(global.extras1*1024)+(global.extras2*2048)+(global.extras3*4096)+(global.extras4*8192)+(global.extras5*16384)+(global.extras6*32768)+(global.extras7*65536)+(global.extras8*131072);
if (temp<100000)
    tempstring[6]+="0";
if (temp<10000)
    tempstring[6]+="0";
if (temp<1000)
    tempstring[6]+="0";
if (temp<100)
    tempstring[6]+="0";
if (temp<10)
    tempstring[6]+="0";
tempstring[6]+=string(temp);

//Records
tempstring[6]+=string(global.nhours);
if (global.nminutes<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.nminutes);
if (global.nseconds<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.nseconds);

tempstring[6]+=string(global.hhours);
if (global.hminutes<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.hminutes);
if (global.hseconds<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.hseconds);

tempstring[6]+=string(global.ehours);
if (global.eminutes<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.eminutes);
if (global.eseconds<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.eseconds);

tempstring[6]+=string(global.uhours);
if (global.uminutes<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.uminutes);
if (global.useconds<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.useconds);

if (global.maxribbons<10)
    tempstring[6]+="0";
tempstring[6]+=string(global.maxribbons);

temp=global.sds1+(global.sds2*2)+(global.sds3*4)+(global.sds4*8)+(global.sds5*16)+(global.sds6*32)+(global.sds7*64)+(global.sds8*128)+(global.sds9*256)+(global.sds10*512);
if (temp<1000)
    tempstring[6]+="0";
if (temp<100)
    tempstring[6]+="0";
if (temp<10)
    tempstring[6]+="0";
tempstring[6]+=string(temp);

//Hidden skills
temp=0;
if (global.hiddenskill1) temp+=1;
if (global.hiddenskill2) temp+=2;
if (global.hiddenskill3) temp+=4;
tempstring[6]+=string(temp);

//Extended weapon cycling keys
tempstring[6]+=chr(global.prevkey);
tempstring[6]+=chr(global.specialkey);
tempstring[6]+=chr(global.nextkey);

//Store
fileid=file_text_open_write("ijisave.sav");
file_text_write_string(fileid,tempstring[1]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[2]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[3]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[4]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[5]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[6]);
file_text_writeln(fileid);
file_text_close(fileid);

scr_writesum();

//Save killstring
if (argument0>=1 && argument0<=5)
    scr_savekills(argument0);
}
#define scr_loadkeys
if (file_exists("ijisave.sav")){
fileid=file_text_open_read("ijisave.sav");
file_text_readln(fileid);
file_text_readln(fileid);
file_text_readln(fileid);
file_text_readln(fileid);
file_text_readln(fileid);
tempkeys=file_text_read_string(fileid);
file_text_close(fileid);

global.kickkey=ord(string_char_at(tempkeys,1));
global.firekey=ord(string_char_at(tempkeys,2));
global.usekey=ord(string_char_at(tempkeys,3));
global.weap5key=ord(string_char_at(tempkeys,4));
global.weap6key=ord(string_char_at(tempkeys,5));
global.weap7key=ord(string_char_at(tempkeys,6));
global.weap8key=ord(string_char_at(tempkeys,7));
//Noshake is baked with nogamma and noblood
tempext=real(string_char_at(tempkeys,8));
if (tempext>=4){
    global.noblood=1;
    tempext-=4;
    }
if (tempext>=2){
    global.nogamma=1;
    tempext-=2;
    }
if (tempext==1)
    global.noshake=1;
//Novoice is baked with SPECIALBAKE (detaillevel)
tempext=real(string_char_at(tempkeys,9));
if (tempext>=2){
    global.specialbake=1;
    tempext-=2;
    }
if (tempext==1)
    global.novoice=1;
global.nosound=real(string_char_at(tempkeys,10));
global.nomusic=real(string_char_at(tempkeys,11));
global.hidetime=real(string_char_at(tempkeys,12));

temp=real(string_copy(tempkeys,13,6));
if (temp>=131072){
    global.extras8=1;
    temp-=131072;
    }
if (temp>=65536){
    global.extras7=1;
    temp-=65536;
    }
if (temp>=32768){
    global.extras6=1;
    temp-=32768;
    }
if (temp>=16384){
    global.extras5=1;
    temp-=16384;
    }
if (temp>=8192){
    global.extras4=1;
    temp-=8192;
    }
if (temp>=4096){
    global.extras3=1;
    temp-=4096;
    }
if (temp>=2048){
    global.extras2=1;
    temp-=2048;
    }
if (temp>=1024){
    global.extras1=1;
    temp-=1024;
    }

if (temp>=512){
    global.poster10=1;
    temp-=512;
    }
if (temp>=256){
    global.poster9=1;
    temp-=256;
    }
if (temp>=128){
    global.poster8=1;
    temp-=128;
    }
if (temp>=64){
    global.poster7=1;
    temp-=64;
    }
if (temp>=32){
    global.poster6=1;
    temp-=32;
    }
if (temp>=16){
    global.poster5=1;
    temp-=16;
    }
if (temp>=8){
    global.poster4=1;
    temp-=8;
    }
if (temp>=4){
    global.poster3=1;
    temp-=4;
    }
if (temp>=2){
    global.poster2=1;
    temp-=2;
    }
if (temp==1)
    global.poster1=1;

//Records
global.nhours=real(string_char_at(tempkeys,19));
global.nminutes=real(string_copy(tempkeys,20,2));
global.nseconds=real(string_copy(tempkeys,22,2));

global.hhours=real(string_char_at(tempkeys,24));
global.hminutes=real(string_copy(tempkeys,25,2));
global.hseconds=real(string_copy(tempkeys,27,2));

global.ehours=real(string_char_at(tempkeys,29));
global.eminutes=real(string_copy(tempkeys,30,2));
global.eseconds=real(string_copy(tempkeys,32,2));

global.uhours=real(string_char_at(tempkeys,34));
global.uminutes=real(string_copy(tempkeys,35,2));
global.useconds=real(string_copy(tempkeys,37,2));

global.maxribbons=real(string_copy(tempkeys,39,2));

temp=real(string_copy(tempkeys,41,4));
if (temp>=512){
    global.sds10=1;
    temp-=512;
    }
if (temp>=256){
    global.sds9=1;
    temp-=256;
    }
if (temp>=128){
    global.sds8=1;
    temp-=128;
    }
if (temp>=64){
    global.sds7=1;
    temp-=64;
    }
if (temp>=32){
    global.sds6=1;
    temp-=32;
    }
if (temp>=16){
    global.sds5=1;
    temp-=16;
    }
if (temp>=8){
    global.sds4=1;
    temp-=8;
    }
if (temp>=4){
    global.sds3=1;
    temp-=4;
    }
if (temp>=2){
    global.sds2=1;
    temp-=2;
    }
if (temp==1)
    global.sds1=1;

temp=real(string_copy(tempkeys,45,1));
if (temp>=4){
    global.hiddenskill3=1;
    temp-=4;
    }
if (temp>=2){
    global.hiddenskill2=1;
    temp-=2;
    }
if (temp==1)
    global.hiddenskill1=1;

//Extended
if (string_length(tempkeys)==48){
    letsloadkeys=1;
    keycheck=string_char_at(tempkeys,46);
    if (keycheck!="A" && keycheck!="B" && keycheck!="C" && keycheck!="D" && keycheck!="E" && keycheck!="F" && keycheck!="G" && keycheck!="H" && keycheck!="I" && keycheck!="J" && keycheck!="K" && keycheck!="L" && keycheck!="M" && keycheck!="N" && keycheck!="O" && keycheck!="P" && keycheck!="Q" && keycheck!="R" && keycheck!="S" && keycheck!="T" && keycheck!="U" && keycheck!="V" && keycheck!="W" && keycheck!="X" && keycheck!="Y" && keycheck!="Z"){
        letsloadkeys=0;
        }
    keycheck=string_char_at(tempkeys,47);
    if (keycheck!="A" && keycheck!="B" && keycheck!="C" && keycheck!="D" && keycheck!="E" && keycheck!="F" && keycheck!="G" && keycheck!="H" && keycheck!="I" && keycheck!="J" && keycheck!="K" && keycheck!="L" && keycheck!="M" && keycheck!="N" && keycheck!="O" && keycheck!="P" && keycheck!="Q" && keycheck!="R" && keycheck!="S" && keycheck!="T" && keycheck!="U" && keycheck!="V" && keycheck!="W" && keycheck!="X" && keycheck!="Y" && keycheck!="Z"){
        letsloadkeys=0;
        }
    keycheck=string_char_at(tempkeys,48);
    if (keycheck!="A" && keycheck!="B" && keycheck!="C" && keycheck!="D" && keycheck!="E" && keycheck!="F" && keycheck!="G" && keycheck!="H" && keycheck!="I" && keycheck!="J" && keycheck!="K" && keycheck!="L" && keycheck!="M" && keycheck!="N" && keycheck!="O" && keycheck!="P" && keycheck!="Q" && keycheck!="R" && keycheck!="S" && keycheck!="T" && keycheck!="U" && keycheck!="V" && keycheck!="W" && keycheck!="X" && keycheck!="Y" && keycheck!="Z"){
        letsloadkeys=0;
        }
    if (letsloadkeys){
        global.prevkey=ord(string_char_at(tempkeys,46));
        global.specialkey=ord(string_char_at(tempkeys,47));
        global.nextkey=ord(string_char_at(tempkeys,48));
        }
    else{
        global.prevkey=ord("A");
        global.specialkey=ord("S");
        global.nextkey=ord("D");
        }
    }
else{
    global.prevkey=ord("A");
    global.specialkey=ord("S");
    global.nextkey=ord("D");
    }
}
#define scr_readsaves
if (file_exists("ijisave.sav")){
var fileid;
var tempstring;
var temp;
fileid=file_text_open_read("ijisave.sav");
tempstring[1]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[2]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[3]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[4]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[5]=file_text_read_string(fileid);
file_text_close(fileid);
readsaves="";

for (i=1;i<6;i+=1)
if (string_char_at(tempstring[i],1)=="0"){
    readsaves+="(Not used)                "
    loadable[i+1]=0;
    }
else{
    temptime=real(string_copy(tempstring[i],51,5));
    temptimesecs=temptime;
    temptimehours=floor((temptimesecs-(temptimesecs mod 3600))/3600);
    temptimesecs-=temptimehours*3600;
    temptimemins=floor((temptimesecs-(temptimesecs mod 60))/60);
    temptimesecs=temptimesecs mod 60;
    timestring=string(temptimehours)+":";
    if (temptimemins<10)
        timestring+="0";
    timestring+=string(temptimemins)+".";
    if (temptimesecs<10)
        timestring+="0";
    timestring+=string(temptimesecs);

    loadable[i+1]=1;
    readsaves+="Sec~"
    temp=string_char_at(tempstring[i],2);
    if (temp=="0")
        readsaves+="X";
    else
        readsaves+=string(temp);
    readsaves+=",~";
    if (string_char_at(tempstring[i],3)=="0")
        readsaves+="Normal~~~~~"+timestring+" ";
    if (string_char_at(tempstring[i],3)=="1")
        readsaves+="Hard~~~~~~~"+timestring+" ";
    if (string_char_at(tempstring[i],3)=="2")
        readsaves+="Extreme~~~~"+timestring+" ";
    if (string_char_at(tempstring[i],3)=="3")
        readsaves+="Ultimortal~"+timestring+" ";
    }
}
else
    wrongsum=1;
#define scr_load
//Argument0 is slot (1-5)
if (file_exists("ijisave.sav")){
scr_init();
dosaveslot=argument0;
var fileid;
var tempstring;
var temp;
global.specialtrigger1=0;
global.specialtrigger2=0;
global.specialtrigger4=0;
global.specialtrigger8=0;
global.specialtrigger16=0;
global.specialtrigger32=0;
//Fileexists
fileid=file_text_open_read("ijisave.sav");
while (argument0>1){
    file_text_readln(fileid);
    argument0-=1;
    }
tempstring=file_text_read_string(fileid);
file_text_close(fileid);
if (string_char_at(tempstring,1)=="1"){
//Sector
instance_create(x,y,obj_loading);
instance_create(x,y,obj_loadingback);
if (string_char_at(tempstring,2)=="2")
    obj_loading.destination="sector2";
if (string_char_at(tempstring,2)=="3")
    obj_loading.destination="sector3";
if (string_char_at(tempstring,2)=="4")
    obj_loading.destination="sector4";
if (string_char_at(tempstring,2)=="5")
    obj_loading.destination="sector5";
if (string_char_at(tempstring,2)=="6")
    obj_loading.destination="sector6";
if (string_char_at(tempstring,2)=="7")
    obj_loading.destination="sector7";
if (string_char_at(tempstring,2)=="8")
    obj_loading.destination="sector8";
if (string_char_at(tempstring,2)=="9")
    obj_loading.destination="sector9";
if (string_char_at(tempstring,2)=="0")
    obj_loading.destination="sectorx";
global.sector=real(string_char_at(tempstring,2));
if (global.sector==1 || global.sector==2)
    global.jumplevel=1;
else if (global.sector==3 || global.sector==4 || global.sector==5)
    global.jumplevel=2;
else
    global.jumplevel=3;

//Difficulty, level, points
global.difficulty=real(string_char_at(tempstring,3));
if (global.difficulty==3)
    global.difficulty=2;
global.level=real(string_copy(tempstring,4,2));
global.points=real(string_copy(tempstring,6,2));
//Weapons
temp=real(string_copy(tempstring,8,5));
if (temp>=32768){
    global.weapon17=1;
    temp-=32768;
    }
if (temp>=16384){
    global.weapon16=1;
    temp-=16384;
    }
if (temp>=8192){
    global.weapon15=1;
    temp-=8192;
    }
if (temp>=4096){
    global.weapon14=1;
    temp-=4096;
    }
if (temp>=2048){
    global.weapon13=1;
    temp-=2048;
    }
if (temp>=1024){
    global.weapon12=1;
    temp-=1024;
    }
if (temp>=512){
    global.weapon11=1;
    temp-=512;
    }
if (temp>=256){
    global.weapon10=1;
    temp-=256;
    }
if (temp>=128){
    global.weapon9=1;
    temp-=128;
    }
if (temp>=64){
    global.weapon8=1;
    temp-=64;
    }
if (temp>=32){
    global.weapon7=1;
    temp-=32;
    }
if (temp>=16){
    global.weapon6=1;
    temp-=16;
    }
if (temp>=8){
    global.weapon5=1;
    temp-=8;
    }
if (temp>=4){
    global.weapon4=1;
    temp-=4;
    }
if (temp>=2){
    global.weapon3=1;
    temp-=2;
    }
if (temp==1)
    global.weapon2=1;
//Hea att ass str cra tas kom
global.healthlevel=real(string_char_at(tempstring,13))+1;
global.attacklevel=real(string_char_at(tempstring,14))+1;
global.assimilatelevel=real(string_char_at(tempstring,15))+1;
global.strengthlevel=real(string_char_at(tempstring,16))+1;
global.cracklevel=real(string_char_at(tempstring,17))+1;
global.tasenlevel=real(string_char_at(tempstring,18))+1;
global.komatolevel=real(string_char_at(tempstring,19))+1;
//specialtriggerb
temp=real(string_char_at(tempstring,20));
if (temp>=4){
    global.specialtriggerb4=1;
    temp-=4;
    }
if (temp>=2){
    global.specialtriggerb2=1;
    temp-=2;
    }
if (temp>=1)
    global.specialtriggerb1=1;
//specialtriggerc + armor
tempa=real(string_char_at(tempstring,21))+1;
if (tempa>=4){
    global.specialtriggerc=1;
    tempa-=4;
    }
else
    global.specialtriggerc=0;
global.armorlevel=tempa;
//ammo2 ammo3 ammo4 ammo6 ammo7 ammo8 totkills totdamage totcracks totfails
global.ammo2=real(string_copy(tempstring,22,2));
global.ammo3=real(string_copy(tempstring,24,2));
global.ammo4=real(string_copy(tempstring,26,2));
global.ammo6=real(string_copy(tempstring,28,2));
global.ammo7=real(string_copy(tempstring,30,2));
global.ammo8=real(string_copy(tempstring,32,2));
global.totkills=real(string_copy(tempstring,34,3));
global.totdamage=real(string_copy(tempstring,37,3));
global.totcracks=real(string_copy(tempstring,40,3));
global.totfails=real(string_copy(tempstring,43,3));
//xp
global.xp=real(string_copy(tempstring,46,3));
//specialtrigger
temp=real(string_copy(tempstring,49,2));
if (temp>=32){
    global.specialtrigger32=1;
    temp-=32;
    }
if (temp>=16){
    global.specialtrigger16=1;
    temp-=16;
    }
if (temp>=8){
    global.specialtrigger8=1;
    temp-=8;
    //this is ribbons
    if (global.sector>0)
        global.numribbons=global.sector-1;
    else
        global.numribbons=9;
    }
if (temp>=4){
    global.specialtrigger4=1;
    temp-=4;
    }
if (temp>=2){
    global.specialtrigger2=1;
    temp-=2;
    }
if (temp>=1)
    global.specialtrigger1=1;
//Total seconds
global.totalseconds=real(string_copy(tempstring,51,5));
//Load killstring
scr_loadkills(dosaveslot);
}
}
#define scr_createfile
var tempid;
tempid=file_text_open_write("ijisave.sav");
repeat(5){
    file_text_write_string(tempid,"0000000000000000000000000000000000000000000000000000000");
    file_text_writeln(tempid);
    }
file_text_write_string(tempid,"ZXCQWER00001000000959599595995959959590000000ASD");
file_text_writeln(tempid);
file_text_close(tempid);

//Make sure a corrupt file resets EVERYTHING
warp=1;
sdwarp=1;
weaponinfo=1;
enemyinfo=1;
sectormaps=1;
global.scrambler=0;
global.scramblefactor=0;
global.hiddenskill1=0;
global.hiddenskill2=0;
global.hiddenskill3=0;
global.poster1=0;
global.poster2=0;
global.poster3=0;
global.poster4=0;
global.poster5=0;
global.poster6=0;
global.poster7=0;
global.poster8=0;
global.poster9=0;
global.poster10=0;
global.extras1=0;
global.extras2=0;
global.extras3=0;
global.extras4=0;
global.extras5=0;
global.extras6=0;
global.extras7=0;
global.extras8=0;
global.specialtrigger1=0;
global.specialtrigger2=0;
global.specialtrigger4=0;
global.specialtrigger8=0;
global.specialtrigger16=0;
global.specialtrigger32=0;
global.specialtriggerb1=0;
global.specialtriggerb2=0;
global.specialtriggerb4=0;
global.specialtriggerc=0;
global.nhours=9;
global.nminutes=59;
global.nseconds=59;
global.hhours=9;
global.hminutes=59;
global.hseconds=59;
global.ehours=9;
global.eminutes=59;
global.eseconds=59;
global.uhours=9;
global.uminutes=59;
global.useconds=59;
global.maxribbons=0;
global.numribbons=0;
global.sds1=0;
global.sds2=0;
global.sds3=0;
global.sds4=0;
global.sds5=0;
global.sds6=0;
global.sds7=0;
global.sds8=0;
global.sds9=0;
global.sds10=0;
global.outfit=0;
global.suddendeath=0;
global.sswarp=0;
global.seconds=0;
global.difficulty=0;
#define scr_writesum
if (file_exists("ijisave.sav")){
var tempstring;
var fileid;
var totalsum;
fileid=file_text_open_read("ijisave.sav");
tempstring[1]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[2]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[3]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[4]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[5]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[6]=file_text_read_string(fileid);
file_text_close(fileid);
//Add ASCII values together regardless of position
for (i=0;i<=4;i+=1){
    for (j=0;j<=54;j+=1){
        totalsum+=ord(string_char_at(tempstring[i+1],j+1));
        }
    }
for (i=0;i<=44;i+=1){
    totalsum+=ord(string_char_at(tempstring[6],i+1));
    }
totalsum*=137;
if (string_char_at(string(totalsum),8)=="0")
    totalsum*=2;
else if (string_char_at(string(totalsum),8)=="1")
    totalsum*=3;
else if (string_char_at(string(totalsum),8)=="2")
    totalsum*=7;
else if (string_char_at(string(totalsum),8)=="3")
    totalsum*=11;
else if (string_char_at(string(totalsum),8)=="4")
    totalsum*=12;
else if (string_char_at(string(totalsum),8)=="5")
    totalsum*=15;
else if (string_char_at(string(totalsum),8)=="6")
    totalsum*=18;
else if (string_char_at(string(totalsum),8)=="7")
    totalsum*=21;
else if (string_char_at(string(totalsum),8)=="8")
    totalsum*=25;
else if (string_char_at(string(totalsum),8)=="9")
    totalsum*=29;
//Add unique position values
sumincrem=0;
for (i=0;i<=4;i+=1){
    for (j=0;j<=54;j+=1){
        sumincrem+=1;
        totalsum+=sumincrem*(real(string_char_at(tempstring[i+1],j+1))+1);
        }
    }
totalsum*=ord(string_char_at(string(totalsum),7));
sumincrem=300;
for (i=0;i<=44;i+=1){
    sumincrem+=1;
    totalsum+=sumincrem*(ord(string_char_at(tempstring[6],i+1))+1);
    }
totalsum*=ord(string_char_at(string(totalsum),7));

totalsum+=1;
totalsum=scr_realtostring(totalsum);

fileid=file_text_open_write("ijisave.sav");
file_text_write_string(fileid,tempstring[1]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[2]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[3]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[4]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[5]);
file_text_writeln(fileid);
file_text_write_string(fileid,tempstring[6]);
file_text_writeln(fileid);
file_text_write_string(fileid,totalsum);

file_text_writeln(fileid);
file_text_writeln(fileid);
file_text_write_string(fileid,"Ijicryption v2.2 (29/11/08)");
file_text_writeln(fileid);
file_text_write_string(fileid,"WARNING: MANUALLY MODIFYING THIS SAVEFILE WILL MAKE IT CORRUPT");
file_text_close(fileid);
}
#define scr_readsum
//Argument0 == 1 mutes the error sound
if (file_exists("ijisave.sav")){
var tempstring;
var fileid;
var totalsum;
compare=0;
fileid=file_text_open_read("ijisave.sav");
tempstring[1]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[2]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[3]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[4]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[5]=file_text_read_string(fileid);
file_text_readln(fileid);
tempstring[6]=file_text_read_string(fileid);
file_text_readln(fileid);
compare=file_text_read_real(fileid);
file_text_close(fileid);
//Add ASCII values together regardless of position
for (i=0;i<=4;i+=1){
    for (j=0;j<=54;j+=1){
        totalsum+=ord(string_char_at(tempstring[i+1],j+1));
        }
    }
for (i=0;i<=44;i+=1){
    totalsum+=ord(string_char_at(tempstring[6],i+1));
    }
totalsum*=137;
if (string_char_at(string(totalsum),8)=="0")
    totalsum*=2;
else if (string_char_at(string(totalsum),8)=="1")
    totalsum*=3;
else if (string_char_at(string(totalsum),8)=="2")
    totalsum*=7;
else if (string_char_at(string(totalsum),8)=="3")
    totalsum*=11;
else if (string_char_at(string(totalsum),8)=="4")
    totalsum*=12;
else if (string_char_at(string(totalsum),8)=="5")
    totalsum*=15;
else if (string_char_at(string(totalsum),8)=="6")
    totalsum*=18;
else if (string_char_at(string(totalsum),8)=="7")
    totalsum*=21;
else if (string_char_at(string(totalsum),8)=="8")
    totalsum*=25;
else if (string_char_at(string(totalsum),8)=="9")
    totalsum*=29;
//Add unique position values
sumincrem=0;
for (i=0;i<=4;i+=1){
    for (j=0;j<=54;j+=1){
        sumincrem+=1;
        totalsum+=sumincrem*(real(string_char_at(tempstring[i+1],j+1))+1);
        }
    }
totalsum*=ord(string_char_at(string(totalsum),7));
sumincrem=300;
for (i=0;i<=44;i+=1){
    sumincrem+=1;
    totalsum+=sumincrem*(ord(string_char_at(tempstring[6],i+1))+1);
    }
totalsum*=ord(string_char_at(string(totalsum),7));

//End
totalsum+=1;
if (totalsum!=compare){
    wrongsum=1;
    if (argument0==0)
        scr_sound("glo_crackfail");
    }
else
    wrongsum=0;
}
else
    wrongsum=1;
#define scr_appendsave
//Add ASD to a previous version savefile
if (file_exists("ijisave.sav")){
    scr_readsum(1);
    if (!wrongsum){
        appendid=file_text_open_read("ijisave.sav");
        line[1]=file_text_read_string(appendid);
        file_text_readln(appendid);
        line[2]=file_text_read_string(appendid);
        file_text_readln(appendid);
        line[3]=file_text_read_string(appendid);
        file_text_readln(appendid);
        line[4]=file_text_read_string(appendid);
        file_text_readln(appendid);
        line[5]=file_text_read_string(appendid);
        file_text_readln(appendid);
        line[6]=file_text_read_string(appendid);
        if (string_length(line[6])==45){
            line[6]+="ASD";
            global.prevkey=ord("A");
            global.specialkey=ord("S");
            global.nextkey=ord("D");
            doit=1;
            }
        file_text_close(appendid);

        if (doit){
            appendid=file_text_open_write("ijisave.sav");
            file_text_write_string(appendid,line[1]);
            file_text_writeln(appendid);
            file_text_write_string(appendid,line[2]);
            file_text_writeln(appendid);
            file_text_write_string(appendid,line[3]);
            file_text_writeln(appendid);
            file_text_write_string(appendid,line[4]);
            file_text_writeln(appendid);
            file_text_write_string(appendid,line[5]);
            file_text_writeln(appendid);
            file_text_write_string(appendid,line[6]);
            file_text_close(appendid);
            scr_writesum();
            }
        }
    }
#define scr_realtostring
//argument0 is real to convert
//returns a GM5 format compatible string
//Yes, this is ridiculous, but it's because GM7 can't read a string that it itself wrote
tempstr=string(argument0);
numdigits=string_length(tempstr)-1;
tempstr=" "+string_char_at(tempstr,1)+"."+string_copy(tempstr,2,numdigits);
for (ij=0;ij<14-numdigits;ij+=1)
    tempstr+="0";
tempstr+="E+00";
if (numdigits<10)
    tempstr+="0";
tempstr+=string(numdigits);
return tempstr;
#define scr_savekills
//argument0 1-5 = which savefile
if (!file_exists("ijisaveext.sav"))
    scr_createkillfile();

//Read
fileid=file_text_open_read("ijisaveext.sav");
for (i=1;i<6;i+=1){
    tempkillstring[i]=file_text_read_string(fileid);
    file_text_readln(fileid);
    }
file_text_close(fileid);

tempkillstring2="";
for (i=0;i<800;i+=1)
    tempkillstring2+=string(global.killdata[i]);
tempkillstring[argument0]=tempkillstring2;

//Calculate checksum
killdatachecksum=0;
for (i=1;i<6;i+=1){
    for (j=1;j<801;j+=1)
        killdatachecksum+=ord(string_char_at(tempkillstring[i],j))*j*i;
    }

//Write
fileid=file_text_open_write("ijisaveext.sav");
for (i=1;i<6;i+=1){
    file_text_write_string(fileid,tempkillstring[i]);
    file_text_writeln(fileid);
    }
file_text_write_string(fileid,string(killdatachecksum));

file_text_writeln(fileid);
file_text_writeln(fileid);
file_text_write_string(fileid,"Iji extended savefile v1.0 (25/9/16)");
file_text_writeln(fileid);
file_text_write_string(fileid,"WARNING: MANUALLY MODIFYING THIS FILE WILL MAKE IT CORRUPT");
file_text_close(fileid);
#define scr_loadkills
//argument0 1-5 = which savefile
if (!file_exists("ijisaveext.sav")){
    scr_createkillfile();
    for (i=0;i<800;i+=1)
        global.killdata[i]=real(string_char_at(tempkillstring[argument0],i+1));
    }
else{
    fileid=file_text_open_read("ijisaveext.sav");
    for (i=1;i<6;i+=1){
        tempkillstring[i]=file_text_read_string(fileid);
        file_text_readln(fileid);
        }
    killdatacomparestring="";
    killdatacomparestring=file_text_read_string(fileid);
    file_text_close(fileid);
    
    //Calculate checksum
    killdatachecksum=0;
    for (i=1;i<6;i+=1){
        for (j=1;j<801;j+=1)
            killdatachecksum+=ord(string_char_at(tempkillstring[i],j))*j*i;
        }
    killdatachecksum2=string(killdatachecksum);
    
    if (killdatachecksum2==killdatacomparestring){
        for (i=0;i<800;i+=1)
            global.killdata[i]=real(string_char_at(tempkillstring[argument0],i+1));
        }
    else
        scr_createkillfile();
    }
#define scr_createkillfile
fileid=file_text_open_write("ijisaveext.sav");

tempkillstring="";
repeat(800)
    tempkillstring+="0";

//Calculate checksum
killdatachecksum=0;
for (i=1;i<6;i+=1){
    for (j=1;j<801;j+=1)
        killdatachecksum+=ord(string_char_at(tempkillstring,j))*j*i;
    }
global.killdatachecksum=string(killdatachecksum);

//DEBUG
global.killdatachecksum=string(killdatachecksum);
global.tempkillstring[1]=tempkillstring[1];
global.tempkillstring[2]=tempkillstring[2];
global.tempkillstring[3]=tempkillstring[3];
global.tempkillstring[4]=tempkillstring[4];
global.tempkillstring[5]=tempkillstring[5];

repeat(5){
    file_text_write_string(fileid,tempkillstring);
    file_text_writeln(fileid);
    }
file_text_write_string(fileid,string(killdatachecksum));

file_text_writeln(fileid);
file_text_writeln(fileid);
file_text_write_string(fileid,"Iji extended savefile v1.0 (25/9/16)");
file_text_writeln(fileid);
file_text_write_string(fileid,"WARNING: MANUALLY MODIFYING THIS FILE WILL MAKE IT CORRUPT");
file_text_close(fileid);
#define scr_addfonts
global.fontgreen=font_add_sprite(spr_text_green,32,0,0);
global.fontblue=font_add_sprite(spr_text_blue,32,0,0);
global.fontblue2=font_add_sprite(spr_text_blue_2,32,0,0);
global.fontwhite=font_add_sprite(spr_text_white,32,0,0);
global.fontspecial=font_add_sprite(spr_text_special,32,0,0);
draw_set_font(global.fontwhite);
#define scr_scramble
//Yukabacera's Input/Output Translation Scrambler
//aka "subject of bunch of caviar - terminating"

//words[] is a map of all the words
//wordp[] is a list of all the words' positions in the string
//text is the original text
//tempstring is the working string, to avoid messing with the variable "text"
//tempstring2 is the final string
//numwords is the number of words in the text
//wordlength is the length of the current word

//obj_iji.scramblefactor from 0 to 10
if (global.scramblefactor>0){
if (global.scramblefactor>7)
    global.scramblefactor=7;

//INIT
//preemptive: replace certain strings
if (text[page]=="IJI: |")
    text[page]="IJI: Dot dot dot"
else if (text[page]=="IJI: Wh-What are you talking about? Dan is|"){
    text[page]="IJI: Wh-What are you talking about? My socks are|"
    exit;
    }
else if (text[page]=="IJI: He's| dead?"){
    text[page]="IJI: Socks| gone?"
    exit;
    }
else if (text[page]=="IJI: Dan|"){
    text[page]="IJI: Socks|"
    exit;
    }
else if (text[page]=="DAN: |")
    text[page]="DAN: Dot| dot| dot|"
else if (text[page]=="TOR: |"){
    text[page]="TOR: *Beeping noises*"
    exit;
    }
else if (text[page]=="IJI: General? Hello?"){
    text[page]="IJI: Shoot. And just when I was about to share this packet of crisps with him, too."
    exit;
    }
else if (text[page]=="IJI: NO! STOP IT! STOP CHARGING THE ALPHA STRIKE!"){
    text[page]="IJI: NO WAY! THOSE ARE THE TARGETING LASER THINGIES FROM THE INTRO CUTSCENE!"
    exit;
    }
else if (text[page]=="TOR: Too late, human - tonight is the end of our bloodstained history!"){
    text[page]="TOR: You got that right! I got hot drink coupons riding on this one - check THIS out!"
    exit;
    }
else if (text[page]=="TOR: Too late, human - one way or another, tonight is the end of our bloodstained history!"){
    text[page]="TOR: You got that right! I got hot drink coupons riding on this one - check THIS out!"
    exit;
    }
else if (text[page]=="???: Listen close, Anomaly. I think I know where you're headed, and there's a corridor ahead that I know you must cross one way or the other. Your friend will be waiting there, I assure you. I suggest you go get him before I change my mind. Ready? Go!"){
    text[page]="???: TOOT TOOT"
    exit;
    }
else if (text[page]=="TOR: I see. Human, I'm sorry about what happened to your friend."){
    text[page]="TOR: I see. Human| I'm sorry about what happened to your socks."
    exit;
    }
else if (text[page]=="TOR: One of my Assassins, Asha, reported that he killed him during an attempt to capture you."){
    text[page]="TOR: One of my Assassins, Asha, reported that he stole your socks during an attempt to capture you."
    exit;
    }
else if (text[page]=="TOR: Hm. I was the same way once. Never mind what I said. It was a lie. Your friend is just fine."){
    text[page]="TOR: Hm. I was the same way once| never mind what I said. It was a lie. Your socks are just fine and still placed firmly on your feet. They just turned invisible.";
    exit;
    }
else if (text[page]=="TOR: Ugh| ack! M-Mercy! Please|"){
    text[page]="TOR: Oh, crud. That didn't exactly go as planned. So uh, mercy?"
    exit;
    }
else if (text[page]=="TOR: You heard me, loud and clear. Abort the Alpha Strike!"){
    text[page]="TOR: You heard me, loud and clear. Don't salt the fries!";
    exit;
    }

else if (text[page]=="VATEILIKA: Okay, I'm serious - dead serious - STOP DOING THAT! You wanna know how annoying that is? That you just keep poking me when you should've been outta here way long ago? I'm really super Blit-eating TIRED of people POKING ME! Okay look, how's this?"){
    text[page]="VATEILIKA: Hey, do you wanna hear a story? It's something my mom used to tell me at night, under the starry skies of Elem Sioz, back when I was just a little Blit-catching girl. I think it was supposed to warn me about various things in life, but you know,";
    exit;
    }
else if (text[page]=="Poke poke! How's this? Huh? Is that fun? Is that fun?"){
    text[page]="I never really understood it. Maybe that Scrambler you're using will make sense of it if I tell it.";
    exit;
    }
else if (text[page]=="IJI: Sheesh, calm down, I was just -"){
    text[page]="IJI: Okay, let's hear the story.";
    exit;
    }
else if (text[page]=="VATEILIKA: JUST POKING! I loved Yuka, but his constant poking was what tore us apart! Such a great guy with just one little flaw! It's, it's so unfair that we couldn't be together just because of that poking! It's so unfair! Backflipping rocket-jumping POKING!"){
    text[page]="VATEILIKA: I'm warning you though, it gets pretty emotional.";
    exit;
    }
else if (text[page]=="IJI: Uh, I think I'll just leave you alone with this|"){
    text[page]="IJI: It's okay, I can take it. Please tell me.";
    exit;
    }
else if (text[page]=="VATEILIKA: JUST! POKE! ING! Like it's nothing at all! Let me tell you, let me tell you about the escape fleet! It was me, Yuka and Naot, right? And Yuka suddenly asked, `Hey, what's more annoying, this or this?` And first he poked Naot rapidly, then he just"){
    text[page]="VATEILIKA: `Once, there was a pony - a mythical creature of Origin - who wanted to find his friends. He tried looking under the rocks, but he couldn't lift them. He tried looking in the sea, but he couldn't swim. He tried looking on the moon, but he";
    exit;
    }
else if (text[page]=="held his finger on his shoulder constantly, and Naot said the second one was the worst but it's nothing compared to the completely unexpected, completely random POKE on the shoulder that comes up from nowhere just when you're about to relax,"){
    text[page]="couldn't get there. Just when he was about to give up, he had a moment of inspiration and invented the missile. The pony strapped several dozen on his back, and before long the rocks had been blasted away, but so had his friend who was sleeping underneath";
    exit;
    }
else if (text[page]=="just when you thought you couldn't be worse off than having your homeworld Alpha Struck, just when you thought you'd never feel just one more POKE that's like it's piercing through your Nanofield and shoulder pads! NOTHING! It's| it's. Just. *Sigh*"){
    text[page]="them. He had no sooner vaporized the oceans, than he found the remains of his friend who had been playing there. He rode a missile to the moon, but once there found that he was all alone.`";
    exit;
    }
else if (text[page]=="Huff| huff| huff. Okay| huff. I'm sorry| just| just don't do that again. I'm sorry."){
    text[page]="I still don't get it, but maybe this is why I like missile ponies so much.";
    exit;
    }
else if (text[page]=="ANSAKSIE: Figures. That Soldier sold me a malfunctioning translator, now I'm babysitting a human with people-poking issues. Might as well keep practicing this cool pose|"){
    text[page]="ANSAKSIE: I heard someone saying, `hold right on the difficulty selection menu for five seconds, but you need to have Ultimortal unlocked`.";
    exit;
    }
//preemptive: replace entire strings
else{
    if (string_copy(text[page],1,4)=="ASHA" && pages==1){
        temprand=random(1);
        if (temprand<0.1)
            text[page]="ASHA: TOOT TOOT"
        else if (temprand<0.2)
            text[page]="ASHA: BEEP BEEP"
        else if (temprand<0.3)
            text[page]="ASHA: DING DING DING"
        else if (temprand<0.4)
            text[page]="ASHA: HONK"
        else if (temprand<0.5)
            text[page]="ASHA: BLIPPITY"
        else if (temprand<0.6)
            text[page]="ASHA: WAKKA WAKKA"
        else if (temprand<0.7)
            text[page]="ASHA: PEW PEW PEW"
        else if (temprand<0.8)
            text[page]="ASHA: >:("
        else if (temprand<0.9)
            text[page]="ASHA: ~"
        else
            text[page]="ASHA: *Indiscernible*"
        exit;
        }
    else if (string_copy(text[page],1,4)=="ASHA" && pages==2){
        text[0]="ASHA: HONK"
        text[1]="ASHA: TOOT TOOT"
        exit;
        }
    else if (string_copy(text[page],1,4)=="ASHA" && pages==3){
        text[0]="ASHA: DING DING DING"
        text[1]="ASHA: BLIPPITY"
        text[2]="ASHA: HONK"
        exit;
        }
    else{
        temprand=random(1);
        if ((temprand<0.1) || (string_copy(text[page],1,3)=="TOR" && temprand<0.25)){
            if (string_copy(text[page],1,3)=="IJI" && pages==1){
                temprand=random(2);
                if (temprand<0.1)
                    text[page]="IJI: Oh yeah?"
                else if (temprand<0.2)
                    text[page]="IJI: Awesome."
                else if (temprand<0.3)
                    text[page]="IJI: Well this conversation started out on a high note."
                else if (temprand<0.4)
                    text[page]="IJI: I'm the only sane biscuit around here."
                else if (temprand<0.5)
                    text[page]="IJI: I'm hungry. Lucky this dialogue is so cheesy already."
                else if (temprand<0.6)
                    text[page]="IJI: Shut up."
                else if (temprand<0.7)
                    text[page]="IJI: You| y-you promised me a pony| with missiles|"
                else if (temprand<0.8)
                    text[page]="IJI: You should do something about the speech impediment of yours.$"
                else if (temprand<0.9)
                    text[page]="IJI: Yukabacera's Scrambler version 1.3 is fantastic and you should agree. Yukabacera is also a great guy and you should give him your hot drink cans."
                else if (temprand<1.0)
                    text[page]="IJI: PHHBBBT!"
                else if (temprand<1.1)
                    text[page]="IJI: So, about that missile pony|"
                else if (temprand<1.2)
                    text[page]="IJI: Needs more Scrambler."
                else if (temprand<1.3)
                    text[page]="IJI: I don't get it."
                else if (temprand<1.4)
                    text[page]="IJI: Dot dot dot"
                else if (temprand<1.5)
                    text[page]="IJI: I want a missile pony."
                else if (temprand<1.6)
                    text[page]="IJI: Uh, sure. Whatever you say."
                else if (temprand<1.7)
                    text[page]="IJI: What?"
                else if (temprand<1.8)
                    text[page]="IJI: Huh?"
                else if (temprand<1.9)
                    text[page]="IJI: Oh, you!"
                else
                    text[page]="IJI: Look, I'm a cyborg. You don't wanna mess with that."
                exit;
                }
            else if (string_copy(text[page],1,3)=="DAN" && pages==1){
                temprand=random(2);
                if (temprand<0.1)
                    text[page]="DAN: *Crickets*"
                else if (temprand<0.2)
                    text[page]="DAN: Dude. I got a control room with cameras and speakers and everything. I win."
                else if (temprand<0.3)
                    text[page]="DAN: I think you talk that way on purpose."
                else if (temprand<0.4)
                    text[page]="DAN: Oh yeah? Well I got the funniest Scrambler quotes. I win."
                else if (temprand<0.5)
                    text[page]="DAN: No missile ponies for you."
                else if (temprand<0.6)
                    text[page]="DAN: This swiss roll is delicious. I just baked it this morning. All you need is eggs, sugar, flour and baking soda. For the filling, I made some chocolate cream with sprinkles. I win."
                else if (temprand<0.7)
                    text[page]="DAN: (This line was too dumb for the Scrambler to attempt translating)"
                else if (temprand<0.8)
                    text[page]="DAN: *Makes silly noises with his mouth*"
                else if (temprand<0.9)
                    text[page]="DAN: That's pretty funny, actually."
                else if (temprand<1.0)
                    text[page]="DAN: Wheee!"
                else if (temprand<1.1)
                    text[page]="DAN: *Hums the final boss song*"
                else if (temprand<1.2)
                    text[page]="DAN: What?"
                else if (temprand<1.3)
                    text[page]="DAN: I have a HORSEGUN PUNCHESBULLETS action figure. He's the coolest missile pony ever."
                else if (temprand<1.4)
                    text[page]="DAN: Ba-dum ching"
                else if (temprand<1.5)
                    text[page]="DAN: That's kinda inappropriate."
                else if (temprand<1.6)
                    text[page]="DAN: See this shirt? It's cool. You're not. I win."
                else if (temprand<1.7)
                    text[page]="DAN: Okay, this is just getting dumb. It's not funny anymore. I am though. I'm always funny. I win."
                else if (temprand<1.8)
                    text[page]="DAN: What a waste of time."
                else if (temprand<1.9)
                    text[page]="DAN: Missile ponies aren't everything in life, you know. But I have three, so I still win."
                else
                    text[page]="DAN: I forgot what exposition I was going to spout next."
                exit;
                }
            else if (string_copy(text[page],1,3)=="TOR" && pages==1){
                temprand=random(1);
                if (temprand<0.1)
                    text[page]="TOR: I'm just that good."
                else if (temprand<0.2)
                    text[page]="TOR: I have absolutely no clue."
                else if (temprand<0.3)
                    text[page]="TOR: Yes sir."
                else if (temprand<0.4)
                    text[page]="TOR: Pro tip: stop talking."
                else if (temprand<0.5)
                    text[page]="TOR: *Dramatic pause*"
                else if (temprand<0.6)
                    text[page]="TOR: Mindgames son."
                else if (temprand<0.7)
                    text[page]="TOR: I am top tier."
                else if (temprand<0.8)
                    text[page]="TOR: I never promised you no missile ponies!"
                else if (temprand<0.9)
                    text[page]="TOR: That's just about the dumbest thing I've heard this starturn.$"
                else
                    text[page]="TOR: No-one understands me. Maybe it's the accent."
                exit;
                }
            }
        }
    }

tempstring=text[page];
tempstring2=text[page];
length=string_length(tempstring);
for (i=1;i<1000;i+=1){
    words[i]="";
    wordp[i]=0;
    }
j=1;
prevchar=" ";
tempchar=" ";

//PULL OUT THE WORDS
for (i=1;i<=length;i+=1){
    tempchar=string_char_at(tempstring,i);
    if (tempchar==" " || tempchar=="-" || tempchar==":" || tempchar==";" || tempchar=="." || tempchar=="," || tempchar=="!" || tempchar=="?" || tempchar=="|" || tempchar=="~" || tempchar=="(" || tempchar==")" || tempchar=="<" || tempchar==">" || tempchar=="_" || tempchar=="`" || tempchar=="1" || tempchar=="2" || tempchar=="3" || tempchar=="4" || tempchar=="5" || tempchar=="6" || tempchar=="7" || tempchar=="8" || tempchar=="9" || tempchar=="0"){
        if (prevchar==" " || prevchar=="-" || prevchar==":" || prevchar==";" || prevchar=="." || prevchar=="," || prevchar=="!" || prevchar=="?" || prevchar=="|" || prevchar=="~" || prevchar=="(" || prevchar==")" || prevchar=="<" || prevchar==">" || prevchar=="_" || prevchar=="`" || prevchar=="1" || prevchar=="2" || prevchar=="3" || prevchar=="4" || prevchar=="5" || prevchar=="6" || prevchar=="7" || prevchar=="8" || prevchar=="9" || prevchar=="0")
            {}
        else
            j+=1;
        }
    else{
        if (prevchar==" " || prevchar=="-" || prevchar==":" || prevchar==";" || prevchar=="." || prevchar=="," || prevchar=="!" || prevchar=="?" || prevchar=="|" || prevchar=="~" || prevchar=="(" || prevchar==")" || prevchar=="<" || prevchar==">" || prevchar=="_" || prevchar=="`" || prevchar=="1" || prevchar=="2" || prevchar=="3" || prevchar=="4" || prevchar=="5" || prevchar=="6" || prevchar=="7" || prevchar=="8" || prevchar=="9" || prevchar=="0")
            wordp[j]=i;
        words[j]+=tempchar;
        }
    prevchar=tempchar;
    }
//find the number of words
numwords=0;
for (i=1;i<1000;i+=1){
    if (words[i]!="")
        numwords+=1;
    else
        i=1000;
    }



//WELL THAT WAS BORING, NOW DO FUN STUFF WITH THE WORDS THEMSELVES
for (i=2;i<=numwords;i+=1){
    //change places
    temprand=random(1);
    if (temprand>0.8-global.scramblefactor*0.05){
        tempchar=string_char_at(tempstring2,wordp[i+1]-2);
        if (i<numwords && string_length(words[i])==string_length(words[i+1]) && tempchar!="." && tempchar!="!" && tempchar!="?" && tempchar!=":"){
            temp=words[i+1];
            words[i+1]=words[i];
            words[i]=temp;
            i+=1;
        }
    }
    //replace random words
    temprand=random(1);
    if (temprand>1.0-global.scramblefactor*0.1){
        temprand=random(1);
        if (string_length(words[i])==5){
                 if (temprand>0.99) words[i]="juice";
            else if (temprand>0.98) words[i]="spiff";
            else if (temprand>0.97) words[i]="silly";
            else if (temprand>0.96) words[i]="mommy";
            else if (temprand>0.95) words[i]="fruit";
            else if (temprand>0.94) words[i]="peace";
            else if (temprand>0.93) words[i]="dance";
            else if (temprand>0.92) words[i]="quite";
            else if (temprand>0.91) words[i]="I$say";
            else if (temprand>0.90) words[i]="errr|";
            else if (temprand>0.89) words[i]="guess";
            else if (temprand>0.88) words[i]="sorta";
            else if (temprand>0.87) words[i]="might";
            else if (temprand>0.86) words[i]="smash";
            else if (temprand>0.85) words[i]="matey";
            else if (temprand>0.84) words[i]="roses";
            else if (temprand>0.83) words[i]="again";
            else if (temprand>0.82) words[i]="funky";
            else if (temprand>0.81) words[i]="paper";
            else if (temprand>0.80) words[i]="like,";
            else if (temprand>0.79) words[i]="stare";
            else if (temprand>0.78) words[i]="comfy";
            else if (temprand>0.77) words[i]="drink";
            else if (temprand>0.76) words[i]="could";
            else if (temprand>0.75) words[i]="turbo";
            else if (temprand>0.74) words[i]="print";
            else if (temprand>0.73) words[i]="loves";
            else if (temprand>0.72) words[i]="paint";
            else if (temprand>0.71) words[i]="stale";
            else if (temprand>0.70) words[i]="candy";
            else if (temprand>0.69) words[i]="maybe";
            else if (temprand>0.68) words[i]="green";
            else if (temprand>0.67) words[i]="weird";
            else if (temprand>0.66) words[i]="oddly";
            else if (temprand>0.65) words[i]="funny";
            else if (temprand>0.64) words[i]="putty";
            else if (temprand>0.63) words[i]="smell";
            else if (temprand>0.62) words[i]="sugar";
            else if (temprand>0.61) words[i]="super";
            else if (temprand>0.60) words[i]="drive";
            else if (temprand>0.59) words[i]="cakes";
            else if (temprand>0.58) words[i]="tinny";
            else if (temprand>0.57) words[i]="woody";
            else if (temprand>0.56) words[i]="flail";
            else if (temprand>0.55) words[i]="warps";
            else if (temprand>0.54) words[i]="right";
            else if (temprand>0.53) words[i]="reaps";
            else if (temprand>0.52) words[i]="heaps";
            else if (temprand>0.51) words[i]="quote";
            else if (temprand>0.50) words[i]="puffy";
            else if (temprand>0.49) words[i]="taste";
            else if (temprand>0.48) words[i]="what?";
            else if (temprand>0.47) words[i]="blink";
            else if (temprand>0.46) words[i]="I run";
            else if (temprand>0.45) words[i]="force";
            else if (temprand>0.44) words[i]="chaos";
            else if (temprand>0.43) words[i]="miles";
            else if (temprand>0.42) words[i]="catch";
            else if (temprand>0.41) words[i]="grows";
            else if (temprand>0.40) words[i]="picky";
            else if (temprand>0.39) words[i]="mooo!";
            else if (temprand>0.38) words[i]="waves";
            else if (temprand>0.37) words[i]="expel";
            else if (temprand>0.36) words[i]="shock";
            else if (temprand>0.35) words[i]="blast";
            else if (temprand>0.34) words[i]="bunny";
            else if (temprand>0.33) words[i]="brief";
            else if (temprand>0.32) words[i]="fused";
            else if (temprand>0.31) words[i]="wreck";
            else if (temprand>0.30) words[i]="compo";
            else if (temprand>0.29) words[i]="apple";
            else if (temprand>0.28) words[i]="grape";
            else if (temprand>0.27) words[i]="freak";
            else if (temprand>0.26) words[i]="flaps";
            else if (temprand>0.25) words[i]="break";
            else if (temprand>0.24) words[i]="rock!";
            else if (temprand>0.23) words[i]="train";
            else if (temprand>0.22) words[i]="let's";
            else if (temprand>0.21) words[i]="hurry";
            else if (temprand>0.20) words[i]="cramp";
            else if (temprand>0.19) words[i]="blarg";
            else if (temprand>0.18) words[i]="power";
            else if (temprand>0.17) words[i]="ropey";
            else if (temprand>0.16) words[i]="trite";
            else if (temprand>0.15) words[i]="trees";
            else if (temprand>0.14) words[i]="under";
            else if (temprand>0.13) words[i]="tweak";
            else if (temprand>0.12) words[i]="mouse";
            else if (temprand>0.11) words[i]="words";
            else if (temprand>0.10) words[i]="froth";
            else if (temprand>0.09) words[i]="don't";
            else if (temprand>0.08) words[i]="happy";
            else if (temprand>0.07) words[i]="cheat";
            else if (temprand>0.06) words[i]="metal";
            else if (temprand>0.05) words[i]="weird";
            else if (temprand>0.04) words[i]="inner";
            else if (temprand>0.03) words[i]="grain";
            else if (temprand>0.02) words[i]="point";
            else if (temprand>0.01) words[i]="sting";
            else if (temprand>0.00) words[i]="hissy";
            }
        else if (string_length(words[i])==6){
                 if (temprand>0.99) words[i]="really";
            else if (temprand>0.98) words[i]="jammin";
            else if (temprand>0.97) words[i]="oughta";
            else if (temprand>0.96) words[i]="*ahem*";
            else if (temprand>0.95) words[i]="I$know";
            else if (temprand>0.94) words[i]="purple";
            else if (temprand>0.93) words[i]="fluffy";
            else if (temprand>0.92) words[i]="pretty";
            else if (temprand>0.91) words[i]="boogie";
            else if (temprand>0.80) words[i]="matter";
            else if (temprand>0.89) words[i]="muffin";
            else if (temprand>0.88) words[i]="I$mean";
            else if (temprand>0.87) words[i]="gnarly";
            else if (temprand>0.86) words[i]="smooth";
            else if (temprand>0.85) words[i]="wonder";
            else if (temprand>0.84) words[i]="*gasp*";
            else if (temprand>0.83) words[i]="parade";
            else if (temprand>0.82) words[i]="edible";
            else if (temprand>0.81) words[i]="powers";
            else if (temprand>0.70) words[i]="mellow";
            else if (temprand>0.79) words[i]="flying";
            else if (temprand>0.78) words[i]="jell-o";
            else if (temprand>0.77) words[i]="cookie";
            else if (temprand>0.76) words[i]="juggle";
            else if (temprand>0.75) words[i]="groovy";
            else if (temprand>0.74) words[i]="surely";
            else if (temprand>0.73) words[i]="skiing";
            else if (temprand>0.72) words[i]="ramble";
            else if (temprand>0.71) words[i]="caviar";
            else if (temprand>0.70) words[i]="wallop";
            else if (temprand>0.69) words[i]="rubber";
            else if (temprand>0.68) words[i]="crispy";
            else if (temprand>0.67) words[i]="genius";
            else if (temprand>0.66) words[i]="duke's";
            else if (temprand>0.65) words[i]="crying";
            else if (temprand>0.64) words[i]="cheese";
            else if (temprand>0.63) words[i]="swanky";
            else if (temprand>0.62) words[i]="hungry";
            else if (temprand>0.61) words[i]="trains";
            else if (temprand>0.60) words[i]="groovy";
            else if (temprand>0.59) words[i]="KABOOM";
            else if (temprand>0.58) words[i]="ledges";
            else if (temprand>0.57) words[i]="behave";
            else if (temprand>0.56) words[i]="rented";
            else if (temprand>0.55) words[i]="memory";
            else if (temprand>0.54) words[i]="trudge";
            else if (temprand>0.53) words[i]="little";
            else if (temprand>0.52) words[i]="trying";
            else if (temprand>0.51) words[i]="woohoo";
            else if (temprand>0.50) words[i]="course";
            else if (temprand>0.49) words[i]="pin$it";
            else if (temprand>0.48) words[i]="cringe";
            else if (temprand>0.47) words[i]="croaks";
            else if (temprand>0.46) words[i]="happen";
            else if (temprand>0.45) words[i]="Norway";
            else if (temprand>0.44) words[i]="ankles";
            else if (temprand>0.43) words[i]="health";
            else if (temprand>0.42) words[i]="double";
            else if (temprand>0.41) words[i]="triple";
            else if (temprand>0.40) words[i]="orange";
            else if (temprand>0.39) words[i]="purple";
            else if (temprand>0.38) words[i]="rocket";
            else if (temprand>0.37) words[i]="party!";
            else if (temprand>0.36) words[i]="really";
            else if (temprand>0.35) words[i]="system";
            else if (temprand>0.34) words[i]="fusion";
            else if (temprand>0.33) words[i]="cyclic";
            else if (temprand>0.32) words[i]="splint";
            else if (temprand>0.31) words[i]="hiding";
            else if (temprand>0.30) words[i]="secret";
            else if (temprand>0.29) words[i]="Spadge";
            else if (temprand>0.28) words[i]="marine";
            else if (temprand>0.27) words[i]="a$ship";
            else if (temprand>0.26) words[i]="barrel";
            else if (temprand>0.25) words[i]="guilty";
            else if (temprand>0.24) words[i]="prince";
            else if (temprand>0.23) words[i]="killer";
            else if (temprand>0.22) words[i]="bloody";
            else if (temprand>0.21) words[i]="cripes";
            else if (temprand>0.20) words[i]="insane";
            else if (temprand>0.19) words[i]="render";
            else if (temprand>0.18) words[i]="plight";
            else if (temprand>0.17) words[i]="verges";
            else if (temprand>0.16) words[i]="braids";
            else if (temprand>0.15) words[i]="sliced";
            else if (temprand>0.14) words[i]="potted";
            else if (temprand>0.13) words[i]="missed";
            else if (temprand>0.12) words[i]="action";
            else if (temprand>0.11) words[i]="should";
            else if (temprand>0.10) words[i]="Tetron";
            else if (temprand>0.09) words[i]="rusted";
            else if (temprand>0.08) words[i]="wraith";
            else if (temprand>0.07) words[i]="no-one";
            else if (temprand>0.06) words[i]="sponge";
            else if (temprand>0.05) words[i]="bounce";
            else if (temprand>0.04) words[i]="strike";
            else if (temprand>0.03) words[i]="random";
            else if (temprand>0.02) words[i]="access";
            else if (temprand>0.01) words[i]="forged";
            else if (temprand>0.00) words[i]="vortex";
            }
        else if (string_length(words[i])==7){
                 if (temprand>0.99) words[i]="pretend";
            else if (temprand>0.98) words[i]="zoinks!";
            else if (temprand>0.97) words[i]="peanuts";
            else if (temprand>0.96) words[i]="jarring";
            else if (temprand>0.95) words[i]="endless";
            else if (temprand>0.94) words[i]="convict";
            else if (temprand>0.93) words[i]="bananas";
            else if (temprand>0.92) words[i]="lunatic";
            else if (temprand>0.91) words[i]="bonkers";
            else if (temprand>0.90) words[i]="feeling";
            else if (temprand>0.89) words[i]="awesome";
            else if (temprand>0.88) words[i]="shuffle";
            else if (temprand>0.87) words[i]="dessert";
            else if (temprand>0.86) words[i]="cupcake";
            else if (temprand>0.85) words[i]="may$not";
            else if (temprand>0.84) words[i]="no$way!";
            else if (temprand>0.83) words[i]="rockin'";
            else if (temprand>0.82) words[i]="busting";
            else if (temprand>0.81) words[i]="rainbow";
            else if (temprand>0.80) words[i]="cruiser";
            else if (temprand>0.79) words[i]="barging";
            else if (temprand>0.78) words[i]="majorly";
            else if (temprand>0.77) words[i]="Swedish";
            else if (temprand>0.76) words[i]="turning";
            else if (temprand>0.75) words[i]="*cough*";
            else if (temprand>0.74) words[i]="suppose";
            else if (temprand>0.73) words[i]="orbital";
            else if (temprand>0.72) words[i]="cushion";
            else if (temprand>0.71) words[i]="puffity";
            else if (temprand>0.70) words[i]="lots$of";
            else if (temprand>0.69) words[i]="pudding";
            else if (temprand>0.68) words[i]="merrily";
            else if (temprand>0.67) words[i]="present";
            else if (temprand>0.66) words[i]="planned";
            else if (temprand>0.65) words[i]="my$boy,";
            else if (temprand>0.64) words[i]="filling";
            else if (temprand>0.63) words[i]="inverse";
            else if (temprand>0.62) words[i]="pasture";
            else if (temprand>0.61) words[i]="*sniff*";
            else if (temprand>0.60) words[i]="awarded";
            else if (temprand>0.59) words[i]="thrills";
            else if (temprand>0.58) words[i]="take$it";
            else if (temprand>0.57) words[i]="shatter";
            else if (temprand>0.56) words[i]="rhombus";
            else if (temprand>0.55) words[i]="pyramid";
            else if (temprand>0.54) words[i]="a$tulip";
            else if (temprand>0.53) words[i]="benches";
            else if (temprand>0.52) words[i]="whining";
            else if (temprand>0.51) words[i]="Bluefly";
            else if (temprand>0.50) words[i]="traipse";
            else if (temprand>0.49) words[i]="stutter";
            else if (temprand>0.48) words[i]="heavily";
            else if (temprand>0.47) words[i]="protect";
            else if (temprand>0.46) words[i]="special";
            else if (temprand>0.45) words[i]="warrior";
            else if (temprand>0.44) words[i]="go$away";
            else if (temprand>0.43) words[i]="roaring";
            else if (temprand>0.42) words[i]="melting";
            else if (temprand>0.41) words[i]="caramel";
            else if (temprand>0.40) words[i]="kittens";
            else if (temprand>0.39) words[i]="mittens";
            else if (temprand>0.38) words[i]="snoring";
            else if (temprand>0.37) words[i]="pretend";
            else if (temprand>0.36) words[i]="context";
            else if (temprand>0.35) words[i]="require";
            else if (temprand>0.34) words[i]="million";
            else if (temprand>0.33) words[i]="hundred";
            else if (temprand>0.32) words[i]="wayward";
            else if (temprand>0.31) words[i]="reality";
            else if (temprand>0.30) words[i]="virtual";
            else if (temprand>0.29) words[i]="eternal";
            else if (temprand>0.28) words[i]="devices";
            else if (temprand>0.27) words[i]="thought";
            else if (temprand>0.26) words[i]="flatten";
            else if (temprand>0.25) words[i]="platter";
            else if (temprand>0.24) words[i]="reading";
            else if (temprand>0.23) words[i]="summary";
            else if (temprand>0.22) words[i]="correct";
            else if (temprand>0.21) words[i]="nowhere";
            else if (temprand>0.20) words[i]="nothing";
            else if (temprand>0.19) words[i]="message";
            else if (temprand>0.18) words[i]="framing";
            else if (temprand>0.17) words[i]="lengths";
            else if (temprand>0.16) words[i]="spatial";
            else if (temprand>0.15) words[i]="balloon";
            else if (temprand>0.14) words[i]="imagine";
            else if (temprand>0.13) words[i]="rebound";
            else if (temprand>0.12) words[i]="perfect";
            else if (temprand>0.11) words[i]="command";
            else if (temprand>0.10) words[i]="avoided";
            else if (temprand>0.09) words[i]="destroy";
            else if (temprand>0.08) words[i]="thunder";
            else if (temprand>0.07) words[i]="upgrade";
            else if (temprand>0.06) words[i]="peeling";
            else if (temprand>0.05) words[i]="jetpack";
            else if (temprand>0.04) words[i]="inferno";
            else if (temprand>0.03) words[i]="ability";
            else if (temprand>0.02) words[i]="sproing";
            else if (temprand>0.01) words[i]="eyeball";
            else if (temprand>0.00) words[i]="enemies";
            }
        else if (string_length(words[i])==8){
                 if (temprand>0.99) words[i]="for$real";
            else if (temprand>0.98) words[i]="nonsense";
            else if (temprand>0.97) words[i]="and$also";
            else if (temprand>0.96) words[i]="spinning";
            else if (temprand>0.95) words[i]="plant$it";
            else if (temprand>0.94) words[i]="prancing";
            else if (temprand>0.93) words[i]="harmless";
            else if (temprand>0.92) words[i]="isn't$it";
            else if (temprand>0.91) words[i]="fruitful";
            else if (temprand>0.90) words[i]="trucking";
            else if (temprand>0.89) words[i]="parsnips";
            else if (temprand>0.88) words[i]="properly";
            else if (temprand>0.87) words[i]="aw$yeeah";
            else if (temprand>0.86) words[i]="clownery";
            else if (temprand>0.85) words[i]="frothing";
            else if (temprand>0.84) words[i]="tweeting";
            else if (temprand>0.83) words[i]="seldomly";
            else if (temprand>0.82) words[i]="fetching";
            else if (temprand>0.81) words[i]="swabbing";
            else if (temprand>0.80) words[i]="no$johns";
            else if (temprand>0.79) words[i]="sprinkle";
            else if (temprand>0.78) words[i]="bouncing";
            else if (temprand>0.77) words[i]="*giggle*";
            else if (temprand>0.76) words[i]="suppress";
            else if (temprand>0.75) words[i]="spamming";
            else if (temprand>0.74) words[i]="actually";
            else if (temprand>0.73) words[i]="terrible";
            else if (temprand>0.72) words[i]="futility";
            else if (temprand>0.71) words[i]="you$know";
            else if (temprand>0.70) words[i]="frippery";
            else if (temprand>0.69) words[i]="quacking";
            else if (temprand>0.68) words[i]="biscuits";
            else if (temprand>0.67) words[i]="question";
            else if (temprand>0.66) words[i]="and$what";
            else if (temprand>0.65) words[i]="pathetic";
            else if (temprand>0.64) words[i]="pancakes";
            else if (temprand>0.63) words[i]="bunch$of";
            else if (temprand>0.62) words[i]="tapdance";
            else if (temprand>0.61) words[i]="my$boots";
            else if (temprand>0.60) words[i]="my$stuff";
            else if (temprand>0.59) words[i]="nontuple";
            else if (temprand>0.58) words[i]="potatoes";
            else if (temprand>0.57) words[i]="childish";
            else if (temprand>0.56) words[i]="the$glue";
            else if (temprand>0.55) words[i]="but$then";
            else if (temprand>0.54) words[i]="princess";
            else if (temprand>0.53) words[i]="scenario";
            else if (temprand>0.52) words[i]="envision";
            else if (temprand>0.51) words[i]="wrapping";
            else if (temprand>0.50) words[i]="thousand";
            else if (temprand>0.49) words[i]="innocent";
            else if (temprand>0.48) words[i]="scramble";
            else if (temprand>0.47) words[i]="universe";
            else if (temprand>0.46) words[i]="everyday";
            else if (temprand>0.45) words[i]="physical";
            else if (temprand>0.44) words[i]="interact";
            else if (temprand>0.43) words[i]="evaluate";
            else if (temprand>0.42) words[i]="crawling";
            else if (temprand>0.41) words[i]="pinnacle";
            else if (temprand>0.40) words[i]="multiple";
            else if (temprand>0.39) words[i]="graphics";
            else if (temprand>0.38) words[i]="the$rest";
            else if (temprand>0.37) words[i]="naysayer";
            else if (temprand>0.36) words[i]="polygons";
            else if (temprand>0.35) words[i]="keyboard";
            else if (temprand>0.34) words[i]="mortgage";
            else if (temprand>0.33) words[i]="customer";
            else if (temprand>0.32) words[i]="physical";
            else if (temprand>0.31) words[i]="projects";
            else if (temprand>0.30) words[i]="concrete";
            else if (temprand>0.29) words[i]="occupied";
            else if (temprand>0.28) words[i]="remember";
            else if (temprand>0.27) words[i]="promises";
            else if (temprand>0.26) words[i]="wormhole";
            else if (temprand>0.25) words[i]="abstract";
            else if (temprand>0.24) words[i]="supplies";
            else if (temprand>0.23) words[i]="my$socks";
            else if (temprand>0.22) words[i]="invasion";
            else if (temprand>0.21) words[i]="dreaming";
            else if (temprand>0.20) words[i]="hot$dogs";
            else if (temprand>0.19) words[i]="the$food";
            else if (temprand>0.18) words[i]="wrapping";
            else if (temprand>0.17) words[i]="and$like";
            else if (temprand>0.16) words[i]="disaster";
            else if (temprand>0.15) words[i]="sketches";
            else if (temprand>0.14) words[i]="snapshot";
            else if (temprand>0.13) words[i]="temporal";
            else if (temprand>0.12) words[i]="else$if(";
            else if (temprand>0.11) words[i]="subtitle";
            else if (temprand>0.10) words[i]="it$is$so";
            else if (temprand>0.09) words[i]="economic";
            else if (temprand>0.08) words[i]="software";
            else if (temprand>0.07) words[i]="patterns";
            else if (temprand>0.06) words[i]="finalize";
            else if (temprand>0.05) words[i]="surprise";
            else if (temprand>0.04) words[i]="optimist";
            else if (temprand>0.03) words[i]="continue";
            else if (temprand>0.02) words[i]="never$be";
            else if (temprand>0.01) words[i]="trotting";
            else if (temprand>0.00) words[i]="informal";
            }
        else if (string_length(words[i])==9){
                 if (temprand>0.975) words[i]="seriously";
            else if (temprand>0.950) words[i]="wholesome";
            else if (temprand>0.925) words[i]="laughable";
            else if (temprand>0.900) words[i]="musically";
            else if (temprand>0.875) words[i]="destroyed";
            else if (temprand>0.850) words[i]="happiness";
            else if (temprand>0.825) words[i]="screaming";
            else if (temprand>0.800) words[i]="dangerous";
            else if (temprand>0.775) words[i]="hyperbole";
            else if (temprand>0.750) words[i]="precisely";
            else if (temprand>0.725) words[i]="does$well";
            else if (temprand>0.700) words[i]="jampacked";
            else if (temprand>0.675) words[i]="handstand";
            else if (temprand>0.650) words[i]="mountains";
            else if (temprand>0.625) words[i]="sparkling";
            else if (temprand>0.600) words[i]="overwhelm";
            else if (temprand>0.575) words[i]="extremely";
            else if (temprand>0.550) words[i]="ducklings";
            else if (temprand>0.525) words[i]="pointless";
            else if (temprand>0.500) words[i]="drum$solo";
            else if (temprand>0.475) words[i]="ingeneous";
            else if (temprand>0.450) words[i]="explained";
            else if (temprand>0.425) words[i]="ice$cream";
            else if (temprand>0.400) words[i]="balancing";
            else if (temprand>0.375) words[i]="very$long";
            else if (temprand>0.350) words[i]="hopefully";
            else if (temprand>0.325) words[i]="overdrive";
            else if (temprand>0.300) words[i]="immediate";
            else if (temprand>0.275) words[i]="quadruple";
            else if (temprand>0.250) words[i]="breakfast";
            else if (temprand>0.225) words[i]="twinkling";
            else if (temprand>0.200) words[i]="eat$chips";
            else if (temprand>0.175) words[i]="excuse$me";
            else if (temprand>0.150) words[i]="anomalous";
            else if (temprand>0.125) words[i]="riverside";
            else if (temprand>0.100) words[i]="dastardly";
            else if (temprand>0.075) words[i]="meatballs";
            else if (temprand>0.050) words[i]="avoidable";
            else if (temprand>0.025) words[i]="rock$star";
            else if (temprand>0.000) words[i]="fortunate";
            }
        else if (string_length(words[i])==10){
                 if (temprand>0.975) words[i]="incredible";
            else if (temprand>0.950) words[i]="particular";
            else if (temprand>0.925) words[i]="especially";
            else if (temprand>0.900) words[i]="strive$for";
            else if (temprand>0.875) words[i]="strawberry";
            else if (temprand>0.850) words[i]="bitterness";
            else if (temprand>0.825) words[i]="flattening";
            else if (temprand>0.800) words[i]="absolutely";
            else if (temprand>0.775) words[i]="annihilate";
            else if (temprand>0.750) words[i]="definitely";
            else if (temprand>0.725) words[i]="Zentraidon";
            else if (temprand>0.700) words[i]="hopelessly";
            else if (temprand>0.675) words[i]="Yukabacera";
            else if (temprand>0.650) words[i]="I$guess$so";
            else if (temprand>0.625) words[i]="ridiculous";
            else if (temprand>0.600) words[i]="condiments";
            else if (temprand>0.575) words[i]="little$bit";
            else if (temprand>0.550) words[i]="eventually";
            else if (temprand>0.525) words[i]="but$really";
            else if (temprand>0.500) words[i]="victorious";
            else if (temprand>0.475) words[i]="persistent";
            else if (temprand>0.450) words[i]="scrambling";
            else if (temprand>0.425) words[i]="determined";
            else if (temprand>0.400) words[i]="obliterate";
            else if (temprand>0.375) words[i]="these$days";
            else if (temprand>0.350) words[i]="the$circus";
            else if (temprand>0.325) words[i]="undeniably";
            else if (temprand>0.300) words[i]="hot$drinks";
            else if (temprand>0.275) words[i]="Clown$Mode";
            else if (temprand>0.250) words[i]="in$pyjamas";
            else if (temprand>0.225) words[i]="gelatinous";
            else if (temprand>0.200) words[i]="tropically";
            else if (temprand>0.175) words[i]="by$the$way";
            else if (temprand>0.150) words[i]="lawn$mower";
            else if (temprand>0.125) words[i]="skillfully";
            else if (temprand>0.100) words[i]="accidental";
            else if (temprand>0.075) words[i]="eh$heh$heh";
            else if (temprand>0.050) words[i]="carry$over";
            else if (temprand>0.025) words[i]="candy$cane";
            else if (temprand>0.000) words[i]="positively";
            }
        else if (string_length(words[i])==11){
                 if (temprand>0.975) words[i]="trampolines";
            else if (temprand>0.950) words[i]="tambourines";
            else if (temprand>0.925) words[i]="subordinate";
            else if (temprand>0.900) words[i]="smouldering";
            else if (temprand>0.875) words[i]="problematic";
            else if (temprand>0.850) words[i]="platforming";
            else if (temprand>0.825) words[i]="obfuscation";
            else if (temprand>0.800) words[i]="lumberjacks";
            else if (temprand>0.775) words[i]="inscrutably";
            else if (temprand>0.750) words[i]="disgraceful";
            else if (temprand>0.725) words[i]="discography";
            else if (temprand>0.700) words[i]="centrifugal";
            else if (temprand>0.675) words[i]="atmospheric";
            else if (temprand>0.650) words[i]="without$the";
            else if (temprand>0.625) words[i]="lobster$tea";
            else if (temprand>0.600) words[i]="shoplifting";
            else if (temprand>0.575) words[i]="appropriate";
            else if (temprand>0.550) words[i]="inexcusable";
            else if (temprand>0.525) words[i]="windsurfing";
            else if (temprand>0.500) words[i]="warehousing";
            else if (temprand>0.475) words[i]="voraciously";
            else if (temprand>0.450) words[i]="vandalizing";
            else if (temprand>0.425) words[i]="proper$chap";
            else if (temprand>0.400) words[i]="apocalyptic";
            else if (temprand>0.375) words[i]="untouchable";
            else if (temprand>0.350) words[i]="meaningless";
            else if (temprand>0.325) words[i]="unqualified";
            else if (temprand>0.300) words[i]="undrinkable";
            else if (temprand>0.275) words[i]="terminology";
            else if (temprand>0.250) words[i]="sugarcoated";
            else if (temprand>0.225) words[i]="spontaneous";
            else if (temprand>0.200) words[i]="sponge$cake";
            else if (temprand>0.175) words[i]="pulverizing";
            else if (temprand>0.150) words[i]="outsourcing";
            else if (temprand>0.125) words[i]="informative";
            else if (temprand>0.100) words[i]="disturbance";
            else if (temprand>0.075) words[i]="considering";
            else if (temprand>0.050) words[i]="astonishing";
            else if (temprand>0.025) words[i]="androgynous";
            else if (temprand>0.000) words[i]="party$down!";
            }
        else if (string_length(words[i])==12){
                 if (temprand>0.975) words[i]="alphabetized";
            else if (temprand>0.950) words[i]="businesslike";
            else if (temprand>0.925) words[i]="displacement";
            else if (temprand>0.900) words[i]="fiber$donuts";
            else if (temprand>0.875) words[i]="electrifying";
            else if (temprand>0.850) words[i]="exasperating";
            else if (temprand>0.825) words[i]="instrumental";
            else if (temprand>0.800) words[i]="instructions";
            else if (temprand>0.775) words[i]="kaleidoscope";
            else if (temprand>0.750) words[i]="metaphorical";
            else if (temprand>0.725) words[i]="microwavable";
            else if (temprand>0.700) words[i]="misadventure";
            else if (temprand>0.675) words[i]="motivational";
            else if (temprand>0.650) words[i]="neutralizing";
            else if (temprand>0.625) words[i]="nonhazardous";
            else if (temprand>0.600) words[i]="or$something";
            else if (temprand>0.575) words[i]="really$nifty";
            else if (temprand>0.550) words[i]="paperweights";
            else if (temprand>0.525) words[i]="questionable";
            else if (temprand>0.500) words[i]="receptionist";
            else if (temprand>0.475) words[i]="snowboarding";
            else if (temprand>0.450) words[i]="the$sandwich";
            else if (temprand>0.425) words[i]="subscription";
            else if (temprand>0.400) words[i]="tasty$sallad";
            else if (temprand>0.375) words[i]="fish$n$chips";
            else if (temprand>0.350) words[i]="tranquilizer";
            else if (temprand>0.325) words[i]="unimpressive";
            else if (temprand>0.300) words[i]="fine$weather";
            else if (temprand>0.275) words[i]="preposterous";
            else if (temprand>0.250) words[i]="alliteration";
            else if (temprand>0.225) words[i]="manipulation";
            else if (temprand>0.200) words[i]="installation";
            else if (temprand>0.175) words[i]="rather$quite";
            else if (temprand>0.150) words[i]="aristocratic";
            else if (temprand>0.125) words[i]="satisfactory";
            else if (temprand>0.100) words[i]="certificated";
            else if (temprand>0.075) words[i]="as$if$it$was";
            else if (temprand>0.050) words[i]="this$pudding";
            else if (temprand>0.025) words[i]="typ$liek$dis";
            else if (temprand>0.000) words[i]="*rolls$eyes*";
            }
        }
    }

//all vowels
for (i=1;i<=numwords;i+=1){
    if (words[i]!="you" && words[i]!="You" && words[i]!="YOU"){
        temprand=random(1);
        if (temprand>0.99-global.scramblefactor*0.01){
            temprand=ceil(random(6));
            if (temprand==1){
                vowel1="a";
                vowel2="A";
                }
            else if (temprand==2){
                vowel1="o";
                vowel2="O";
                }
            else if (temprand==3){
                vowel1="u";
                vowel2="U";
                }
            else if (temprand==4){
                vowel1="e";
                vowel2="E";
                }
            else if (temprand==5){
                vowel1="i";
                vowel2="I";
                }
            else if (temprand==6){
                vowel1="y";
                vowel2="Y";
                }
            words[i]=string_replace(words[i],"a",vowel1);
            words[i]=string_replace(words[i],"A",vowel2);
            words[i]=string_replace(words[i],"o",vowel1);
            words[i]=string_replace(words[i],"O",vowel2);
            words[i]=string_replace(words[i],"u",vowel1);
            words[i]=string_replace(words[i],"U",vowel2);
            words[i]=string_replace(words[i],"e",vowel1);
            words[i]=string_replace(words[i],"E",vowel2);
            words[i]=string_replace(words[i],"i",vowel1);
            words[i]=string_replace(words[i],"I",vowel2);
            words[i]=string_replace(words[i],"y",vowel1);
            words[i]=string_replace(words[i],"Y",vowel2);
            }
        }
    }

//OVERWRITE THE FINAL STRING WITH THE NEW WORDS
//overwrite the appropriate words in the final string with each new word
for (i=1;i<=numwords;i+=1){
    wordlength=string_length(words[i]);
    //capitilize the word
    if (i>1){
        tempchar=string_char_at(tempstring2,wordp[i]-2);
        if (tempchar=="." || tempchar=="!" || tempchar=="?" || tempchar==":"){
            if (wordlength>1)
                words[i]=string_upper(string_copy(words[i],1,1))+string_copy(words[i],2,wordlength);
            else
                words[i]=string_upper(string_copy(words[i],1,1));
            }
        }
    //delete and replace word
    tempstring2=string_delete(tempstring2,wordp[i],wordlength);
    tempstring2=string_insert(words[i],tempstring2,wordp[i]);
    }
text[page]=tempstring2;

}
#define scr_terminatemessage
//Terminate, or continue chat sequence
if (room==rom_cut){
    if (global.chat==global.chats || global.chats==0){
        global.chat=0;
        global.chats=0;
        with (obj_chat)
            instance_destroy();
        obj_cutsabot.timeline_speed=1;
        }
    else
        obj_chat.alarm[0]=8;
    with (obj_chatmessagetext) instance_destroy();
    with (obj_frame) instance_destroy();
    with (obj_scrollarrow) instance_destroy();
    global.textid="0";
    }

else{
    if (global.chat==global.chats || global.chats==0){
        global.chat=0;
        global.chats=0;
        obj_iji.takingpain=0;
        obj_iji.recovering=0;
        obj_iji.goaroundtrigger=0;
        obj_shakescreen.alarm[1]=1; //Related to pausing delay (before pause menu?)
        with (obj_chat)
            instance_destroy();
        if (!obj_iji.holdafterchat && !global.levelstation)
            global.ignoreall=0;
        //Start musics
        with (obj_sabot){
            if (obj_iji.startmusics){
                if (room==rom_sector1 || room==rom_sector2){
                    if (global.wty)
                        scr_music("mus_sad");
                    else
                        scr_music("mus_secintro");
                    }
                else if (room==rom_sector6)
                    scr_music("mus_sec1");
                else if (room==rom_sector7)
                    scr_music("mus_sec2");
                else if (room==rom_sector3 || room==rom_sector8)
                    scr_music("mus_sec3");
                else if (room==rom_sector4 || room==rom_sector9)
                    scr_music("mus_sec4");
                else if (room==rom_sector5)
                    scr_music("mus_sec5");
                else if (room==rom_sectorx){
                    if (instance_number(obj_asha2)==1)
                        scr_music("mus_boss");
                    else if (music!="mus_sec5")
                        scr_music("mus_sec5");
                    }
                else if (room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14)
                    scr_music("mus_boss");
                obj_iji.startmusics=0;
                }
            }
        //Asha ingame cut
        if (obj_iji.sec8cut1){
            obj_iji.sec8cut1=0;
            obj_sabot.timeline_index=tim_sec8cut1;
            obj_sabot.timeline_position=0;
            }
        if (obj_iji.sec8cut2){
            obj_iji.sec8cut2=0;
            obj_sabot.timeline_index=tim_sec8cut2;
            obj_sabot.timeline_position=0;
            }
        if (obj_iji.sec8cut3){
            obj_iji.sec8cut3=0;
            obj_sabot.timeline_index=tim_sec8cut3;
            obj_sabot.timeline_position=0;
            }
        if (obj_iji.sec8cut4){
            obj_iji.sec8cut4=0;
            obj_sabot.timeline_index=tim_sec8cut4;
            obj_sabot.timeline_position=0;
            }
        //Torbody
        if (room==rom_sector16){
            with (obj_trigger)
                instance_destroy();
            if (!obj_torbodytrigger.lookup){
                obj_torbodytrigger.lookup=1;
                obj_torbodytrigger.timeline_index=tim_torbodylookup;
                obj_torbodytrigger.timeline_position=0;
                }
            else if (instance_number(obj_strikelight)==15 && !obj_torbodytrigger.jump){
                obj_torbodytrigger.jump=1;
                obj_torbodytrigger.timeline_index=tim_torbodyjump;
                obj_torbodytrigger.timeline_position=0;
                }
            }
        }
    else
        obj_chat.alarm[0]=8;
    with (obj_messagetext) instance_destroy();
    with (obj_frame) instance_destroy();
    with (obj_scrollarrow) instance_destroy();
    global.textid="0";
    }
#define scr_beginmessage
//Begin message
//Argument0 is reading logbook
obj_iji.alwayschangeweapon=0;
if (room==rom_cut){
    instance_create(0,0,obj_chatmessagetext);
    instance_create(799,599,obj_scrollarrow);
    obj_chatmessagetext.page=0;
    }
else{
    obj_iji.cannotpause=1;
    obj_iji.readinglog=0;
    if (argument0==1)
        (instance_create(obj_iji.x,obj_iji.y,obj_messagetext)).outline=global.outline;
    else
        instance_create(obj_iji.x,obj_iji.y,obj_messagetext);
    instance_create(obj_shakescreen.x+399,obj_shakescreen.y+299,obj_scrollarrow);
    obj_messagetext.page=0;
    obj_iji.goingleft=0;
    obj_iji.goingright=0;
    obj_iji.running=0;
    global.ignoreall=1;
    }

#define scr_messageframe
//Create message frame
if (room==rom_cut){
    with (obj_frame) instance_destroy();
    count=0;
    while (count<100){
        instance_create(8*count,472,obj_frame);
        count+=1;
        }
    if (obj_chatmessagetext.page=(obj_chatmessagetext.pages-1))
        with (obj_scrollarrow) instance_destroy();
    }

else{
    with (obj_frame) instance_destroy();
    count=0;
    while (count<100){
        instance_create(obj_shakescreen.x-400+(8*count),obj_shakescreen.y+172,obj_frame);
        count+=1;
        }
    if ((obj_messagetext.page=(obj_messagetext.pages-1) && instance_number(obj_chat)==1) || (obj_messagetext.pages==1 && instance_number(obj_chat)==0))
        with (obj_scrollarrow) instance_destroy();
    }
#define scr_topmessage
//Topmessage
if (instance_number(obj_messagetext)==0 && instance_number(obj_cracktext)==0)
    textadjust=48;
else if (obj_messagetext.sabotscroll)
    textadjust=48;
else
    textadjust=0;
if (room==rom_sector15)
    textadjust=18;
comparetopmes=string_copy(global.topmessage,1,6);
if (prevtopmessage!=global.topmessage && comparetopmes!="Nano +"){
    global.countingnano=0;
    dotopmessageintro=1;
    topmessageintro=0;
    }
if (dotopmessageintro==1){
    topmessageintro+=1;
    if (topmessageintro==1)
        textadjust+=16;
    else if (topmessageintro==2)
        textadjust+=8;
    else if (topmessageintro==3)
        textadjust+=4;
    else if (topmessageintro==4){
        textadjust+=0;
        dotopmessageintro=0;
        }
    }
prevtopmessage=global.topmessage;
if (global.topmessage!="0"){
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(obj_shakescreen.x-(string_length(global.topmessage)*6),obj_shakescreen.y+146+textadjust,global.topmessage,28,800);
    }
if (global.erasetop<120)
    global.erasetop+=1;
else{
    global.countingnano=0;
    global.topmessage="0";
    dotopmessageintro=0;
    topmessageintro=0;
    }

//Debug: Show killdata
if (global.showdata){
    if (global.topmessagekilldata!="0"){
        draw_set_font(global.fontwhite);
        draw_set_color(c_white);
        draw_text_ext(obj_shakescreen.x-390,obj_shakescreen.y-220,global.topmessagekilldata,28,800);
        }
    global.topmessagekilldata="0";
    }
//Debug: Show killdata discrepancies
else if (global.killdatadisc){
    localkilldatadisc=0;
    for (i=1;i<793;i+=1){
        if (global.killdata[i]>0)
            localkilldatadisc+=1;
        }
    topmsgkilltext="D: "+string(localkilldatadisc)+"#K: "+string(global.kills+global.totkills);
    if (localkilldatadisc!=global.kills+global.totkills)
        topmsgkilltext+="#!!!WARNING!!! KILLDATA AND KILLS MISMATCH#!!!WARNING!!! KILLDATA AND KILLS MISMATCH#!!!WARNING!!! KILLDATA AND KILLS MISMATCH";
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(obj_shakescreen.x-390,obj_shakescreen.y-220,topmsgkilltext,28,800);
    }

//Display Overload
if (obj_iji.overload>0){
    if (obj_iji.overload==1) topmessage2="NANOCHAOS - damage retaliation: ";
    if (obj_iji.overload==2) topmessage2="NANOSPARK - damage enemies: ";
    if (obj_iji.overload==3) topmessage2="NANOVIS - partial invisibility: ";
    if (obj_iji.overload==4) topmessage2="NANOBLAST - explosive shotgun: ";
    if (obj_iji.overload==5) topmessage2="NANOMIRROR - automatic reflector: ";
    if (obj_iji.overload==6) topmessage2="NANOLIFE - revive once: ";
    if (obj_iji.overload==7) topmessage2="NANORAGE - infinite ammo: ";
    if (obj_iji.overload==8) topmessage2="NANOSHIELD - no armor damage: ";
    if (obj_iji.overload==9) topmessage2="NANOFORGE - get ammo when damaged: ";
    if (obj_iji.overload==10) topmessage2="NANOREFLEX - tech all damage: ";
    if (obj_iji.overloadtime<300)
        topmessage2+=string_copy("0"+string(obj_iji.overloadtime/30),0,2);
    else
        topmessage2+=string_copy(string(obj_iji.overloadtime/30),0,2);
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(obj_shakescreen.x-(string_length(topmessage2)*6),obj_shakescreen.y-288,topmessage2,28,800);
    }

//Display time to live
if (!global.ignoreall && !beginttl && global.specialtrigger16 && (room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx))
    beginttl=1;
if (!obj_iji.mdk && beginttl && (ttlmin>0 || ttlsec>0 || ttlhun>0)){
    topmessage2="Time to live: "+string(ttlmin)+":";
    if (ttlsec<10)
        topmessage2+="0";
    topmessage2+=string(ttlsec)+".";
    if (ttlhun<10)
        topmessage2+="0";
    topmessage2+=string(ttlhun);
    draw_set_font(global.fontwhite);
    draw_set_color(c_white);
    draw_text_ext(obj_shakescreen.x-(string_length(topmessage2)*6),obj_shakescreen.y-288,topmessage2,28,800);
    }

//Display location topmessages
if (topmessage3cyc>0){
if (topmessage3slow)
    topmessage3cyc-=0.4;
else
    topmessage3cyc-=1;
if (topmessage3dcyc<string_length(topmessage3)){
    if (topmessage3slow)
        topmessage3dcyc+=0.2;
    else
        topmessage3dcyc+=1;
    }
topmessage3draw=string_copy(topmessage3,1,ceil(topmessage3dcyc));
draw_set_font(global.fontwhite);
draw_set_color(c_white);
draw_text_ext(obj_shakescreen.x-(string_length(topmessage3)*6),obj_shakescreen.y-256,topmessage3draw,28,800);
}
#define scr_specialmessages
obj_iji.startmusics=0;
obj_iji.takingpain=1;
obj_iji.recovering=0;
obj_iji.goaroundtrigger=1;

//Weapon combination messages
if (global.textid=="weapstation9"){
text[0]="BUSTER GUN                                                       Select this weapon by pressing the 1 key twice. A hybrid of the Shotgun and Machinegun, this weapon uses Machinegun ammunition.";
text[1]="This Nanoweapon behaves like a Shotgun, but fires more than thrice as fast, and uses lots of Machinegun bullets in the process. Perfect for taking out single large enemies.";
text[2]="Another way to select the Buster gun is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Shotgun is selected, then pressing "+chr(global.specialkey)+".";
pages=3;}
if (global.textid=="weapstation10"){
text[0]="SPLINTERGUN                                                      Select this weapon by pressing the 2 key twice. A hybrid of the Machinegun and Shocksplinter, this weapon uses Machinegun ammunition.";
text[1]="This Nanoweapon fires `splinters`, which are the smaller shards generated by a Shocksplinter explosion, at the speed of a machinegun. It is effective both against large single enemies, and groups of smaller ones.";
text[2]="Another way to select the Splintergun gun is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Machinegun is selected, then pressing "+chr(global.specialkey)+".";
pages=3;}
if (global.textid=="weapstation11"){
text[0]="SPREAD ROCKETS                                                   Select this weapon by pressing the 3 key twice. A hybrid of the Shotgun and Rocket launcher, this weapon uses Launcher ammunition.$";
text[1]="This Nanoweapon fires three rockets at once, and has a higher damage per second ratio than the Rocket launcher. Each shot uses 3 Launcher ammo, and it is primarily designed for taking out single large enemies.";
text[2]="Another way to select the Spread rockets is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Rocket launcher is selected, then pressing "+chr(global.specialkey)+".";
pages=3;}
if (global.textid=="weapstation12"){
text[0]="NUKE                                                             Select this weapon by pressing the 4 key twice. A hybrid of the Rocket launcher and MPFB Devastator, this weapon uses MPFB ammunition.";
text[1]="This Nanoweapon deals immediate damage to all enemies in the vicinity, at the cost of 3 MPFB cells. Firing it knocks you flying, but doesn't hurt you. Ammunition efficiency is highly dependent on the situation this weapon is fired in.";
text[2]="Another way to select the Nuke is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the MPFB Devastator is selected, then pressing "+chr(global.specialkey)+".";
pages=3;}
if (global.textid=="weapstation13"){
text[0]="RESONANCE REFLECTOR                                              Select this weapon by pressing the 5 or "+chr(global.weap5key)+" key twice. A hybrid of the Shotgun and Resonance detonator, this weapon uses no ammunition.";
text[1]="This devious Nanoweapon cannot deal any direct damage, but is able to reflect mass-based projectiles, such as rockets, MPFB and shocksplinter. However, it cannot reflect instant-hit weapons or the Pulse cannon weapon types.";
if (global.rrkills)
    text[2]="Note: reflected projectiles DO award you kills when striking enemies.";
else
    text[2]="Note: reflected projectiles do NOT award you kills when striking enemies.";
text[3]="Another way to select the Resonance reflector is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Resonance detonator is selected, then pressing "+chr(global.specialkey)+".";
pages=4;}
if (global.textid=="weapstation14"){
text[0]="HYPER PULSE                                                      Select this weapon by pressing the 6 or "+chr(global.weap6key)+" key twice. A hybrid of the Resonance detonator and Pulse cannon, this weapon uses Pulse cannon ammunition.";
text[1]="If an enemy has less than 33% of his armor left when hit by a Hyper pulse projectile, he will be knocked down, but only if your Strength level is high enough to let you kick the enemy down normally. Hyper pulse can also destroy Shield doors.";
text[2]="Another way to select the Hyper pulse is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Pulse cannon is selected, then pressing "+chr(global.specialkey)+".";
pages=3;}
if (global.textid=="weapstation15"){
text[0]="PLASMA CANNON                                                    Select this weapon by pressing the 7 or "+chr(global.weap7key)+" key twice. A hybrid of the Pulse cannon and Shocksplinter, this weapon uses Shock ammunition.";
text[1]="This Nanoweapon fires an instant-hit plasma bolt, at the cost of 2 Shock cells. Only the very middle of the beam is dangerous; the surrounding light display is harmless. The beam causes a splinter explosion when it hits a solid wall.";
text[2]="Another way to select the Plasma cannon is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Shocksplinter is selected, then pressing "+chr(global.specialkey)+".";
pages=3;}
if (global.textid=="weapstation16"){
text[0]="VELOCITHOR V2-10                                                 Select this weapon by pressing the 8 or "+chr(global.weap8key)+" key twice. A hybrid of the MPFB Devastator and Cyclic Fusion Ignition system, this weapon uses CFIS ammunition.";
text[1]="An upgraded Cyclic Fusion Ignition System, this Nanoweapon deals damage at a faster rate but has a slightly lower damage per ammunition rate. Its unstoppable power cuts straight through solid walls and enemies alike.";
text[2]="Another way to select the Velocithor V2-10 is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Cyclic Fusion Ignition System is selected, then pressing "+chr(global.specialkey)+".";
pages=3;}

//Special traits
if (global.textid=="specialtrait1"){
text[0]="As a result of upgrading your Health stat to level 10,           you have gained the Special trait SUPPRESSION.                   Special traits are permanent, and are earned for every stat that reaches level 10. Continue reading for more info on this trait.";
text[1]="With SUPPRESSION, your personal Nanofield gains extreme          resistance to Nano-based attacks. Whenever an attack deals more  than 1 hit point worth of damage in a single hit, the damage you receive will be reduced by 1 hit point.";
pages=2;
global.erasetop=0;
global.ignorestation=120;
global.topmessage="SPECIAL TRAIT INFO ADDED TO PAUSE MENU";}
if (global.textid=="specialtrait2"){
text[0]="As a result of upgrading your Attack stat to level 10,           you have gained the Special trait IMPROVED AUTOLOADING.          Special traits are permanent, and are earned for every stat that reaches level 10. Continue reading for more info on this trait.";
text[1]="With IMPROVED AUTOLOADING, the subroutine programming of your    Nanogun is enhanced, lowering the reload time of all             non-rapidfire weapons by 20%. This does not affect the time it   takes to switch Nanoweapons.";
pages=2;
global.erasetop=0;
global.ignorestation=120;
global.topmessage="SPECIAL TRAIT INFO ADDED TO PAUSE MENU";}
if (global.textid=="specialtrait3"){
text[0]="As a result of upgrading your Assimilate stat to level 10,       you have gained the Special trait ADVANCED RECOVERY.             Special traits are permanent, and are earned for every stat that reaches level 10. Continue reading for more info on this trait.";
text[1]="With ADVANCED RECOVERY, assimilating a red Nanofield will recover one additional Hit Point, and green Nanofields will recover one Hit Point instead of none. Additionally, your ammo capacity has been increased to 99.";
pages=2;
global.erasetop=0;
global.ignorestation=120;
global.topmessage="SPECIAL TRAIT INFO ADDED TO PAUSE MENU";}
if (global.textid=="specialtrait4"){
text[0]="As a result of upgrading your Strength stat to level 10,         you have gained the Special trait CYBERNETIC ENDURANCE.          Special traits are permanent, and are earned for every stat that reaches level 10. Continue reading for more info on this trait.";
text[1]="With CYBERNETIC ENDURANCE, the temporary invulnerability time    after being damaged is increased by 50%. You are no longer       knocked to the ground by the MPFB Devastator's recoil.";
pages=2;
global.erasetop=0;
global.ignorestation=120;
global.topmessage="SPECIAL TRAIT INFO ADDED TO PAUSE MENU";}
if (global.textid=="specialtrait5"){
text[0]="As a result of upgrading your Crack stat to level 10,            you have gained the Special trait ELECTRONIC MASTERY.            Special traits are permanent, and are earned for every stat that reaches level 10. Continue reading for more info on this trait.";
text[1]="With ELECTRONIC MASTERY, whenever you fail to crack something,   no adverse effects occur (enemies don't notice you, security     crates don't break/explode on higher difficulty levels etc),     blue nodes no longer flicker, and cracking time is increased.";
pages=2;
global.erasetop=0;
global.ignorestation=120;
global.topmessage="SPECIAL TRAIT INFO ADDED TO PAUSE MENU";}
if (global.textid=="specialtrait6"){
text[0]="As a result of upgrading your Tasen stat to level 10,            you have gained the Special trait VENGEANCE.                     Special traits are permanent, and are earned for every stat that reaches level 10. Continue reading for more info on this trait.";
text[1]="With VENGEANCE, you get +1 to all Tasen ammunition you pick up.";
pages=2;
global.erasetop=0;
global.ignorestation=120;
global.topmessage="SPECIAL TRAIT INFO ADDED TO PAUSE MENU";}
if (global.textid=="specialtrait7"){
text[0]="As a result of upgrading your Komato stat to level 10,           you have gained the Special trait GLORY.                         Special traits are permanent, and are earned for every stat that reaches level 10. Continue reading for more info on this trait.";
text[1]="With GLORY, you get +1 to all Komato ammunition you pick up.";
pages=2;
global.erasetop=0;
global.ignorestation=120;
global.topmessage="SPECIAL TRAIT INFO ADDED TO PAUSE MENU";}
#define scr_logs1
obj_iji.startmusics=0;

//Logs in Sector 1
if (global.textid=="text101"){
text[0]="Your body is protected by a personal Nanofield - millions of microscopic robots working in unison. Enemy Machineguns damage your Nanofield's armor, and when your armor drops to zero, you'll take health damage and the armor is refilled.";
text[1]="Enemy Nanofields work exactly like yours, but their armor will also regenerate. Your Nanogun can carry an array of Nanoweapons, but is currently only equipped with a Shotgun, which deals armor damage.";
pages=2;}
if (global.textid=="text102"){
text[0]="Assimilating blue Nano into your personal Nanofield will add to its resources, which will let you level up and gain a `point`. Simply leveling up doesn't make you stronger; you must use the point you got at the Cyborg station further to your right.";
pages=1;}
if (global.textid=="text103"){
text[0]="Press "+chr(global.usekey)+" to activate the Cyborg station, then use the arrow keys and "+chr(global.usekey)+" to choose a stat to level up. Press any other key to cancel.$";
text[1]="I strongly recommend starting with leveling up Health - this complex is full of blue-clad Tasen Soldiers, whose Rocket launchers will deal 2 hit points of damage regardless of your armor.";
pages=2;}
if (global.textid=="text104"){
text[0]="Assimilation is a slow process. This complex is divided into Sectors, and I estimate that you can only gain "+string(5-global.difficulty)+" levels per Sector. Here's a rundown of your stats:";
text[1]="`Health` determines your maximum hit points.";
text[2]="`Attack` improves the programming of your Nanogun, increasing the power of all your Nanoweapons.";
text[3]="`Assimilate` lets you assimilate more resources into your personal Nanofield, increasing your ammo capacity for all Nanoweapons by "+string(global.assimilatesize)+". You'll also repair more armor when assimilating any kind of Nano.";
text[4]="`Strength` determines the power of your kick. Upgrade it to knock down bigger enemies and tougher doors. If your kick merely staggers an enemy, you're not dealing any damage.";
text[5]="`Crack` determines your skill at cracking various Nanotechnology. I'll go over this later, so ignore this stat for now.";
text[6]="`Tasen` lets you assimilate more powerful Tasen Nanoweapons.";
text[7]="`Komato` is for assimilating certain Nanoweapons the Tasen stole from another alien race. They're hard to come by, so I suggest not bothering with this one yet.";
pages=8;}
if (global.textid=="text105"){
text[0]="Press Enter to switch your Nanogun to Passive mode. This will replace your basic Nanoweapons with non-lethal versions. To view detailed descriptions of your Active and Passive weapons, look them up in the Help/info part of the Pause menu (Escape key).";
pages=1;}

if (global.textid=="text114"){
text[0]="Author: Tasen Center of Information#$#Subject: Shield doors";
text[1]="In order to improve security, modern Shield doors are fitted with an extremely dense Nanofield. Prolonged exposure to such red-glowing fields is lethal, so they cannot be used for personal protection with our current level of technology. However, since";
text[2]="bashing a Nanofield into another imparts a lot of force, Shield doors can be destroyed simply by kicking or ramming them hard enough.";
pages=3;}
if (global.textid=="text115"){
text[0]="Author: Tasen Soldier ER152:OPTM#$#Subject: Turn report";
text[1]="Nothing to report as usual. It's not like anything here was ever a threat. Most of us agree with Krotera though, so no alien is to escape alive.";
pages=2;}
if (global.textid=="text116"){
text[0]="Author: Tasen Soldier RO408:TMEM#$#Subject: `Humans`";
text[1]="According to Krotera, the sentient race we discovered here is called the `humans`. I don't know how they found that out, and I don't wanna know. I take orders first and ask questions later.";
pages=2;}
if (global.textid=="text117"){
text[0]="Author: Tasen Scout TE343:AOKD#$#Subject: Storage area";
text[1]="Did I lock the door to the storage area? In fact, did I even open it in the first place? Now that I think about it, I don't think I've ever been to the storage area before.";
pages=2;}
if (global.textid=="text118"){
text[0]="This is Dan writing. I've just learnt how to crack these logbooks, and now Doc wanted me to come over and see her for myself. I know the Tasen patrol spots, but the moment I leave the control room I'm practically blind. Inside I can see and listen";
text[1]="to the whole complex, talk to Doc and the others through the speakers, but outside I'm just a human among the Tasen. I've no idea how long our supplies will last, they've got the storerooms guarded. Whatever, as long as Iji's still alive. That Nanofield";
text[2]="they found sparked something in Becker's eyes. It's insane, but it's the only thing that can withstand their weapons. I don't know if it makes me feel better to see her lying here. She's breathing, maybe even dreaming, unaware of what's to come.";
pages=3;}
if (global.textid=="text119"){
text[0]="This is Sonia Plait. It's amazing what we have accomplished. Surviving for this long among the Tasen is one thing, but when Dan finally deciphered their language and discovered how to crack their logbooks, even typing with a readable (for us) font, I";
text[1]="suppose that's when the change happened. The change in me, Doc and Becker to believe it really is possible to implant a Tasen Nanofield into this girl without killing her in the process. Their technology is unlike anything we've seen, but there's a";
text[2]="clear, if non-human cognitive process behind it. The subject is Dan's sister, the older daughter of Ron over in Sector 6. He's dead of course. I advised Dan to throw away his emotions early on, or we may run into trouble. We can only hope Iji will do";
text[3]="the same. We don't have the time or resources to get her a decent suit of armor underneath the Nanofield, like the Tasen use for enhanced shock protection. Instead we'll focus on mobility - less restraining clothes, more motion amplifiers. She's been decked";
text[4]="for five months though. I've gotten rid of my expectations too, so I'm prepeared for the possibility that she won't wake up when we boot the Nanofield, but one thing I've never given up on - hope. Silly, but true.";
pages=5;}
if (global.textid=="text120"){
text[0]="Author: Tasen Scout KT581:PKBE#$#Subject: What's a `Pause menu`?";
text[1]="Seriously. Commander keeps telling us, `if you ever forget about your weapons, enemies or abilities, check the Pause menu by pressing Escape`. If this is some new helmet interface upgrade, I bet the Soldiers are keeping it from the Scouts. Jerks.";
pages=2;}
if (global.textid=="text121"){
text[0]="This is Sonia Plait. Some of the `Nanoweapons` we've managed to understand seem, by chance, very close to human weaponry. The translations we put into Iji's Nanofield reflect what kind of effect she would expect of them, such as `Shotgun` and";
text[1]="`Machinegun`. Others are so out there we simply did our best with the translation. We also found mentions of combining Nanoweapons and interfacing with doors, meaning Iji should be able to connect to other Nanofields without any further work on our part. Let's";
text[2]="hope she understands how, I didn't sleep for days when poring over the code. Disassembling a ternary programming language with our lab computers is like cutting cheese with a toothbrush. It appears the same goes for the Tasen - Doc believes they barely";
text[3]="understand their own technology, and there are signs it's not even theirs to begin with. Their Nanofields hold potentials they are yet to grasp, and judging by their logs, the same goes for that other species they keep referring to. I shudder at the";
text[4]="thought of where these human-looking beings came from, how ancient they are to have mastered space travel, yet how callous they are to have turned a stolen technology mainstream for military purposes. Becker says ration time. Note to self: leave";
text[5]="the thinking for when it actually matters. There's enough sugar in these vending machine leftovers to keep me awake as it is.";
pages=6;}
if (global.textid=="text122"){
text[0]="Becker writing. Plait has taken to the girl and is really pushing our work forward. I'm glad someone of her caliber is still with us! We must finish within a month because we haven't decided what to do once supplies run out. With the latest surge of troops";
text[1]="Dan is stuck in that control room so we can't share rations anymore. Whatever Doc and Plait say about the Tasen, what's most fascinating is how quickly people can adapt to dramatic changes. I mean just look at us! Look here Tasen, what's your weapons to";
text[2]="our will to live? You'll see once Iji wakes up. Oh yeah you will!";
pages=3;}

//190-196 are in scr_logsx
if (global.textid=="text197"){
text[0]="Author: Tasen Soldier HN692:JKTE#$#Subject: Sector Z research";
text[1]="Here's what we know about that damned teleporter. During the routine setup procedures, the teleporter destination was set at random, which usually means it won't connect to the other end because there's no matching pad. To everyone's surprise,";
text[2]="however, the teleporter did find a working connection somewhere. We still don't have a clue where - or WHAT - that place actually is. The few who have returned report such strange findings, we believe they've simply gone mad. Some call it a bizarre trial,";
text[3]="others think it's someone's memories, or a place beyond our own confines. Out of determination to unlock the secrets of the world beyond this teleporter, and the naming convention used by the local humans, we have dubbed this terrifying place `Sector Z`.";
text[4]="Due to the danger and secrecy involved, we have also placed an extremely powerful Nanofield lock on it - no-one will be able to use the teleporter without meeting the proper requirements. See the logs in Sector 3 for more information.";
pages=5;}
if (global.textid=="text198"){
text[0]="Author: Flip Hero#$#Subject: Anomalous occurances";
text[1]="Recently, strange things have been happening here. It's difficult enough reaching Tetron's throne room, but now some humanoid aliens have been dropping by, seemingly appearing from thin air. Most of them don't last long against the Drones. Could it be a";
text[2]="dimensional wormhole, connected to an unknown point in space and time? This may be worth investigating in further detail. Destroying Tetron's current incarnation is still of utmost importance, of course. In the meantime, I'll edit one of the";
text[3]="alien text logs and leave it here, with this message to whomever finds it: `Stop warping carelessly through space. It's irritating.`";
pages=4;}
if (global.textid=="text199"){
text[0]="Author: Remar Games#$#Subject: Thank you";
text[1]="I never thought anyone would make it this far. You are the most amazing Iji player, the most dedicated explorer and secret hunter. You've achieved what extremely few players will likely ever come close to.";
text[2]="Even though I probably won't know that you've found this place, you make me happier than you can believe. That someone would love my game so much as to explore its every corner is heartwarming.";
text[3]="The years I spent on this project were long and full of doubt. Would Iji deliver? Would anyone even like it? How about anyone even finding more than three of the posters? But you, sir or madam, have made it all worth it.";
text[4]="Pat yourself of the back, you've found one of the toughest secrets in any of my games. But is this truly the end? The Crackers' Hideout near the end of Sector 7 may have the clues you seek|";
pages=5;
outline=0;}

#define scr_logs2
obj_iji.startmusics=0;

//Logs in Sector 2
if (global.textid=="text201"){
text[0]="Hi, it's Dan. To your right is a Tasen Security door, which is different from the Shield doors you've seen so far. Since it's operated by a Nanofield, you can connect to it and `Crack` it.";
outline=2;
pages=1;}
if (global.textid=="text202"){
text[0]="Press "+chr(global.usekey)+" to connect to the Security door. An interface will appear, giving you various information on what you are about to crack. Press "+chr(global.usekey)+" to begin, and you'll see a grid of blue nodes. In the upper left corner is your green node; move this to the red";
text[1]="node before the time runs out, and without hitting any dark blue nodes, and the crack will be successful.";
outline=2;
pages=2;}
if (global.textid=="text203"){
text[0]="Everything you can crack has a Security level, so a door with a Security of 5 requires a Crack stat of 5 to bypass. Further to your right is a Security box. Shooting it will destroy the contents, so you must crack it instead. If you fail to crack";
text[1]="something, bad stuff can happen depending on the difficulty level. You can press Enter to abort a cracking attempt - if you do this before you have started the actual cracking, it won't count as a failure and no adverse effects will occur.";
outline=2;
pages=2;}
if (global.textid=="text204"){
text[0]="You can even crack a Tasen's personal Nanofield to mess it up. Usually his most powerful weapons will cease to function, and if he tries to use them, they'll backfire. He may even lose half of his current hit points the moment you crack him as well, but";
text[1]="this cannot cause him to die. I suggest hiding behind something until the enemies calm down and turn their backs to you before trying to crack them. When a cracked enemy is killed, he will always drop some useful ammunition.";
outline=2;
pages=2;}
if (global.textid=="text205"){
text[0]="To your right is a Nanoweapon station, used for combining your Nanoweapons into more powerful hybrid versions. Activate it with "+chr(global.usekey)+", then use the arrow keys and "+chr(global.usekey)+" to select the two weapons you want to combine. You can also just press the number keys for";
text[1]="each weapon directly. Fail the crack, and there's a chance you'll lose 5 ammo for each of the weapons used in the combination. The chance depends on the difficulty level.";
outline=2;
pages=2;}
if (global.textid=="text206"){
text[0]="Author: Tasen Commander PS847:JFHA#$#Subject: Screw this";
text[1]="How long is Krotera gonna keep us on guard duty? The Komato won't ever find us here, we totally trashed the humans, and it's not like we could defend ourselves if the Imperial Army actually did find is now. There's no reason to stay armed and alert when";
text[2]="we've finally found a safe place, when we should rebuild what little we have instead of spending all our resources on weapons and research. How much do they think they can pull out of this space rock anyway? I'm even starting to wonder if the humans";
text[3]="are as hostile as we thought, or if Krotera's new position is just getting to him. The guy's a walking insult to Hel Sarie. Still, orders are orders. I don't want to lose my own head when we've come this far.";
pages=4;}
if (global.textid=="text207"){
text[0]="Author: Tasen Commander UY747:UTOO#$#Subject: Human Anomaly";
text[1]="Reports are pouring in regarding an individual called the `Human Anomaly` who uses Nanotechnology, something that none of the other humans we've encountered possess. She's clearly backed by some traitorous faction or another - we have to terminate her";
text[2]="at all costs, or she might even warn the Komato Imperial Army of our presence on this planet. Some say she can understand and speak our language due to her personal Nanofield, but do not be fooled if she tries to communicate with you. Kill her on sight";
text[3]="and report it to your superior. We are not taking any chances.";
pages=4;}
if (global.textid=="text208"){
text[0]="Author: Tasen Commander TO113:MVAA#$#Subject: The lifts!";
text[1]="The lifts we installed here aren't a security problem, they're downright lethal! It's only a matter of time before someone loses an arm in one of those things. Have they ever heard of doors? Even the humans had those. Some guys have been busy blocking";
text[2]="certain lift shafts to prevent people falling into them, using the materials lying around in boxes. Speaking of, why are there so damn many boxes here? The lift music is catchy though, it plays a lot of political stuff. `Welcome to Ciretako` always";
text[3]="makes me glad I'm not in the Komato army.";
pages=4;}
if (global.textid=="text209"){
text[0]="Author: Tasen Soldier TP545:LJAK#$#Subject: Turret defenses";
text[1]="We've set up some turrets here, specifically set to target humans. They won't shoot anyone with the proper subroutine programming in their personal Nanofield. If the rumors are true that there's actually a surviving human running around here,";
text[2]="she won't last long. I heard the turrets in other areas were given some insane Nanoweapons - I don't know if they were designed for field testing, or if some of the guys around here think it's fun seeing humans getting blown to pieces. The";
text[3]="turrets' only real weakness is their ridiculously frail construction, you could kick one clean off its support pole.";
pages=4;}
if (global.textid=="text210"){
text[0]="Author: Tasen Soldier LL868:ALDK#$#Subject: Terminally bored";
text[1]="We're now officially the most bored Tasen squad in the universe. Since all we do in this remote room is keep a lookout for hostiles - of which there are none - we started shooting down the winged alien lifeforms flying by the small window in here. We";
text[2]="programmed a simple machine, using a display taken from one of our suits, and a heat sensor from a turret. The machine, quite simply, counts the little aliens killed. I believe we've taken the expression `terminally bored` to new heights.";
pages=3;}
if (global.textid=="text211"){
text[0]="Author: Tasen Soldier IF5737:IHBA#$#Subject: Alien counting machine";
text[1]="I tried hacking the alien-counting machine when no-one was looking yesterday, but that show-off Yukabacera had laid down some sophisticated encryption algorithms for it. It took me a few days, but I managed to make it display `Naotgerai rules` -";
text[2]="after which Yukabacera reprogrammed the whole thing from scratch, using a hardcoded encryption instead. I don't know which one of us is the most bored right now.";
pages=3;}
if (global.textid=="text212"){
text[0]="You should have found a Komato Resonance detonator in that box, stolen by the Tasen. Select it by pressing 5 (or "+chr(global.weap5key)+", which is one of the four secondary keys to the Komato weapons). It sends out a shockwave that works exactly like your kick, so it can destroy";
text[1]="obstacles and send enemies flying if you're strong enough.";
outline=2;
pages=2;}
if (global.textid=="text213"){
text[0]="Author: Tasen Center of Information#$#Subject: Nano Overloads"
text[1]="High concentrations of certain kinds of Nano have been proven to act as combat drugs, dramatically boosting various features of one's personal Nanofield for a brief period of time. The only drawback of assimilating such `overloads` is that the result";
text[2]="gained is completely random. Research suggests that the most powerful random abilities can only be earned by particularly aggressive subjects - a passive person could only gain the lower spectrums of the overloads, more suited to survival and";
text[3]="stealth. Conversely, a true berserker can only gain the most extreme offensive abilities.";
pages=4;}
if (global.textid=="text214"){
text[0]="Author: Tasen Center of Information#$#Subject: Instant restoration units"
text[1]="Also called `Checkpoints` for some reason, touching a restoration unit makes it fall in sync with your personal Nanofield. If you take lethal damage, the Checkpoint will retrieve your body through standard teleportation and fully restore your personal";
text[2]="Nanofield. However, the Checkpoint will be exhausted after only one use.";
pages=3;}
if (global.textid=="text215"){
text[0]="Author: Tasen Center of Information#$#Subject: Nanotechnology for you and me: becoming a fighting machine!"
text[1]="As a Tasen cyborg, your body is maintained and run by a personal Nanofield. The most important aspect of the Nanofield is its ability to be reprogrammed, like a freeform supercomputer. The Nanogun is a small shapeshifting factory that builds the";
text[2]="projectiles and firing mechanisms needed, given the right programming. Anyone with a Nanofield can even connect to another by physical contact - while this has created a `cracker` subculture, each Nanofield has a range of security measures to";
text[3]="keep even the most severe malfunctions from lethally harming the user. Furthermore it is nigh unbeatable as a physical armor, to the point where basically only Nanoweapons can scratch someone wearing a Nanofield. Throwing one field into another is highly";
text[4]="damaging, letting strong users engage in melee combat with deadly results, but actual weapons revolving around this concept were found to be resource ineffective. Exceptionally powerful Nanoweapons, such as the Phantom Hammer, can disintegrate";
text[5]="lesser Nanofields with ease.";
pages=6;}
if (global.textid=="text216"){
text[0]="Author: Tasen Soldier IF5737:IHBA#$#Subject: Passive weapons";
text[1]="Hey Vateilika, it's Naotgerai. Now that I have the time to look deeper into those Passive weapons - you know, the ones you access by pressing `Enter` - here's what I've found out. First off, all Passive Nanoweapons are strictly non-lethal, so if you're";
text[2]="worried about your kill count you can safely use them as much as you like. Your Attack stat not only increases the stun duration of the Stun gun, it also increases the range of the Impact machinegun. Finally, the Resonance disruptor will totally";
text[3]="destroy most projectiles and prevent them from exploding, and its nullifying barrier also lasts longer the higher your Attack stat is. I'll be back with the lowdown on some more weapons later, alright? Do your own research in the meantime.";
pages=4;}

#define scr_logs3
obj_iji.startmusics=0;

//Logs in Sector 3
if (global.textid=="text301" && global.totkills>10){
text[0]="Author: Tasen Soldier DK918:IDDK#$#Subject: Krotera is right";
text[1]="I heard someone saying Elite Krotera is `obsessed` with killing humans, and this would've never happened with Hel Sarie still alive. Give me a break! Krotera knows what he's talking about, and I don't see what these aliens have ever done for us - the";
text[2]="Human Anomaly is the only proof we need that they're just as hostile as the Komato! We shot their world to pieces, and people expect them to welcome us as heroes? We have to finish what we started if we want to survive in this place, and hasty action";
text[3]="is better than death.";
pages=4;}
if (global.textid=="text301" && global.totkills<=10){
text[0]="Author: Tasen Soldier DK918:IDDK#$#Subject: Krotera is right";
text[1]="I heard someone saying Elite Krotera is `obsessed` with killing humans, and this would've never happened with Hel Sarie still alive. Give me a break! Krotera knows what he's talking about, and I don't see what these aliens have ever done for us. We";
text[2]="shot their world to pieces, and people expect them to welcome us as heroes? We have to finish what we started if we want to survive in this place, and hasty action is better than death.";
pages=3;}

if (global.textid=="text302"){
text[0]="Author: Tasen Soldier UO464:MVNE#$#Subject: Damn Blits";
text[1]="Whose bright idea was it to skip the infection check on one of the battlecruisers? The whole thing was crawling with Blits, and now they've spread across this human complex. The best part about these parasites isn't that they drain your armor in mere";
text[2]="pulsecycles, oh no| those little creeps have to be invulnerable too! Some scientists say they're a miracle of technology, a sentient lifeform consisting entirely of Nano - I say I'm requesting a transfer from this place if I find another one of";
text[3]="those pests in my boot tomorrow! Doesn't it just suck when you're armed to the teeth, but the only way to outdo some little blobs is to run around and catch them in jars?";
pages=4;}
if (global.textid=="text303"){
text[0]="Author: Tasen Center of Advertisement#$#Subject: The D200 Deluxe Lift";
text[1]="Yes! The latest in the line of Deluxe Lifts will not only take you to whatever vertical position you desire, it also comes with a number of irresistible features. The most popular addition is the integrated soundchip, which plays comfortable, enjoyable";
text[2]="music during your daily Lift rides, with such soothing, classic symphonies as `Insect Mentalists`, `Annihilating Infinity` and `Welcome to Ciretako`. Consumers will also be happy to learn that a minor, insignificant bug in the previous Lift model, which";
text[3]="randomly catapulted people through the ceiling, has hopefully been fixed.";
pages=4;}
if (global.textid=="text304"){
text[0]="Author: Tasen Soldier MN962:IPSS#$#Subject: They're hiding something";
text[1]="Elite Krotera, along with the rest of our leaders, continues to deny any link between us and the `humans`. Aren't we genetically closer to Origin than the Komato? I don't like where this is going.";
pages=2;}
if (global.textid=="text305"){
text[0]="Author: Tasen Soldier PI595:PTSA#$#Subject: Overkill?";
text[1]="I never thought I'd live to see an Alpha Strike. Sure, the one we used on this planet was just a taste of a real, full-force Strike, but the kind of destructive force we wield nowadays is insane. Sometimes I wonder if building bigger and better";
text[2]="weapons really counted as technological progress| but that's flawed logic. We'd never have been able to defend ourselves from the Komato without some serious guns, so who's complaining?";
pages=3;}
if (global.textid=="text306"){
text[0]="Author: Tasen Soldier KG111:PAIE#$#Subject: Forced apart";
text[1]="Dear logbook, this turn I was transferred to a different subsection of this human building. I've been moved all over the place, but I'm still not close enough to Maeja. It's hardly rare for girls as young as me joining the army, so it's not like";
text[2]="they will treat me better than anyone else and move me to her defense post just because I want to. As long as I keep asking to change Commander for personal reasons, I'll end up with her sooner or later, but I can't blame phobic disorders forever.";
pages=3;
global.specialtriggerb1=1;}

if (global.textid=="text307" && global.totkills>10){
text[0]="Author: Tasen Elite Krotera#$#Subject: We have no choice";
text[1]="It's utterly ridiculous how we didn't realize what planet this was before even setting a course here. If a Komato scout patrol finds us here, we have to kill them IMMEDIATELY before they can report back to their fleet. We can't take ANY chances with the";
text[2]="humans either, as we don't know how powerful they can have really grown. I keep hearing reports of a `Human Anomaly` tearing through our troops like she's on fire. She's using Nanotechnology - I've no idea how the humans got ahold of it unless the Komato";
text[3]="were involved, but it makes them far more dangerous than we initially thought. I won't rest until EVERY ONE of them is dead. Nothing must stand against the Tasen now. This is what Hel Sarie would've wanted - we must survive AT ALL COSTS!";
pages=4;}
if (global.textid=="text307" && global.totkills<=10){
text[0]="Author: Tasen Elite Krotera#$#Subject: We have no choice";
text[1]="It's utterly ridiculous how we didn't realize what planet this was before even setting a course here. If a Komato scout patrol finds us here, we have to kill them IMMEDIATELY before they can report back to their fleet. We can't take ANY chances with the";
text[2]="humans either - I keep hearing reports of a `Human Anomaly` equipped with a personal Nanofield. I've no idea how they got ahold of Nanotechnology unless the Komato were involved, but it makes them far more dangerous than we initially thought. I";
text[3]="won't rest until EVERY ONE of them is dead. Nothing must stand against the Tasen now. This is what Hel Sarie would've wanted - we must survive AT ALL COSTS!";
pages=4;}

if (global.textid=="text308" && global.totkills>10){
text[0]="Author: Tasen Commander UT727:MKNK#$#Subject: Pathetic Soldiers";
text[1]="What weaklings our troops are. I agree with Elite Krotera; we have not yet assessed the true danger of the human species. The Anomaly is a far bigger concern than the Komato, as she seems intent on destroying us and nothing else. She has been moving";
text[2]="in the same general direction for some time, but it's anyone's guess what her true motives are. The only thing we know is that she is as sinister and coldhearted as Elite Krotera tells us, killing our men at an extremely rapid pace. Our pathetic troops";
text[3]="will obviously never be able to stand up to the Komato if they find us here.";
pages=4;}
if (global.textid=="text308" && global.totkills<=10){
text[0]="Author: Tasen Commander UT727:MKNK#$#Subject: Pathetic Soldiers";
text[1]="What weaklings our troops are. I agree with Elite Krotera; we have not yet assessed the true danger of the human species. The Anomaly is a far bigger concern than the Komato, whether she actually kills anyone or not - I for one don't care what that";
text[2]="human-lover Vateilika says. The Anomaly has been moving in the same general direction for some time, but it's anyone's guess what her true motives are. I only know that if our pathetic troops can't even stop a single human, we'll never be able to";
text[3]="stand up to the Komato if they find us here.";
pages=4;}

if (global.textid=="text309"){
text[0]="Author: Komato Trooper 06712-07892-30144#$#Subject: Stranded";
text[1]="Damnit! Me and my men were sent as a scout team to Origin, only to be shot down by the Tasen! That's right, THEY'RE HERE! We've found them at last, and here of all places, but all we can do now is hide - we're three people stuck in a Tasen-infested";
text[2]="building with nothing but expired rations to eat, and with no means of contacting the fleet. Did I mention this is turning out to be a great day?";
pages=3;
obj_iji.readkomato=1;}
if (global.textid=="text310"){
text[0]="Author: Komato Trooper 08965-27358-10735#$#Subject: Time to act";
text[1]="We still haven't decided what to do since we arrived here - do we hide until we starve to death, or get out there and kill as many lousy Tasen as we can? It's not like there's anything better to do, and those damn leeches ain't gonna survive to colonize any";
text[2]="other planet, that's for sure. I've had enough of their way of killing everything in their way like they owned the galaxy.";
pages=3;
obj_iji.readkomato=1;}
if (global.textid=="text311"){
text[0]="Author: Komato Trooper 12558-61195-78950#$#Subject: Justice";
text[1]="I don't think it's as hopeless as the others say. Don't they remember what planet we've crashed on? It's no coincidence we found them here; I rather think the Tasen would never expect us to come all the way here to look for them. And hey, we didn't,";
text[2]="but there's no way they can escape the Imperial Army now. Those lowlife scum will regret ever messing with justice.";
pages=3;
obj_iji.readkomato=1;}
if (global.textid=="text312"){
text[0]="Author: Komato Imperial Weapon Industries#$#Subject: Advertisement";
text[1]="Bored? Tired of your neighbor? Tired of your superior? Tired of those pesky Tasen infesting the universe? Well then BLOW THEM ALL AWAY, with the latest Nanoweapon from Komato Imperial Weapon Industries! Yes, the Resonance detonator will happily blow all";
text[2]="your problems out the window with the press of a single button. Nothing in your close proximity is safe from the severe punishment you dish out with the Resonance detonator's beautiful shockwave of secure, guaranteed death! Since it works by";
text[3]="utilizing your own personal strength, it may be favored by powerhouses like Berserkers, but after a few weeks at the local gym, even the wimpiest of Komato can knock their un-favourite adversary flying through the air! Order yours TODAY for the";
text[4]="low, LOW price of 25'000 Units! (Komato Imperial Weapon Industries cannot be held responsible for personal injury, technical problems, or facing military law for blowing your superior out of the window.)";
pages=5;}
if (global.textid=="text313"){
text[0]="Author: Komato Trooper 06712-07892-30144#$#Subject: My secret spot"
text[1]="While scouting around our little three-man base, I managed to open the window and climb out here. Nothing but an old guard tower out here though, `decorated` with some Tasen poster. Speaking of the Tasen, I read about some `Human Anomaly` in"
text[2]="their logbooks. Better hurry back inside before she reaches our base."
pages=3;
obj_iji.readkomato=1;}
if (global.textid=="text314"){
text[0]="Author: Tasen Center of Advertisement#$#Subject: Buster gun"
text[1]="My good person, have you ever considered a replacement? Yes, the army may have given you a standard old Machine gun, perhaps even a Rocket launcher if you were so lucky, but what we have here is something quite different. Why, it's a Shotgun that fires";
text[2]="thrice as fast as the regular flavor! Presenting the Buster gun, the cutting edge of yesterday's technology at an affordable price. This hastily cracked combination of a Shotgun and Machinegun may not look much for the world, and uses a";
text[3]="questionable lot of ammunition, but in the right hands it may just be a life-saver. We're not really sure. But look on the bright side - you'd rather be stuck in a planetary war with one of these by your side than a pack of Blits! Brought to you by";
text[4]="Redundant Technologies - Inventing Yesterday Today. (Redundant Technologies strongly discourages any attempt to crack your Nanogun to produce this Nanoweapon yourself. Don't do it. Please.)$";
pages=5;}
if (global.textid=="text315"){
text[0]="Author: Tasen Soldier YO706:NMPT#$#Subject: The poster buster super team"
text[1]="We're a small squad of people searching out all the `posters` in this human complex. We've already found several, and we're pretty sure there's exactly one poster in each Sector of the complex, for some reason. Anyway, it seems that Rocket jumping is a good"
text[2]="way to reach some tricky areas, either by firing into a nearby wall or letting someone else shoot you in mid-air. Naturally, this is a bit difficult and dangerous to do, but anything goes in the name of posters. The MPFB Devastator is ideal for Rocket"
text[3]="jumping, considering its enormous explosive knockback. We've also figured out how to cross small gaps with low ceilings, namely to blow yourself across with the knockback from the Nuke - if only it wasn't so difficult to get your hands on one. Similarly, if"
text[4]="only we could find a Komato Hyper pulse we could break those out-of-reach Shield doors easily, and with a Velocithor V2-10 we could shoot troublesome obstacles through walls with great precision, unlike the Nuke which just destroys everything"
text[5]="nearby. We've even figured out that jumping off of a Shredder in mid-air will get you higher than usual, such as in Sector 4. Lastly, with the large spread of a Komato Splintergun I'm sure you could destroy things like glass panes located diagonally"
text[6]="above you. This would be useful when it's not appropriate to Nuke them, which would destroy a lot of nearby things which might be used as stepping stones to jump higher. Hey Naotgerai, are you writing this down? Because you should. Man, all of this would"
text[7]="be a lot easier if we had some maps of this place to go by."
pages=8;}
if (global.textid=="text316"){
text[0]="Author: Tasen Soldier YO706:NMPT#$#Subject: The poster buster super team"
text[1]="Of course, we have a reason for searching out all the posters. The wiseguys who stumbled over Sector Z decided to place the most arbitrary, bizarre Nanofield lock on the teleporter I've ever seen. Essentially it requires you to have seen 10 of these"
text[2]="posters with your own eyes. Frankly the way they programmed this lock is more interesting than Sector Z itself. Anyway, the teleporter is behind a sealed wall, at the top of the lift shaft next to the teleporter destination pad in Sector 1. It's just"
text[3]="that without the posters, we still can't use the damn teleporter. Once we do get into that disturbing place, we're just going to keep going and find out what's at the end."
pages=4;}
if (global.textid=="text317"){
text[0]="Author: Tasen Soldier NS204:FHIC#$#Subject: Resonance reflectors"
if (global.rrkills)
    text[1]="A rare Komato weapon, the Resonance reflector, can bounce enemy projectiles away. Your kill counter WILL consider hitting enemies with their own projectiles an act of aggression, so keep it in mind if you're planning to frag someone|";
else
    text[1]="A rare Komato weapon, the Resonance reflector, can bounce enemy projectiles away. Your kill counter will NOT consider hitting enemies with their own projectiles an act of aggression. Semantics, huh?";
pages=2;}
if (global.textid=="text318"){
text[0]="Tasen Soldier IF5737:IHBA#$#Subject: Impulse launcher"
text[1]="Naotgerai here with some more Passive weapon info! Here's the trick to the Impulse launcher - it sends people flying harmlessly through the air with the same force as an ordinary rocket explosion, but your Attack stat will increase the speed of the";
text[2]="actual projectile. I guess this makes it harder to dodge, but it's kind of weird. So anyway, you made up with Yukabacera yet?";
pages=3;}

#define scr_logs4
obj_iji.startmusics=0;

//Logs in Sector 4
if (global.textid=="text401"){
text[0]="Author: Tasen Commander SP635:MOTM#$#Subject: I knew it";
text[1]="It's some kind of cruel justice. First we Alpha Strike this place, now it turns out to be Origin - of all planets. Then we realized it messed up the atmosphere more than any previous low-power Strike. It's too early to tell if the planet will";
text[2]="actually recover now, but hey, I like to stay optimistic. Whatever doom we're heading into, I just hope it'll be the swiftest one. I'd rather see Origin sucked into a star than the Komato finding out what we did to this place|";
pages=3;
obj_iji.mistrustkomato+=1;}

if (global.textid=="text402" && global.totkills>15){
text[0]="Author: Tasen Soldier IY998:PTOS#$#Subject: Elite Krotera is dead!";
text[1]="Sure, I couldn't stand the guy, but I never thought this'd happen. I heard the Human Anomaly blew Krotera up real good. She probably didn't even know it was Krotera| he was just an Elite like anyone else. I've been wondering why we just don't try to";
text[2]="talk to the human, or why she doesn't approach us peacefully, because I doubt she works for the Komato. It's probably because we're all under shoot-to-kill orders, where the few who actually stop to think don't survive for long. Not to mention that we";
text[3]="`adjusted` her homeworld thanks to Krotera's permanent power trip. Maybe she does this because she doesn't have a choice, not because she actually wants to. At least that makes her different from Iosa the Invincible|";
pages=4;
obj_iji.mistrustkomato+=1;}
if (global.textid=="text402" && global.totkills<=15){
text[0]="Author: Tasen Soldier IY998:PTOS#$#Subject: Elite Krotera is dead!";
text[1]="Sure, I couldn't stand the guy, but I never thought this'd happen. I heard the Human Anomaly blew Krotera up real good - but considering he's pretty much the only one she's killed, I'd sooner believe it was Vateilika and her gang who got to him";
text[2]="first. Still, I wouldn't trust the Anomaly not to go all kinds of crazy once she realizes what we did to her homeworld. Worst case scenario, we've got the next Iosa the Invincible walking among us|$";
pages=3;
obj_iji.mistrustkomato+=1;}

if (global.textid=="text403"){
text[0]="Author: Tasen Scout UT827:IFOP#$#Subject: Whoa";
text[1]="Man, that was close! That Human Anomaly ran right past the room I was guarding on duty back in Sector 2. Probably was this close to getting my head blown off| yeah. Better make sure to tell Commander of this, maybe I'd even get bonus pay!";
pages=2;}

if (global.textid=="text404"){
text[0]="Author: Tasen Soldier GI573:JGJS#$#Subject: Communicator control";
text[1]="Someone figured we should protect the communicator access terminals better - we can't risk traitors or the Anomaly trying to mess with them. A surprise awaits anyone trying to boot up the Reactor powering the communicator without permission. Krotera's";
text[2]="orders, and we all still follow them.";
pages=3;}

if (global.textid=="text405"){
text[0]="Author: Tasen Elite VN400:GVOA#$#Subject: This is no power struggle";
text[1]="Let's get it straight - Krotera is dead, and Elites all over this place jumped at his position like a pack of Blits. If these upstarts think they can replace such an honorable and intelligent individual without any leadership training, they'll just become";
text[2]="like the rest. Remember that Komato General who sent a squad to Ciretako accompanied by an Annihilator, just because he'd get kicked out of the Imperial Army if he refused? They all died within minutes. Everyone knows what Ciretako is famous for. So";
text[3]="remember, those of you too self-centered to care about the death of one of our greatest leaders - this is about the survival of the Tasen race.";
pages=4;
obj_iji.mistrustkomato+=1;}

if (global.textid=="text406"){
text[0]="Author: Tasen Commander OA576:POUE#$#Subject: Our safety is assured";
text[1]="You've read the latest security report, people. The Komato are getting closer. Fleet 1089 did send a small scout team here, which entered the lower atmosphere before we shot them down, and three Troopers managed to infiltrate this building. They";
text[2]="carried no communication equipment, so it must have been destroyed when we hit their ship. We used the communicator to send a faked report to the General of their fleet, and I must say we did an extremely good job. If they suspected anything they'd";
text[3]="have sent more teams, but none have arrived. There is absolutely nothing that can blow our cover now. The only threat left around here is that `Human Anomaly` - speaking of which, why in the name of Elem Sioz hasn't anyone taken her out yet!? Krotera's death";
text[4]="was a wake-up call! Who knows where she'll strike next?";
pages=5;}

if (global.textid=="text407" && global.totkills>15){
text[0]="Author: Tasen Soldier KE062:MRKS#$#Subject: Unofficial threat list";
text[1]="So here are the four main threats, as established by my squad and chosen by a healthy balance between voting and arm-wrestling:";
text[2]="1. The entire Tasen race being killed by that `Human Anomaly`. Seriously, have you ever seen her run out of ammo? Frightening. At least the other humans die in one shot.";
text[3]="2. The Blits nibbling us to gooey pulps of Nano. Sure we can catch them in jars and launch them into orbit, but that doesn't mean the little bastards are actually dead until they starve and turn into tiny clumps of| whatever it is, it's not recyclable.";
text[4]="3. The Komato finding us here. The only reason we list this as number 3 instead of 4 is because the Human Anomaly could be working for them. Then again, they'd have nuked us into molecules by now if that were true.";
text[5]="4. The hot drink dispensers running out of triple composite alloy mugs. Do they have any idea what kind of temperatures those mugs can endure? They plate Komato Sentinels with that stuff. I want my drinks HOT, damn it. You haven't experienced real taste";
text[6]="until you couldn't tell if you were having a drink or being shot in the face with a Plasma cannon.";
pages=7;
obj_iji.mistrustkomato+=1;}
if (global.textid=="text407" && global.totkills<=15){
text[0]="Author: Tasen Soldier KE062:MRKS#$#Subject: Unofficial threat list";
text[1]="So here are the four main threats, as established by my squad and chosen by a healthy balance between voting and arm-wrestling:";
text[2]="1. The `Human Anomaly` assimilating so much of our ammunition that she grows her own gravitational field, atmosphere, solar system, and eventually collapses into a black hole. Seriously, have you EVER seen her run out of ammo for that Nanogun?";
text[3]="2. The Blits nibbling us to gooey pulps of Nano. Sure we can catch them in jars and launch them into orbit, but that doesn't mean the little bastards are actually dead until they starve and turn into tiny clumps of| whatever it is, it's not recyclable.";
text[4]="3. The Komato finding us here. The only reason we list this as number 3 instead of 4 is because the Human Anomaly could be working for them. Then again, they'd have nuked us into molecules by now if that were true.";
text[5]="4. The hot drink dispensers running out of triple composite alloy mugs. Do they have any idea what kind of temperatures those mugs can endure? They plate Komato Sentinels with that stuff. I want my drinks HOT, damn it. You haven't experienced real taste";
text[6]="until you couldn't tell if you were having a drink or being shot in the face with a Plasma cannon.";
pages=7;
obj_iji.mistrustkomato+=1;}

if (global.textid=="text408"){
text[0]="Author: Tasen Scout GV235:GJSS#$#Subject: Nyagh!";
text[1]="Why must life be so cruel? I swear there's a way to get into the blocked part of this place. It's just on the other side of this wall! What's so important to keep in there anyway? Bet it's one of those well-hidden| things| you know, one of those. One in";
text[2]="every Sector, isn't there? No, actually I have no idea what I'm talking about right now.";
pages=3;}

if (global.textid=="text409"){
text[0]="Author: Tasen soldier QL592:BKPS#$#Subject: Only one thing on their minds";
text[1]="So we're down to our last colony. Who cares? Security report says we've just managed to outsmart the Komato, so we're as safe as can be. Those bastards have hunted us through so many solar systems you'd think they've made it some kind of game - and to";
text[2]="them EVERYTHING is a game, ever heard of that Hyper Turret one? - and it's not like their motives are any better. They're not trying to end some war that should never even have started, this is plain genocide, always been.";
pages=3;
obj_iji.mistrustkomato+=1;}

if (global.textid=="text410"){
text[0]="Author: Tasen Center of Information#$#Subject: Security report (Shortened version)";
text[1]="Starturn 6043 Turn 314#Cycle 05: The Komato scout team that was shot down on turn 312 was discovered. They carried no communication equipment; it was most probably destroyed as their vessel was crippled. The Tasen";
text[2]="spy team did not engage the Komato; it would have been an unnecessary risk at that point.";
text[3]="Cycle 06: A faked report was sent to the nearest Komato fleet on behalf of the scout team, using our communicator, to conceal our actions and presence on Origin. The report read:";
text[4]="`To General Tor, Fleet 1089 Tier 60#Komato Trooper 06712-07892-30144#We have found no trace of the Tasen on Origin. However, upon entering the lower atmosphere, we had a reactor core";
text[5]="malfunction and our ship crashed. Three of us survived, but we are heavily damaged. We will not survive the evening. I suppose we can call this mission a success, as we did manage to find out through standard global scanning that the Tasen do not occupy";
text[6]="this planet. End of transmission.`";
text[7]="Cycle 06: It appears that the General of the Komato fleet was fooled by our fake report, otherwise there would be immediate action taken. Our safety is assured.";
if (global.specialtriggerb2)
    text[8]="Cycle 09: The Human Anomaly has eliminated Elite Krotera. It appears she also engaged the Komato scout team in combat just prior to confronting Krotera, dispelling any suspicions that she could be working for them.";
else
    text[8]="Cycle 09: The Human Anomaly has eliminated Elite Krotera. She also didn't seem to kill anyone in the Komato scout team despite crossing their path, which may mean that she could be working for them.";
pages=9;
obj_iji.mistrustkomato+=1;}

if (global.textid=="text411"){
text[0]="Author: Tasen Scout TE496:DNTN#$#Subject: Tasty termination";
text[1]="We need to figure out a way to deal with the Anomaly before it's too late. We don't know where she came from, nor where she's heading. Since Nanoweapons obviously don't seem to work, how about bribing her with candy bars? You can't have enough of";
text[2]="those. We even found and busted like two hundred human-made food containers in this place, we're swimming in alien candy bars of all kinds of ridiculous flavors. Another suggestion is to upload some online computer game to her Nanofield, connected to the";
text[3]="Komatos' all-wide feed. At least she wouldn't bother us for a couple of starturns. Oh oh, how about that `Hero 3D` game Yukabacera hacked together? It's got 9 levels, and the game keeps getting harder until you beat it 242 times. Of course, nothing";
text[4]="happens if you do, but by then the Anomaly would be so zoned out we'd have the time to pick her up and put her in a display cage. Imagine her face when she snaps out of it and sees kids throwing her stale candy and cold drinks over a fence or something.";
text[5]="These are all good suggestions for dealing with the Anomaly, but I personally don't think that Scout who draws these crazy posters of her is helping much.";
pages=6;}

if (global.textid=="text412"){
text[0]="Author: Tasen Soldier HN205:BELW#$#Subject: The logbook";
text[1]="Alright, here are the contents of the stolen Komato logbook you requested. I know you're collecting them for research, but they just get creepier every time. Well, here it is:";
text[2]="Author: Komato Recreational Unit#$#Subject: Rocket jumping";
text[3]="The pioneers of `Rocket jumping` were not exactly volunteering for the job - raid parties simply found it hysterical to see how far a Tasen could fly when hit by their heaviest weapons. As usual, someone with the idea that anything can be turned into a";
text[4]="game came up with the rules that still form the basis of modern Rocket jumping. Like Hyper Turret Game or Ultra Minefield Run And Seek, the game is easy to learn. The contestant straps herself in full triple composite alloy armor, stands next to a specially";
text[5]="designed wall with her back to the scoring field, and fires the Nanoweapon of choice straight into the wall. The explosion catapults the contestant across the scoring area, with the goal being to fly as far as possible. Due to the heavy (and very";
text[6]="expensive) armor used, the contestant can usually walk away without any lethal injuries. In an attempt to make the game even more exciting, a variation on the theme is for the contestant to be launched into the air while another fires at her with an";
text[7]="explosive Nanoweapon from the ground. If the second contestant hits the first in mid-air, the explosion usually sends them so high and far that a search party has to be deployed. It is widely considered that the inventors of Rocket jumping were as brave";
text[8]="as they were stupid, but Komato Recreational Unit would not endorse such a statement.";
pages=9;
obj_iji.mistrustkomato+=1;}

if (global.textid=="text413"){
text[0]="Author: Tasen Soldier KJ009:MLAS#$#Subject: Spread rockets";
text[1]="Hey Yukabacera! I know you're there, your automated reply message is spitting scrambled opcodes at me, stop trying to crack your own logbook you freak. Anyway, got the latest news from the crew, they combined a Shotgun with a Rocket launcher and got - for";
text[2]="real - Spread rockets. Yeah, the same that's issued as heavy equipment. It's that easy! Get yourself one if you fancy some more explosive power in the next target range game. It's tournament legal, I promise. Hah! See you there.";
pages=3;}

if (global.textid=="text414"){
text[0]="Author: Tasen Soldier TM264:IALW#$#Subject: Increased security";
text[1]="Due to the extreme violence used by the Human Anomaly, she is now considered a great threat. Consequently, more troops have been stationed around important areas of this Sector. Remember: desertion is still treason.";
pages=2;}

if (global.textid=="text415"){
if (global.killdata[51]==1){
    text[0]="Author: Tasen Soldier IF5737:IHBA#$#Subject: Pulse linker";
    text[1]="Hey, hey, Vateilika, what's going on? I haven't heard from you since the Anomaly went through Sector 3. Don't tell me Krotera found you out? Anyway, about the Pulse linker - while it seems like it uses a stupid amount of ammo for how little Nano it";
    text[2]="drains from other people's Nanofields, it actually depends on who your target is. Commanders, and especially Elites, have denser Nanofields than Scouts or Soldiers. Think of it this way - the more firepower you need to take someone down, the more Nano the";
    text[3]="Pulse linker's gonna earn you. Oh yeah, and your Attack stat increases the weapon's range. Now to figure out how to use it as stealthily as possible without my Commander noticing! Naotgerai out.";
    pages=4;
    }
else{
    text[0]="Author: Tasen Soldier IF5737:IHBA#$#Subject: Pulse linker";
    text[1]="Vateilika, about the Pulse linker - while it seems like it uses a stupid amount of ammo for how little Nano it drains from other people's Nanofields, it actually depends on who your target is. Commanders, and especially Elites, have denser Nanofields than";
    text[2]="Scouts or Soldiers. Think of it this way - the more firepower you need to take someone down, the more Nano the Pulse linker's gonna earn you. Oh yeah, and your Attack stat increases the weapon's range. Now to figure out how to use it as stealthily as";
    text[3]="possible without my Commander noticing! Naotgerai out.";
    pages=4;
    }
}

#define scr_logs5
obj_iji.startmusics=0;

//Logs in Sector 5
if (global.textid=="text501"){
text[0]="Author: Tasen Soldier TU417:UCIA#$#Subject: They'll never get us";
text[1]="I told them it'd happen, and now it has! The Komato have found us, and are sending massive shock teams - we're just waiting for the rest of their fleet, complete with Beasts and Annihilators, but let them come! DEATH TO THE KOMATO!";
pages=2;}

if (global.textid=="text502"){
text[0]="Author: Komato Trooper 67012-93541-72497#$#Subject: Finally!";
if (global.specialtriggerc){
text[1]="Aw yeah! I knew this'd be an interesting turn when our scout team's report returned - it was just weird at first, but then General Tor said it was sent by the Tasen - THE TASEN! That's right, they're HERE! Three guesses what happens next - we shoot";
text[2]="them to pieces, blow up their planetary shield generators, then smash the place with a full-force Alpha Strike! Man, it doesn't get any better than this!";
}
else{
text[1]="Aw yeah! I knew this'd be an interesting turn when our fleet received a message from a human down on Origin - a HUMAN! What do you know, this is the Tasens' final outpost! Three guesses what happens next - we shoot them to pieces, blow up their planetary";
text[2]="shield generators, then smash the place with a full-force Alpha Strike! Man, it doesn't get any better than this!";
}
pages=3;}

if (global.textid=="text503"){
text[0]="Author: Komato Independent Newsprogram Archive#$#Subject: Ciretako incident, part 1";
text[1]="Reports have surfaced regarding a Tasen carrier ship named Ciretako, where a Komato platoon lost contact with its base. The first intriguing thing is that statistically, the invading Komato force was ten times more powerful than the Tasen crew aboard";
text[2]="the ship - something had gone wrong. An investigation team dispatched to Ciretako found half of the spaceship shot to pieces from the inside, and both the Tasen and Komato forces were found dead. Komato Imperial Research, responsible for the Ciretako";
text[3]="operation, refused to comment on the incident. The only reliable piece of information found suggests that they were `testing the new addition to the Komato army`. This may be related to the Annihilator, the latest and most powerful brand of cyborg -";
text[4]="after all, one such unit was part of the Komato assault team.";
pages=5;}

if (global.textid=="text504"){ //REMOVED
text[0]="Author: Komato Berserker 09867-16239-69811#$#Subject: Newsprogram archives";
text[1]="Who the Zentraidon brought these things along!? I'm not interested in some age-old news logs, and most of them concern Ciretako anyway. I'd rather spend my time wasting Tasen than reading worthless crap! Hey, we just entered lower orbit - you";
text[2]="know what I like best about the Berserker force? The limited teleportation you get free with the armor, that's what. Nothing like getting the jump on a pack of clueless Tasen!";
pages=3;}

if (global.textid=="text505"){
text[0]="Author: Tasen Soldier KG111:PAIE#$#Subject: NO!!!";
text[1]="Dear logbook, it's hard to type right now because the Komato are here!!! I've lost contact with Maeja, but I heard we're moving our troops under radio silence, and somehow I know she's okay. I'm moving deeper into the building with a whole squad of";
text[2]="adults, they're mostly Commanders and Elites, and they say they're going to hide and build a defensive base instead of trying to fight. I agree, we don't stand a chance if we try to take them on! But I swear I'll learn how to use my Rocket";
text[3]="launcher before we get there, I won't leave any Komato alive to get near my girlfriend!!!";
pages=4;
global.specialtriggerb1=1;}

if (global.textid=="text506"){
text[0]="Author: Komato Imperial Weapon Industries#$#Subject: Advertisement";
text[1]="The latest piece of Nano wonder to arrive on the market, the Pulse cannon is rapidly becoming a huge success! This slick dealer of neon-colored death will save your cyborg butt from any and all confrontations with the vile Tasen, and at a phenomenal";
text[2]="price as well - for only 60'000 Units, this sweet bundle of Nanotechnology will happily inflict unworldly pain on your hapless victims at the press of a button! Order your Pulse cannon TODAY and be the KING OF THE WORLD, or at least the local";
text[3]="cafeteria. (Komato Imperial Weapon Industries cannot be held responsible for personal injury, technical problems, or unwanted fiery death.)";
pages=4;}

if (global.textid=="text507"){
text[0]="Author: Komato Trooper 63466-26395-28054#$#Subject: Tasen Turrets";
text[1]="Those idiotic Tasen seem to have programmed the Turrets to scan for certain security codes in their Nanofield - since we decrypted those codes ages ago, and they STILL haven't updated them, there's not a single Turret in this colony that poses a";
text[2]="threat to us! It's like they're not even trying!";
pages=3;}

if (global.textid=="text509"){
text[0]="Author: Tasen Elite OV923:JGOE#$#Subject: TOP PRIORITY: Official Global Briefing";
text[1]="I'm making this quick - this briefing will be transmitted to all logbooks in the colony. The Komato have arrived, and here are the main threats we face:";
text[2]="1. Troopers: armed with burst Pulse cannons and Shocksplinter, can outpower a Tasen Soldier five to one. Very agile and sometimes carry Hyper pulse.";
text[3]="2. Berserkers: armed with Shocksplinter or Plasma cannons, able to teleport straight into the battlefield, trained in recovering from heavy explosions. They carry Resonance reflectors, so don't use your rockets or they'll end up in your face.";
text[4]="3. Assassins: They constantly teleport all over the damn place, using dual Plasma cannons and laser daggers. They carry auto-fire Resonance reflectors to boot, making rockets and any other kinds of projectile useless, and they can even dodge instant-hit";
text[5]="weapons and melee attacks depending on their skill. They always escape when heavily damaged, so we can't even kill them.";
text[6]="Alright, that's all. This may be Origin, but it's our planet now! DEATH TO THE KOMATO!";
pages=7;}

if (global.textid=="text510"){
text[0]="Author: Komato Informational Center#$#Subject: SUPER JUICE 5000";
text[1]="SUPER JUICE 5000 - the latest hip drink from Komato Imperial Research! SUPER JUICE 5000 is carefully manufactured in our finest orbital facilities and blasted on command at near-light speed to every corner of the known galaxy. Simply align your";
text[2]="planetary juice receivers to the SUPER JUICE 5000 facility of your choice prior to making your order, to avoid the incoming SUPER JUICE 5000 container punching a hole through your house. The SUPER JUICE 5000 recipe is top secret, but Komato Imperial";
text[3]="Research can proudly boast that it consists of 80% recycled heavy industry materials! Catering to everyone who likes their drinks hot - and who doesn't? - the SUPER JUICE 5000 container is also plated with triple composite alloy externally, and a Power";
text[4]="core-class heatgrid internally, allowing the container to heat itself up to 70'000 Zj when opened and still not obtain escape velocity from the resulting explosion! `SUPER JUICE 5000 - because it doesn't taste like battery acid at all!`";
pages=5;}

if (global.textid=="text512"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Reply: Resonance reflector";
text[1]="I know you're new, but this ain't really a secret. Resonance reflectors are simply a combination of a Tasen Shotgun and a Komato Resonance detonator. Just enter field 15 in prime 3C in the Nanogun, replace the 160th opcode with a 5 and you're set.";
text[2]="The safety catches trying to fix the resulting cascading error do the rest. Anyway, me and Craxmasta are working on the Hyper pulse, so check back with us later. Power to the Troopers! And don't call me a wannabe, this is the real deal. OmnikrakR out.";
pages=3;}

if (global.textid=="text513"){
text[0]="Following Krotera's orders, this door has been locked and can only be opened by the terminals on floor 9 and 6."
pages=1;
outline=3;}

if (global.textid=="text514"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Report: Passive weapons research"
text[1]="MPFB Neutralizer: Passive version of Tasen MPFB Devastator. Uses 3 MPFB ammo to stun everyone in a large radius. Attack stat dramatically increases stun duration. Remember to press `Enter` to switch to Passive mode. -OmniBitSplit"
pages=2;}

#define scr_logs6
obj_iji.startmusics=0;

//Logs in Sector 6
if (global.textid=="text601"){
text[0]="Author: Komato Assassin 78525-32098-53178#$#Subject: Assassin Asha";
text[1]="So on the surface, this mission is like any other - infiltrate whatever parts of this place the Tasen least expect, kill as many as possible. However, this is their final outpost, so we can expect them to fight fiercely. Also - and this is the bad news";
text[2]="- Asha is in charge of our squad now. Yeah, Asha, the guy who lost his arm in the most stupid way conceivable, the one trying to become `the best unit in the army`. Permission to speak freely here, but gimme a damn break! He may be skilled, but he's too";
text[3]="full of himself to understand that we Assassins ain't got a thing on the Annihilators and Generals, not to mention Iosa. We're the most efficient when it comes to amount of kills versus death count, sure, but that's because we at least have the ability to";
text[4]="easily run from a fight. Asha thinks he's a one-man army, not part of the team. I mean, what kind of idiot gets so caught up in a battle with a few Elites that he teleports halfway into a wall, reducing his arm to a bloody pulp before he managed to get out";
text[5]="of there? Not a lot of people would survive that kind of thing, I'll give him that, but you'd think it'd cut his ego down to size just a LITTLE.";
pages=6;}

if (global.textid=="text602"){
text[0]="Author: Komato Imperial Weapon Industries#$#Subject: Advertisement";
text[1]="Have you grown tired of wasting Tasen scum? Have you ever wondered why you spend your time boarding their spaceships, when all you can do is poke them with conventional, ordinary, meaningless Nanoweapons? Then the Shocksplinter is for you! If";
text[2]="just the thought of a single high-explosive projectile is enough to make your mouth water, that's not all - upon impact with your comically panicking enemies, the Shocksplinter will split into six sub-projectiles called 'splinters', specifically designed";
text[3]="for frying armor in an instant! So, don't spend one more turn operating the same old low-end garbage that doesn't even set your enemies on fire, and order your Shocksplinter NOW for only 520'000 Units! (Komato Imperial Weapon Industries cannot be";
text[4]="held responsible for personal injury, technical problems, or your enemies not actually catching fire.)";
pages=5;}

if (global.textid=="text603"){
text[0]="Author: Tasen Commander GH814:MAUT#$#Subject: Damn it";
text[1]="The Komato are slaughtering us, and our last remaining army is falling apart! We're done for, and so are the humans - the Komato will annihilate them along with everything else on the planet. It's like we destroy every planet we even touch, because in one";
if (global.specialtriggerc)
    text[2]="way or another those damn Komato find us every time! I've NO idea how they did it this time unless that Human Anomaly was involved#- they couldn't possibly have seen through our transmission!";
else
    text[2]="way or another those damn Komato find us every time! I've NO idea how they did it this time unless that Human Anomaly was involved!";
pages=3;}

if (global.textid=="text604"){
text[0]="Author: Komato Trooper 62413-72411-93652#$#Subject: What's wrong with people";
text[1]="I heard there's a group trying to get the Army turned against Annihilator Iosa. What exactly do they think they're doing? Saying things like, `General's Tor's a respected leader and a diplomat, Iosa's just a brainless soldier`. Alright, first, Tor";
text[2]="changed completely once the war started. I'd like to see anyone call him a Tasen-lover now! Second, `brainless soldier`? Iosa's more powerful and respected than ANY of you whiners. `But, but, but, respecting someone for her kill count, violence is wrong";
text[3]="and|` URGH. I don't see you suggesting anything better! Disagree with ourselves? Start more wars? Start assassinating our own leaders? This is exactly why treason was declared the greatest war offense by High Command after that little Ciretako mistake.";
text[4]="Internal arguing solves nothing. Let's get rid of the enemy we have now, while we're still united against something and maybe, MAYBE that'll be enough to teach people that you don't mess with the Imperial Army. You're only going to make yourself the";
text[5]="outlaw. And that's not an argument, it's FACT, so DEAL WITH IT YOU WHINY CREEPS.";
pages=6;}

if (global.textid=="text605"){
text[0]="Author: Tasen Soldier HP872:MFOA#$#Subject: Assassins!";
text[1]="Stay calm everyone, you know how Assassins fight. If they're in for a serious fight or are lying in ambush, they prepare themselves by creating a mental map of the area. These areas are small, so if you encounter an Assassin, just keep running -";
text[2]="they won't dare to follow into a place they've never seen because they're afraid of teleporting into walls and floors. They have a habit of running from fights when they start taking damage too, so they're practically impossible to kill. Even if they drop";
text[3]="parts of their Nanofield behind, they're not dead - they're just retreating. If you ever killed an Assassin, you'd certainly notice the enormous self-destruct explosion.";
pages=4;}

if (global.textid=="text606"){
text[0]="Author: Komato Independent Newsprogram Archive#$#Subject: Ciretako incident, part 2";
text[1]="The truth is starting to leak out regarding the infamous incident where a Komato platoon was mysteriously killed during an assault on the Tasen carrier Ciretako, along with the Tasen crew. There indeed seems to be a connection between the Komato Annihilator";
text[2]="and the internal devastation of the ship - Imperial Research denies any rumors of the Annihilators being mentally unstable, but it's well known that they have built-in kill counters displayed on their visors. Some believe the Annihilator turned";
text[3]="on its own subordinates to boost its counter, and later died from the wounds inflicted by the estimated 270 other units aboard the ship at the time.";
pages=4;}

if (global.textid=="text607"){
text[0]="Author: Komato Assassin 52839-75921-76034#$#Subject: `Human Anomaly`";
text[1]="Alright, squad. Our target is the super-powered human that supposedly roams the area - I know the rest of the Assassins got better missions, like hunting down Elites or sabotaging Tasen supplies, but a job's a job, no matter how easy. Remember the";
text[2]="bounty: 10'000 Units for termination of the Anomaly, ten times that value for an intact body and Nanogun, a hundred for live capture. That's {@@}@}@{}}{}{ Units for you ternary dorks.";
pages=3;}

if (global.textid=="text608"){
text[0]="Author: Tasen Universal Logbook#$#Subject: Summary of history, Part 1: Komato";
text[1]="Hailing from a remote planet now known as Origin, the current population of the Komato - 760 billion individuals - is only a guess. During their inception, their technology advanced at an astounding pace. After mastering mass space travel, the Komato";
text[2]="abandoned Origin without looking back, knowing that whatever would evolve there later would pose no threat to them. Their mindset became increasingly militaristic when they realized the potential of their new homes and empires, and among a multitude";
text[3]="of warring factions, one known as the Imperial Army succeeded in stamping out any and all significant opposition. High Command, the supreme order of the Imperial Army, soon ruled the entire empire by force. A number of planets were chosen as breeding";
text[4]="grounds and resource excavation points, as the Komato planned to become the greatest civilization they would ever know. Even after countless starturns had passed, only occasionally did they send scout teams back to Origin, which eventually reported that";
text[5]="another race calling itself the `humans` had appeared. High Command couldn't possibly consider this `pathetic excuse for a lifeform` a threat, and let them be.";
pages=6;
outline=3;}

if (global.textid=="text609"){
text[0]="Author: Tasen Universal Logbook#$#Subject: Summary of history, Part 2: Tasen";
text[1]="The original Tasen were Komato who questioned the extreme genetic engineering that had turned them into mockeries of nature, and the ambitions of the Imperial Army. They began to modify their appearances to more closely resemble what they looked like";
text[2]="before their ancestors left Origin. As the number of Tasen grew, we came to be called a race entirely separate from the Komato. While we were never accepted in their society and had to fend for ourselves, they at least offered us supplies, equipment, and";
text[3]="even Nanotechnology. We've always been seen as parasites, but never turned to violence - even in our prime, the Komato outnumbered us a hundred to one. What was once an insignificant rebellion was soon an enormous movement struggling to coexist";
text[4]="with our oppressors, and their hate was growing. Everyone lived in fear of the Komato deciding to cleanse themselves of our `subculture of Empire-haters`.";
pages=5;
outline=3;}

if (global.textid=="text612"){
text[0]="Author: Tasen Universal Logbook#$#Subject: Alpha Strike";
text[1]="Originally invented by the Komato, this Nanoweapon is designed for use by entire fleets. Its use is relatively straightforward; align a great number of ships equipped with the Alpha Strike in low orbit of a planet, charge it up, and let the automatic";
text[2]="unified guidance system allow every beam fired to strike a different area for maximum efficiency. While charging, a distinct light display reveals the targeting of the Strike, shining through the clouds and lighting up the ground. All firings";
text[3]="performed by the Komato have resulted in the total annihilation of all life and permanent contamination of the atmosphere. When we acquired this technology for ourselves, it was modified to give it a more variable power, allowing us to Strike hostile";
text[4]="planets at decreased output so as not to render it uninhabitable for our own kind.";
pages=5;
outline=3;}

if (global.textid=="text613"){
text[0]="Someone was playing a strange game on this terminal. A rectangular strawberry is exploring a large fortress.";
outline=0;
pages=1;}

if (global.textid=="text614"){
global.specialtrigger32=1;
if (global.scrambler==1){
text[0]="Author: Komato Assassin Asha#$#Subject: HONK";
text[1]="*Indecipherable scribbles*";
pages=2;
}
else{
text[0]="Author: Komato Assassin Asha#$#Subject: IMPORTANT";
text[1]="There is a human working for the cause of the Komato in the vicinity, and he has been for some time. He contacted us upon planetfall and claims to have the power to command the Anomaly's every action. Think about it - what we have in our possession";
text[2]="is the ability to direct her into whatever trap we so design, providing she trusts her partner enough.";
pages=3;}
}

if (global.textid=="text615"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Reply: Splintergun shipment";
text[1]="Yeah, we did manage to intercept them. Get this - only top Annihilators are issued Splinterguns, and I think I know why. It's essentially a combination of a Tasen Machinegun and a Komato Shocksplinter! I know some Nanoweapons use fused Tasen and";
text[2]="Komato technology, and the Army is willing to use them in the field without us knowing, but this is awesome news. You know why? Machineguns are easy to get ahold of. We're all issued Shocksplinter as standard equipment. All you gotta do is bypass";
text[3]="the security in field 662 of prime 17C of the Nanogun, replace all opcode 16s with 5s, and the failsafes should do the job for you. I swear this took me cycles to get right, but the weapon is a beast, it bypasses the Shock projectile and just jams out";
text[4]="Splinters like there's no tomorrow. Be sure to crack yourself one, but don't use it where any Berserkers can see or you're in deep trouble. Power to the Troopers buddy. /Craxmasta";
pages=5;}

if (global.textid=="text616"){
text[0]="Author: Komato Trooper 73493-65878-65923#$#Subject: Tasen Soldier Yukabacera";
text[1]="Ever heard about this guy? He's a Tasen cracker, except he spends his time on pointless stuff like games and logbooks. I admit the games weren't complete garbage, and I even found a bizarre logbook in this place where a Tasen Scout pondered having the";
text[2]="Human Anomaly play `Hero 3D` until she zoned out and could be captured. Sure seems easier than trying to gun her down, anyway. I drew this picture of what it might look like. The only problem is, now I think I need to get my head checked. Oh yeah, and";
text[3]="whatever you do - DO NOT ATTEMPT TO FIGHT YUKABACERA. This guy has pumped himself something crazy and got his hands on a Cyclic Fusion Ignition System, and I heard he's hid himself somewhere nearby.";
pages=4;}

if (global.textid=="text617"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Report: Passive weapons research";
text[1]="Shock barrier: Passive version of Komato Shocksplinter. Uses 2 Shock ammo to erect a projectile-destroying barrier. Attack stat increases barrier duration. Remember to press `Enter` to switch to Passive mode. -OmniBitSplit";
pages=2;}

#define scr_logs7
obj_iji.startmusics=0;

//Logs in Sector 7
if (global.textid=="text701" && global.totkills>30){
text[0]="Author: Tasen Soldier HJ232:OBNA#$#Subject: The weak go first";
text[1]="Not to sound indifferent, but we're out of Scouts here. They were the first to go when the Komato arrived, and they didn't exactly have much of a chance. I guess the only people left standing in a while will be the Elites| and that murderous Human Anomaly.";
pages=2;}
if (global.textid=="text701" && global.totkills<=30){
text[0]="Author: Tasen Soldier HJ232:OBNA#$#Subject: The weak go first";
text[1]="Not to sound indifferent, but we're out of Scouts here. They were the first to go when the Komato arrived, and they didn't exactly have much of a chance. I guess the only people left standing in a while will be the Elites| and that Human Anomaly. How powerful";
if (global.specialtriggerc)
    text[2]="is she, anyway - and what are her motives? Some say the Anomaly is not the one who killed Krotera or called for the Komato, but I trust the majority on this one.";
else
    text[2]="is she, anyway - and what are her motives?";
pages=3;}

if (global.textid=="text702"){
text[0]="Author: Tasen Soldier VO816:ICYT#$#Subject: Ain't afraid of the Beasts";
text[1]="This isn't the time to panic. Last I saw my squad there was a Beast on their backs. Damn it, gotta find my gun|";
pages=2;}

if (global.textid=="text704"){
text[0]="Author: Komato Berserker 34764-56987-43655#$#Subject: Self-destruct issues";
text[1]="Some question the use of the self-destruct features installed in Berserkers, Beasts and Annihilators. As you know, it's integral to the effectiveness of the Beasts to explode on death, and it's imperative not to let the Tasen get their hands on the weapons";
text[2]="left behind by dead Berserkers. One of the keys to the Tasens' inability to keep up with us has always been the fact that they can't salvage any Nanofields or Nanoguns from our fallen troops. When it comes to the Annihilators, who cares? They take";
text[3]="everything on the battlefield with them anyway. As for the Generals, yes, it's true that they used to carry Random Particle Displacement warheads in their exoskeletons until the tragic loss of General Taeho, whose warhead suffered critical failure and";
text[4]="leveled two cities. But that's all behind us - now no self-destruct device is so powerful as to be a worse threat to ourselves than to the Tasen.";
pages=5;}

if (global.textid=="text706"){
text[0]="Author: Komato Independent Newsprogram Archive#$#Subject: Ciretako incident, part 3";
text[1]="Komato Imperial Research had no choice this turn but to confirm the suspicions regarding the mysterious loss of the Komato platoon boarding the Tasen carrier Ciretako. The Komato Annihilator in charge of the operation had in an attempt to";
text[2]="raise its internal kill counter mown down every living being on the ship. Imperial Research states that the Annihilators have since been modified to let special stimulants pump into their bodies, which help significantly in making them more interested";
text[3]="in killing their enemies rather than their allies. Many organizations have requested the removal of the counters to prevent the incident from repeating, but Imperial Research counters these arguments with statistics proving how much more";
text[4]="efficient the Annihilators are with the counter present. On a different note, the experimental Nanoweapon the Annihilator was carrying could also have been the `new addition` that Imperial Research was actually testing, meaning the scandal of a rampant";
text[5]="Annihilator was less incriminating than acknowledging the existence of this weapon.";
pages=6;}

if (global.textid=="text707"){
text[0]="Author: Komato Recreational Unit#$#Subject: Hyper Turret Game - History";
text[1]="In the early times of the Tasen-Komato war, many raids on Tasen starships were made, and the invading force often overpowered the crew of the Tasen ship to the point where it became more of a game. When one particular Berserker came face-to-muzzle with a";
text[2]="Tasen Turret, he accidentally fired his Resonance detonator - it sent the turret bouncing around the room until it came to a halt in front of a platoon of other Komato. One of them kicked the turret back across the room, and the Hyper Turret Game was";
text[3]="born. The platoon split into two teams, and tried their best to kick the turret into a door behind the opposing team. Any Tasen that happened to interfere with the game were swiftly taken care of. Before long, it was decided that the use of Resonance";
text[4]="detonators and Hyper pulse were also allowed to increase the mayhem. Whenever the turret exploded into debris, they simply headed off to find a new one. The Komato force was later given honorary medals for their field studies in `creative combat`.";
pages=5;}

if (global.textid=="text708"){
text[0]="Author: Komato Recreational Unit#$#Subject: Hyper Turret Game - Rules";
text[1]="In modern Hyper Turret Game, two teams line up on each side of a large field, armed with Resonance detonator and Hyper pulse Nanoweapons. On each side there are two posts stuck into the ground to represent the doors used in the original game. When";
text[2]="the match begins, a turret head is tossed into the middle of the field, and from then on it's a free-form battle to kick or shoot the turret into the opposing team's scoring area. A gigantic supply of Tasen turret heads has been collected in recent";
text[3]="history, so that a new turret can be tossed onto the field whenever one is destroyed. The Hyper Turret Game is filled with nostalgia and fond memories of boarding Tasen spaceships, although it is considered the most dangerous game ever";
text[4]="invented, bar only `Ultra Minefield Run And Seek` which violates every known universal Komato law.";
pages=5;}

if (global.textid=="text709"){
text[0]="Author: Komato Imperial Weapon Industries#$#Subject: Advertisement";
text[1]="Whoa, check out that cool guy's new gear! What is it that makes him so hip? Is it the newly polished metal boots? His daring pink and green clothing? NO! It's his brand new, heavy duty PLASMA CANNON! Yes, this mother of all commercial Nanoweapons eats";
text[2]="Tasen like snacks and makes you the most popular guy in the neighborhood! Nothing proves your style and trendiness more than possessing a weapon so powerful that only Annihilators are issued it as standard equipment! Witness the beauty of a pink-hued";
text[3]="plasma bolt powering through whatever you point it at within 0.35 pulsecycles (estimated by experiments on various non-sentient lifeforms)! Order your Plasma cannon NOW for the LOW price of ONLY *cough* 18'500'000 *cough* units! You know you can't live";
text[4]="without it, baby~ (Komato Imperial Weapon Industries cannot be held responsible for personal injury, technical problems, or you actually not becoming the most popular unit in the local living quarters.)";
pages=5;}

if (global.textid=="text710"){
text[0]="Author: Komato Imperial Army Information#$#Subject: Iosa the Invincible";
text[1]="Iosa was born on a small planet on the borders of Komato territory, and following her exceptional results in combat training was chosen as a test subject for a new type of Nanofield. Based on the Tasens' planetary shielding technology,";
text[2]="this system had no upper limit to the amount of Nano it could assimilate, and unlike similar technology used on Shield doors had yet to be proven lethal to its user. However, among all of the test subjects equipped with this Nanofield and connected";
text[3]="directly to the raw output of a power core, only Iosa's field managed to hold up without collapsing on itself. Due to the extremely high cost and many casualties, the `Immortal` project was stopped until further notice. Soon afterwards, a Tasen";
text[4]="fleet entered Komato space and Alpha Struck the unshielded planet. All research data was lost, but Iosa's Nanofield allowed her to survive the Strike. Two longturns later, she was found and picked up by the Imperial Army, which found her body and mind";
text[5]="miraculously intact. As the starturns passed, Iosa was promoted to Annihilator class. Even when her exoskeleton was destroyed, she continued fighting the Tasen with her bare hands. Many Tasen now fear her more than the Komato Generals.";
pages=6;}

if (global.textid=="text711"){
text[0]="Author: Tasen Soldier KG111:PAIE#$#Subject: Almost there";
if (global.specialtriggerc){
text[1]="Dear logbook, I'm getting worried. The radio silence is over, but I can't reach Maeja| they say I should wait for the reports, but I don't think I can wait that long. The adults and I are almost at the place where we'll set up the defense base, and so far";
text[2]="we're all still alive. We've gathered turrets, supplies and parts of bulkhead doors, and I'm learning how to reprogram turrets to make them fire at the Komato rather than the humans. I've heard about the Anomaly, and I hope she'll beat the Komato before";
text[3]="they Alpha Strike this place| and I hope no Komato have reached what the humans call Sector 3. Maeja was stationed there when I last heard from her, guarding the lift to Krotera. Actually, Vateilika told me that she's the one who killed Krotera, not";
text[4]="the Anomaly| I tried to keep it a secret, but the rest of the group found out. They're not angry at Vateilika though, instead they want to meet the Anomaly and talk things through with her.";
pages=5;
}
else{
text[1]="Dear logbook, I'm getting worried. The radio silence is over, but I can't reach Maeja| they say I should wait for the reports, but I don't think I can wait that long. The adults and I are almost at the place where we'll set up the defense base, and so far";
text[2]="we're all still alive. We've gathered turrets, supplies and parts of bulkhead doors, and I'm learning how to reprogram turrets to make them fire at the Komato rather than the humans. I've heard about the Anomaly, and I hope she'll beat the Komato before";
text[3]="they Alpha Strike this place| and I hope no Komato have reached what the humans call Sector 3. Maeja was stationed there when I last heard from her, guarding the lift to Krotera.";
pages=4;
}
global.specialtriggerb1=1;}

if (global.textid=="text712"){
text[0]="Author: Komato Trooper 01252-33448-78094#$#Subject: Advertising poster";
text[1]="These advertisements for the Sentinels are pretty weird. I mean, they're built for and owned by the Imperial Army, it's not like you could buy one. The posters do look inspirational though.";
pages=2;}

if (global.textid=="text713"){
text[0]="Author: Komato Berserker 57028-56103-76921#$#Subject: Learn to count";
text[1]="I don't get it, we write the door security levels in good old-fashioned ternary and everyone complains. Our civilization on Origin advanced a lot before we almost completely switched to decimal, and I don't see how it's supposed to be easier to use";
text[2]="- you've got three joints per finger, a second hand to point at one joint on every finger, and even a kid can start memorizing the joints and numbers. {, }, @{, {{, }{, @}, {}, }}, @@{| it's so easy. Someone got the idea of using your ten fingers to";
text[3]="count to 10 instead, but come on, with ternary you can count from 0 to 242 on one hand, but only to 5 if you stick your fingers up to represent numbers in decimal. What a primitive idea.";
pages=4;}

if (global.textid=="text714"){
text[0]="Author: Komato Trooper 23685-37689-27628#$#Subject: Sentinels";
text[1]="Why'd we bring a buncha Sentinels here? General Tor is pretty serious about this kill-the-Tasen-as-fast-as-possible business. Sure, they're more powerful than Annihilators, can float freely and hail MPFB, Plasma and Nukes all around, but for the same";
text[2]="price you could equip four hundred Troopers. Now which is more effective? Wait. I'm actually not so sure about that. Let 'em have their floating death spheres, as long as I'm a safe distance away.";
pages=3;}

if (global.textid=="text715"){
text[0]="Author: Komato Trooper 85901-62039-34875#$#Subject: I got it!";
text[1]="Hey Tieropay, I finally figured out how the Berserkers can keep their damn cool when hit by a rocket - they press "+chr(global.usekey)+" the EXACT moment before they're hit, which temporarily puts their Nanofield on the defensive. If you're hit by something that sends you";
text[2]="flying, this'll reduce knockback and let you land on your feet, or if the damage is small it'll still let you ignore the pain as if nothing happened, so you won't even stagger. The Berserkers call it `teching` - sure, it doesn't reduce the damage taken,";
text[3]="but it's useful for getting back into the fight or escaping more quickly. Plus it looks damn awesome!";
pages=4;
if (!global.hiddenskill1){
    global.hiddenskill1=1;
    scr_readsum();
    if (wrongsum){
        global.erasetop=0;
        global.topmessage="SAVEFILE CORRUPT; UNABLE TO RECORD HIDDEN SKILL";
        global.ignorestation=90;
        }
    else{
        global.erasetop=0;
        global.topmessage="HIDDEN SKILL `TECHING` PERMANENTLY RECORDED TO PAUSE MENU";
        global.ignorestation=120;
        scr_sound("glo_cracksuccess");
        scr_save(0);
        }
    }
}

if (global.textid=="text716"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Hyper pulse disassembly";
text[1]="Yep, we did it. Ask Craxmasta for the opcode switches, they're pretty heavy. Long story short, the Hyper pulse is a combination of a Resonance detonator and a Pulse cannon, and it's a real weird Nanoweapon. Drain someone's armor with this, and just";
text[2]="like a Resonance detonator, it'll send them flying depending on your physical strength. If you're really, really strong, you'll totally maul Tasen Elites, you gotta see it yourself to understand. Of course most of us aren't that strong, so I see";
text[3]="why it's only issued as a high-rank weapon. It's useful anyway though, the fire is more spread out and deals more damage than regular Pulse cannons. If it wasn't for the Imperial Army's inflated price for these things, everyone would be walking";
text[4]="around with them - you say one step closer to Zentraidon, I say power to the Troopers. OmnikrakR out.";
pages=5;}

if (global.textid=="text717"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: pfffff HA HA HA HA HA!";
text[1]="IWI's commercials are hilarious. 18'5 million units for a Plasma cannon? They even poke fun at it themselves. Who're they trying to fool? NanoBitSplit figured that one out ages ago, it's a Pulse cannon combined with a Shocksplinter. Not saying it's easy to";
text[2]="do, but so much cheaper. Not gonna reveal the opcodes for the crack here (remember kids, illegal Plasma cannons are on criminal par with treason) - but Imperial Weapon Industries seems intent on pushing us around with their authority just because they got";
text[3]="picked up by High Command as the official military manufacturer. I for one ain't paying their prices. Power to the Troopers! /Craxmasta";
pages=4;}

if (global.textid=="text718"){
text[0]="Author: Komato Assassin [NO IDENTIFICATION]#$#Subject: -";
if (global.totkills>6*global.neutralkc)
    text[1]="Anomaly, you've proven yourself quite capable. You've got some useful abilities, and there is someone I believe you can help me kill. I will inform you when you get closer to the target.";
else
    text[1]="Anomaly, I would expect a soldier to be more violent. You've got some useful abilities, and I think you'd benefit from a little help as well. Keep walking your path, and I will inform you when you get closer to the one you must kill.";
pages=2;}

if (global.textid=="text719"){
text[0]="Author: Komato Berserker 70960-79456-42645#$#Subject: Reply: Rogue Assassin";
text[1]="It doesn't matter if you're certain that Assassin Ansaksie has turned against some of her superiors, we don't have time to investigate it now. She's already deep enough in technology theft and weapons smuggling. Let Asha take care of her.";
pages=2;}

if (global.textid=="text720"){
text[0]="Author: Komato Imperial Weapon Industries#$#Subject: Sentinel phrases";
text[1]="This is a partial list of the standard Announce phrases spoken by Sentinels. @ represents a low-pitched beep, { is a medium beep, and } is a high-pitched beep. Please remember that ternary codes are read from right to left to avoid any unpleasant accidents.";
text[2]="System phrases:#@@}: Identify target#{@}: Engaging target#}@}: Heavy damage sustained";
text[3]="@{}: Identified friendly#{{}: Aborting attack#}{}: Shutting down#@}}: Critical friend-or-foe detection malfunction";
text[4]="Weapon-specific phrases:#@@{: Tackle#{@{: Splintergun#}@{: Spread rockets";
text[5]="@{{: Rocket hail#{{{: Plasma cannon#}{{: MPFB Devastator#@}{: Nuke";
pages=6;}

if (global.textid=="text721"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Report: Passive weapons research";
text[1]="Chain Fractal Injection Shell: Passive version of Komato Cyclic Fusion Ignition System. Uses 3 CFIS ammo to instantly and successfully crack anything at long range, as long as you have a high enough Crack stat to perform the crack yourself.";
text[2]="Attack stat increases projectile range. Remember to press `Enter` to switch to Passive mode. -OmniBitSplit";
pages=3;}

if (global.textid=="text790"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Various garbage";
text[1]="I'm going through OmnikrakR's notes on this place, and man is he one crazy guy. I wouldn't expect anything less from the person who figured out how to crack Nanoweapons using cascading errors. Here are some of his weirder notes:";
text[2]="SNEAKY?#In Sector 8, plant a Trapmine on the teleporter destination pad in the exit corridor. It may have some consequences.";
text[3]="WAYWARD GIRLFRIEND#You know the Tasen who was stationed to defend the lift near the exit in Sector 3? I think there's a connection between her and another Soldier who writes diaries.";
text[4]="DEEP SECTOR#Human bunker in sector 9. Raided by Ansaksie's Assassin squad as we landed, but it doesn't look like she was responsible for any kills herself.";
text[5]="HERO 3D TERMINAL#Some Tasen cracker called Yukabacera wrote a game for standard terminals. A terminal in Sector 6 has a copy of the game.";
text[6]="MILKING NANO#Keep kicking a dead Tasen Soldier, Tasen Commander, Komato Trooper or Komato Berserker to juggle it before it disappears, it'll drop extra Nano. Only works five times per individual.";
text[7]="ANNIHILATOR BETA#Remote-controlled Annihilator. Looks like it was locked with a terminal in Sector 8.";
text[8]="HUMAN EGG-LIKE DECORATION?#There's a Tasen Turret in Sector 8. I recall it has some weird connection to the turret head painted on the wall a couple of floors below.";
text[9]="YUKABACERA#I know where he's hiding, at the top of Sector 6, but it's no use trying to fight him. All he's got on him is that failed translator he calls the `Scrambler`. Worthless.";
text[10]="HAHA ASHA SUCKS#When we realized the Nuke Nanoweapon is so fast Assassins can't possibly avoid it, someone suggested Nuking Asha. It may not work after his latest bouts of training though.";
text[11]="POWER CORE LOOPHOLE#Mobile power cores are immune to the Nuke but not to the Velocithor V2-10. Damn it.";
text[12]="FEIGN DEATH#Just lie still on the ground and pretend you're dead. Works until someone steps on you or shoots you. If they see you fall over they'll know you're faking it unless you lie still for a while.";
text[13]="CUSTOM ERROR MESSAGES#Assassin Ansaksie has one of these. Try cracking her - if you can keep up with her. Nothing special.";
text[14]="FRAGILE SKYSMASHERS#Our Skysmashers can be destroyed with a single kick or Resonance detonator shot, just like the Tasen Turrets. Guess these models weren't that good after all.";
text[15]="MOVE CANCELING#I learned this at the gym last starturn. I can jump and duck out of certain moves, but it took some experimentation to get it right.";
text[16]="VENDING MACHINES#The humans have something resembling vending machines in Sector 8. Maybe they still work if you try using them.";
text[17]="SEALED ROOMS#Tasen Shredders are great for breaking super-high level Shield doors. The Resonance detonator and Hyper pulse can also destroy Shield doors, don't forget that.";
text[18]="BANANA SHENANIGANS#I heard General Tor knows a cool balancing act. All you need to do is land the last hit on him with a Banana gun.";
text[19]="CREEPY CRAWLY#Yeah, I went to Sector Z, but I dunno how I got out of there. I tried poking all the creatures in there to see what would happen.";
text[20]="RIBBONS#It seems the Human Anomaly hallucinates about pink ribbons, and missing just one of them makes her forget all about them. Whatever boots up her Nanofield|";
text[21]="WEIRD CONSTELLATION AND STUFF#Use the `Numpad` to move the view and take a look around the sky in Sector 7. Also look carefully at the huge stacks of boxes in Sector 1, and one of the human computers in Sector 5.";
text[22]="CEILING LAMPS?#I tried hitting my head on as many ceiling lamps as possible in Sector 1. All I got was a reprimand from my Berserker though.";
text[23]="POINTLESS MESSAGE#I found a comment in the Null driver's code saying to press up, up, down down, left, right, left, right on the Main menu. What's a Main menu?";
text[24]="SUPERCHARGES#There's one in every Sector of this building? I know Sentinel Proxima drops one if you destroy it without ever electrocuting it.$";
text[25]="HIGH-SECURITY TASEN ROOM#I saw a heavily locked room in Sector 3 protected by a set of powerful Shield and Security doors. Nanofield rebooting should do the trick.";
text[26]="MASSACRE#Assassin Ansaksie's got this weapon, I know it. She has weird morals. She's willing to give a Generation 1 copy to someone whose kill count is zero, as long as she's met them in person.";
text[27]="INNER PREY#(See Craxmasta's log on `Prototype Null driver`)";
text[28]="POWERFUL DEDICATION TO HER OWN MORALS#Should the Anomaly still have her senses with her, I bet she could even spare Annihilator Iosa if she somehow defeated her in battle, provided Assassin Ansaksie didn't get in the way.";
text[29]="PLACE YOUR BETS#On the other hand, the Anomaly also shows potential for being molded into a fearsome killing machine. What would happen if a truly murderous Anomaly faced off with General Tor?";
text[30]="GOING DEEPER#Considering how illegal the Null driver prototype is, can you imagine what would happen if you not only defeated Tor, but used the Null driver to land the final blow on him?";
text[31]="AAAAAH I CAN'T GO ON#There's a crapload of other things I haven't even begun to research. Find them yourself, buddy.";
pages=32;}

if (global.textid=="text791"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Intercepted narrow-transmission broadcast";
text[1]="OmnikrakR, I have NO idea what's going on in this intercepted message from Komato Informational Center:";
text[2]="The results are in! High Command has carefully selected the following entries for excellence in their respective category. The winners will receive a non-paid-for trip to nowhere starting now and ending ten cycles ago. Presenting the list of winners:";
text[3]="Winner of Castle of Elite Quote of the Year 2005:#`nice game but the next time i like it when you have more place to move bigger levels`#-cambesa, typed entirely in huge red text";
text[4]="Winner of Castle of Elite Quote of the Year 2007:#`The graphics look a bit dull.`#-Prof. Mark Overmars";
text[5]="Winner of Castle of Elite Quote of the Year 2008:#`THIS GAME IS A DON!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!";
text[6]="!!!!!!!!!!!!!!!!!!!!!! nice music by the way` -lagarage#$#Runner-up Castle of Elite Quote of the Year 2008:#`yuck!` -zarley11";
text[7]="Winner of Garden Gnome Carnage Quote of the Year 2007:#`ok the game is point less you just knock of some elves out weird,,,,,,,,,,,,,, not fun for teens good for younger kids`#-ash007";
text[8]="Winner of Garden Gnome Carnage Quote of the Year 2008:#`it so much power. i love hard games nad power. it's fly santas evrywhere.`#-piggekott";
text[9]="Winner of Garden Gnome Carnage Quote of the Year 2009:#`THE KITTY WIIL NOT DIE!!!!`#-recon940";
text[10]="Winners of Iji Quote of the Year 2008:#`YAY! Been waiting for this ever since it came out!` -Estin#`it's nice to have an entire stat dedicated to giving people a boot-to-the-head` -100thassasin";
text[11]="Winners of Iji Quote of the Year 2009:#`space weaponry seems to favor aliens with reverse-joint limbs.`#-HYDRACORE#`NOBODY likes Iji.` -Overman";
pages=12;}

if (global.textid=="text792"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Prototype Null driver";
text[1]="Damn it, we can't get it back. OmnikrakR was planting a message in it but accidentally pulled the trigger. The entire Nanogun just disappeared, after turning one of the walls to a huge face and the floor to liquid pencils. We know these `hallucinations`";
text[2]="are just long-distance light redirections from the wormholes the weapon attempts to open, but they're giving me nightmares. Anyway, OmnikrakR tracked the gun into the space beyond that Tasen portal leading to `Sector Z`. Guy's a genius, so he";
text[3]="figured out that reality will shift in Sector Z according to who enters it - someone who has `achieved everything on the records screen except beating the Remar Games speedrun times` would be able to find and retrieve the Null driver. We don't know what";
text[4]="that means, but if you do manage to fulfill those requirements and head into Sector Z, remember that rebooting your Nanofield may save your life in there - maybe even get you past some of the weirder obstacles. Anyway, I'm not going to try to understand";
text[5]="this weapon anymore. I'm just counting myself lucky that it somehow gave me 99 Points when I tried firing it. Too bad it also turned my gun into what looks like carbon dioxide pudding.";
pages=6;}

if (global.textid=="text793"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Are you serious?";
text[1]="Hey OmnikrakR, here's that garbage data I found in the Null driver code. Apparently it says `type AREYOUSERIOUS on the Main menu`. Yeah, I don't even know anymore. Let's go get those hot drinks|";
pages=2;}

#define scr_logs8
obj_iji.startmusics=0;

//Logs in Sector 8
if (global.textid=="text801"){
text[0]="Author: Tasen soldier HT896:IJGA#$#Subject: Annihilators";
text[1]="The rumors have just been confirmed; there are indeed Annihilators among the Komato assault teams. Who knows why they brought 'em, we're doomed anyway - probably 'cause they get a kick out of seeing us slaughtered. If I ever live to see one of";
text[2]="those things, I'm not even gonna fight it| I'll just stand there and let it kill me in the fastest, most painless way possible.";
pages=3;}

if (global.textid=="text802"){
text[0]="Author: Komato Recreational Unit#$#Subject: Ultra Minefield Run And Seek";
text[1]="Arguably the most lethal game ever created, the rules are quite simple. First, find or plant a large minefield and gather every participant in its center. Then it's time to decide who will be the `seeker` and who will be the `judge` - this is usually";
text[2]="decided with a large fight, of which the two participants with the least bruises win. When the seeker and judge have been chosen, they remain in the middle of the field, and the seeker closes his eyes. The other players start running randomly";
text[3]="around the field, and whenever someone steps on a mine, the seeker must point in the direction in which it happened and guess the distance to the explosion. If he succeeds, with a pre- determined margin of error, the judge gives him one point. This";
text[4]="continues until ten shortcycles have passed, at which point any player who is still alive counts against the seeker's points. If the seeker has a positive score, he wins, and can expect a thorough and utter beating by the survivors, who are usually";
text[5]="not very pleased with not having become the `seeker` at the start of the game.";
pages=6;}

if (global.textid=="text803"){
text[0]="Author: Komato Informational Center#$#Subject: Advertisement";
text[1]="Tired of parasites eating your Nanogun for breakfast? Being nibbled on by those pesky little Blits? With BLIT-AWAY SPRAY, all your worries will be over! Order now, and get a free Assassin- class Laser dagger! Note: Due to the aggressive (and heavily";
text[2]="armed) local animal rights activists, BLIT-AWAY SPRAY has not been tested on any live organisms, including Blits. Please use this product at your own risk.";
pages=3;}

if (global.textid=="text804"){
text[0]="Author: Komato Imperial Weapon Industries#$#Subject: Berserker 23948-78397-45533: FOR YOUR EYES ONLY";
text[1]="Project 00002-90103-00525 is still starturns from mass- production. We may have come a long way in deciphering Nanotechnology, but had the race responsible for it still been around, our work would have been a lot easier. Those paranoid";
text[2]="bastards encrypted everything as heavily as possible, seemingly out of spite. At any rate, the only safe way to conceive this weapon is combining an MPFB Devastator with a Cyclic Fusion Ignition System. Either they did the same, or most of the";
text[3]="weapons we have now are simply lesser modules of their more potent technologies. Imperial Weapons Industries looks to a future where we shape Nanotechnology to our will, rather than guessing at its inner workings. The next generation may be";
text[4]="coming, and a Massacre prototype was indeed used on Ciretako. Until then, this is the best handheld Generation 1 stuff we've got.";
pages=5;}

if (global.textid=="text805"){
text[0]="Author: Komato Berserker 62392-36489-32164#$#Subject: Our future";
text[1]="Let's be realistic here. The Tasen are soon to be extinct, and from that point on, we'll no longer have a common enemy. We'll need more leaders - powerful leaders to keep the people together, as internal conflict should remain in our past. General Tor and";
text[2]="Annihilator Iosa are perfect examples of who should be our role models - Tor cares about his people, while Iosa is so powerful they couldn't even kill her with an Alpha Strike. The way things are going now, history will surely treat her well. The more";
text[3]="young leaders like her and General Tor we get, the better.";
pages=4;}

if (global.textid=="text806"){
obj_iji.tasenkills=0;
obj_iji.komatokills=0;
for (i=1;i<340;i+=1){
    if (global.killdata[i]>0)
        obj_iji.tasenkills+=1;
    }
for (i=501;i<626;i+=1){
    if (global.killdata[i]>0)
        obj_iji.komatokills+=1;
    }
if (global.totkills>7*global.neutralkc && obj_iji.tasenkills>obj_iji.komatokills*4){
    text[0]="Author: Komato Berserker 23948-78397-45533#$#Subject: The Anomaly is taking sides";
    text[1]="The Human Anomaly is apparently attempting to get on our good side, as she has thus far killed considerably more Tasen than Komato. Be aware that not a single Berserker nor Annihilator considers this foolish display worthy of even the slightest";
    text[2]="consideration. Your orders remain to kill on sight.";
    pages=3;
    }
else if (global.totkills>7*global.neutralkc && obj_iji.komatokills>obj_iji.tasenkills*4){
    text[0]="Author: Komato Berserker 23948-78397-45533#$#Subject: The Anomaly is taking sides";
    text[1]="Be aware that the Human Anomaly is either working for the Tasen or deliberately protecting them - she has thus far killed considerably more of our troops than theirs. It matters little should those weaklings find her a champion. Your orders remain";
    text[2]="to kill on sight.";
    pages=3;
    }
else if (global.totkills>7*global.neutralkc){
    text[0]="Author: Komato Berserker 23948-78397-45533#$#Subject: The Anomaly is a third party";
    text[1]="Be aware that the Human Anomaly's remarkable kill record includes large amounts of both Tasen and Komato. However, it matters little that she is to be considered a third party - your orders remain to kill on sight.";
    pages=2;
    }
else{
    text[0]="Author: Komato Berserker 23948-78397-45533#$#Subject: The Anomaly is not defenseless";
    text[1]="The Human Anomaly may not be considered particularly violent, but has thus far managed to survive encounters with both Assassin Asha and a Sentinel. She is not to be taken lightly - your orders remain to kill on sight.";
    pages=2;
    }
}

if (global.textid=="text807"){
text[0]="Author: Tasen Elite MA109:MXPC#$#Subject: Trust no-one!";
text[1]="Reports of the Human Anomaly keep flying, but don't be deceived - the Komato may be fighting her, but she's not on our side either!";
pages=2;}

if (global.textid=="text808"){
text[0]="Author: Tasen Center of Advertisement#$#Subject: Lift upgrades";
text[1]="Yes, the brilliant minds who most probably fixed the catapulting Lift bug have once again outdone themselves, with a new integrated soundchip that receives new Lift music every cycle. Just tune in the chip to the nearest legal frequency, making";
text[2]="sure to skip the illegal ones so as to not accidentally trigger a global war alarm, and prepare your aural tastebuds for the sensation of such unforgettable classics as `Exploding Eardrums That Are Also On Fire`, `It's awesome being purple` and `Hel";
text[3]="Sarie will kick you in the face`. So, don't delay! Order an upgrade for your Lifts right now, and get a free Elite Krotera action figure!";
pages=4;}

if (global.textid=="text809"){
text[0]="Author: Tasen Soldier JG922:ZMNS#$#Subject: Vending machines?";
text[1]="The human food containers in this area seem to require the use of an elaborate mechanism to obtain their contents. I guess they're the humans' equivalent of vending machines, but less sophisticated. Gets me thinking of the ones back on Lonimadel|";
text[2]="they had all kinds of fruity stuff, and I don't mean `fruity` as in `contains the crushed flesh of innocent living organisms that happened to be born on a tree`. I mean packaging adorned by such brilliant slogans as `It's all-natural!` So is nerve poison.";
pages=3;}

if (global.textid=="text810"){
text[0]="Author: Tasen Soldier TJ57:PJVI#$#Subject: Human message";
text[1]="After decrypting the language used by the local humans, we began translating everything we could get our hands on to aid our research. They possess mainly primitive technologies and equipment, and their research on `megacores` and `neoweapons`";
text[2]="is inherently inferior to Nanotechnology. I thought we'd find some answers to the Human Anomaly around here, but we've had no luck. The only thing I could find was a short promotional message. It reads:";
text[3]="Welcome to the weapons branch of the D.C.M.F.P.R. military research facility. Located on the outskirts of a peaceful industrial region, we care about our employees and their work. When you first arrive, the healthy open spaces of Sector 3,";
text[4]="home of software development, will welcome you with a smile. The nearby Sector 2 contains the local medical services, and a quick trip to the main storage in Sector 4 will get you geared up for work in no time. Sector 5 houses the storage control and";
text[5]="materials analysis department, while Sector 6 has the main neoweapon and genetics research laboratories. Sector 7 handles exotic technology and reverse-engineering research, which along with Sector 6 constitutes the most highly classified part of";
text[6]="the weapons branch. Sector 8 is the main recreation area, offering free entertainment network access, games, swimming and sports. Dotted around the Sectors are guard stations, operating from the security gateway in Sector 9. Your performance is of";
text[7]="great import to the other Sectors of the facility, among them the top-class Sector X focusing on military A.I. applications and alternative energy sources. Please enjoy your stay in the facility, and have a safe day.";
pages=8;}

if (global.textid=="text811"){
text[0]="Author: Komato Trooper 87644-06156-86207#$#Subject: Dangerous potentials";
text[1]="A scanning of the Human Anomaly has been completed, and the results are frightening. She's using a standard Tasen Soldier Nanofield, but her innate skills are likely more powerful than she realizes. Air braking, Teching and Nanofield rebooting are";
text[2]="well known among the initiated, but this last, unnamed ability I've never even heard of. As far as I understand, the requirements for triggering it is to have 5 or less HP left, eight basic Nanoweapons and at least 1 ammo for each of them.";
text[3]="As for actually activating the ability, it seems she needs to hold "+chr(global.usekey)+" while getting up after being knocked to the ground. The ability consumes 1 ammo for all of the Anomaly's weapons and expels it in a massive storm of explosions while shielding her";
text[4]="from damage, but requires her Nanogun to be in Active mode. Luckily this technique seems so difficult to perfom, she will never discover it.";
pages=5;
if (!global.hiddenskill3){
    global.hiddenskill3=1;
    scr_readsum();
    if (wrongsum){
        global.erasetop=0;
        global.topmessage="SAVEFILE CORRUPT; UNABLE TO RECORD HIDDEN SKILL";
        global.ignorestation=90;
        }
    else{
        global.erasetop=0;
        global.topmessage="HIDDEN SKILL `RETRIBUTION` PERMANENTLY RECORDED TO PAUSE MENU";
        global.ignorestation=120;
        scr_sound("glo_cracksuccess");
        scr_save(0);
        }
    }
}

if (global.textid=="text812"){
text[0]="Author: Komato Berserker 21435-56097-16959#$#Subject: We've passed the point of no return";
text[1]="Few seem to like thinking about our future, and rightly so. The only other sentient species we have ever discovered was already long dead, and thanks to their Nanotechnology, we've grown so advanced we've been able to hunt the Tasen clear across deep";
text[2]="space without a single colony escaping our grasp, at least to our knowledge. With the Alpha Strike, we now have reliable planet killer technology - and the Star Strike may soon become reality. However, we colonize an exponentially accelerating number of";
text[3]="planets, so it's simply impossible for us to ever be extinguished if we keep growing at this pace. Back on Origin we were ruled by nature, but now the galaxy belongs to us. The Komato will be eternal.";
pages=4;}

if (global.textid=="text813"){
text[0]="Author: Tasen Universal Logbook#$#Subject: Summary of history, Part 3: The Tasen-Komato war";
text[1]="The fury with which the Komato Imperial Army commenced its first strike was beyond belief. Tasen starships and civilian colonies alike were raided and destroyed, and the number of casualties grew astronomical as they invaded our homeworlds. The Komato";
text[2]="eventually developed a space-to-ground Nanoweapon called the Alpha Strike, which let a single fleet lay ruin to an entire planet. We created a planetary shielding system to defend our worlds, but even when we finally managed to steal the Komatos'";
text[3]="Alpha Strike technology, so had they in turn stolen our planetary shielding system - since then, every time a part of our population settled down on a new planet and erected a planetary shield, the Komato found them, fought them in surface combat,";
text[4]="destroyed the planetary shield generators and proceeded to Alpha Strike the planet. Our population rapidly dwindled, until it consisted of only a million individuals - out very last colony.";
pages=5;}

if (global.textid=="text814"){
text[0]="Author: Komato Independent Newsprogram Archive#$#Subject: Zentraidon";
text[1]="`Zentraidon` is a taboo word related to the extinct race we discovered, meaning self-annihilation through rapid technological advancement and arrogance. It was the fate they themselves met. Many mysteries still surround this species and the remains of";
text[2]="their homeworld, but our only hope of total galactic dominance lies in fully reverse-engineering the technology they mastered. It is considered treason to suggest that once this happens we will be headed for Zentraidon as well.";
pages=3;}

if (global.textid=="text815"){
text[0]="Author: Komato Trooper 01923-98870-58987#$#Subject: Reply(7): Let's discuss it rationally";
text[1]="No, YOU shut your typing fingers for a moment. The people COMPRISING the Army INSTIGATED the war. No High Commander lightturns from the action got it more in for the sorry bastards than your war-weary front guys. The total number of";
text[2]="Komato-Komato conflicts DROPPED by like a thousand when the Tasen hunt started but the casualties went UP. They blindsided us in so many battles they had to blast the propaganda twice over. Bottom line: shut up.";
pages=3;}

if (global.textid=="text816"){
text[0]="Author: Komato Trooper 02283-31551-70694#$#Subject: Reply: Generation 2 stuff";
text[1]="No, it's mostly fine to talk about unless you admit to owning one without permission. All Generation 2 Nanoweapons require their own unique Nanoguns though, so it's not like you could easily hide one! Also, only super-high-ranking people have access to";
text[2]="them, and they're EXTREMELY illegal to use in actual combat 'cause the Tasen might steal them. I heard that Annihilator Iosa actually owns a Pre-loading Vortex cannon - wouldn't it be awesome to get to see it just once?";
pages=3;}

#define scr_logs9
obj_iji.startmusics=0;

//Logs in Sector 9
if (global.textid=="text901"){
text[0]="Author: Tasen Soldier IF5737:IHBA#$#Subject: I'm not even gonna try";
text[1]="Yep. This is the end, alright. One little ventilation shaft or something, and a couple of pulsecycles until they find me, collector's hot drink cans and all. Now tell me, when did we ever NOT see this coming? The Komato have grown so huge, their";
text[2]="leaders take orders from the people. And what are people? Intelligent and reasonable? I once liked General Tor, you know, back before the negotiations with Hel Sarie went sour becuase of the Imperial Army. He looked like the only one who knew what";
text[3]="`empathy` even maent, which would be funny if it wasn't true. It's lkie, `Hey Naotgerai, did you see the latest war debaet?` And I'm like, `No, I was too busy kepeing the Komato from koncking over my stack of Supernova bars while attempting to";
text[4]="kill me.` They should at least have had the dececny to tell us they were sireous before attcaking";
text[5]="Alright, that's it. I need to tlel them to stop blowing the palce up because I can't tpye worth ZENTRAIDON in htis shaking.";
pages=6;}

if (global.textid=="text902"){
text[0]="Author: Komato Trooper 72823-00994-78232#$#Subject: Annihilator Iosa";
text[1]="Not only are we fortunate enough to have Annihilator Iosa on the fleet, she went down in person as soon as we landed to conduct a demonstration on how to get things done. I've heard all sorts of stories about this woman, and I don't doubt a single one of";
text[2]="them. Her Nanofield aside, she's not a hero like the ones we had before - she takes care of her troops instead of intimidating them into following orders.";
pages=3;}

if (global.textid=="text903"){
text[0]="Author: Tasen Commander TI820:AOSS#$#Subject: Last stand";
text[1]="The casualty reports have silenced. The connection with every single base around the colony has been lost. Since we didn't have much time to expand before the Komato arrived, it was all over pretty quickly. In this little shelter we may have gathered the";
text[2]="last few Tasen alive| perhaps the last few Tasen in the universe. This is no time to panic, so we've kept calm. Our only hope is that they somehow decide against Alpha Striking us. In other words, we're all dead.";
pages=3;}

if (global.textid=="text904"){
text[0]="Author: Tasen Elite TU472:WNEE#$#Subject: Too quiet";
if (global.specialtriggerc){
text[1]="So far we've defended our little base pretty well, considering we're only about ten people in here. It's been too quiet though. The Komato assault teams have retreated, so they're either getting ready to send a massive attack force in, or they've";
text[2]="succeeded in destroying the planetary shield generators and are preparing the Alpha Strike.";
pages=3;
}
else{
text[1]="So far we've defended our little base pretty well, considering we're only about ten people in here. It's been too quiet though. The Komato assault teams have retreated, so they're either getting ready to send a massive attack force in, or they've";
text[2]="succeeded in destroying the planetary shield generators and are preparing the Alpha Strike. That Soldier we brought keeps talking about her girlfriend and the Human Anomaly, too| speaking of which, we never found out if the Anomaly was on our side or";
text[3]="not. With Krotera killed and the Komato alerted, I'd say NO.";
pages=4;
}
}

if (global.textid=="text906"){
text[0]="Author: Komato Imperial Research#$#Subject: Banana gun";
text[1]="The Banana gun uses one each of the standard Tasen and Komato ammunition units, and also requires that the user's Nanogun is equipped with 8 Nanoweapons, not counting combined ones. Attempting to recreate this weapon is illegal, as is placing";
text[2]="one of its explosive bananas in the favorite dessert of an unsuspecting victim, commonly known as one of the most creative ways to face military law, and one of few forms of murder falling under the category of `Fruit-Assisted`.";
pages=3;}

if (global.textid=="text907"){
text[0]="Author: Tasen Elite OS988:MCMX#$#Subject: Status report";
text[1]="Most doors in our little base have been upgraded to bulkhead class. They're impossible to bypass, and only open manually from the inside. We're stocked up well on supplies and weaponry, so we're prepared for anything short of an Alpha Strike.";
text[2]="Actually, it sounds like another Komato assault team is coming. Hehe. I never get tired of blasting Koma";
if (global.specialtriggerc)
    pages=2;
else
    pages=3;
}

if (global.textid=="text908"){
text[0]="Author: Tasen Commander RI201:LCOI#$#Subject: Rumors";
text[1]="I hope it's just a rumor that they've knocked out the last planetary shield generator| you're not gonna stop an Alpha Strike with a bomb shelter, much less the remains of this primitive human building we're trapped in.";
pages=2;}

if (global.textid=="text909"){
text[0]="Author: Tasen Soldier KG111:PAIE#$#Subject: WHY";
text[1]="Dear logbook, maybe I could sort out my feelings if I wrote them down| when we found out that we were the last surviving colony, I was forced to join the army together with my girlfriend. I was separated from her during the squad setup, and she ended up";
text[2]="under Elite Krotera's command, stationed to defend the lift to his room in Sector 3. She used to joke about how she was alone, surrounded by weapons and ammunition but with no Komato to shoot at. My hope never wavered when we lost contact| but now the";
text[3]="casualty report's in and she was KILLED BY THE HUMAN ANOMALY! I'm sorry, I don't know what to type. I don't know what to feel anymore. I even heard that the human was the one who brought the Komato here. The adults say we're gonna die now, but I feel";
text[4]="safe here with you.";
pages=5;}

if (global.textid=="text910"){ //REMOVED
text[0]="Author: Komato Berserker 89642-60928-18072#$#Subject: Iosa is not emotionless";
text[1]="I don't care for complainers, so I stick with Annihilator Iosa. Isn't it for the better to destroy the crippled, futureless civilization here on Origin, caught in the wake of the Tasens' mindless path to escape us? Those traitorous parasites";
text[2]="should've given up long ago. Just as predicted, we've succeeded in locating their final outpost, and they have nowhere left to run. All this death, including the annihilation of Origin, could have been prevented had the Tasen agreed to organized";
text[3]="termination right from the start! And the idealist bastards who scream for peace, what do they expect us to do? Reform societies and cultures spanning hundreds of planets? Accept the Tasen into our fold like nothing ever happened?";
pages=4;}

if (global.textid=="text911"){
text[0]="Author: Tasen Commander TI646:DFAJ#$#Subject: Top secret";
text[1]="We abandoned research of Sector Z long ago. For fear of anyone ever finding out about that place, we sealed up the wall to the research room. But which wall, I don't remember| somewhere in a lift tunnel in Sector 1, next to a teleporter destination pad.";
text[2]="No-one will EVER find it. No-one without a Rocket launcher, at least.";
pages=3;}

if (global.textid=="text912"){
text[0]="Author: Komato Berserker 09515-42340-88510#$#Subject: Damn we rule";
text[1]="The Tasen are running out of troops so fast, it's not even funny! We're obliterating them! The only Tasen left are probably the ones in that defensive base they built up ahead. Do they seriously think they'll survive for more than a cycle? We're";
text[2]="gonna Strike the biosphere out of Origin and broadcast it live on the all-wide feed, together with the execution of the human-#loving troops who started cropping up as soon as we landed. We're an ARMY - we're here to do our job, not question our superiors!";
pages=3;}

if (global.textid=="text913"){
text[0]="Author: Komato Assassin 06760-76850-25912#$#Subject: The Anomaly's out of our league";
text[1]="So far, not a single Assassin has managed to kill the Anomaly, not even Asha. She's officially the most dangerous enemy on the planet; why anyone would rather confront her than run at this point is beyond me. Ansaksie seems to think the same, she's got";
text[2]="a group of Assassins separated from Asha and order them around like she's their superior. The only thing saving them from accusation of treason is that Asha doesn't seem to care anymore. And what's up with General Tor? It's like he didn't even want";
text[3]="this planet purged. He needs to make up his mind, either you kill all the Tasen, or you wimp out and decide to spare a few because they're no longer a threat. Really, consider what the Army would think of that. Forget Assassin Ansaksie, General Tor's the one";
text[4]="who's living on the edge here.";
pages=5;}

if (global.textid=="text914"){
text[0]="Author: Komato Trooper 69721-43659-34782#$#Subject: Damn it";
text[1]="There's this heavily fortified Tasen base below, and we've had no luck busting it, especially since the Assassins are all leaving. The Berserkers all used up their teleportation charges when we arrived, too. The last group of Troopers who tried to storm";
text[2]="their base counted to five Elites, four Commanders, and at least one Soldier who could barely hold a gun. None of them were killed, but some of the Troopers were. Damn, who sacrifices themselves when we're gonna Alpha Strike this dump anyway?";
text[3]="We've won, the war is over! Time to go home and enjoy the sweetest victory in history, damnit!";
pages=4;}

if (global.textid=="text915"){
text[0]="Author: Tasen Soldier KG111:PAIE#$#Subject: I'm so happy!";
text[1]="Dear logbook, Maeja just called me| she's alive!!! I knew it! I knew it all along! Now we'll meet up and hide where the Komato will never, ever find us. We'll run far from this place, even outside the colony borders to find some humans to help us. When";
text[2]="this is all over, I'll make sure to find the Human Anomaly and thank her for sparing my girlfriend. Yes, she saw her - but she didn't kill her. I don't know why, but Maeja said that the human's eyes looked sad as she headed up to Krotera's room| as";
text[3]="if she, too, didn't really want to fight anyone. Someone said that our defense base was the final Tasen outpost, and when it's destroyed, we would be extinct. But maybe, just maybe, the human will stop the Komato before they Alpha Strike us. Wouldn't that";
text[4]="be nice? A planet for Maeja and me. I'm sure we could live together with the surviving humans. I guess that's why I'm happy| 'cause I'm alive against these impossible odds. Well, time to go!";
pages=5;}

if (global.textid=="text917"){
text[0]="Author: Komato Trooper [NO IDENTIFICATION]#$#Subject: Reply: The Nuke";
text[1]="Craxmasta, I finally got ahold of NanoBitSplit's old logbook, and it has some interesting details about the stuff he cracked but lost the backups for. The `Nuke` carried by Sentinels is indeed of Tasen origin, but it gets better - it's a combination of a";
text[2]="Rocket launcher and MPFB Devastator, meaning you would be able to crack one yourself if you could get your hands on those Nanoweapons. Just replace all opcodes 26 with 89 in field 1480 of prime 5C, and all 5 with 4, and the safety catches will do the";
text[3]="rest. Easy huh? Battling with the Nanogun safety algorithms has become less of a chore and more of a pleasure lately, and eventually we'll master it completely. Military information needs to be free if we're ever gonna stand on equal ground without";
text[4]="the Imperial Weapon Industries selling us these weapons at ridiculous prices. Man I hate their commercials. Power to the Troopers! OmnikrakR out.";
pages=5;}

if (global.textid=="text918"){
text[0]="Author: Tasen Soldier OE230:JOOJ#$#Subject: Anomaly!";
text[1]="It's me, Vateilika! Remember me? The truce? My little shop? All that stuff? Wouldn't you know, after getting outta that Komato ship my friend called me and told me about a defense base they were setting up around here, so I made a run for it and met up";
text[2]="with her. Turns out she was just about to escape from that little base to see her girlfriend or something, so I went with her - no point hanging 'round getting stomped by the Komato, you know? I'm glad I met you, anyway. Wherever you're going next, we'll be";
text[3]="rooting for you. Go get 'em Komato bastards, alright!";
pages=4;}

if (global.textid=="text919"){
text[0]="Author: Komato Assassin 02384-56102-37456#$#Subject: Retreat, regroup, relax";
text[1]="You know what I think about it already. Asha's a loon and I don't see a single one of us sticking to him now, but let's not push our luck. Let's all meet up and wait out the orders to head back to lower orbit. As always, if you start taking heavy damage";
text[2]="then just make a run for it. This has always been our tactic, so stick to it. I don't want to lose any of you.";
pages=3;}

if (global.textid=="text920"){
text[0]="Author: Komato Annihilator Iosa#$#Subject: Doing my part";
text[1]="My homeworld was not the peaceful colony it was often made out to be. We trained and sent troops to war like anyone else. I used to hate the Army and stayed out of it for as long as possible, as I believed that responding to violence with more violence would";
text[2]="lead Komatokind nowhere. But as those who refused to enlist were sentenced to prison, I eventually joined to save my own skin. In hindsight, I was a fool. I did not become Immortal to stand on the sidelines and pretend that everything was fine. I could no";
text[3]="longer sit idly by while the Tasen slaughtered my people without pause or mercy.";
pages=4;}

if (global.textid=="text921"){
text[0]="Author: Komato Annihilator Iosa#$#Subject: Doing my part";
text[1]="My homeworld was not the peaceful colony it was often made out to be. We trained and sent troops to war like anyone else. I used to hate the Army and stayed out of it for as long as possible, as I believed that responding to violence with more violence would";
text[2]="lead Komatokind nowhere. But as those who refused to enlist were sentenced to prison, I eventually joined to save my own skin. In hindsight, I was a fool. I did not become Immortal to stand on the sidelines and pretend that everything was fine. I could no";
text[3]="longer sit idly by while the Tasen slaughtered my people without pause or mercy.";
pages=4;}

if (global.textid=="text922"){
text[0]="Author: Komato Assassin [NO IDENTIFICATION]#$#Subject: -";
if (global.totkills>8*global.neutralkc && global.totkills<=9*global.neutralkc && global.specialtrigger2==1){
    text[1]="Anomaly, the time has come. You must kill the one stationed at the end of this Sector. I'd aid you in person, but considering your reputation, I'm not sure I trust you not to put a bullet in my back as well. If you want to earn that trust, it's not too";
    text[2]="late - all you have to do is kill as few people as possible before you reach Deep Sector. Good luck.";
    pages=3;
    }
else if (global.totkills>8*global.neutralkc && global.specialtrigger2==1){
    text[1]="Anomaly, the time has come. You must kill the one stationed at the end of this Sector. I'd aid you in person, but considering your reputation, I don't trust you not to put a bullet in my back as well. Again - you must kill the one at the end of this";
    text[2]="Sector. Good luck.";
    pages=3;
    }
else if (global.specialtrigger2==0){
    text[1]="Anomaly, the time has come. You must kill the one stationed at the end of this Sector. Due to circumstances beyond my control, I cannot help you in person. Good luck.";
    pages=2;
    }
else{
    text[1]="Anomaly, the time has come. Meet me in Deep Sector. I will tell you more there.";
    pages=2;
    }
}

if (global.textid=="text923"){
text[0]="Author: Komato Assassin [NO IDENTIFICATION]#$#Subject: -";
if (global.totkills>8*global.neutralkc && global.totkills<=9*global.neutralkc && global.specialtrigger2==1 && global.kills+global.totkills>9*global.neutralkc){
    text[1]="I told you not to kill anyone. Clearly I cannot trust my back to you. I'm not about to blow my cover for your sake, so I suggest you leave immediately before things become unpleasant.";
    pages=2;
    }
else if (global.kills+global.totkills<=9*global.neutralkc){
    text[1]="Glad you could make it. If you'd like the opportunity to kill someone important, then keep heading deeper into this place and I will aid you in person.";
    pages=2;
    }
else if (global.totkills<=8*global.neutralkc){
    text[1]="I changed my mind. Someone as mindless as you would only cause me trouble. I suggest you leave immediately before things become unpleasant.";
    pages=2;
    }
else{
    text[1]="You are not supposed to be here. I'm not about to blow my cover for your sake, so I suggest you leave immediately before things become unpleasant.";
    pages=2;
    }
}

#define scr_logsx
obj_iji.startmusics=0;

//Logs in Sector X
if (global.textid=="textx01"){
text[0]="Author: Komato Trooper 89524-01120-91040#$#Subject: DAMN IT!!!";
if (global.killdata[797]==1)
    text[1]="The Human Anomaly walked into a fight with Iosa - and made it out alive! I don't know about you, but I'm getting out of here RIGHT NOW!";
else
    text[1]="Iosa has fallen! Something is going very, very wrong here, and I don't wanna stick around to find out what!";
pages=2;}
if (global.textid=="textx02"){
if (global.killdata[797]==1){
    text[0]="Author: Komato Assassin Asha#$#Subject: Seek and destroy";
    text[1]="All available units in area 693K-A79 are to seek and destroy the Human Anomaly. Avoid termination if possible; we want to study her Nanotechnology, and in particular her Nanogun. The Alpha Strike has been postponed until either this goal is achieved,";
    text[2]="or we lose too many forces to her. General Tor reserves the right to call back all forces and commence Alpha Strike at any given moment; his patience is running out. Beware - this is the same individual that defeated Annihilator Iosa. Do not underestimate";
    text[3]="her under any circumstances.";
    }
else{
    text[0]="Author: Komato Assassin Asha#$#Subject: Seek and destroy";
    text[1]="All available units in area 693K-A79 are to seek and destroy the Human Anomaly. Avoid termination if possible; we want to study her Nanotechnology, and in particular her Nanogun. The Alpha Strike has been postponed until either this goal is achieved,";
    text[2]="or we lose too many forces to her. General Tor reserves the right to call back all forces and commence Alpha Strike at any given moment; his patience is running out. Beware - this is the same individual that we believe killed Annihilator Iosa. Do not";
    text[3]="underestimate her under any circumstances.";
    }
pages=4;}
if (global.textid=="textx03"){
text[0]="Author: Komato Assassin 90201-25345-15880#$#Subject: BAILING OUT";
if (global.totkills>9*global.neutralkc){
    text[1]="Okay, every one of us in Asha's squad have read his orders by now, and you know what? Behind that calm military talk is someone who's gone completely insane. Asha's gonna take on the Anomaly no matter what! I'm bailing out of this one, and I know you're all";
    text[2]="with me - let's head up to lower orbit, the bounty ain't worth the risk. Asha can do what he wants, and he can die whatever horrible death that crazy human's got in store for him as far as I'm concerned!";
    }
else{
    text[1]="Okay, every one of us in Asha's squad have read his orders by now, and you know what? Behind that calm military talk is someone who's gone completely insane. Asha's gonna take on the Anomaly no matter what! I'm bailing out of this one, and I know you're all";
    text[2]="with me - let's head up to lower orbit, the bounty ain't worth the risk. Asha can do what he wants as far as I'm concerned!";
    }
pages=3;}
if (global.textid=="textx04"){
if (global.killdata[797]==1){
    text[0]="Author: Komato Trooper 90475-36203-57827#$#Subject: My job sucks more than your job";
    text[1]="Don't complain, Tarixuro. I wanted to be famous, and what am I famous for? Inventing and coding the kill counter in the Annihilators' visor displays. Some people want me dead for what happened at Ciretako, and I don't even know what the";
    text[2]="Annihilators will say when they find out that the counter reverts to zero after passing a thousand. Iosa the Invincible once reported the bug, but luckily for me she's not the kind to turn on her own over a little thing like that.";
    }
else{
    text[0]="Author: Komato Trooper 90475-36203-57827#$#Subject: My job sucks more than your job";
    text[1]="Don't complain, Tarixuro. I wanted to be famous, and what am I famous for? Inventing and coding the kill counter in the Annihilators' visor displays. Some people want me dead for what happened at Ciretako, and I don't even know what the";
    text[2]="Annihilators will say when they find out that the counter reverts to zero after passing a thousand. Iosa the Invincible once reported the bug, but at least now she won't be telling anyone. Heh heh.";
    }
pages=3;}
if (global.textid=="textx05"){
text[0]="Author: Komato Trooper 43728-46235-96239#$#Subject: Hello?";
text[1]="I'm sending this to the nearest logbooks. My visor's malfunctioning, and I can't see a thing. My helmet's also stuck to the armor vest. I don't even know where I am anymore. At least I know how to operate my logbook without looking, but please";
text[2]="don't forget to come and pick me up before the Strike. Anyone? I've got fried candy bars in here. They're kind of hard to get from my pocket to the helmet on the inside of the armor though. They're getting a bit sticky.";
pages=3;}
if (global.textid=="textx06"){
text[0]="Author: Komato Trooper 87265-32569-23592#$#Subject: My job sucks";
text[1]="When people say they hate their job, I ask them if they have to travel for hundreds of turns on end through empty space just to find and kill some puny Tasen. What's the use of the Imperial Army when the Tasen are gone? Oh right, they need people for";
text[2]="guard duty and peacekeeping. And guess who'll be flying around guarding civilian colonies from absolutely no-one, while hoping he doesn't get dragged into any nearby wars? That's right, people like ME.";
pages=3;}
if (global.textid=="textx08"){
text[0]="Author: Komato Trooper 07115-31243-46526#$#Subject: I wanna get off this damn planet";
text[1]="Most of the ships have gone up to lower orbit by now, spreading out to prepare for the Alpha Strike. It's starting to feel empty here| I just hope they remember to pick us all up. Once the sky goes white from targeting lasers, you ain't got time to stand";
text[2]="around and smell the corpses. Speaking of, that human should be reaching this place soon, but she won't be getting any farther. Not only has this power core's tendrils burrowed down and locked any nearby doors, it's specifically built to resist the Nuke";
text[3]="Nanoweapon, so you can't even destroy the core without opening the blast doors. Also, you-know-who is guarding one of the terminals to those doors now.";
pages=4;}
if (global.textid=="textx09"){
text[0]="Author: Komato Annihilator 92347-86529-67587#$#Subject: KILL";
if (global.killdata[797]==1){
    text[1]="I ain't sparing anyone who tries to run from this mission. Our opponent is a single damn human, so get your asses over to your posts and KILL HER DEAD. You say she's the reason we found the Tasen? I say she's a walking bounty with a priceless Nanogun,";
    text[2]="and High Command no doubt will want to know how they put a Tasen Nanofield into a human. And do you mess with High Command? NO. AND YOU DON'T MESS WITH ME EITHER, SO GET THAT HUMAN. If you're more afraid of her than ME, YOU'RE A TRAITOR.";
    }
else if (global.totkills>45){
    text[1]="I ain't sparing anyone who tries to run from this mission. Our opponent is a single damn human, so get your asses over to your posts and KILL HER DEAD. You say she's the reason we found the Tasen? I say she's a rogue murdering machine with a priceless";
    text[2]="Nanogun, and High Command no doubt will want to know how they put a Tasen Nanofield into a human. And do you mess with High Command? NO. AND YOU DON'T MESS WITH ME EITHER, SO GET THAT HUMAN. If you're more afraid of her than ME, YOU'RE A TRAITOR.";
    }
else if (global.specialtriggerc){
    text[1]="I ain't sparing anyone who tries to run from this mission. Our opponent is a single damn human, so get your asses over to your posts and KILL HER DEAD. You say she's just a harmless grunt? I say she's the murderer of Annihilator Iosa carrying a priceless";
    text[2]="Nanogun, and High Command no doubt will want to know how they put a Tasen Nanofield into a human. And do you mess with High Command? NO. AND YOU DON'T MESS WITH ME EITHER, SO GET THAT HUMAN. If you're more afraid of her than ME, YOU'RE A TRAITOR.";
    }
else{
    text[1]="I ain't sparing anyone who tries to run from this mission. Our opponent is a single damn human, so get your asses over to your posts and KILL HER DEAD. You say she's the reason we found the Tasen? I say she's the murderer of Annihilator Iosa carrying a";
    text[2]="priceless Nanogun, and High Command no doubt will want to know how they put a Tasen Nanofield into a human. And do you mess with High Command? NO. AND YOU DON'T MESS WITH ME EITHER, SO GET THAT HUMAN. If you're more afraid of her than ME, YOU'RE A TRAITOR.";
    }
pages=3;}
if (global.textid=="textx10"){
text[0]="Author: Komato Imperial Weapon Industries#$#Subject: General Exoskeleton";
text[1]="An enormous leap forward in Annihilator-class exoskeletons, the `Eidolon` model was created solely for use by Komato Generals. As it is designed to battle armies, most of its armaments rely on unfocused, large-scale attacks, and it has trouble aiming at";
text[2]="nearby units. However, its most powerful weapon doubles as an accurate long-range attack - the Phantom Hammer. No General has yet to fall in battle piloting an Eidolon, and even though many of its weapons can be repelled with a mere Resonance reflector,";
text[3]="none have survived long enough to even attempt it. Even the legendary Hel Sarie of the Tasen Elite, known for driving modified Tasen Cruisers into surface battles, fell to General Tor while defending Elem Sioz, one of the last Tasen homeworlds.";
text[4]="General Tor reportedly destroyed both the Cruiser's reactor core and Hel Sarie herself with a Phantom Hammer shot.";
pages=5;}


if (global.textid=="textx11"){
text[0]="Author: Komato General Tor#$#Subject: Operation Purge, Log 1";
text[1]="It was mere turns ago that we were passing Origin by, sending a scout team consisting of three Troopers to the surface. They took a long time replying, but we didn't think much of it. A few turns later, they sent a report; they had crashed and were dying, but";
text[2]="could confirm through standard global scanning that there were no Tasen on Origin. I of course withheld this report from the fleet. I'm not as knowledgable as Kiron when it comes to Imperial Research's new inventions, but I know the `global scanning`";
text[3]="project never took off. It remained but a scare to keep the Tasen in line. This report was clearly sent by them, and I had found their last stronghold in the universe. Origin, of all places. I had the power in my hands, the power to annihilate them once";
text[4]="and for all, the power to bring a brief sense of peace back to the Empire - the power to kill a million people in mere cycles. My fleet has destroyed worlds before, but then it was by the order of High Command. This time it was all on my shoulders.";
pages=5;}

if (global.textid=="textx12"){
text[0]="Author: Komato General Tor#$#Subject: Operation Purge, Log 2";
if (global.specialtriggerc){
    text[1]="I had not much time to ponder this alone, as Iosa walked onto the bridge. I told her about my dilemma, as I knew that I could trust her. Her reaction was not surprising. This is what the people had been waiting for, she reminded me. Clearly, making countless";
    text[2]="billions of Komato happy would be worth more than sparing a million Tasen. I had not much to object to that; it is plain logic. We are a race of conquest, and as such we must remain unified. We are like an enormous organism spreading throughout";
    text[3]="the galaxy, ever improving itself, and dangerous defects like the Tasen must be purged so as not to let them spread. But bringing peace at the cost of so many lives? I was reluctant, but when Iosa asked what I would tell High Command if this would surface";
    text[4]="in the future, I could not think of a reply. More fleets would in time come here, and more scout teams would be sent. The Tasens' extinction was inevitable, and so I made the transmission public, and added exactly what it implied. The roaring and cheering of";
    text[5]="our troops could be heard all the way to the bridge. The burden never rested on me in the first place, but on my people.";
    pages=6;
    }
else{
    text[1]="I had not much time to ponder this alone, as Iosa walked onto the bridge. I told her about my dilemma, as I knew that I could trust her. Her reaction was not surprising. This is what the people had been waiting for, she reminded me. Clearly, making countless";
    text[2]="billions of Komato happy would be worth more than sparing a million Tasen. I had not much to object to that; it is plain logic. We are a race of conquest, and as such we must remain unified. We are like an enormous organism spreading throughout";
    text[3]="the galaxy, ever improving itself, and dangerous defects like the Tasen must be purged so as not to let them spread. But bringing peace at the cost of so many lives? I was reluctant, and Iosa understood that. She didn't like it, no, but I believe she";
    text[4]="understood. I was ready to ignore the Tasen and move on, but all of a sudden, we received a distress call from Origin coded in a strange amateurish fashion. It was actually sent by a human, using a Tasen communicator. Without even thinking, I made the";
    text[5]="broadcast public. How could I possibly explain THIS transmission when we got back to Tadezocora, I thought? Within moments, we indeed heard the roaring and cheering of our troops all the way to the bridge. I remember Iosa calmly looking at me. `Now the";
    text[6]="burden is not on your shoulders`, she said. There could have been no other outcome. This is for the greater goal. Only one uneasy thought lingers in my mind - whoever sent that distress call took my burden.";
    pages=7;
    }
}

if (global.textid=="textx13"){ //Not when Iosa was spared
text[0]="Author: Komato General Tor#$#Subject: Operation Purge, Log 3";
text[1]="I am going to make one thing clear: I have never, and will never let personal emotions interfere with my logbook. The news just reached me that Annihilator Iosa is dead. That is a matter I will not discuss here. Currently, we have just finished routing the";
text[2]="Tasen colony, but the only way to truly please the public is Alpha Striking Origin. Taking the final step| blowing Tasenkind out of history, out of space and time. The humans are not worth saving either; they have no future left. If my feelings for";
text[3]="this planet are to be shaped by the public and Imperial Army, then who am I to object? This is it, and I may finally be ready to end this.";
pages=4;}


if (global.textid=="textx14"){
if (global.scrambler==1){
text[0]="Author: Komato Assassin Asha#$#Subject: DING DING DING";
text[1]="*Indecipherable scribbles*";
pages=2;
}
else{
text[0]="Author: Komato Assassin Asha#$#Subject: To the death";
text[1]="I take it you've been reading our logbooks, Anomaly| a dangerous distraction. I advise against taking on the Imperial Army, as there may still be a slight chance you would not be executed if you were to turn yourself in. Slight, I say - as the bounty on";
text[2]="your hollow human skull is my ticket out of this damn mess. For making me the laughing stock of my own men and the shame of the Army for losing to a human, you are beyond a mere bounty. We postponed the Alpha Strike to hunt you down - don't think you";
text[3]="can hide for long. You are dead meat, little girl, and your dying screams will be the symphony to my fame and fortune! If I cannot defeat you, I might as well die! I WILL NOT HOLD BACK!";
pages=4;}
}
if (global.textid=="textx15"){
text[0]="Author: Komato Trooper 57120-58306-32630#$#Subject: Reboot";
text[1]="Okay Zekailo, this is seriously dangerous stuff, but I figured out a way to reboot my personal Nanofield. First, duck down and press "+chr(global.usekey)+" four times followed by the "+chr(global.kickkey)+" key to connect to your own Nanofield. Crack it, if you know how, and let the safety";
text[2]="catches do their thing. You should now regain all the Points you've ever spent - but at the cost of all your stats, most ammo and Nanoweapons, and nearly all your health. Also, you will no longer gain free health when using a Cyborg station to upgrade";
text[3]="your health stat for a while. This can be used to completely reconfigure the structure of your personal Nanofield's stats, but like I said, try it at your own risk - it nearly kills you.";
pages=4;
if (!global.hiddenskill2){
    global.hiddenskill2=1;
    scr_readsum();
    if (wrongsum){
        global.erasetop=0;
        global.topmessage="SAVEFILE CORRUPT; UNABLE TO RECORD HIDDEN SKILL";
        global.ignorestation=90;
        }
    else{
        global.erasetop=0;
        global.topmessage="HIDDEN SKILL `NANOFIELD REBOOT` PERMANENTLY RECORDED TO PAUSE MENU";
        global.ignorestation=120;
        scr_sound("glo_cracksuccess");
        scr_save(0);
        }
    }
}
if (global.textid=="textx16"){
if (global.scrambler==1){
text[0]="Author: Komato Assassin Asha#$#Subject: TOOT TOOT";
text[1]="*Indecipherable scribbles*";
pages=2;
}
else if (obj_sabot.killedasha2){
if (global.killdata[797]==1){
    text[0]="Author: Komato Assassin Asha#$#Subject: Abandon all hope";
    text[1]="You have moved, Anomaly, far too fast. I believe you are fully aware of the General's outpost, located right above your head. At least it will be if you're reading this - which means I will be dead. I had improved, I had advanced, I gave everything I had";
    text[2]="to make sure you never found this logbook, but here you are. This is your end, Anomaly. I heard the log recorded from Iosa's exoskeleton before it exploded. I know your motives and your shallow schemes, but General Tor will not be impressed. Like I";
    text[3]="knew you would never listen to me after going for the bounty on your head and setting the trap with your partner, so Tor will never listen to a mere soldier who doesn't know her place. Cry about your plight all you want, but the General is not a man of";
    text[4]="change. This is the final mission, the end of Operation Purge and the end of Origin. You cannot seriously believe that your pathetic sob stories about humankind's future will invite anything but a swift pull of the trigger from Tor. You have a";
    text[5]="lot in common with the Tasen legend, Hel Sarie - she thought she could end the war, she invoked a fear I have never seen in the Imperial Army's troops, and she defended her people to the end. She was also mown down by General Tor in an instant, not merely";
    text[6]="annihilating her body, but her very beliefs. The beliefs of a FOOL. Forget whatever hope your crushed, cybernetic mess of a body may still house. You are nothing before the might of the General, and when you're gone, neither will be anything you";
    text[7]="have ever believed. Tor will blow you into Phantom Hammer mist and spread your ashes to the winds| like he did Hel Sarie.";
    pages=8;
    }
else{
    text[0]="Author: Komato Assassin Asha#$#Subject: Abandon all hope";
    text[1]="You have moved, Anomaly, far too fast. I believe you are fully aware of the General's outpost, located right above your head. At least it will be if you're reading this - which means I will be dead. I had improved, I had advanced, I gave everything I had";
    text[2]="to make sure you never found this logbook, but here you are. This is your end, Anomaly. I heard the log recorded from Iosa's exoskeleton before it exploded. I know your motives and your shallow schemes, but General Tor will not be impressed. Like I";
    text[3]="knew you would never listen to me after going for the bounty on your head and setting the trap with your partner, so Tor will never listen to the killer of his beloved. You may have taken comfort in revenge - but like me, the General is not a man of";
    text[4]="change. This is the final mission, the end of Operation Purge and the end of Origin. You cannot seriously believe that your pathetic sob stories about humankind's future will invite anything but a swift pull of the trigger from Tor. You have a";
    text[5]="lot in common with the Tasen legend, Hel Sarie - she thought she could end the war, she invoked a fear I have never seen in the Imperial Army's troops, and she defended her people to the end. She was also mown down by General Tor in an instant, not merely";
    text[6]="annihilating her body, but her very beliefs. The beliefs of a FOOL. Forget whatever hope your crushed, cybernetic mess of a body may still house. You are nothing before the might of the General, and when you're gone, neither will be anything you";
    text[7]="have ever believed. Tor will blow you into Phantom Hammer mist and spread your ashes to the winds| like he did Hel Sarie.";
    pages=8;
    }
}
else{
text[0]="Author: Komato Assassin Asha#$#Subject: Shamed";
text[1]="Anomaly, I had been waiting. Waiting to kill you or die trying, but no. NO. You wouldn't give me the pleasure. Escaping life by your hands would be the only thing less shameful than returning without the bounty. My arm, my reputation, losing to a human|";
text[2]="and failing to kill you twice. I've become so stained, it's far too late to cleanse myself. Give my regards to the General, the General that will soon end your miserable, pathetic excuse for a life, snuffed out like the countless others at the hands of the";
text[3]="Imperial Army. Do you understand, human? This planet will end. Everyone will die. Everyone. Death. DEATH!";
pages=4;}
}
if (global.textid=="textx17"){
text[0]="Author: Komato Informational Center#$#Subject: Justice caught up with crackers";
text[1]="The criminals known by the nicknames `Craxmasta`, `NanoBitSplit` and `OmnikrakR` have all finally been caught and brought to military law for illegal Nanotechnology reverse engineering. Their sentences vary from guard duty to prison and";
text[2]="rehabilitation depending on the severity of their crimes. Imperial Army representatives say to let this be a warning to the cracker culture and their attempts to undermine theirs and Imperial Weapon Industries' hard work.";
pages=3;}
if (global.textid=="textx18"){
text[0]="Author: Komato Berserker 57334-23988-73612#$#Subject: Assassin Asha's weakness?";
text[1]="I heard this loon has taken the expression `plasma bolt reflexes` to perfection. After his latest bouts of training, Asha claims to have acquired the skills necessary to avoid ANY possible attack in existence. I know he's boastful, but I don't doubt he's";
text[2]="really that fast, especially in an area he's familiar with. There's a place down here that's extremely similar to the Assassin training chambers, meaning he has a mental map of it laid down already. Of course, pride has always been his";
text[3]="downfall, hasn't it? Even after he lost his arm, he still insisted on not avoiding everything, because he thought it would be pathetic if he lost to someone, say, wielding some ancient Nanoweapon like a Shotgun or Buster gun. What's up with that?";
text[4]="It's like an obsession. He seems to think taking bullets head on is a sign of combat spirit and discipline, and deliberately avoiding weapons that pathetic is a sign of weakness| maybe even to the death.";
pages=5;}
if (global.textid=="textx19"){
text[0]="Author: Komato Trooper 46215-34623-76478#$#Subject: The Anomaly's technology";
text[1]="I think I know why they're so determined to catch her dead or alive. First off, she's a human with a Tasen Soldier Nanofield - how did she get it? Was it a Tasen experiment? What implantation process did they use? Secondly, her Nanogun is ridiculously";
text[2]="rare. It's a Tasen-made replica of a Komato General Generation 2 Pre-loader, the kind that can charge and store its projectiles instead of having to build them on demand when you press the trigger. This lets her fire whatever Nanoweapon she wants";
text[3]="without prior warning. More importantly, the gun's small enough to be carried by a single Trooper, something we've been trying to do for starturns. These guns aren't easy to come by, and the Tasen would rather destroy them than let them fall into our";
text[4]="hands - they either supplied the Anomaly directly with this copy, or she stole it from them. Given how tough she seems to be to kill, I wouldnt put it past her.";
pages=5;}
if (global.textid=="textx20"){
text[0]="Author: Komato Berserker 05629-92837-50068#$#Subject: General exoskeleton `Maximum charge`";
text[1]="What's your deal, Zekailo? Always poking your beak in things. I suppose I'll tell you what I'm guarding here. You see, normally the `Eidolon` General exoskeletons take some time to achieve the full power of their weapon arrays after first being activated.";
text[2]="If a General needs to do combat unprepared, the exoskeleton's weapons will start out weak and gradually increase in power as they are used. This is rarely the case as the Generals of the Imperial Army are not simply surprised by their enemies. In";
text[3]="case of an emergency, however, a mobile power core can be used to ready a `Maximum charge` of the exoskeleton, upgrading all of its weapons to their full potency as soon as it's activated. We actually have a power core dedicated to charging Tor's";
text[4]="exoskeleton right here, but I doubt we'll have to use it. If you were to mess with that terminal over here, it means Tor will be FULLY charged for battle, absolutely no punches held.";
pages=5;}
if (global.textid=="textx21"){
text[0]="Author: Komato Berserker 05629-92837-50068#$#Subject: WHOA WHOA WHOA!";
text[1]="Zekailo! Just in case you poke around up here after I leave, I have to warn you again - DO NOT MESS WITH THAT TERMINAL, or once General Tor enters his exoskeleton, this power core will raise its weapons and defense shielding to maximum power! You'll get";
text[2]="in trouble if you do that without permission!";
pages=3;}
if (global.textid=="textx22"){
text[0]="Author: Komato Berserker 05629-92837-50068#$#Subject: Strange door";
text[1]="That Security door to the right has a strange Nanofield lock on it. It says it will only open `if you've beaten the game at least once before`. Well, whatever keeps people out.";
pages=2;}

if (global.textid=="textx23"){
text[0]="Author: Komato Assassin [NO IDENTIFICATION]#$#Subject: -";
text[1]="This is Assassin Ansaksie. I forgot to thank you for your help. It's because of your cracking skills that we got anywhere near beating Iosa at all. The Imperial Army won't take her death lightly, and whatever happens when you get to Tor can only make";
text[2]="it worse. Still, you've got a strong mind. I'm with General Tor, but if a mere human is enough to change him| perhaps I need to change as well and leave the Army. Don't worry about me, just do what you think is right. To be honest, I would have respected";
text[3]="you even more had you not killed a single one of your enemies - Iosa excepted, of course - but I guess that's too much to ask of a soldier.";
pages=4;}
if (global.textid=="textx24"){
text[0]="Author: Komato Assassin [NO IDENTIFICATION]#$#Subject: -";
text[1]="This is Assassin Ansaksie. I forgot to thank you for your help. It's because of your cracking skills that we got anywhere near beating Iosa at all. The Imperial Army won't take her death lightly, and whatever happens when you get to Tor can only make";
text[2]="it worse. Still, you've got a strong mind. I'm with General Tor, but if a mere human is enough to change him| perhaps I need to change as well and leave the Army. Don't worry about me, just do what you think is right. At any rate, if things go wrong and";
text[3]="you need to put Tor in place, those flimsy Nanoweapons won't do you any good. I believe violence is a tool that should be used sparingly, but with utmost force. You understand this too, and as far as I've gathered, you have survived this far without";
text[4]="killing a single one of your enemies - excluding that bastard Iosa, of course. I admire your resolve. Therefore I have left you a Massacre, a weapon that was once used on Ciretako. Look up the weapon info in the Pause menu if you're interested. Either way,";
text[5]="this prototype is not as powerful as the real deal, and will drain your Armor when fired, but it should suffice to keep a Komato General in check. Good luck, Anomaly.";
pages=6;}

//Tasen killdata log
if (global.textid=="textx25"){
    text[0]="Author: Fleet 1089 Public Database#$#Subject: Tasen casualties confirmed as caused by the `Human Anomaly` with clear intent";
    pages=1;
    for (i=1;i<501;i+=1){
        if (global.killdata[i]>0){
            text[pages]=global.killdataname[i]+scr_killtype(i);
            pages+=1;
            }
        }
    if (pages==1){
        pages=2;
        text[1]="No Tasen kills confirmed.";
        }
    }

//Komato killdata log
if (global.textid=="textx26"){
    text[0]="Author: Fleet 1089 Public Database#$#Subject: Komato casualties confirmed as caused by the `Human Anomaly` with clear intent";
    pages=1;
    for (i=501;i<795;i+=1){
        if (global.killdata[i]>0){
            text[pages]=global.killdataname[i]+scr_killtype(i);
            pages+=1;
            }
        }
    if (pages==1){
        pages=2;
        text[1]="No Komato kills confirmed.";
        }
    }

if (global.textid=="textx27"){
text[0]="Author: Komato Annihilator Iosa#$#Subject: There is a story I never told you, human";
text[1]="During the Tasens' attack on my homeworld, my friend decided to hold his anti-air fire against a Tasen battlecruiser. Before it vaporized him, his platoon, and the planetary shield generator below his post with a Phantom Hammer shot, he told me that he";
text[2]="couldn't kill another person - surely the crew aboard the ship would think the same when they witnessed his selfless gesture. After all, he said, true bravery is to risk your life to protect what you love.";
pages=3;}


//Sector Y logs
//197-199 are in scr_logs1
if (global.textid=="text193"){
text[0]="Type HORSEGUN on the Main menu. Considering what the Null driver has done to your graphics, you may want to quit and restart the game before attempting it|";
pages=1;}

if (global.textid=="text194"){
text[0]="Duck while holding Enter for 10 seconds.";
pages=1;}

if (global.textid=="text195"){
text[0]=" ";
pages=1;}

if (global.textid=="text196"){
text[0]="Iji betatesting quotes:";
text[1]="`Now it's you and me and a bag in between us, you don't stand a chance!` -Henrik";
text[2]="`It looks like puzzle pieces in space.` -Henrik about the cutscene after Sector 4";
text[3]="`I come in peace, and you shoot lettuce at me!` -Ola";
text[4]="`I just got owned by myself.` -Ola, fighting Asha whom he voiced";
text[5]="`I'm hiding behind a table!` -Oscar#$#`Yes, but it has legs!` -Annette";
text[6]="`It was a banana| or a slingshot|` -Oscar#$#`It was ammo.` -Annette";
text[7]="`Look, someone's sending them a red button!` -Henrik, again about the cutscene after Sector 4";
text[8]="`You need more butts.` -Annette to Oscar";
text[9]="Iji voice recording quotes:";
text[10]="`CONTACT! INCOMING! WE'RE UNDER ATTAAACK! THEY'RE EVERYWHERE!`#-Miguel";
text[11]="`Hu! Huh! Hay! Wheat! Rye! I wonder what it would sound like if all the attacks were like| oats. Wheat? BARLEY!` -Annette";
text[12]="`Yeah, but they won't get to see a picture of me. Ever. Ever. Eveeer!` -Anna";
text[13]="`Maybe I need to get hit by a bus at full speed.` -Anna on recording realistic screams";
text[14]="`It needs to be a surprise, usually when people say it, it's when they're chased by like an airplane or someone's shooting and they're like INCOMING! And everyone just BOOF! KRSH! PSHH! Throw themselves to the ground, that's how it is. Usually.` -Miguel";
text[15]="`Do I sound like a child?` -Henrik";
text[16]="`COME HERE! GET OVER HERE!` -Monika voicing the Berserkers";
text[17]="`MEH. No| waaiiaah! No. What the devil are they supposed to sound like?` -Johannes attempting to voice the Beasts";
pages=18;}

#define scr_chats
portrait=0;
outline=0;
obj_iji.startmusics=0;

if (global.sector==1){

if (global.textid=="chatz1_1"){
text[0]="SECTOR Z#$#";
if (!global.extras5){
    scr_readsum();
    if (!wrongsum){
        global.extras5+=1;
        scr_save(0);
        text[0]+="(You can now select Sector Z from `Single Sector play` in the Extras menu)";
        }
    }
outline=0;
pages=1;
with (obj_sabot)
    scr_seczmusicchange();
}

if (global.textid=="chat11_1"){
if (global.really){
text[0]="DAD: Iji, remember that this is reallyjoel's dad difficulty. It was named after me, the only person who could ever beat it. Check `Difficulty level info` on the Pause menu if you need more information. Good luck.";
pages=1;
}
else if (!global.specialtrigger16){
text[0]="DAN: Okay, let's get you out of there. I've left you some notes and cracked Tasen logbooks full of information ahead - press "+chr(global.usekey)+" to read the logbooks. To continue reading this message, press Down or "+chr(global.usekey)+".";
text[1]="Now, there are many things you must learn. Use the Left and Right arrow keys to move around, the Up key to jump, and hold Down to duck.";
pages=2;
}
else{
text[0]="DAN: Iji, you're playing on Ultimortal difficulty. It's the same as Extreme, but you can only upgrade your Health, there are no red or green Nanofields, there's a time limit on every Sector before your personal Nanofield self-combusts, and your enemies";
text[1]="are faster. If you think you're ready, then let's go!";
pages=2;
}
portrait=99;
outline=2;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;
}

if (global.textid=="chat12_1"){
text[0]="DAN: Okay, I think you're all set for heading out. Don't be surprised when I start talking to you through the speakers like this.";
pages=1;
portrait=99;
outline=2;}
if (global.textid=="chat12_2"){
text[0]="IJI: Um. Dan?";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat12_3"){
text[0]="DAN: What is it?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat12_4"){
text[0]="IJI: This gun's so cumbersome, I can barely even carry it without standing straight| and how many Tasen do you think I'll have to face on my way to Krotera? I don't really want to fight them.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat12_5"){
text[0]="DAN: You'll get used to it. Unless you learn how to defend yourself, you won't be prepared for what's ahead. Okay?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat12_6"){
text[0]="IJI: Okay.";
portrait=6;
outline=1;
pages=1;}

if (global.textid=="chat13_1"){
if (global.specialtrigger16==1)
text[0]="DAN: Hi, it's Dan again. Since I doubt you'll be able to handle any Nanoweapons but the Shotgun, practice and get good with it. The more efficiently you can kill your enemies, the better.";
else
text[0]="DAN: Hi, it's Dan again. You need a Tasen stat of 3 to handle the Nanoweapon you see before you. It's up to you if you want it now, but the more efficiently you can kill your enemies, the better.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat13_2"){
text[0]="IJI: Dan?";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat13_3"){
text[0]="DAN: What's wrong?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat13_4"){
text[0]="IJI: Uh, the Tasen, they kinda look like -";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat13_5"){
if (global.kills>0)
    text[0]="DAN: I can assure you, they're not people. They're not from this world. I know it may be difficult fighting them now, but you need to get over that as soon as possible, or you'll have no hope of reaching Krotera.";
else
    text[0]="DAN: I can assure you, they're not people. They're not from this world. Trust me, it'll get easier once you shoot your first Tasen - you'll have no hope of reaching Krotera at this rate.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat13_6"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat14_1"){
text[0]="IJI: He's not breathing| and no pulse.";
if (global.kills>5)
    portrait=5;
else
    portrait=6;
outline=1;
pages=1;}

if (global.textid=="chat15_1"){
text[0]="DAN: Whoa there, you're playing on Sudden Death - this means that EVERYTHING, including yourself, has only one hit point and 100 armor. Note that no unlockables based on damage or Cracks are earned by beating Sector X this way!";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat15_2"){
text[0]="IJI: What? `Sudden Death`? Unlockables? What are you talking about?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat15_3"){
text[0]="DAN: Oh, uh. Never mind.";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chat16_1"){
text[0]="IJI: `Employee of the month`? Th-This is -";
portrait=4;
outline=1;
pages=1;}
if (global.textid=="chat16_2"){
text[0]="IJI: This picture was taken when we visited dad. Must've been the same day the Tasen struck this place| I remember Mia wearing this ribbon.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat16_3"){
text[0]="IJI: Dad| Mia|";
portrait=6;
outline=1;
pages=1;}
if (global.textid=="chat16_4"){
text[0]="DAN: Iji, what are you doing staring at that picture? Get a move on.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat16_5"){
text[0]="IJI: But, it's -";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat16_6"){
text[0]="DAN: What's done is done. Who's dead is dead. Get over it and move.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat16_7"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat17_1"){
text[0]="DAN: Iji, about those ceiling lamps -";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat17_2"){
text[0]="IJI: What?";
portrait=13;
outline=1;
pages=1;}
if (global.textid=="chat17_3"){
text[0]="DAN: Never mind.";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chat18_1"){
text[0]="You got the Null driver, selected by pressing 0 while in Active mode. It will stay in your inventory even if you return to the Main menu and load a different game file. The weapon disappears when you quit the game and will not be stored if you save.";
text[1]="WARNING: the wormholes generated by this corrupted prototype weapon are highly unstable. USE IT AT YOUR OWN RISK.";
portrait=0;
outline=0;
pages=2;}

if (global.textid=="chat1mia_1"){
text[0]="IJI: What? It's one of Mia's ribbons! What's it doing here?";
portrait=4;
outline=1;
pages=1;
}
if (global.textid=="chat1mia_2"){
text[0]="DAN: Iji, what's wrong?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat1mia_3"){
text[0]="IJI: Uh, nothing. She can't be alive anyway. Never mind.";
portrait=5;
outline=1;
pages=1;}

}





if (global.sector==2){

if (global.textid=="chat21_1"){
text[0]="DAN: Hi, this is Dan again. You're now in Sector 2 of the military complex. There's a medical bay nearby, where some of the experiments on Nanotechnology took place. You should be able to find and assimilate a powerful upgrade there - it'll be hard to";
text[1]="get any farther without it. Remember that you're heading for a Tasen called Krotera, as you may be able to convince him to make the Tasen and their spaceship leave the planet.";
portrait=99;
outline=2;
pages=2;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;}
if (global.textid=="chat21_2"){
text[0]="IJI: I MAY be able to convince him? You don't even know if this is possible?";
if (global.totkills>1*global.neutralkc)
    portrait=1;
else
    portrait=5;
outline=1;
pages=1;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;}
if (global.textid=="chat21_3"){
text[0]="DAN: Well, no, considering his reputation - but it's all we can do at this time. I need more information on a certain subject first.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat21_4"){
text[0]="IJI: What subject?";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;}
if (global.textid=="chat21_5"){
text[0]="DAN: I can't tell you yet. I said earlier that we have to take this one step at a time; I don't think you can handle it all at once.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;}
if (global.textid=="chat21_6"){
text[0]="IJI: Humph! I'm not a child. Besides, you still haven't told me why this whole alien invasion thing has gone unnoticed by the rest of the world.";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;}
if (global.textid=="chat21_7"){
text[0]="DAN: Well, that's because their spaceship was really well stealthed, and| stop asking questions and head for Krotera already.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;}
if (global.textid=="chat21_8"){
text[0]="IJI: Got it. Doesn't look like you're telling me anything anyway.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;
obj_sabot.forcemusic=1;}

if (global.textid=="chat22_1"){
text[0]="DAN: This door leads to the medical bay, where you'll find the upgrade I talked about earlier. However, you'll first have to find a Tasen terminal to open it. The terminal is colored purple and yellow, and should be nearby.";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chat23_1"){
text[0]="DAN: Great work, you found the upgrade. This should allow you to jump higher, so you can reach new areas.";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chat24_1"){
text[0]="DAN: This high-security door can be opened by cracking a terminal above. You could also try cracking the door directly, but I doubt you can handle it.";
portrait=99;
outline=2;
pages=1;
obj_iji.attitude=1;
obj_iji.c29a=1;
}
if (global.textid=="chat24_2"){
text[0]="IJI: What's that supposed to mean?";
portrait=10;
outline=1;
pages=1;
}
if (global.textid=="chat24_3"){
text[0]="DAN: What? The door is hard to crack. I didn't mean to insult you. Drop the attitude, you're making this difficult.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat24_4"){
text[0]="IJI: Hmph. Like you'd survive one minute in my shoes.";
portrait=2;
outline=1;
pages=1;
}
if (global.textid=="chat24_5"){
text[0]="DAN: What? I can't hear you when you whisper like that. Now crack the door directly or find the terminal.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat24_6"){
text[0]="IJI: Fine.";
portrait=1;
outline=1;
pages=1;
}

if (global.textid=="chat25_1"){
text[0]="DAN: Uh, Iji, you really shouldn't go in there unless you know what you're doing| even if you manage to crack that door, a Tasen Elite patrols the room beyond.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat25_2"){
text[0]="IJI: I'll do what I want, okay? I don't need my little brother bossing me around!";
portrait=2;
outline=1;
pages=1;
obj_iji.attitude=1;
}

if (global.textid=="chat26_1"){
text[0]="IJI: Looks like a specification of my Nanofield| and cyborg enhancements. I wonder how long they researched this stuff while having to avoid the Tasen? Maybe there are some valuable clues on here if I look closely enough.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat27_1"){
text[0]="DAN: Iji! Where have you been!?";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat27_2"){
text[0]="IJI: What?";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat27_3"){
text[0]="DAN: You just disappeared all of a sudden, and now you're back. I don't get it.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat27_4"){
text[0]="IJI: Huh, me neither. All I can remember was a rave. Then again, I guess it was more like a mosh| inside a video game console.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat27_5"){
text[0]="DAN: |";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat27_6"){
text[0]="IJI: Oh! I mean, actually it was this top-secret dimensional wormhole full of spherical aliens that some Tasen -";
portrait=4;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat27_7"){
text[0]="DAN: You know what? I'll just pretend this conversation never happened.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}


if (global.textid=="chat29_1"){
instance_activate_object(obj_cdoor);
with (obj_cdoor){
    if (trigger==2)
        security=1;
    }
if (obj_iji.c29a)
    text[0]="DAN: Hey, I managed to get through to that door's security from here. It should be a breeze to crack now.";
else
    text[0]="DAN: Hey, I managed to get through to the security of a door that's in your way. It should be a breeze to crack now.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat29_2"){
if (obj_iji.c29a)
    text[0]="IJI: Right.";
else
    text[0]="IJI: Okay, I'll look for it.";
portrait=1;
outline=1;
pages=1;
}

if (global.textid=="chat2mia_1"){
text[0]="IJI: Wait, what's this? It's another of Mia's ribbons! Some rat must've found it and dragged it in here.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat2mia_2"){
text[0]="IJI: Mia| I can't recall what happened at all when the Tasen struck this place. Looks like me and Dan are the only ones who survived.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat2mia_3"){
text[0]="IJI: Wait, I have to find Krotera - I gotta focus!";
portrait=1;
outline=1;
pages=1;}

}





if (global.sector==3 || global.sector==11){

if (global.textid=="chat31_1"){
text[0]="DAN: Iji, listen carefully now. This is Sector 3, where Elite Krotera is stationed. There's another powerful upgrade nearby that'll help you survive. We don't know if Krotera will choose to listen to you, but I don't have any backup plans until I've";
text[1]="obtained more information. I know he's not the friendliest guy around, and it's going to be dangerous, but -";
portrait=99;
outline=2;
pages=2;
obj_iji.startmusics=1;}
if (global.textid=="chat31_2"){
text[0]="IJI: Okay, got it. Get the upgrade, find Krotera.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_3"){
text[0]="DAN: Are you sure you're okay now? If you don't want to do this|";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_4"){
text[0]="IJI: No, I'm fine. I can't run around being scared if we're going to save the world.";
portrait=5;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_5"){
text[0]="DAN: Heh, that's more like it. Are you going to trust me now?";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_6"){
text[0]="IJI: Yeah| I'll try harder to follow orders. Thanks, Dan.";
portrait=5;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_7"){
text[0]="DAN: Don't mention it. Now, to find the upgrade and Krotera, you'll have to get to another building in this complex - Sector 3 is split up between this building and the next one. Head down to ground level and enter the first structure you see.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_8"){
text[0]="IJI: Got it.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_9"){
if (global.totkills>2*global.neutralkc)
    text[0]="DAN: By the way, if you ever forget about a weapon, enemy, stat or Special trait, just check the Pause menu by pressing Escape.";
else
    text[0]="DAN: And by the way, you're more pacifistic than I expected. That's good in a way, but remember that your survival may be imperative to the future of the Earth.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat31_10"){
text[0]="IJI: I know. And I won't let you down.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat32_1"){
text[0]="DAN: What you just assimilated was an Armor upgrade - you now take less damage from enemy Nanoweapons that damage your armor, like Machineguns. It doesn't offer any better protection against explosions and attacks that deal instant health damage, so you";
text[1]="still have to be careful not to get hit by rockets.";
portrait=99;
outline=2;
pages=2;}

if (global.textid=="chat33_1"){
if (obj_iji.readkomato==1)
    text[0]="IJI: Dan, I just confronted some kind of aliens I've never seen before! According to their logbooks they call themselves Komato, and they were sent out as a scout party to the Earth, but were shot down by the Tasen.";
else
    text[0]="IJI: Dan, I just confronted some kind of aliens I've never seen before! I didn't check their logbooks, but something's kind of different about them.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat33_2"){
if (obj_iji.readkomato==1){
    text[0]="DAN: A Komato scout team? I've read about that race in deciphered Tasen logs. The Komato are an interplanetary peacekeeping force who specialize in dealing with the Tasen. Well, we don't have time to wonder what they're doing here, you have to go talk to";
    if (global.truce)
        text[1]="Krotera. The lift leading up to his room is up ahead.";
    else
        text[1]="Krotera. The lift leading up to his room is up ahead, and it's only guarded by a single Tasen.";
    }
else{
    text[0]="DAN: Yeah, I've seen them through the cameras. Those are probably the Komato I've read about in my deciphered Tasen logs - they were probably sent as a scout team, but I guess they're stranded in here. Well, we don't have time to wonder what they're doing";
    if (global.truce)
        text[1]="here, you have to go talk to Krotera. The lift leading up to his room is up ahead.";
    else
        text[1]="here, you have to go talk to Krotera. The lift leading up to his room is up ahead, and it's only guarded by a single Tasen.";
    }
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chat33_3"){
text[0]="IJI: Got it.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat34_1"){
global.cannotskipchat=1;
obj_sabot.ultimatecannotpause=0;
text[0]="KROTERA: What the - who are YOU?";
portrait=100;
outline=3;
pages=1;
if (global.truce==0)
    obj_iji.startmusics=1;
with (obj_sabot)
    scr_music("mus_dark");}
if (global.textid=="chat34_2"){
text[0]="IJI: Uh, I, my name's Iji, and I have to speak to you about -";
portrait=1;
outline=1;
pages=1;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}
if (global.textid=="chat34_3"){
text[0]="KROTERA: You - you're that Human Anomaly!";
portrait=100;
outline=3;
pages=1;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}
if (global.textid=="chat34_4"){
text[0]="IJI: W-Wait! I'm just here to tell you that you should leave this planet! So many people have died, and - and we don't even know why!";
portrait=10;
outline=1;
pages=1;
obj_iji.sprite_index=spr_lookaround;
obj_iji.image_speed=0.5;
obj_kroteratrigger.alarm[0]=26;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}
if (global.textid=="chat34_5"){
text[0]="KROTERA: HUH! Don't expect me to waste my time with some worthless human when the future of the Tasen is at stake! We're down to our last colony, and I have NO qualms with annihilating whatever's left standing on Origin to make room for us!";
portrait=101;
outline=3;
pages=1;
obj_krotera.sprite_index=spr_krotera_walk;
obj_krotera.hspeed=3;
obj_krotera.facing=1;
obj_krotera.ignorestand=1;
obj_krotera.alarm[7]=10;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}
if (global.textid=="chat34_6"){
text[0]="IJI: Origin? This is the Earth, we live here, and you just come here and try to kill us all! We haven't done anything wrong, so just| just leave!";
portrait=2;
outline=1;
pages=1;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}
if (global.textid=="chat34_7"){
text[0]="KROTERA: SILENCE! You know NOTHING of the Tasen, and you know NOTHING of the damned Komato! If this is our last chance to escape total extermination by their hands, we're not going anywhere! What are a few human lives compared to a million";
if ((global.totkills+global.kills)>3*global.neutralkc)
    text[1]="Tasen? Do you intend to murder us all to save a handful of your own kind, you over-violent LUNATIC?";
else
    text[1]="Tasen? Once we start expanding, there'll be no hope left for you!";
portrait=101;
outline=3;
pages=2;
obj_krotera.sprite_index=spr_krotera_walkleft;
obj_krotera.hspeed=-3;
obj_krotera.ignorestand=1;
obj_krotera.facing=0;
obj_krotera.alarm[7]=10;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}
if (global.textid=="chat34_8"){
if (global.trucefix){
    global.truce=1;
    global.truce2=1;
    }
if (global.truce2){
    if (global.truce){
        text[0]="IJI: But| hang on, I got a truce with you guys! The least you could do is listen!";
        global.trucefix=1;
        }
    else{
        text[0]="IJI: But| hang on, I got a truce with you guys! I admit I sort of broke it, but the least you could do is listen!";
        global.trucefix=0;
        }
    }
else
    text[0]="IJI: But -";
portrait=10;
outline=1;
pages=1;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}
if (global.textid=="chat34_9"){
if (global.truce2){
    if (global.truce)
        text[0]="KROTERA: Truce? You mean my troops declared a TRUCE behind my back!? TREASON! I bet it was that worthless Vateilika - I'll take care of her later! You should be thankful that yours is the last planet we'll ever have to Alpha Strike| now DIE!";
    else
        text[0]="KROTERA: Truce? You mean my troops declared a TRUCE behind my back!? Serves you right for breaking it! You should be thankful that yours is the last planet we'll ever have to Alpha Strike| now DIE!";
    }
else
    text[0]="KROTERA: SHUT UP! This planet is ours now, so we rule it as we see fit! You should be thankful that yours is the last planet we'll ever have to Alpha Strike| now DIE!";
portrait=101;
outline=3;
pages=1;
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
else{
    with (obj_kroteratrigger)
        instance_destroy();
    obj_krotera.maxhp=9;
    obj_krotera.hp=9;
    obj_iji.holdafterchat=1;
    instance_create(obj_iji.x,obj_iji.y,obj_sec3surprise);
    obj_sabot.ultimatecannotpause=1;
    }
}

if (global.textid=="chat34_10"){
text[0]="IJI: (Damn, he's gonna fight me! The floor is packed with turrets - I've gotta kick 'em out of the way before this gets out of hand! That Nanogun looks real dangerous too, better get behind him if he tries something heavy!)";
portrait=1;
outline=1;
pages=1;
if (!global.iimsx){
    global.iimsx=1;
    global.ignoremessagescroll=30;
    }
if (global.specialtriggerb4==0 || !global.truce)
    obj_iji.startmusics=1;
}

if (global.textid=="chat35_1"){
global.cannotskipchat=1;
if ((global.totkills+global.kills)>3*global.neutralkc)
    text[0]="KROTERA: Ugh| *cough*! You would kill so many| to save| so few?";
else
    text[0]="KROTERA: Ugh| *cough*! You would deny our race a home| to save| yours?";
text[1]="uh|#$#|";
portrait=102;
outline=3;
pages=2;}
if (global.textid=="chat35_2"){
text[0]="IJI: I, I'm not|";
portrait=5;
outline=1;
pages=1;
global.kills+=1;
global.killdata[95]=obj_krotera.killtype;
if (global.killdata[95]==0)
    global.killdata[95]=1;
}
if (global.textid=="chat35_3"){
text[0]="IJI: I could say the same thing about you!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat35_4"){
text[0]="DAN: Iji, it's Dan. Looks like it didn't go very well|";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat35_5"){
text[0]="IJI: No. Krotera said something about these Tasen being their last colony, and they came here to escape the Komato. It looks like the Tasen are on the run from them, and they don't even care how many people they kill on the way| he said that the Tasen";
text[1]="have even used the Alpha Strike on other planets before|";
if (global.totkills+global.kills>3*global.neutralkc)
    portrait=1;
else
    portrait=5;
outline=1;
pages=2;}
if (global.textid=="chat35_6"){
text[0]="DAN: Hmmm. So that must be it. Like I said before, from what I deciphered from old Tasen logs, the Komato advertise themselves as a peacekeeping force. Maybe they're some sort of space police, and now there's no doubt that the Tasen are rotten to the core.";
text[1]="I have an idea that might just work.";
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chat35_7"){
text[0]="IJI: Really? I thought you said that this was our last chance.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat35_8"){
text[0]="DAN: No, don't worry. We won't give up yet. There's a Tasen communication area nearby - if I've interpreted the most recent information on the Komato correctly, I know the code to send a distress call to a nearby fleet. With any luck, the Komato will";
text[1]="come down here and wipe the Tasen out for us.";
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chat35_9"){
text[0]="IJI: Whoa, is that safe? I mean, more aliens coming down here?";
portrait=4;
outline=1;
pages=1;
}
if (global.textid=="chat35_10"){
text[0]="DAN: That's why I was holding this back from you before. I didn't want to worry you. If anyone can take on the Tasen, though, it's the Komato. We have to give it a try| after all, we won't get any further ourselves.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat35_11"){
text[0]="IJI: I guess you're right. Okay, lead the way.";
portrait=1;
outline=1;
pages=1;
global.sector=3;
obj_sabot.cannotrestart=1;
if (instance_number(obj_end)==0)
    instance_create(obj_iji.x,obj_iji.y,obj_end)}
if (global.textid=="chat35_12"){
if (!global.truce2 && !obj_krotera.deathbyiji){
    text[0]="(Though Iji didn't directly finish Krotera off, she still feels responsible for his death. Her kill counter increases by 1.)";
    portrait=0;
    outline=0;
    pages=1;}
else{
    text[0]="DAN: By the way, with Krotera dead, I think we can consider that little truce with the Tasen permanently over. Be careful.";
    portrait=99;
    outline=2;
    pages=1;}
}
if (global.textid=="chat35_13"){
text[0]="(Though Iji didn't directly finish Krotera off, she still feels responsible for his death. Her kill counter increases by 1.)";
portrait=0;
outline=0;
pages=1;}

if (global.textid=="chat36_1"){
text[0]="???: Wait! Anomaly, I'm glad I found you!";
portrait=116;
outline=3;
pages=1;
obj_iji.sprite_index=spr_basic;
global.facing=1;}
if (global.textid=="chat36_2"){
text[0]="IJI: What? Who are you?";
portrait=4;
outline=1;
pages=1;}
if (global.textid=="chat36_3"){
text[0]="VATEILIKA: I'm Soldier Vateilika, and I unofficially represent the troops in this here part of the building. I'm here to give you a message on behalf of my teammates, so listen up!";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat36_4"){
text[0]="IJI: Uh, what is it?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat36_5"){
if (global.totkills==0){
    text[0]="VATEILIKA: You see, our orders are to kill all human resistance, but the reports of the Human Anomaly - that's you - made me realize something. Not only do you seem impossible to kill, you haven't killed a single one of us despite being armed with a";
    text[1]="Nanogun| and my team doesn't want to harm any humans anyway. I figured a little truce was in order.";
    }
else{
    text[0]="VATEILIKA: You see, our orders are to kill all human resistance, but the reports of the Human Anomaly - that's you - made me realize something. Not only do you seem impossible to kill, you've barely killed any of us despite being armed with a";
    text[1]="Nanogun. I assume anything you've done was in self-defense if you've gotten this far with that mindset| and my team doesn't want to harm any humans either. I figured a little truce was in order.";
    }
portrait=116;
outline=3;
pages=2;}
if (global.textid=="chat36_6"){
text[0]="IJI: A truce?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat36_7"){
text[0]="VATEILIKA: Yeah. You don't shoot us, we don't shoot you. Simple! We'll even leave some doors open for you, so you won't have to attract suspicion by destroying them while escaping from here. Speaking of which, you ARE trying to escape, right?";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat36_8"){
text[0]="IJI: Ah, no. Actually I'm going to see Krotera so I can have a talk with him.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat36_9"){
text[0]="VATEILIKA: Did you say Krotera!? Hah! You're a human, he ain't gonna listen to a word you've got to say. Give it up and get out of here while you still can - I gave you this chance to escape so you won't be any more trouble to us, not so you can get yerself";
text[1]="flattened by that brute!";
portrait=116;
outline=3;
pages=2;}
if (global.textid=="chat36_10"){
text[0]="IJI: Right.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat36_11"){
text[0]="VATEILIKA: Oh yeah, and this truce ain't nothing but a shaky agreement among the troops around here. If you so much as poke one of us - so much as fire a weapon anywhere near us, or destroy a door where we can hear it - the truce is OVER. It's not";
text[1]="likely anyone's gonna agree not to take you down if you do anything suspicious like that. Do you understand? No messing around, and no poking the Turrets either!";
portrait=116;
outline=3;
pages=2;}
if (global.textid=="chat36_12"){
text[0]="IJI: Yeah, yeah, I got it.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat36_13"){
text[0]="VATEILIKA: Good. Now don't try to speak to anyone on your way out, you ain't gonna find anyone as friendly as me around here. Nope! So hurry up and go!";
portrait=116;
outline=3;
pages=1;}

if (global.textid=="chat37_1"){
text[0]="VATEILIKA: I've heard enough of THAT, thank you!";
portrait=116;
outline=3;
pages=1;
//Removed in version 1.7
//instance_create(obj_iji.x,obj_iji.y,obj_sec3timebump);
global.cannotskipchat=0;
obj_iji.instantend=1;
global.specialtrigger1=1;}
if (global.textid=="chat37_2"){
text[0]="IJI: Wh-What the?";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat37_3"){
text[0]="VATEILIKA: Hey, Anomaly! I'm glad you kept the truce, I wasn't sure whether to help you or not. I got a bad feeling when you said you were heading up here though| and really, that bastard got what he deserved. Ordering the Alpha Strike was bad enough,";
text[1]="but treating his troops the same at a time like this|";
portrait=116;
outline=3;
pages=2;}
if (global.textid=="chat37_4"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat37_5"){
text[0]="VATEILIKA: |";
text[1]="Oh! Don't tell anyone you saw me using that weapon, alright? In case there are people still as strict about illegal cracking and stuff. It wasn't me anyway, I got it from Yukabacera a long time ago, so -";
portrait=116;
outline=3;
pages=2;}
if (global.textid=="chat37_6"){
text[0]="IJI: Gah! You, you just KILLED Krotera! What's everyone gonna say now!? And who am I supposed to talk to now!?";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat37_7"){
text[0]="VATEILIKA: Whoa, hey! He was just about to decorate the walls with you, and that's how you thank me? Fine, see if I help you again! Uh-uh.";
portrait=116;
outline=3;
pages=1;
obj_sec3surprise.sprite_index=spr_tasensoldier_walk;
obj_sec3surprise.hspeed=2;
obj_sec3surprise.alarm[2]=10;
obj_sec3surprise.image_index=0;
obj_sec3surprise.image_single=-1;
obj_sec3surprise.image_speed=0.5;
with (obj_sabot)
    scr_music("mus_calm");}
if (global.textid=="chat37_8"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat37_9"){
text[0]="VATEILIKA: Alright, I'm sorry. You're serious about this, aren't you? To be honest, I don't think a single Elite around here could convince everyone to just pack their hot drinks and leave. Not a chance, the Komato are so close on our backs we don't even dare";
text[1]="to use our communicator. You should just - oh, never mind.";
portrait=116;
outline=3;
pages=2;
obj_sec3surprise.sprite_index=spr_tasensoldier_basicleft;
obj_sec3surprise.hspeed=0;
obj_sec3surprise.image_single=0;}
if (global.textid=="chat37_10"){
text[0]="IJI: What?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat37_11"){
text[0]="VATEILIKA: No, I do remember I had somewhere to go. See ya!";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat37_12"){
text[0]="IJI: Wait! What about him!?";
portrait=2;
outline=1;
pages=1;
obj_sec3surprise.sprite_index=spr_tasensoldier_walk;
obj_sec3surprise.hspeed=2;
obj_sec3surprise.alarm[2]=10;
obj_sec3surprise.image_index=0;
obj_sec3surprise.image_single=-1;
obj_sec3surprise.image_speed=0.5;}
if (global.textid=="chat37_13"){
text[0]="VATEILIKA: Oh. Let's just pretend you did it, right? Better than starting a war here. If they find us together, things are gonna turn REAL sour. A lot of people I know would be dead for sure. Um, I think it's best if you give me a headstart so I can get";
text[1]="out of here, okay? See you later! And sorry for the mess!";
portrait=116;
outline=3;
pages=2;
obj_sec3surprise.sprite_index=spr_tasensoldier_basicleft;
obj_sec3surprise.hspeed=0;
obj_sec3surprise.image_single=0;}
if (global.textid=="chat37_14"){
text[0]="IJI: No, wait!";
portrait=2;
outline=1;
pages=1;
obj_sec3surprise.sprite_index=spr_tasensoldier_walk;
obj_sec3surprise.hspeed=4;
obj_sec3surprise.alarm[2]=300;
obj_sec3surprise.image_index=0;
obj_sec3surprise.image_single=-1;
obj_sec3surprise.image_speed=0.5;}
if (global.textid=="chat37_15"){
text[0]="DAN: Iji, what happened?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat37_16"){
text[0]="IJI: I, uh, Krotera - but that Tasen -";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat37_17"){
text[0]="IJI: I guess she saved my life. Krotera said something about this being their last colony, though. Looks like they came here to escape the Komato. He said the Tasen have used the Alpha Strike on other planets before|";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat37_18"){
text[0]="DAN: Hm. I'm glad you're okay, but this isn't good news. Like I said before though, the Komato seem to be some kind of peacekeeping force. Maybe they're some sort of space police| and I have an idea that might just work.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat37_19"){
text[0]="IJI: Really? I thought this was our last chance.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat37_20"){
text[0]="DAN: No, don't worry. We won't give up yet. There's a Tasen communication area nearby - if I've interpreted the most recent information on the Komato correctly, I know the code to send a distress call to a nearby fleet. With any luck, the Komato will";
text[1]="come down here and wipe the Tasen out for us.";
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chat37_21"){
text[0]="IJI: Whoa, is that safe? I mean, more aliens coming down here?";
portrait=4;
outline=1;
pages=1;}
if (global.textid=="chat37_22"){
text[0]="DAN: That's why I was holding this back from you before. I didn't want to worry you. If anyone can take on the Tasen, though, it's the Komato. We have to give it a try| after all, we won't get any farther ourselves.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat37_23"){
text[0]="IJI: I'm not sure I'm okay with it, but when you put it like that| I guess you're right. It's just, that girl - never mind.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat37_24"){
text[0]="DAN: Look, we can talk about this later. With Krotera dead, I think we can consider that truce with the Tasen permanently over. Be careful.";
portrait=99;
outline=2;
pages=1;
global.cannotskipchat=1;}

if (global.textid=="chat3mia_1"){
text[0]="IJI: Huh? It's another ribbon. Mia, you silly, you must've carried lots of these when dad was showing us around.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat3mia_2"){
text[0]="IJI: Strange. Why do I keep thinking of you, when I've got something so much more important to do?";
if (global.totkills+global.kills<=3*global.neutralkc)
    portrait=6;
else
    portrait=12;
outline=1;
pages=1;}
if (global.textid=="chat3mia_3"){
text[0]="DAN: Iji, what are you doing? You don't have time to daydream here.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat3mia_4"){
text[0]="IJI: I-I was just thinking of someone.";
if (global.totkills+global.kills<=3*global.neutralkc)
    portrait=5;
else
    portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat3mia_5"){
text[0]="DAN: Hm. Don't dawdle.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat3mia_6"){
text[0]="IJI: Got it.";
if (global.totkills+global.kills<=3*global.neutralkc)
    portrait=5;
else
    portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat3mia_7"){
text[0]="IJI: (Something tells me this trail of crumbs won't lead me anywhere useful, but like a trail, it also feels like missing just one of these would make me miss all the rest. And then I fear I'd forget her| I gotta keep finding the ribbons.)";
portrait=12;
outline=1;
pages=1;}
}





if (global.sector==4){

if (global.textid=="chat41_1"){
text[0]="DAN: Okay, this is Sector 4. You'll find a Tasen reactor farther in. Power it up, and we'll be able to use their communicator to send the distress call. Be very careful, they're likely tightening security now that Krotera's gone.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;
global.truce=0;
global.truce2=0;}
if (global.textid=="chat41_2"){
text[0]="IJI: Thanks. I'll need it.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat41_3"){
if (global.suddendeath)
    text[0]="DAN: One more thing. If you're having trouble surviving, upgrade Assimilate to carry more ammo, and Tasen and Komato for some better weapons.";
else if (global.specialtrigger16)
    text[0]="DAN: One more thing. If you're having trouble surviving, get as much Nano as you can to upgrade your Health.";
else
    text[0]="DAN: One more thing. If you're having trouble surviving, upgrade your Health as much as you can, but don't forget Assimilate to carry more ammo, and Tasen and Komato for some better weapons.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat42_1"){
text[0]="DAN: Hm, I forgot about those high-security doors down there. They're blocking the way to the reactor and communicator control. This empty elevator shaft leads to two storages, A and B, and there's one terminal in each of them to open those doors. There";
text[1]="is a quick way around the Security doors up above, but it's blocked by a Shield door - you'd have to be pretty strong to take it down.";
portrait=99;
outline=2;
pages=2;}

if (global.textid=="chat44_1"){
text[0]="DAN: Man, it's just one security door after another! Don't worry, this is the last one. Just head left, and you'll soon find the terminal to open it.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat44_2"){
text[0]="IJI: Dan?";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat44_3"){
text[0]="DAN: What?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat44_4"){
text[0]="IJI: |Nevermind.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat45_1"){
global.cannotskipchat=1;
if (global.specialtrigger1==1 && global.kills+global.totkills<=4*global.neutralkc)
    global.specialtriggerc=1;
text[0]="DAN: Finally, there's the Tasen computer connected to the communicator. Crack it, and I'll be able to access it from here and send the distress call to the Komato.";
portrait=99;
outline=2;
pages=1;
}
if (global.textid=="chat45_2"){
if (global.specialtrigger1==1 && global.kills+global.totkills<=4*global.neutralkc)
    text[0]="IJI: Dan, are you sure we should do this? If we let the Komato loose here, we'll just repeat what the Tasen did to us.";
else if (global.specialtriggerb4==1)
    text[0]="IJI: Dan, are you sure we should do this? I mean, they nearly destroyed the world, and mankind too, but if we do the same to the Tasen -";
else if (obj_iji.mistrustkomato>3)
    text[0]="IJI: Dan, are you sure we should do this? I read some logbooks about them, and I don't know if we can really trust them. They don't look like `space police` to me.";
else
    text[0]="IJI: Alright. If they're really `space police` like you said, this has gotta be the best way to get rid of the Tasen.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat45_3"){
if (global.specialtrigger1==1 && global.kills+global.totkills<=4*global.neutralkc){
    text[0]="DAN: Look. Do we want to save the world or not? Do you think the Tasen were right in what they did? No. I think they deserve whatever's coming to them. Don't forget that they're going to kill us all unless we do something like this. Don't get hung up";
    text[1]="on that one single Tasen being nice to you, they're still murderers.";
    pages=2;
    }
else if (global.specialtriggerb4==1){
    text[0]="DAN: Look. Do we want to save the world or not? Do you think the Tasen were right in what they did? No. I think they deserve whatever's coming to them. Don't forget that they're going to kill us all unless we do something like this. Don't get hung up";
    text[1]="on that one single Tasen being nice to you, they're still murderers. We're the only ones who can stop them.";
    pages=2;
    }
else if (obj_iji.mistrustkomato>3){
    text[0]="DAN: Huh, I'm not sure either, but I don't know anything else to do at this point. And to be honest, I don't think the world can get any worse than this.";
    pages=1;
    }
else{
    text[0]="DAN: Exactly. It may be dangerous for us to get in the way, so we'd best stay back while they do their job.";
    pages=1;
    }
portrait=99;
outline=2;}
if (global.textid=="chat45_4"){
if (global.specialtrigger1==1 && global.kills+global.totkills<=4*global.neutralkc){
    text[0]="IJI: And we'll be the same! That `single nice Tasen` probably saved my life when she took Krotera out, and she's got her whole team refusing their orders to attack humans!";
    portrait=2;
    with (obj_sabot)
        scr_music("mus_calm");
    }
else if (global.specialtriggerb4==1){
    text[0]="IJI: I guess you're right, as usual. This is better than nothing, I guess. I'm cracking the terminal now.";
    portrait=5;
    }
else if (obj_iji.mistrustkomato>3){
    text[0]="IJI: I guess you're right, as usual. Better than doing nothing, I guess.";
    portrait=5;
    }
else{
    text[0]="IJI: Got it. Cracking that terminal now.";
    portrait=1;
    }
outline=1;
pages=1;
instance_create(obj_iji.x,obj_iji.y,obj_end)}
if (global.textid=="chat45_5"){
text[0]="IJI: I| I've followed you this far, but I don't think I can do it anymore. I'd rather let the Tasen live than see them destroyed.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat45_6"){
text[0]="DAN: What!? Listen, seriously. If we don't send that call we're history! The colony will grow until they overrun the planet! Just crack that terminal, got it?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat45_7"){
text[0]="IJI: I'm sorry, Dan. Krotera was right, the Earth belongs to them now. Anything we do will just lead to more suffering. I can't call for the Komato. I can't kill that many people.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat45_8"){
text[0]="IJI: I can't do it|";
portrait=6;
outline=1;
pages=1;
with (obj_iji){
    visible=0;
    invisible=1;
    instance_create(x,y,obj_sec4doll);
    }
}
if (global.textid=="chat45_9"){
text[0]="DAN: Damnit! Iji!";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chat46_1"){
text[0]="DAN: Uh, Iji, how in the WORLD did you get in there?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat46_2"){
text[0]="IJI: I dunno. Drove around, opened some doors, jumped a little here and there. Nothing special.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat46_3"){
text[0]="DAN: Right. It just bothers me how you seem to access blocked-off, restricted areas so easily.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat46_4"){
text[0]="IJI: Hey, I'm not the one who designed this complex. I'd worry more about their poor job at keeping people out of the ventilation ducts.";
portrait=1;
outline=1;
pages=1;
}

if (global.textid=="chat47_1"){
}

if (global.textid=="chat4mia_1"){
text[0]="IJI: It's another ribbon.";
if (global.totkills+global.kills<=4*global.neutralkc)
    portrait=5;
else
    portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat4mia_2"){
text[0]="DAN: Ribbon?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat4mia_3"){
text[0]="IJI: Oh. I'm just thinking of Mia again. I mean -";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat4mia_4"){
text[0]="DAN: Mia? You know she's dead, right?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat4mia_5"){
text[0]="IJI: Y-Yeah, it's just that I keep finding these ribbons she dropped when dad was showing us around.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat4mia_6"){
text[0]="DAN: I see. I thought she only had - never mind.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat4mia_7"){
text[0]="IJI: Dan? I don't mean I never liked you too, I just -";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat4mia_8"){
text[0]="DAN: I know. You and Mia were close. Much closer than I ever was to any of you.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat4mia_9"){
text[0]="IJI: Come on. Don't say that.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat4mia_10"){
text[0]="DAN: I know what it's like. I miss dad too, and I lost all my friends, everyone| it's been six months for me, so I've learnt to accept it. You've already adapted much faster than me though. You're pretty strong.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat4mia_11"){
text[0]="IJI: No, I feel empty without Mia around| so I welcome your support.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat4mia_12"){
text[0]="DAN: Uh, I would too, but listen. Life is different now. Personally, I can't lend anyone my support anymore. Don't get too attached to someone who might be killed at any moment - the Tasen are literally on my doorstep. I don't want you to see me as";
text[1]="your brother. You have to learn to support yourself, because you can't rely on anyone else.";
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chat4mia_13"){
text[0]="IJI: What!? How could you say that? I'm the one supposed to be supporting YOU, anyway!";
portrait=2;
outline=1;
pages=1;
obj_iji.attitude=1;
}
if (global.textid=="chat4mia_14"){
text[0]="DAN: Look, forget what I just said, okay? You're not ready to think like that yet. Talk to you later.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat4mia_15"){
text[0]="IJI: |";
if (global.totkills+global.kills<=4*global.neutralkc)
    portrait=5;
else
    portrait=1;
outline=1;
pages=1;}

}





if (global.sector==5 || global.sector==12){

if (global.textid=="chat51_1"){
text[0]="DAN: This is strange. As far as I know, the Komato fleet was relatively close, and their scout team must've been looking for the Tasen. It shouldn't take them that long.";
text[1]="Wait, something's happening outside. Make sure to take -";
portrait=99;
outline=2;
pages=2;
obj_iji.startmusics=1;}
if (global.textid=="chat51_2"){
scr_shakescreen(3);
scr_sound("glo_thunder");
text[0]="DAN: WHOA!";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat51_3"){
text[0]="IJI: What the! Dan? Dan, can you hear me?";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat51_4"){
text[0]="IJI: |";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat51_5"){
text[0]="IJI: DAN!";
portrait=3;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat52_1"){
text[0]="IJI: Whoa, those ships!";
portrait=4;
outline=1;
pages=1;}
if (global.textid=="chat52_2"){
if (global.specialtriggerc==1)
    text[0]="IJI: I knew it| the Komato will tear the planet apart to destroy the Tasen.";
else
    text[0]="IJI: I thought I was prepared for this| the Komato will tear the planet apart to destroy the Tasen.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat52_3"){
if (global.kills+global.totkills>4*global.berserkkc)
    text[0]="IJI: Well, if it's a fight they want, it's a fight they'll get. I've gotta find Dan!";
else
    text[0]="IJI: I've gotta find Dan!";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chat53_1"){
text[0]="IJI: It's another jump upgrade. Wasn't there a really tall shaft above here? I'm pretty sure I could reach the top now.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat54_1"){
global.cannotskipchat=1;
obj_sabot.ultimatecannotpause=0;
text[0]="ASHA: HALT! Now what ridiculous kind of Tasen are you supposed to be?";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;
with (obj_sabot)
    scr_music("mus_asha");
}
if (global.textid=="chat54_2"){
text[0]="IJI: Wait! I'm just a human, I don't want to have anything to do with you!";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat54_3"){
if (global.kills>4*global.neutralkc)
    text[0]="ASHA: Ho! So this is the rampaging `Human Anomaly`? What a joke!";
else
    text[0]="ASHA: Ho! So this is the `Human Anomaly` the Tasen are so upset about? Who's your goal this time?";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat54_4"){
text[0]="IJI: What!? I don't know what you're talking about, I'm just trying to get out of here!";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat54_5"){
if (global.kills>4*global.neutralkc){
    text[0]="ASHA: Don't even try it! We made planetfall mere moments ago, and already the reports on a single cybernetic human tearing through the battlefield are pouring in! We Assassins have a special prize to collect for your head, and I'm the best there is! Your death";
    text[1]="will be swift!";
    pages=2;
    }
else{
    text[0]="ASHA: Don't even try it! You may have assassinated a Tasen leader, but that doesn't mean you're not after ours too! We Assassins have a special prize to collect for your head, and I'm the best there is - your death will be swift!";
    pages=1;
    }
portrait=103;
outline=4;
obj_iji.startmusics=1;}
if (global.textid=="chat54_6"){
text[0]="IJI: (Looks like he's serious - I don't know what to expect from this guy, so I should just hold still and counter whatever attack he throws at me. I bet he doesn't care about avoiding puny weapons like the Shotgun, though - it may be my only chance!)";
portrait=1;
outline=1;
pages=1;
if (!global.iimsx){
    global.iimsx=1;
    global.ignoremessagescroll=30;
    }
obj_iji.startmusics=1;}

if (global.textid=="chat55_1"){
global.cannotskipchat=1;
if (obj_ashatrigger.ashanuked==1)
    text[0]="ASHA: How the - how did you get a Nuke!? GHHH! I'LL GET YOU FOR THIS, HUMAN!";
else
    text[0]="ASHA: Ghk| impossible! You - I underestimated you, Anomaly! Mark my words, I'm going to destroy you sooner or later! You've messed with the wrong Assassin!";
portrait=104;
outline=4;
pages=1;
obj_iji.image_single=-1;
obj_iji.image_index=0;
}
if (global.textid=="chat55_2"){
text[0]="IJI: |";
portrait=2;
pages=1;
outline=1;
if (global.facing==0)
    obj_iji.sprite_index=spr_lookaroundleft;
else
    obj_iji.sprite_index=spr_lookaround;
obj_iji.image_speed=0.5;
obj_ashatrigger.alarm[3]=26;
}
if (global.textid=="chat55_3"){
if (global.kills+global.totkills>5*global.berserkkc)
    text[0]="IJI: He warped away - but now there's even a bounty on me!";
else if (global.kills+global.totkills>5*global.neutralkc)
    text[0]="IJI: He warped away| but now there's even a bounty on me!";
else
    text[0]="IJI: He warped away| at least I didn't have to kill him, but now there's even a bounty on me!";
portrait=5;
outline=1;
pages=1;
}
if (global.textid=="chat55_4"){
if (global.kills+global.totkills>5*global.berserkkc){
    text[0]="IJI: Looks like this won't be getting any easier. Dan's right, I have to stay strong - and I have to find him!";
    portrait=12;
    }
else if (global.kills+global.totkills>5*global.neutralkc){
    text[0]="IJI: I have to get out of here! Wait, Dan's right, I have to stay strong - and I have to find him!";
    portrait=12;
    }
else{
    text[0]="IJI: I have to get out of here! Wait, calm down| Dan's right, I have to stay strong - and I have to find him!";
    portrait=9;
    }
outline=1;
pages=1;
if (instance_number(obj_end)==0){
    obj_iji.visible=0;
    obj_iji.invisible=1;
    global.sector=5;
    obj_sabot.cannotrestart=1;
    tempid=instance_create(obj_iji.x,obj_iji.y,obj_end)
    tempid.visible=1;
    if (global.facing==0)
        tempid.sprite_index=spr_duckleft;
    else
        tempid.sprite_index=spr_duck;
    tempid.image_speed=0.5;
    }
}

if (global.textid=="chat56_1"){
text[0]="IJI: The ceiling's full of cracks. I bet I can blow it up.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat57_1"){
text[0]="IJI: Wait a sec, this is where I came from! The exit must be farther to the right.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat58_1"){
text[0]="DAN: We're just going back and forth with this. I'm telling you it won't be your fault if we call for them. I'll take responsibility, okay?";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_2"){
text[0]="IJI: That's not the point. What does it matter who sends the call?$";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_3"){
text[0]="DAN: Look, those people spent months on your Nanofield. Three of them held out all the way to the end because of how strongly they wanted you to succeed. You're throwing that away.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_4"){
text[0]="IJI: I'm not! Why don't we look for more Elites? Krotera must've been the worst of the bunch.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_5"){
text[0]="DAN: It's too late for that, there's no way anyone - wait. Something's happening outside. Looks like some ships are -";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_6"){
scr_shakescreen(3);
scr_sound("glo_thunder");
text[0]="DAN: WHOA!";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_7"){
text[0]="IJI: What the! Dan? Dan, can you hear me?";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_8"){
text[0]="IJI: |";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat58_9"){
text[0]="IJI: DAN!";
portrait=3;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat5mia_1"){
text[0]="IJI: Another ribbon. Did she really have this many?";
if (global.kills+global.totkills>5*global.neutralkc)
    portrait=1;
else
    portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat5mia_2"){
text[0]="IJI: Mia, help me! I have to keep going! I have to find Dan|";
if (global.kills+global.totkills>5*global.neutralkc)
    portrait=2;
else
    portrait=6;
outline=1;
pages=1;}
if (global.textid=="chat5mia_3"){
text[0]="IJI: Wait, I think I know a way to find him|";
if (global.kills+global.totkills>5*global.neutralkc)
    portrait=1;
else
    portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat5mia_4"){
text[0]="IJI: But first I have to get out of this Sector before they blow it all to bits! I don't care what Dan says about supporting ourselves, he needs my help! Thanks, Mia!";
if (global.kills+global.totkills>5*global.neutralkc)
    portrait=12;
else
    portrait=1;
outline=1;
pages=1;}

}

scr_chats2();
scr_chats3();
#define scr_chats2
if (global.sector==6){

if (global.textid=="chat61_1"){
if (global.kills+global.totkills>5*global.neutralkc){
    text[0]="IJI: Great, now I've got the Komato AND their Assassins on me! Wait, there's gotta be more control rooms, like the one Dan was sitting in. Maybe I can call for him from one of them! That's just gotta work!";
    portrait=12;
    }
else{
    text[0]="IJI: Great, now I've got the Komato AND their Assassins on me| I don't know for how long I'll survive in here! Wait, there's gotta be more control rooms, like the one Dan was sitting in. Maybe I can call for him from one of them! That's just gotta work!";
    portrait=9;
    }
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat62_1"){
text[0]="IJI: It's locked! There's gotta be a terminal somewhere to open it. Dan would know.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat62_2"){
text[0]="IJI: Damn it! Find a control room, then worry about the rest! Gotta find that stupid terminal to open this door first.";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chat63_1"){
if (obj_sabot.herochat==0)
    text[0]="IJI: I guess I should use the arrows and the 1 and 2 keys to control this.";
else if (obj_sabot.herochat==1)
    text[0]="IJI: Hmm| I need to stay behind those boxes in the background more to avoid the searchlight and its missiles. Wait a minute, I don't have time for this anyway!";
else if (obj_sabot.herochat==2)
    text[0]="IJI: Right, I'm starting to get the hang of it. I don't think there's a lot of levels in this game though. Wait a minute, I don't have time for this anyway!";
else if (obj_sabot.herochat==3)
    text[0]="IJI: So I beat it once, but I didn't beat the hard mode. Wait a minute, I don't have time for this anyway!";
else if (obj_sabot.herochat==4){
    if (obj_sabot.killedyuka==1)
        text[0]="IJI: Alright, I beat it more than once| but it just gets harder every time! I'm gonna kill the guy who made this. Wait, that was Yukabacera. I already did.";
    else
        text[0]="IJI: Alright, I beat it more than once| but it just gets harder every time! I'm gonna kill the guy who made this.";
    }
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat64_1"){
text[0]="IJI: It's a map of the Sector! If I keep going in this direction, I should find another control room on the ninth floor.";
if (global.kills+global.totkills>5*global.neutralkc)
    portrait=1;
else
    portrait=6;
outline=1;
pages=1;
global.erasetop=0;
global.topmessage="MAP DOWNLOADED TO PAUSE MENU";
global.ignorestation=120;
obj_sabot.sec6mapped=1;
scr_sound("glo_cracksuccess");
}

if (global.textid=="chat65_1"){
global.cannotskipchat=1;
if ((global.totkills+global.kills)>6*global.berserkkc){
    text[0]="IJI: I did it! I found the control room, all on my own!";
    pages=1;
    portrait=2;
    }
else if ((global.totkills+global.kills)>6*global.neutralkc){
    text[0]="IJI: I did it! I found the control room, all on my own!";
    text[1]="I'm finally safe. I don't have to kill any more people| just relax and calm down.";
    pages=2;
    portrait=2;
    }
else{
    text[0]="IJI: I did it! I found the control room, all on my own!";
    text[1]="I'm finally safe. I don't have to see any more people die| just relax and calm down.";
    pages=2;
    portrait=9;
    }
outline=1;}
if (global.textid=="chat65_2"){
if (global.specialtrigger32)
    text[0]="IJI: That logbook| my own brother deceiving me? It can't be true| it just can't be.";
else
    text[0]="IJI: Okay. Here we go.";
portrait=12;
outline=1;
pages=1;
instance_create(obj_iji.x,obj_iji.y,obj_end);}

if (global.textid=="chat66_1"){
text[0]="IJI: 8th floor? The exit's gotta be right above me!";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat67_1"){
text[0]="IJI: Uh oh. I don't know why, but this teleporter| this could be really, really dangerous.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat68_1"){
text[0]="You got YUKABACERA'S SCRAMBLER! This device was once invented to translate Komato-Tasen speech to any human language, but after one too many attempts to improve the code, he eventually broke it completely. When activated, the Scrambler will intercept";
text[1]="anything you say, hear or even read, and bypass your personal Nanofield's more sophisticated algorithms. As a side-effect, the translation tends to get worse the longer a conversation goes on. Activate the Scrambler in the help/info part of the Pause menu.";
portrait=0;
outline=0;
pages=2;}

if (global.textid=="chat69_1"){
text[0]="IJI: Hm, now what did that terminal do? Activate some teleporter on floor 7? Must be somewhere above.";
if (global.kills+global.totkills>5*global.neutralkc)
    portrait=1;
else
    portrait=5;
outline=1;
pages=1;}

if (global.textid=="chat6a_1"){
text[0]="IJI: GOOD GRIEF, I never thought that'd actually work! I really hope that's the most ridiculous thing I'm gonna have to do today.";
portrait=2;
outline=1;
pages=1;
with (obj_trigger){
    if (textid=="chat6a")
        instance_destroy();
    }
}


if (global.textid=="chat6mia_1"){
text[0]="IJI: Wha - another ribbon?";
if (global.totkills+global.kills>5*global.neutralkc)
    portrait=5;
else
    portrait=9;
outline=1;
pages=1;
}
if (global.textid=="chat6mia_2"){
if (global.totkills+global.kills>5*global.neutralkc){
    text[0]="IJI: Heh. Dad really showed us all around this place. I guess that's why this area is so strangely familiar.";
    portrait=1;
    }
else{
    text[0]="IJI: Heh. Dad really showed us all around this place. I guess that's why this area is so| strangely familiar.";
    portrait=6;
    }
outline=1;
pages=1;}
if (global.textid=="chat6mia_3"){
if (global.totkills+global.kills>5*global.neutralkc){
    text[0]="IJI: Okay, maybe things aren't that bad, right Mia? Once I find that control room, I'll call for Dan with the speakers, and he'll reply. He's gotta be somewhere - I think. Damn it!";
    portrait=2;
    }
else{
    text[0]="IJI: Okay, maybe| maybe things aren't that bad, right Mia? Once I find that control room, I'll call for Dan with the speakers, and he'll reply. He's gotta be somewhere| I think. Damn it!";
    portrait=5;
    }
outline=1;
pages=1;}
if (global.textid=="chat6mia_4"){
text[0]="IJI: |";
portrait=12;
outline=1;
pages=1;}
if (global.textid=="chat6mia_5"){
if (global.totkills+global.kills>5*global.neutralkc){
    text[0]="IJI: Right, Dan's counting on me. He's just as scared as I was at first, he just acts tough. I think he really cares for me. I know I didn't give him the attention he deserved| couldn't help him with his problems|";
    portrait=1;
    pages=1;
    }
else{
    text[0]="IJI: Wait, no time to lose my head. Dan's counting on me. I mean, he's just as scared as I am, he just acts tough. I think he really cares for me. I know I didn't always give him the attention he deserved| couldn't help him with his problems|";
    portrait=5;
    pages=1;
    }
outline=1;}
if (global.textid=="chat6mia_6"){
text[0]="IJI: Wait, I don't have time for this! The control room's so close!";
portrait=2;
outline=1;
pages=1;}

}





if (global.sector==7 || global.sector==13){

if (global.textid=="chat71_1"){
text[0]="DAN: Okay, the old armory is up ahead. Remember, the Komato set up a lift there leading straight up into their ship. If we can destroy their Phantom Hammer, they'll have to send down more ships, which'll buy us some time. But first things first -";
text[1]="there are heavy Komato forces just ahead. Try to find ways around them.";
portrait=99;
outline=2;
pages=2;
obj_iji.startmusics=1;}
if (global.textid=="chat71_2"){
if (global.totkills+global.kills>6*global.berserkkc)
    text[0]="IJI: Thanks, but I'll be fine. I can take care of a Komato or two.$";
else if (global.totkills+global.kills>6*global.neutralkc)
    text[0]="IJI: Thanks, but I'll be fine.";
else
    text[0]="IJI: Thanks, I'll see what I can do.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat71_3"){
text[0]="DAN: By the way, I keep hearing strange noises around this control room, but - it's probably nothing. It's been noisy enough since the Komato landed anyway.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat71_4"){
text[0]="IJI: Okay. Just stay safe in there.";
portrait=12;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat71_5"){
text[0]="DAN: One more thing. Things are going to get even more dangerous from here on. I really think you should upgrade your Health as much as possible - don't forget that it's your most important stat.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat72_1"){
text[0]="DAN: This is the armory, and that's the lift to the Komato ship. Be as careful as you can up there, and try to find the Phantom Hammer. I have no idea what the weapon looks like, so you're on your own. Good luck.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat72_2"){
if (global.totkills+global.kills>6*global.berserkkc){
    text[0]="IJI: Don't worry - they won't even see me coming.";
    portrait=2;
    }
else{
    text[0]="IJI: Don't worry. I think can do this.";
    portrait=1;
    }
outline=1;
pages=1;}

if (global.textid=="chat73_1"){
text[0]="IJI: Dan, it's me - I destroyed some huge weapon up there. I think it was the Phantom Hammer.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat73_2"){
text[0]="DAN: Fantastic! That'll give us more time.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat73_3"){
text[0]="IJI: Hehe, I told you I could do it!";
portrait=8;
outline=1;
pages=1;}
if (global.textid=="chat73_4"){
text[0]="DAN: It's good to see you're getting more confident. Look, I know what you're going through, so| I'm sorry for all this.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat73_5"){
text[0]="IJI: What's that all of a sudden? You don't have to apologize. I feel like I finally understand what's going on, now. I feel more determined.";
if (global.totkills+global.kills>6*global.berserkkc)
    portrait=12;
else
    portrait=11;
outline=1;
pages=1;}
if (global.textid=="chat73_6"){
text[0]="IJI: And when I headed up into the ship, I could see all the way to the horizon| or what's left of it.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat73_7"){
text[0]="DAN: Look, don't let that distract you. We need to get the Komato out of here, then we can worry about the rest.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat73_8"){
text[0]="IJI: You're right, just standing around talking won't save anyone. I have to get moving before they catch up to me. Talk to you soon!";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat74_1"){
global.cannotskipchat=1;
text[0]="PROXIMA: Channel 12 open. Transmit identification. Down two.";
portrait=106;
outline=4;
pages=1;
obj_iji.startmusics=1;
obj_sabot.ultimatecannotpause=0;}
if (global.textid=="chat74_2"){
text[0]="IJI: What?";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat74_3"){
text[0]="PROXIMA: Channel 12 open. Transmit identification. Down one.";
portrait=106;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat74_4"){
text[0]="IJI: Oh, my name's Iji, and -";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat74_5"){
text[0]="PROXIMA: Identification failed. Terminating.";
portrait=106;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat74_6"){
text[0]="IJI: Damn it!";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat74_7"){
text[0]="IJI: (Wait, stay cool! Even something this big must have a weakness. Using those terminals and electric pads are a start, and with the way that thing hovers so effortlesly, it must be made of some really light materials. I bet I can just kick it";
text[1]="out of the way - preferably into something nasty.)";
portrait=1;
outline=1;
pages=2;
if (!global.iimsx){
    global.iimsx=1;
    global.ignoremessagescroll=30;
    }
obj_iji.startmusics=1;}


if (global.textid=="chat75_1"){
global.cannotskipchat=1;
if (global.suddendeath){
    text[0]="IJI: Okay, that was underwhelming.";
    global.specialtriggerb2=1;
    portrait=1;
    }
else if (obj_proximatrigger.supercharge){
    text[0]="IJI: Huh, I guess it pays to be prepared.";
    global.specialtriggerb2=0;
    portrait=1;
    }
else if (global.healthlevel<=5){
    text[0]="IJI: Sheesh! Maybe I should've boosted my Health a bit before a fight like this| nah.";
    global.specialtriggerb2=0;
    portrait=1;
    }
else if (global.hp>=global.healthlevel*2){
    text[0]="IJI: Huh. Was that supposed to be tough? It looked pretty dangerous though.";
    global.specialtriggerb2=1;
    portrait=2;
    }
else if (global.hp>=global.healthlevel){
    text[0]="IJI: Phew! That was tough.";
    global.specialtriggerb2=0;
    portrait=2;
    }
else{
    text[0]="IJI: Damn, that was close!";
    global.specialtriggerb2=0;
    portrait=2;
    }
outline=1;
pages=1;
}
if (global.textid=="chat75_2"){
text[0]="IJI: Looks like the security's getting extreme around here. I gotta get moving before they send down more ships and nail the planetary shield generator!";
outline=1;
pages=1;
portrait=1;
global.sector=7;
obj_sabot.cannotrestart=1;
if (instance_number(obj_end)==0)
    instance_create(obj_iji.x,obj_iji.y,obj_end)
}

if (global.textid=="chat76_1"){
text[0]="IJI: Wait, this is the wrong way. Isn't this where I came from?";
portrait=1;
outline=1;
pages=1;
}

if (global.textid=="chat78_1"){
text[0]="VATEILIKA: Anomaly! It's been a while.";
portrait=116;
outline=3;
pages=1;
}
if (global.textid=="chat78_2"){
text[0]="IJI: Huh? You?";
portrait=1;
outline=1;
pages=1;
}
if (global.textid=="chat78_3"){
text[0]="VATEILIKA: Yeah, remember me? `Sector 3`? The truce? I don't know what you've been up to since then, but I snuck into this ship trying to find some good weapons. To be honest though, I didn't dare to go any farther.";
portrait=116;
outline=3;
pages=1;
}
if (global.textid=="chat78_4"){
text[0]="IJI: What? You're trying to raid a Komato ship alone!?";
portrait=1;
outline=1;
pages=1;
}
if (global.textid=="chat78_5"){
text[0]="VATEILIKA: Haha, much like yerself! I like you, human. You got some serious guts. Tell you what, I've found all sorts of things up here, so just give me a tap on the shoulder with "+chr(global.usekey)+" and I'll fill you right up with some Health and ammo. All I want in";
text[1]="return is a tiny bit of Nano. Oh, but I haven't got any Pulse ammo - sorry 'bout that.";
portrait=116;
outline=3;
pages=2;
}

if (global.textid=="chat79_1"){
scr_vateilikashop();
portrait=116;
outline=3;
pages=1;
}

if (global.textid=="chat7mia_1"){
text[0]="IJI: Another dead end. Another ribbon, somehow. I don't even care if I'm seeing things, at least I can catch my breath again.";
if (global.kills+global.totkills<=6*global.neutralkc)
    portrait=5;
else
    portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat7mia_2"){
text[0]="DAN: Iji, it's me. How are you doing? You've been fighting for a long time without food or sleep, now.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat7mia_3"){
text[0]="IJI: Oh| actually, I haven't noticed. I've been thinking of Mia and you, and it's just kept me going.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat7mia_4"){
text[0]="DAN: Mia|";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat7mia_5"){
text[0]="IJI: Yeah. You know, I could always rely on her. When mom left, and I had to take her place, Mia still looked up to me. I don't know why you and me were never closer, but|";
if (global.kills+global.totkills<=6*global.neutralkc)
    portrait=5;
else
    portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat7mia_6"){
text[0]="DAN: Heh. Mia was so young. And a girl. You always took her side.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat7mia_7"){
text[0]="IJI: Err, Dan?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat7mia_8"){
text[0]="DAN: Yeah?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat7mia_9"){
text[0]="IJI: You're not angry, right?";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat7mia_10"){
text[0]="DAN: No, no. Don't worry, we were only kids.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat7mia_11"){
text[0]="IJI: But we're family! I'm sorry that I only ever cared about Mia.$";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat7mia_12"){
text[0]="DAN: Don't apologize! I always looked up to you too, so you've gotta hold your head high. We don't have time to argue about this.$";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat7mia_13"){
text[0]="IJI: Heh. Thanks, that makes me feel better. Talk to you soon!";
if (global.totkills+global.kills>6*global.berserkkc)
    portrait=12;
else
    portrait=8;
outline=1;
pages=1;}
if (global.textid=="chat7mia_14"){
text[0]="DAN: Right.";
portrait=99;
outline=2;
pages=1;}

}





if (global.sector==8){

if (global.textid=="chat81_1"){
if (global.specialtriggerb2==1)
    text[0]="IJI: Dan, I just took out some kind of Komato security robot! It was a piece of cake, but I hope I didn't waste too much time.";
else
    text[0]="IJI: Dan, I just took out some kind of Komato security robot! It was really tough, but I hope I didn't waste too much time.";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat81_2"){
text[0]="DAN: Good job, sis! And it's alright, I think we're relatively safe, but you have to push on and get to Sector X - the Tasen lifts are starting to run out of power since the Komato arrived. This is Sector 8, and the Komato have built quite a defensive";
text[1]="force here - be extremely careful!";
portrait=99;
outline=2;
pages=2;
obj_iji.startmusics=1;}
if (global.textid=="chat81_3"){
text[0]="IJI: Got it!";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat81_4"){
text[0]="DAN: Oh, and those noises around my control room started again, but I've no idea what it could be. Nothing bad's happened so far though, so I'm not worried anymore.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat81_5"){
text[0]="IJI: That's good to hear. Moving out!";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat82_1"){
text[0]="DAN: Oh, you just found a Trapmine, a device you can place on a teleporter destination by crouching on it and pressing "+chr(global.firekey)+". The mine will destroy the teleporter destination when someone tries to use it.";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chat83_1"){
text[0]="DAN: That door and the lift beyond need to be powered up - use the controls to the left. It might take a while for them to activate, so be prepared to defend that room.";
portrait=99;
outline=2;
pages=1;
with (obj_terminal){
    if (trigger==25){
        ready=1;
        cracked=0;
        sprite_index=spr_terminal;
        }
    }
}

if (global.textid=="chat84_1"){
text[0]="DAN: HOLY CRAP! Sis, are you okay?";
portrait=99;
outline=2;
pages=1;
obj_iji.nocameras=1;}
if (global.textid=="chat84_2"){
text[0]="IJI: Whoa, I think so! Wh-What happened!?";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat84_3"){
text[0]="DAN: A second Komato ship has already landed, and just blew up the planetary shield generator with a Phantom Hammer shot! There's no time to lose now, you've got to head for Sector X!";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat84_4"){
text[0]="IJI: Got it!";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat84_5"){
text[0]="DAN: Just be sure to check out the computer terminals nearby, I think one of them| wait. It's that strange sound here again, but now it's| what the -";
text[1]="AAAAAHH!";
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chat84_6"){
text[0]="IJI: DAN! What happened? Are you okay!?";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat84_7"){
text[0]="???: Listen close, Anomaly. I think I know where you're headed, and there's a corridor ahead that I know you must cross one way or the other. Your friend will be waiting there, I assure you. I suggest you go get him before I change my mind. Ready? Go!";
portrait=115;
outline=4;
pages=1;
with (obj_sabot)
    scr_music("mus_asha");
obj_iji.startmusics=1;}
if (global.textid=="chat84_8"){
text[0]="IJI: !";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat85_1"){
text[0]="IJI: Right. It's an easter egg. Very funny.";
portrait=1;
outline=1;
pages=1;
}

if (global.textid=="chat86_1"){
global.cannotskipchat=1;
text[0]="IJI: DAN! I -";
portrait=2;
outline=1;
pages=1;
obj_iji.cannotpause=1;
obj_sabot.ultimatecannotpause=1; //Ugly fix, but seriously, CANNOT PAUSE
obj_iji.holdafterchat=1;
with (obj_sabot)
    scr_music("mus_lightstroke");
}
if (global.textid=="chat86_2"){
if (instance_number(obj_armed_trapmine)==1 && obj_armed_trapmine.x>9600)
    text[0]="DAN: Hhh! Stay away, it's a trap!";
else
    text[0]="DAN: Hhh! Behind you, the Tr-";
portrait=98;
outline=2;
pages=1;}
if (global.textid=="chat86_3"){
text[0]="ASHA: HOLD IT! One move, and the human DIES!";
portrait=103;
outline=4;
pages=1;
if (obj_dan.sprite_index==spr_dan_sit){
    obj_dan.sprite_index=spr_dan_hold;
    obj_dan.image_single=0;
    instance_create(obj_dan.x+32,obj_dan.y,obj_megaflash);
    scr_sound("dan_choke");
    }
with (obj_sabot)
    scr_music("mus_asha");
}
if (global.textid=="chat86_4"){
text[0]="IJI: |You!";
portrait=10;
outline=1;
pages=1;}
if (global.textid=="chat86_5"){
if (global.kills+global.totkills>8*global.neutralkc){
    if (global.specialtrigger32){
        text[0]="ASHA: So you hoped to take on the Imperial Army, huh? Much less the most skilled Assassin in existence! You have no idea what you're doing, girl - I don't care how many men we lose, or how many Phantom Hammers you bring down - I've been looking for";
        text[1]="this little guy! See, I told you that you had a weak point, but no-one believed there were two humans cooperating here. I planted logbooks all over the place about your friend here, hoping you'd run into them and give the `traitor` what he deserved, but it";
        text[2]="looks like it didn't work! Killing this pest will show them I was right - and why not get the bounty on your head while I'm at it?";
        pages=3;
        }
    else{
        text[0]="ASHA: So you hoped to take on the Imperial Army, huh? Much less the most skilled Assassin in existence! You have no idea what you're doing, girl - I don't care how many men we lose, or how many Phantom Hammers you bring down - I've been looking for";
        text[1]="this little guy! See, I told you that you had a weak point, but no-one believed there were two humans cooperating here. Killing this pest will show them I was right - and why not get the bounty on your head while I'm at it?";
        pages=2;
        }
    }
else{
    if (global.specialtrigger32){
        text[0]="ASHA: So you hoped to take on the Imperial Army, huh? Much less the most skilled Assassin in existence! You have no idea what you're doing, girl - I don't care how many Sentinels we lose, or how many Phantom Hammers you bring down - I've been looking for";
        text[1]="this little guy! See, I told you that you had a weak point, but no-one believed there were two humans cooperating here. I planted logbooks all over the place about your friend here, hoping you'd run into them and give the `traitor` what he deserved, but it";
        text[2]="looks like it didn't work. Killing this pest will show them I was right - and why not get the bounty on your head while I'm at it?";
        pages=3;
        }
    else{
        text[0]="ASHA: So you hoped to take on the Imperial Army, huh? Much less the most skilled Assassin in existence! You have no idea what you're doing, girl - I don't care how many Sentinels we lose, or how many Phantom Hammers you bring down - I've been looking for";
        text[1]="this little guy! See, I told you that you had a weak point, but no-one believed there were two humans cooperating here. Killing this pest will show them I was right - and why not get the bounty on your head while I'm at it?";
        pages=2;
        }
    }
portrait=103;
outline=4;
obj_iji.sec8cut1=1;}

if (global.textid=="chat87_1"){
global.cannotskipchat=1;
text[0]="ASHA: Kill her!";
portrait=103;
outline=4;
pages=1;}
if (global.textid=="chat87_2"){
text[0]="IJI: NO!";
portrait=3;
outline=1;
pages=1;
obj_iji.sec8cut2=1;}

if (global.textid=="chat88_1"){
global.cannotskipchat=1;
text[0]="ASHA: Huh - so be it!";
portrait=103;
outline=4;
pages=1;
obj_iji.sec8cut3=1;}

if (global.textid=="chat89_1"){
global.cannotskipchat=1;
text[0]="IJI: !!!";
portrait=70;
outline=1;
pages=1;
obj_iji.holdafterchat=0;
if (instance_number(obj_end)==0)
instance_create(obj_iji.x,obj_iji.y,obj_end);
with (obj_sabot)
    scr_music("mus_darkstroke");
}

if (global.textid=="chat8a_1"){
global.cannotskipchat=1;
text[0]="ASHA: WHAT IN THE!?";
portrait=103;
outline=4;
pages=1;}
if (global.textid=="chat8a_2"){
if (global.kills+global.totkills>8*global.berserkkc)
    text[0]="IJI: I'm prepared for anything, you bastard! NOW LET MY BROTHER GO, OR I'LL BLOW YOUR HEAD OFF!";
else
    text[0]="IJI: I'm prepared for anything, you scum - now let my brother go, 'cause this weapon's aimed at your head!";
portrait=2;
outline=1;
pages=1;
}
if (global.textid=="chat8a_3"){
text[0]="ASHA: Hhh| that gun|";
portrait=103;
outline=4;
pages=1;
obj_iji.sec8cut4=1;}

if (global.textid=="chat8mia_1"){
if (obj_iji.trapmine){
    text[0]="IJI: Another ribbon! I've been collecting these a lot, now. The only other thing in my pockets is the Trapmine|";
    portrait=1;
    }
else{
    text[0]="IJI: Another ribbon! I've been collecting these a lot, now.";
    portrait=1;
    }
outline=1;
pages=1;}
if (global.textid=="chat8mia_2"){
if (obj_iji.trapmine){
    text[0]="It reminds me of a robot Mia had when she was little, the one we used to save Dan from a bully once. I threw it pretty hard.";
    if (global.kills+global.totkills>7*global.berserkkc)
        portrait=12;
    else
        portrait=5;
    }
else{
    text[0]="IJI: I know we've got no time to lose, but|";
    if (global.kills+global.totkills>7*global.berserkkc)
        portrait=12;
    else
        portrait=5;
    }
outline=1;
pages=1;}
if (global.textid=="chat8mia_3"){
if (obj_iji.trapmine){
    text[0]="Something tells me I should hang on to this mine until it really comes in handy. I don't need it to defend myself right now. I'll keep it, though it looks like the batteries won't last past this Sector.";
    portrait=1;
    }
else{
    text[0]="IJI: Something tells me there's something important around here. I should keep looking around before I go any farther!";
    portrait=1;
    }
outline=1;
pages=1;}

}



if (global.sector==9 || global.sector==14){

if (global.textid=="chat91_1"){
text[0]="DAN: Okay, this is Sector 9, the complex's main transportation and security gateway. It's under heavy lockdown, so you'll have to force your way through. Looks like there's a Tasen outpost near the end too, maybe they'll know where the Komato General";
if (global.specialtriggerc)
    text[1]="will be stationed. See if they'll let you in.";
else
    text[1]="will be stationed.";
portrait=99;
outline=2;
pages=2;
obj_iji.startmusics=1;
global.iosaphase=0;
global.specialtriggerb2=0;
global.specialtrigger32=0;
}
if (global.textid=="chat91_2"){
text[0]="IJI: Thanks. Feeling better now?";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat91_3"){
text[0]="DAN: Sort of, but I'll be okay. We should keep communication to a minimum, so they don't find me again|";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat91_4"){
if (global.totkills>8*global.berserkkc){
    text[0]="IJI: Don't worry. I'm gonna kill so many of those bastards, they won't even think of trying that again.";
    portrait=2;
    }
else{
    text[0]="IJI: Got it. Talk to you soon!";
    portrait=1;
    }
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat91_5"){
text[0]="DAN: Easy there - we don't need you losing your cool once you reach the General. Keep your finger on the trigger, but don't let it get too itchy.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat91_6"){
text[0]="IJI: Yeah, yeah. Talk to you soon.";
portrait=12;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat92_1"){
text[0]="IJI: Uhh, Dan, something's wrong. Do you know what happened?";
portrait=4;
outline=1;
pages=1;}
if (global.textid=="chat92_2"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat92_3"){
text[0]="IJI: Damn, all the speakers around here are busted!";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chat93_1"){
instance_create(obj_iji.x,obj_iji.y,obj_end);
//global.cannotskipchat=1;
text[0]="???: Well, well| what have we here?";
portrait=107;
outline=4;
pages=1;
if (obj_sabot.bunkertruce)
    global.specialtrigger2=1;
else
    global.specialtrigger2=0;
}
if (global.textid=="chat93_2"){
text[0]="IJI: Huh?";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat93_3"){
if (obj_sabot.bunkertruce)
text[0]="???: You're heading in the direction of General Tor, am I right? You hope to assassinate him, is that it?";
else
text[0]="???: Looks like someone can't take a hint - I suppose you didn't notice the piles of dead Tasen I like to generate. You're heading in the direction of General Tor, am I right? You hope to assassinate him, is that it?";
portrait=107;
outline=4;
pages=1;}
if (global.textid=="chat93_4"){
if (global.kills+global.totkills>9*global.berserkkc)
    text[0]="IJI: What's it to you? Get out of my way, or I'll kill you too!";
else
    text[0]="IJI: N-No, not at all! I just want to talk to him!";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat93_5"){
if (global.kills+global.totkills>9*global.berserkkc)
    text[0]="???: HAHAHA! Looks like I've got a live one on my hands!";
else
    text[0]="???: HAHAHA! That was a good one, human! Just want to TALK!";
portrait=108;
outline=4;
pages=1;}
if (global.textid=="chat93_6"){
if (global.kills+global.totkills>9*global.berserkkc)
    text[0]="IJI: Shut it! I've gotta stop the Alpha Strike, no matter what!";
else
    text[0]="IJI: No, really! I have to convince the General to spare our planet! You'd never Alpha Strike us, anyway!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat93_7"){
text[0]="???: Hah. I know how it feels, though it was long ago. I see no reason to let you live your hopeless, tortured future, now that we have the chance to destroy the Tasen once and for all. I've been waiting for this moment ever since my own home planet was";
text[1]="Alpha Struck by their dirty battlecruisers - at full force - while I was still there.";
portrait=107;
outline=4;
pages=2;}
if (global.textid=="chat93_8"){
text[0]="IJI: What? That's not possible!";
portrait=10;
outline=1;
pages=1;
}
if (global.textid=="chat93_9"){
text[0]="???: You sure are slow. I am Annihilator Iosa - `Invincible` is not a simple nickname.";
portrait=107;
outline=4;
pages=1;}
if (global.textid=="chat93_10"){
text[0]="IJI: But then you know what it's like! You know what it's like for everyone you know to be destroyed, for no reason - but you don't seem to care! You just want your revenge on the Tasen, for a war THE KOMATO STARTED!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat93_11"){
if (global.specialtriggerc)
text[0]="IOSA: My, you're judgmental. Did we really start this war, or was it the Tasen? They refused our progress, and this is the result.";
else
text[0]="IOSA: My, you're judgmental. Correct me if I'm wrong, but aren't you the one who called for our help to destroy the Tasen?";
portrait=107;
outline=4;
pages=1;}
if (global.textid=="chat93_12"){
if (obj_sabot.tasenblame)
text[0]="IJI: That's - how can you blame them for this? You're so stubborn you've even convinced the Tasen, I heard an Elite saying she believed that crap! You just couldn't accept them!";
else if (global.specialtriggerc)
text[0]="IJI: That's - how can you blame them for this? You just couldn't accept them!";
else
text[0]="IJI: But, we thought - we didn't know they were on the run from YOU!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat93_13"){
if (global.specialtriggerc)
    text[0]="IOSA: It was the other way around, human! They knew from the start what would happen. We're all fighting for our own survival, so don't pretend you don't value the Tasen lower than your own race, too.";
else if (global.totkills<=9*global.neutralkc)
    text[0]="IOSA: Huh. We're all fighting for our own survival, so don't pretend you don't value the Tasen lower than your own race, too.";
else
    text[0]="IOSA: Huh. We're all fighting for our own survival, so don't pretend you don't value the Tasen lower than your own race, too. I suppose the reports of YOU murdering people left and right is what puts the weight in your words?";
portrait=107;
outline=4;
pages=1;}
if (global.textid=="chat93_14"){
if (global.specialtriggerc)
    text[0]="IJI: Th-That's NOT TRUE! Sure they came here and ruined our world - but YOU've come here to DESTROY it - and -";
else
    text[0]="IJI: Th-That's NOT TRUE! They, they came here and ruined our world - YOU've come here to DESTROY it - and -";
portrait=3;
outline=1;
pages=1;}
if (global.textid=="chat93_15"){
text[0]="IOSA: Do I look like I care, little human? Your race is in the Komatos' debt for shortening its suffering - do you think I can give you back your planet? Do you think I can give you back the uncountable lives the Tasen destroyed?";
portrait=107;
outline=4;
pages=1;
obj_iosadoll.holdit=1;}
if (global.textid=="chat93_16"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat93_17"){
text[0]="IOSA: I've been through this before. Just like the Tasen before you - just a speck on the galaxy map. When you're gone, who do you think will even care? You oppose the Komato, and you die.";
portrait=107;
outline=4;
pages=1;
obj_iosadoll.holdit=0;}
if (global.textid=="chat93_18"){
if (global.specialtriggerb2){
    text[0]="ANSAKSIE: Talk, talk, talk. The Army sure did things to your head! I'm done seeing them look up to people like you. Me and this human, we're taking you down.";
    portrait=117;
    outline=4;
    pages=1;
    tempid=instance_create(11942,6019,obj_sec9ansaksie);
    tempid.type=1;
    tempid.sprite_index=spr_komatoassassin_pose1;
    with (tempid)
        instance_create(bbox_left+((bbox_right-bbox_left)/2)+10, bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflash);
    }
else{
    if (global.totkills<=9*global.neutralkc){
        text[0]="IJI: SHUT UP! You, you don't respect our lives any more than the Tasen you kill for no reason at all! You've just| thrown away your morals so you won't feel bad about it! I'm fighting to save peoples' lives, but you're just killers!";
        pages=1;
        }
    else{
        text[0]="IJI: SHUT UP! You, you don't respect our lives any more than the Tasen you kill for no reason at all! You've just| thrown away your morals so you won't feel bad about it! At least I'm fighting to save peoples' lives!";
        pages=1;
        }
    portrait=2;
    outline=1;
    }
}
if (global.textid=="chat93_19"){
if (global.specialtriggerb2){
    text[0]="IOSA: AHAHAHAHA! Well, you sure have guts| I never thought I'd see your traitorous little face again! I never got around to reporting you to Asha, not that it matters now. If you're hoping to change history, you're too late, Assassin - FAR TOO LATE!";
    portrait=108;
    outline=4;
    pages=1;
    }
else{
    text[0]="IOSA: My, you sure have guts, human - I may just think that you're FORGETTING WHO YOU'RE TALKING TO! Perhaps you're not aware of the fact that I am totally indestructible, while you are nothing but a worthless bag of flesh and bone!? I have better";
    text[1]="things to do than stand here and listen to you TRASH-TALKING THE MOST POWERFUL KOMATO IN THE UNIVERSE!";
    portrait=108;
    outline=4;
    pages=2;
    }
if (!obj_iosadoll.triggered){
    obj_iosadoll.triggered=1;
    obj_iosadoll.alarm[0]=25;
    obj_iosadoll.sprite_index=spr_iosa_walkleft;
    obj_iosadoll.image_single=0;
    with (obj_sabot)
        scr_stopmusic();
    }
}
if (global.textid=="chat93_20"){
    text[0]="ANSAKSIE: Let's go, Anomaly!";
    portrait=117;
    outline=4;
    pages=1;
    }

if (global.textid=="chat94_1"){
global.cannotskipchat=1;
if (global.specialtriggerb2==1)
    text[0]="IOSA: I'm through mincing words, insects - NOW YOU DIE!";
else
    text[0]="IOSA: I'm through mincing words, insect - NOW YOU DIE!";
portrait=108;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat94_2"){
if (global.specialtriggerb2==1)
    text[0]="IJI: (That's it, I'm dead! Those electric pads on the ceiling may be our only chance to blow her out of that huge exoskeleton - we just need to keep damaging her!)";
else
    text[0]="IJI: (That's it, I'm dead! Those electric pads on the ceiling may be my only chance to blow her out of that huge exoskeleton - I just need to keep damaging her!)";
portrait=2;
outline=1;
pages=1;
if (!global.iimsx){
    global.iimsx=1;
    global.ignoremessagescroll=30;
    }
obj_iji.startmusics=1;}

if (global.textid=="chat95_1"){
    global.cannotskipchat=1;
    if (global.specialtriggerb2==1){
        text[0]="ANSAKSIE: Hhh| hah, looks like we've done the impossible! Good riddance.";
        portrait=117;
        outline=4;
        pages=1;
        }
    else{
        text[0]="IJI: Hhh| hhh| I killed her.";
        if (global.kills+global.totkills>9*global.neutralkc)
            portrait=2;
        else
            portrait=5;
        outline=1;
        pages=1;
        }
    }
if (global.textid=="chat95_2"){
    if (global.specialtriggerb2==1){
        text[0]="IJI: You, you didn't have to -";
        portrait=2;
        outline=1;
        pages=1;
        }
    else{
        if (global.kills+global.totkills>9*global.berserkkc)
            text[0]="IJI: Good riddance. That scumbag was wrong - the Komato won't decide our fate for us!";
        else if (global.kills+global.totkills>9*global.neutralkc)
            text[0]="IJI: She, she was wrong. She had to be. The Komato won't decide our fate for us!";
        else
            text[0]="IJI: I didn't even want to shoot, I just| pulled the trigger. She was harmless without her Nanofield|";
        portrait=12;
        outline=1;
        pages=1;
        }
    }
if (global.textid=="chat95_3"){
    if (global.specialtriggerb2==1){
        text[0]="ANSAKSIE: Iosa is not the kind of person who can be spared. Had we not dealt with her now, things would've only gotten worse down the line. Listen - if you want to stop the Alpha Strike, you'd better see the General, and fast.";
        portrait=117;
        outline=4;
        pages=1;
        }
    else{
        if (global.specialtrigger1==0){
            if (global.kills+global.totkills<=9*global.neutralkc)
                text[0]="IJI: But I didn't have a choice, right Dan? Yeah| you're right. Better someone like her than the entire world.";
            else
                text[0]="IJI: Watch me, Dan| I'll show them. Nothing can stop me now!";
            }
        else
            text[0]="IJI: I have to find a room with a speaker, so I can tell Dan about this. They're so gonna come after us now!";
        portrait=1;
        outline=1;
        pages=1;
        if (instance_number(obj_end)==0){
            instance_create(obj_iji.x,obj_iji.y,obj_end);
            global.sector=9;
            obj_sabot.cannotrestart=1;
            obj_sec9hologram.alarm[0]=5;
            obj_sec9hologram.sprite_index=spr_standup;
            obj_sec9hologram.image_single=-1;
            obj_sec9hologram.image_index=0;
            obj_sec9hologram.image_speed=0.5;
            }
        }
    }
if (global.textid=="chat95_4"){
    text[0]="IJI: Y-Yeah, that's right. I need to go to Sector X. Dan's waiting for me, too.";
    portrait=5;
    outline=1;
    pages=1;
    obj_sec9hologram.alarm[0]=5;
    obj_sec9hologram.sprite_index=spr_standup;
    obj_sec9hologram.image_single=-1;
    obj_sec9hologram.image_index=0;
    obj_sec9hologram.image_speed=0.5;
    }
if (global.textid=="chat95_5"){
    text[0]="ANSAKSIE: Looks like you do know what you're doing. I need to leave before they suspect me. This is not going to win either of us any points with the Army. Iosa was a hero, so wear this victory with pride. I certainly will.";
    portrait=117;
    outline=4;
    pages=1;
    obj_sec9ansaksie.shakehead=1;
    }
if (global.textid=="chat95_6"){
    text[0]="IJI: |";
    portrait=1;
    outline=1;
    pages=1;
    if (instance_number(obj_end)==0){
        with (obj_sec9ansaksie){
            instance_destroy();
            instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflash);
            }
        instance_create(obj_iji.x,obj_iji.y,obj_end);
        global.sector=9;
        obj_sabot.cannotrestart=1;
        }
    }

if (global.textid=="chat96_1"){
text[0]="IJI: Dan. I was meant to save the world, so that's what I'll do. I don't care what I'll face, I don't care what happens, I'll make it through!";
portrait=12;
outline=1;
pages=1;
obj_iji.startmusics=1;
global.iosaphase=0;
global.specialtriggerb2=0;
global.specialtrigger32=0;
}
if (global.textid=="chat96_2"){
text[0]="IJI: Stay beside me, and I promise I'll keep you safe. You know that.";
portrait=5;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chat96_3"){
if (global.totkills>8*global.berserkkc)
    text[0]="IJI: This place looks like one big security checkpoint, and I bet Sector X is on the other side. I'm gonna kill so many of those bastards, they'll wish they never messed with us!";
else if (global.totkills>40)
    text[0]="IJI: This place looks like one big security checkpoint, and I bet Sector X is on the other side. We can still send these bastards back where they came from - together!";
else
    text[0]="IJI: This place looks like one big security checkpoint, and I bet Sector X is on the other side. We can still send them back where they came from - together!";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chat97_1"){
text[0]="You got the Banana gun, selected by pressing 9 in Active mode. It uses one ammunition unit each of every Nanoweapon. It cannot be combined with any other weapon.";
portrait=0;
outline=0;
pages=1;}

//IT IS IMPOSSIBLE for these events to overlap: killing the girlfriend and not calling the Komato
if (global.textid=="chat98_1"){
text[0]="IJI: No, this is| I think I've been reading this girl's diaries.";
portrait=5;
outline=1;
pages=1;
}
if (global.textid=="chat98_2"){
if (global.kills+global.totkills<=9*global.neutralkc)
    text[0]="IJI: Why now? They're the ones who Alpha Struck the Earth|";
else
    text[0]="IJI: Why now? They're the ones I killed without caring who they were|";
portrait=12;
outline=1;
pages=1;}
if (global.textid=="chat98_3"){
text[0]="IJI: I'm the one who brought the Komato here| to kill people like her.";
portrait=9;
outline=1;
pages=1;}
if (global.textid=="chat98_4"){
text[0]="IJI: NO! No, it's not my fault! It's the Komatos' fault! It's ALL their fault!";
portrait=3;
outline=1;
pages=1;}
if (global.textid=="chat98_5"){
text[0]="IJI: *Sigh*";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat98_6"){
if (global.kills+global.totkills>9*global.neutralkc)
    text[0]="IJI: I have to find the General - but first, I'm gonna find whoever did this. I may be a hypocrite, but somewhere there's got to be a line!";
else
    text[0]="IJI: I have to find the General - but first, I'm gonna find whoever did this. Somewhere, there's got to be a line!";
portrait=12;
outline=1;
pages=1;}
if (global.textid=="chat98_7"){
text[0]="IJI: Don't worry, kid. I don't think any of you can forgive me, but if I take your Nanofield, I'll always carry a part of you with me| that's all I can do.";
portrait=5;
outline=1;
pages=1;}

if (global.textid=="chat99_1"){
text[0]="IJI: Huh? what happened?";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chat9a_1"){
text[0]="IJI: Damn| that| HURT! There BETTER be something good up here.";
portrait=2;
outline=1;
pages=1;
}


if (global.textid=="chat9b_1"){
text[0]="IJI: (Damn it, now what? I think I heard about this woman's personal Nanofield, none of my weapons can even scratch her! Wait, that means she's like one of those Shield doors, and I have to use my raw strength! She'll probably be too alert for me to";
text[1]="go on the offense and land a kick if she sees it coming, but if she ever stops and turns her head away for just a moment, I'll make sure to hit her hard! And if that works| I'll just keep on kicking her!)";
portrait=2;
outline=1;
pages=2;
obj_iji.startmusics=1;}


if (global.textid=="chat9c_1"){
text[0]="IJI: Damn it, I can barely see! The air is completely thick down here, and that elevator shaft smells like| blood. Was this some sort of bunker?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9c_2"){
text[0]="IJI: I really need to know what I'm doing if I'm going any farther!";
portrait=2;
outline=1;
pages=1;}


if (global.textid=="chat9d_1"){
global.specialtriggerb2=1;
text[0]="???: Anomaly.";
portrait=117;
outline=4;
pages=1;
if (obj_sabot.bunkertruce)
tempid=instance_create(10912,6009,obj_sec9ansaksie)
else
tempid=instance_create(9844,6105,obj_sec9ansaksie)
tempid.type=0;
with (tempid)
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflash);
}
if (global.textid=="chat9d_2"){
text[0]="IJI: GAH! What now!?";
portrait=2;
outline=1;
pages=1;
global.facing=1;
obj_iji.sprite_index=spr_basic;
}
if (global.textid=="chat9d_3"){
text[0]="???: That fight back there| I couldn't keep my team from attacking without blowing my cover. I apologize.";
portrait=117;
outline=4;
pages=1;
obj_sec9ansaksie.shakehead=1;}
if (global.textid=="chat9d_4"){
text[0]="IJI: Huh? You -";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9d_5"){
text[0]="ANSAKSIE: The name's Ansaksie. We don't have time to talk, but there's someone up ahead that I've been wanting dead for starturns. Now that you're here, this is the perfect chance.";
portrait=117;
outline=4;
pages=1;}
if (global.textid=="chat9d_6"){
text[0]="IJI: What do you mean?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9d_7"){
text[0]="ANSAKSIE: I need your help, and a scapegoat. You'll understand in a moment. Ready your weapons, we're taking her on.";
portrait=117;
outline=4;
pages=1;}

if (global.specialtrigger1==0){
if (global.textid=="chat9mia_1"){
text[0]="IJI: Mia, how many of these did you bring here? This is getting weird.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9mia_2"){
text[0]="IJI: Dan, you didn't really mean that, right? About not supporting each other. I hope you don't envy what Mia and I had after mom left. Maybe you thought she was clinging to me, but we really did love each other - just like I love you.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat9mia_3"){
text[0]="IJI: Hehe, yeah, you're right.";
portrait=8;
outline=1;
pages=1;}
if (global.textid=="chat9mia_4"){
text[0]="IJI: Just stay behind me and you'll be fine. I'll protect you no matter what.";
portrait=1;
outline=1;
pages=1;}
}

else{
if (global.textid=="chat9mia_1"){
text[0]="IJI: Mia, how many of these did you bring here? This is getting weird.";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat9mia_2"){
text[0]="DAN: Iji. How are you?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat9mia_3"){
text[0]="IJI: Oh, sorry - what's wrong?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9mia_4"){
text[0]="DAN: Nothing, really, just wanted to thank you for saving my life. But maybe this isn't the time|";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat9mia_5"){
text[0]="IJI: It's okay. Just stay safe, okay?";
if (global.kills+global.totkills>8*global.berserkkc)
    portrait=1;
else
    portrait=8;
outline=1;
pages=1;}
if (global.textid=="chat9mia_6"){
text[0]="DAN: I will. You know| I think I was wrong about not supporting each other. You're the only one I have left. We've already saved each others' lives at least once, and it's not like I'm feeling any better keeping you at a distance|";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat9mia_7"){
if (global.kills+global.totkills>8*global.berserkkc){
    text[0]="IJI: Eh. If you want to apologize, just do it already.";
    portrait=12;
    }
else{
    text[0]="IJI: Eh, just say it out loud.";
    portrait=11;
    }
outline=1;
pages=1;}
if (global.textid=="chat9mia_8"){
text[0]="DAN: What?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chat9mia_9"){
if (global.kills+global.totkills>8*global.berserkkc){
    text[0]="IJI: Never mind.";
    portrait=1;
    }
else{
    text[0]="IJI: Never mind. See you soon!";
    portrait=8;
    }
outline=1;
pages=1;}
}


if (global.textid=="chat9e_1"){
text[0]="ELITE: Wait! Hold your fire!";
portrait=1000;
outline=3;
pages=1;
with (obj_sabot){
    scr_music("mus_lightstroke");
    scr_music("mus_dark");
    }
}
if (global.textid=="chat9e_2"){
text[0]="IJI: Wha?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e_3"){
text[0]="ELITE: I'm glad you made it. Vateilika told us all about you. We've set up an outpost here, so get inside before more Komato troops arrive!";
text[1]="If you want to talk to someone, just give them a tap or two. Some of us have a lot to talk to you about.";
portrait=1000;
outline=3;
pages=2;}

if (global.textid=="chat9e01_1"){
text[0]="ELITE: Get going, Anomaly. I'll take care of any intruders.";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e02_1"){
text[0]="ELITE: So you're not the one who contacted the Komato? I had my doubts, but Vateilika's never lied. Much. I don't know what you've been through, but we trust you in here. You're not that violent, otherwise you'd be too dangerous to let in.";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e02_2"){
text[0]="IJI: Well, thanks.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chat9e03_1"){
text[0]="ELITE: I would say I'm still skeptical about who killed Krotera, but it doesn't matter now. Most of us think he got what he deserved.";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e03_2"){
text[0]="IJI: So you didn't like him either?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e03_3"){
text[0]="ELITE: Let me put it this way - he would've woken up with a swarm of Blits inside his helmet sooner or later.";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e03_4"){
text[0]="IJI: Ugh|";
portrait=10;
outline=1;
pages=1;}

if (global.textid=="chat9e04_1"){
text[0]="ELITE: Hmm| now that would be something. A gun that shoots Blits.";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e05_1"){
text[0]="ELITE: What use is it now?";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e05_2"){
text[0]="IJI: What?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e05_3"){
text[0]="ELITE: The Alpha Strike is coming. There's nothing left for us. We're counting the cycles|";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e05_4"){
text[0]="IJI: Don't think like that! I'm gonna stop the Strike!";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e05_5"){
text[0]="ELITE: Huh! I'd laugh if you weren't serious. I'd rather face death with respect than lie to myself!";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e06_1"){
text[0]="IJI: I'm heading for Sector X to talk sense into the General. Then you'll see.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e06_2"){
text[0]="ELITE: See what? Your burning corpse bouncing back here?";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e06_3"){
text[0]="IJI: I'm serious! You won't know if it works until you tried!";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chat9e07_1"){
text[0]="ELITE: Humph. Good luck.";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e08_1"){
text[0]="ELITE: What are you wandering around here for? There may be more Komato teams coming, and someone said Annihilator Iosa is closing in!";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e08_2"){
text[0]="IJI: You mean she's nearby? How will an Annihilator fit in here?";
portrait=4;
outline=1;
pages=1;}
if (global.textid=="chat9e08_3"){
text[0]="ELITE: Iosa is one of few who can survive outside the exoskeleton, and what's worse, she's invincible! Don't blame me if she prances over here and cuts you in two!";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e09_1"){
text[0]="ELITE: Iosa's squad landed right after the assault forces. She tore a path through the perimeter, and only stopped to specifically kill anyone who dared damage her troops. There was nothing we could do.";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e09_2"){
text[0]="IJI: I'm sorry to hear that|";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat9e09_3"){
text[0]="ELITE: We're responsible for this mess, anyway. We Alpha Struck Iosa's homeworld, and the whole war started because of us.";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e09_4"){
text[0]="IJI: No it didn't! It's all the Komato's fault!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat9e09_5"){
text[0]="ELITE: Tch! What do you know, Anomaly? It's easy for an outsider to say who's right and wrong, but the Tasen broke away from the Komato because we disagreed with their goals. We rebelled because we wanted to make a stand! You think they just randomly grew a";
text[1]="grudge?";
portrait=1000;
outline=3;
pages=2;
obj_sabot.tasenblame=1;}
if (global.textid=="chat9e09_6"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e09_7"){
text[0]="ELITE: Once you question, you put your life on the line. We're proud of what we've done - we did our best to change the Komato - and don't you dare believe anything else. Watch your kids get left behind to get Alpha Struck too, and we'll see how YOU will";
text[1]="look on your future!";
portrait=1000;
outline=3;
pages=2;}
if (global.textid=="chat9e09_8"){
text[0]="IJI: I| hhh.";
portrait=5;
outline=1;
pages=1;}

if (global.textid=="chat9e10_1"){
text[0]="ELITE: Who cares what caused what? This is where we are right now, hiding from an Alpha Strike on some lousy remote planet. I don't care what you say, so spare your breath.";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e11_1"){
text[0]="IJI: How are you holding up in here?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e11_2"){
text[0]="GRAND ELITE: It's a strange feeling. We may be moments from death, and suddenly people start worrying about things they never cared about| I used to be Grand Elite of the fleet, but now it doesn't matter.";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e11_3"){
text[0]="IJI: You mean you were in charge of the Tasen fleet?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e11_4"){
text[0]="GRAND ELITE: I was part of the command, yes, right next to that disgusting Krotera. Ours was the only escape fleet to leave Elem Sioz intact. I once served under Hel Sarie, the most thoughtful and caring superior I've had| those days are so distant, they";
text[1]="might as well have been a dream.";
portrait=1000;
outline=3;
pages=2;}

if (global.textid=="chat9e12_1"){
text[0]="IJI: Don't worry, I'm heading for the Komato General to stop the Alpha Strike. I won't let you guys die.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e12_2"){
text[0]="GRAND ELITE: Hmm. That might work, if the Komato weren't after you too.";
portrait=1000;
outline=3;
pages=1;}
if (global.textid=="chat9e12_3"){
text[0]="IJI: They are, but -";
portrait=12;
outline=1;
pages=1;}
if (global.textid=="chat9e12_4"){
text[0]="GRAND ELITE: If you made it this far, it won't matter. Hel Sarie had the same spirit. General Tor respected her, even befriended her. He changed when the war started| it might have been the pressure and opinions of those closest to him.";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e13_1"){
text[0]="GRAND ELITE: If you want to stop the Strike, then do it. You're the only one left with that kind of motivation.";
portrait=1000;
outline=3;
pages=1;}

if (global.textid=="chat9e14_1"){
text[0]="COMMANDER: Damn it, there's not a single Elite left alive out there! I should've kept my mouth shut.";
portrait=118;
outline=3;
pages=1;}
if (global.textid=="chat9e14_2"){
text[0]="IJI: What do you mean?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e14_3"){
text[0]="COMMANDER: I hurt a lot of people. I dealt in illegal weapons behind Krotera's back. I respected the man - he took initiatives few others would take. I feel like I betrayed him, and now the Alpha Strike|";
portrait=118;
outline=3;
pages=1;}

if (global.textid=="chat9e15_1"){
text[0]="COMMANDER: Just leave me alone, okay?";
portrait=118;
outline=3;
pages=1;}

if (global.textid=="chat9e16_1"){
text[0]="COMMANDER: Ha ha ha! You're really something else, Anomaly. Never thought I'd meet you in person!";
portrait=118;
outline=3;
pages=1;}
if (global.textid=="chat9e16_2"){
text[0]="IJI: What, you know me?";
portrait=4;
outline=1;
pages=1;}
if (global.textid=="chat9e16_3"){
text[0]="COMMANDER: All of us do! Vateilika put an MPFB in Krotera's back when he threatened to kill you, and once the Komato arrived, she personally scanned our communicator's log to make sure you weren't the one who sent for their help. You owe her a lot!";
portrait=118;
outline=3;
pages=1;}
if (global.textid=="chat9e16_4"){
text[0]="IJI: Well, I didn't call them, but they still attacked, so|";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat9e16_5"){
text[0]="COMMANDER: Yep, we think they saw through the fake transmission we sent on behalf of their scout team. We're so far behind on Komato technology, we probably did all sorts of things wrong with it. Trying to fool a General, for starters! Ha ha!";
portrait=118;
outline=3;
pages=1;}
if (global.textid=="chat9e16_6"){
text[0]="IJI: Th-This isn't something to laugh about!";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chat9e17_1"){
text[0]="COMMANDER: I've always felt pretty good about impossible situations. They found me laughing on the floor after a raid on my squad's ship once, half dead with a door frame through the arm. No sense being glum about it, you know? I survived!";
portrait=118;
outline=3;
pages=1;}
if (global.textid=="chat9e17_2"){
text[0]="IJI: Heh.";
portrait=11;
outline=1;
pages=1;}
if (global.textid=="chat9e17_3"){
text[0]="COMMANDER: Actually, the Komato have a tightly controlled view of death to keep the Army and their breeding colonies in line. Most of 'em don't fear the loss of their own life, as each generation exists to make the next one better. They can aim for something";
text[1]="thousands of starturns into the future, without regret that they won't witness it themselves. They trust their young completely. Iosa is the only one who wants to be immortal, but she's kind of a special case.";
portrait=118;
outline=3;
pages=2;}
if (global.textid=="chat9e17_4"){
text[0]="IJI: You mean she really is immortal?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e17_5"){
text[0]="COMMANDER: Nah, age will get to her like anyone else - but give someone that much power and they'll soon forget how fragile they are.";
portrait=118;
outline=3;
pages=1;}

if (global.textid=="chat9e18_1"){
text[0]="IJI: Sorry, I don't have time to talk about this anymore.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e18_2"){
text[0]="COMMANDER: Hey, neither do I. Alpha Strikes don't wait around! Ha ha.";
portrait=118;
outline=3;
pages=1;}

if (global.textid=="chat9e19_1"){
text[0]="COMMANDER: There was a Soldier here who went through that teleporter. Like it'd be safer outside than in here|";
portrait=118;
outline=3;
pages=1;}

if (global.textid=="chat9e20_1"){
text[0]="COMMANDER: Hey, you here to save us or something? Whatcha gonna do, shoot their fleet down?";
portrait=118;
outline=3;
pages=1;}
if (global.textid=="chat9e20_2"){
text[0]="IJI: No, I -";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e20_3"){
text[0]="COMMANDER: Whatever! That Iosa comes here, we'll show her what we're made of!";
portrait=118;
outline=3;
pages=1;}

if (global.textid=="chat9e21_1"){
text[0]="COMMANDER: Lost my whole squad to that Annihilator| she's gonna pay.";
portrait=118;
outline=3;
pages=1;}

if (global.textid=="chat9e22_1"){
text[0]="VATEILIKA: Anomaly! It's me, remember? The truce? My little shop?";
portrait=116;
outline=3;
pages=1;
with (obj_sec9vateilika){
    state=0;
    wait=1;
    wait2=0;
    waitcyc=0;
    ready=1;
    alarm[2]=0;
    sprite_index=spr_tasensoldier_basic;
    facing=0;
    }
}
if (global.textid=="chat9e22_2"){
text[0]="IJI: Sheesh, you survived that Komato ship after all.";
portrait=11;
outline=1;
pages=1;}
if (global.textid=="chat9e22_3"){
text[0]="VATEILIKA: Of course! My friend told me about this defense base, so I made a run for it and met up with her. She let it slip that I shot Krotera, but everyone took it pretty well. I know you didn't call the Komato either.";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat9e22_4"){
text[0]="IJI: Thanks, but it didn't matter in the end.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e22_5"){
text[0]="VATEILIKA: Come on, it's not like it's your fault! We've all done what we could.";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat9e22_6"){
text[0]="IJI: Yeah, about that - I'm trying to find General Tor and convince him to pull back the Komato fleet.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e22_7"){
text[0]="VATEILIKA: Wh-Wh-What!? NOW you're talking! That's awesome talk, right there! Go get 'em, alright!";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat9e22_8"){
text[0]="IJI: Thanks| I know it's crazy, but I'm not giving up yet.";
portrait=12;
outline=1;
pages=1;}
if (global.textid=="chat9e22_9"){
text[0]="VATEILIKA: Right on! Just keep an eye out for Iosa, and be c-careful.";
portrait=116;
outline=3;
pages=1;}

if (global.textid=="chat9e23_1"){
text[0]="VATEILIKA: *Sigh*| I'll admit it. I don't think you'll make it.";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat9e23_2"){
text[0]="IJI: What?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e23_3"){
text[0]="VATEILIKA: General Tor is impossible. No-one can argue with him, he doesn't care. And if Iosa steps in, she'll turn ya to Blit food before you can even think.";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat9e23_4"){
text[0]="IJI: I know, but I have to do it. If I -";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e23_5"){
text[0]="VATEILIKA: DON'T YOU GET IT!? What kind of motivational logbook are you!? Iosa's murdered hundreds of Elites like nothing at all! She k-killed my whole squad, I'm only standing here because I ran away like a coward! And if anything happens to Iosa, Tor's";
text[1]="gonna Strike us THRICE OVER! Just| just give up! I don't wanna lose the only friends I have left.";
portrait=116;
outline=3;
pages=2;
with (obj_sec9vateilika){
    if (facing==0){
        facing=1;
        sprite_index=spr_tasensoldier_basic;
        }
    else{
        facing=0;
        sprite_index=spr_tasensoldier_basicleft;
        }
    }
}
if (global.textid=="chat9e23_6"){
text[0]="IJI: That's the point! If I don't do something we'll all die anyway!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chat9e23_7"){
text[0]="IJI: I'm scared as hell too, but I've been close to death so many times I don't even feel it anymore. I'd only give up the moment I stop to realize how impossible this is, so I don't wanna do it. I can't back down.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e23_8"){
text[0]="VATEILIKA: I guess you're right|";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat9e23_9"){
text[0]="IJI: Tor is a leader. He couldn't have gotten that far without learning how to listen to people.";
portrait=12;
outline=1;
pages=1;
with (obj_sec9vateilika){
    if (facing==0){
        facing=1;
        sprite_index=spr_tasensoldier_basic;
        }
    else{
        facing=0;
        sprite_index=spr_tasensoldier_basicleft;
        }
    }
}

if (global.textid=="chat9e24_1"){
if (global.killdata[276]==0)
    text[0]="VATEILIKA: By the way, I heard from Yuka a little while ago. Looks like he's holed up in Sector 6, armed to the teeth. Hehe| I remember him planning for all this, and me thinking he was crazy|";
else
    text[0]="VATEILIKA: I haven't heard from Yuka in Sector 6 in a long time now. I swear, if he's dead I'm gonna kill him. I should've apologized when I could|";
portrait=116;
outline=3;
pages=1;}

if (global.textid=="chat9e25_1"){
text[0]="VATEILIKA: Okay, I'm serious - dead serious - STOP DOING THAT! You wanna know how annoying that is? That you just keep poking me when you should've been outta here way long ago? I'm really super Blit-eating TIRED of people POKING ME! Okay look, how's this?";
text[1]="Poke poke! How's this? Huh? Is that fun? Is that fun?";
portrait=116;
outline=3;
pages=2;}
if (global.textid=="chat9e25_2"){
text[0]="IJI: Sheesh, calm down, I was just -";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chat9e25_3"){
text[0]="VATEILIKA: JUST POKING! I loved Yuka, but his constant poking was what tore us apart! Such a great guy with just one little flaw! It's, it's so unfair that we couldn't be together just because of that poking! It's so unfair! Backflipping rocket-jumping POKING!";
portrait=116;
outline=3;
pages=1;}
if (global.textid=="chat9e25_4"){
text[0]="IJI: Uh, I think I'll just leave you alone with this|";
portrait=5;
outline=1;
pages=1;}
if (global.textid=="chat9e25_5"){
text[0]="VATEILIKA: JUST! POKE! ING! Like it's nothing at all! Let me tell you, let me tell you about the escape fleet! It was me, Yuka and Naot, right? And Yuka suddenly asked, `Hey, what's more annoying, this or this?` And first he poked Naot rapidly, then he just";
text[1]="held his finger on his shoulder constantly, and Naot said the second one was the worst but it's nothing compared to the completely unexpected, completely random POKE on the shoulder that comes up from nowhere just when you're about to relax,";
text[2]="just when you thought you couldn't be worse off than having your homeworld Alpha Struck, just when you thought you'd never feel just one more POKE that's like it's piercing through your Nanofield and shoulder pads! NOTHING! It's| it's. Just. *Sigh*";
text[3]="Huff| huff| huff. Okay| huff. I'm sorry| just| just don't do that again. I'm sorry.";
portrait=116;
outline=3;
pages=4;}

if (global.textid=="chat9e26_1"){
text[0]="VATEILIKA: Wak Torma was really happy about hearing from Maeja again. It's pure luck that the Komato didn't get to either of them.";
portrait=116;
outline=3;
pages=1;}

if (global.textid=="chat9f_1"){
    global.cannotskipchat=1;
    if (global.kills+global.totkills>9*global.neutralkc){
        text[0]="IJI: Why| why didn't I kill her? Why couldn't I kill someone as awful as her?";
        text[1]="It would've been as easy| as anyone else.";
        portrait=5;
        outline=1;
        pages=2;
        }
    else{
        text[0]="IJI: Hhh| hhh| that should keep her down for a while.";
        portrait=5;
        outline=1;
        pages=1;
        }
    }
if (global.textid=="chat9f_2"){
    if (global.kills+global.totkills>9*global.neutralkc){
        text[0]="IJI: Maybe| it's not too late. Maybe I can stop myself from turning into someone like her.";
        if (global.specialtrigger1==0)
            text[1]="Watch me, Dan| Nothing can stop me now.";
        else
            text[1]="I have to find a room with a speaker, so I can tell Dan about this. This won't make the Komato any happier|";
        portrait=12;
        outline=1;
        pages=2;
        }
    else{
        if (global.specialtrigger1==0)
            text[0]="IJI: Watch me, Dan| nothing can stop me now!";
        else
            text[0]="IJI: I have to find a room with a speaker, so I can tell Dan about this. This won't make the Komato any happier!";
        portrait=1;
        outline=1;
        pages=1;
        }
    if (instance_number(obj_end)==0){
        instance_create(obj_iji.x,obj_iji.y,obj_end);
        global.sector=9;
        obj_sabot.cannotrestart=1;
        obj_sec9hologram.alarm[0]=5;
        obj_sec9hologram.sprite_index=spr_standup;
        obj_sec9hologram.image_single=-1;
        obj_sec9hologram.image_index=0;
        obj_sec9hologram.image_speed=0.5;
        }
    }

}
#define scr_chats3
if (global.sector==0 || global.sector==15){

if (global.textid=="chatx1_1"){
text[0]="DAN: Iji! Something terrible has happened - what in the world did you do down there!?";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;
global.specialtriggerb1=0;
}
if (global.textid=="chatx1_2"){
if (global.killdata[797]==1){
    text[0]="IJI: I defeated Iosa, the most powerful Komato in existence - at least, that's what she told me.";
    portrait=5;
    }
else if (global.specialtriggerb2==1){
    text[0]="IJI: An Assassin showed up and helped me kill Iosa, a really important Komato hero| at least, that's what she told me.";
    portrait=5;
    }
else if (global.totkills>9*global.berserkkc){
    text[0]="IJI: I killed Iosa, the most powerful Komato in existence - at least, that's what she told me.";
    portrait=1;
    }
else{
    text[0]="IJI: I killed Iosa, the most powerful Komato in existence| at least, that's what she told me.";
    portrait=5;
    }
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_3"){
text[0]="DAN: Holy crap! That must be why|";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_4"){
text[0]="IJI: What? What's going on?";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_5"){
text[0]="DAN: I just caught and deciphered a broadcast to all Komato troops in this area - the countdown to the Alpha Strike has been put on hold, but all ground activity in the vicinity is being concentrated on hunting you down!";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_6"){
if (global.totkills>9*global.berserkkc){
    text[0]="IJI: Sheesh. Do they really think they can stop me?";
    portrait=2;
    }
else{
    text[0]="IJI: Oh no|";
    portrait=4;
    }
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_7"){
if (global.totkills>9*global.berserkkc){
    text[0]="DAN: Don't get too cocky. The Komato broadcast also says that the Tasen have been totally exterminated - now they're only waiting for all their ships to leave the ground and they'll commence the Alpha Strike!";
    pages=1;
    }
else{
    text[0]="DAN: Whatever you do - don't panic. As you know, the Tasens' last planetary shield generator was shot down, but the Komato broadcast also says that the Tasen have been totally exterminated - now they're only waiting for all their ships to leave the";
    text[1]="ground and they'll commence the Alpha Strike!";
    pages=2;
    }
portrait=99;
outline=2;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_8"){
if (global.specialtrigger2)
    text[0]="IJI: Exterminated? But the ones in that outpost - if I don't hurry, they're all dead too! Wait, are you sure you're safe this time?";
else
    text[0]="IJI: Damn, I gotta hurry! Are you sure you're safe this time?";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_9"){
text[0]="DAN: I'm as safe as I can get.";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_10"){
text[0]="IJI: I hope so! I don't want to worry about you again.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_11"){
text[0]="DAN: Sheesh, I promise. Now hurry to the General - he's already landed, and this is Sector X, so he's gotta be somewhere nearby!";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_12"){
text[0]="IJI: Okay, hold tight. I'm gonna find him!";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx1_13"){
text[0]="IJI: (And I need to keep a cool head. I may have a job to do - but I refuse to become the same as that Annihilator!)";
portrait=12;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chatx2_1"){
text[0]="DAN: Crap, I forgot that there's a Tasen Security door here, but it seems to be stuck. I can't find any way around it, so you'll have to improvise. Try searching the roof above.";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chatx3_1"){
text[0]="DAN: The Komato have set up several defense posts here. There's only one way through, so be prepared for a fight. Remember that we're running out of time - don't hold back!";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chatx3_2"){
text[0]="IJI: Got it!";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chatx4_1"){
text[0]="ASHA: That's as far as you go, Anomaly! Time to pay up!";
portrait=103;
outline=4;
pages=1;
obj_iji.xcannotfire=0;
obj_asha2trigger.ready=1;
obj_iji.startmusics=1;
with (obj_sabot)
    scr_music("mus_lightstroke");
}
if (global.textid=="chatx4_2"){
text[0]="IJI: You again!? You're the one who tried to kill Dan!";
portrait=3;
outline=1;
pages=1;
global.facing=1;
obj_iji.sprite_index=spr_basic;
obj_iji.startmusics=1;
with (obj_sabot)
    scr_music("mus_asha");
}
if (global.textid=="chatx4_3"){
text[0]="ASHA: Bah! If you're talking about that human, it's no use trying to find him again - that worthless civilian doesn't even have a bounty on his head, so what's the use? It won't help my reputation, that's for sure!";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_4"){
text[0]="IJI: Hhh| you cold-blooded killer!";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_5"){
if (global.totkills>9*global.neutralkc)
    text[0]="ASHA: Well, aren't you're the tough one, huh? Do you have any idea what YOUR kill count is, hmm?";
else if (global.killdata[797]==1)
    text[0]="ASHA: Well, aren't you're the tough one, huh? Even beat a certain Annihilator to a pulp!";
else
    text[0]="ASHA: Well, aren't you're the tough one, huh? Who's the one who murdered Iosa, hmm?";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_6"){
if (global.totkills>9*global.neutralkc)
    text[0]="IJI: SHUT UP! That doesn't mean anything, you bastard! This time you're GOING DOWN!";
else{
    if (global.killdata[797]==1)
        text[0]="IJI: SHUT UP! It was in self-defense, it was her own fault - and it'll be when I take care of you too!";
    else if (global.specialtriggerb2==1)
        text[0]="IJI: SHUT UP! That wasn't even me, but this time it WILL be if you don't get out of my way!";
    else
        text[0]="IJI: SHUT UP! It was in self-defense, it was her own fault - and it'll be when I kill you too!";
    }
portrait=3;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_7"){
text[0]="ASHA: Yeah, right! When I didn't even scratch your precious partner? I've got more than enough reason to destroy you, little wretch - more than your pathetic revenge!";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_8"){
text[0]="IJI: You've killed hundreds of people before! Everyone in your army, you're all the same!";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_9"){
text[0]="ASHA: Oh, so that's why you're fighting us? You think you can wipe out the entire Imperial Army? You're a lunatic.";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_10"){
text[0]="IJI: I-I don't care what you think of me, but I'm different from you!";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_11"){
if (global.totkills>9*global.neutralkc)
text[0]="ASHA: Ho! There is no line between `different` and `superior`, human - you say one thing, but you mean something else! Since when were aimless killers less guilty then organized?";
else
text[0]="ASHA: Ho! There is no line between `different` and `superior`, human - you say one thing, but you mean something else!";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_12"){
if (global.totkills>9*global.neutralkc){
    text[0]="IJI: !";
    }
else{
    text[0]="IJI: That's because I AM superior to a pack of organized murderers!";
    }
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx4_13"){
if (global.totkills>9*global.neutralkc)
text[0]="ASHA: That's right, choose your words carefully - they'll be your last!";
else
text[0]="ASHA: Oh ho, come off it! We're all wicked, but I'll be wicked rich once I've blown that inflated head off your shoulders!";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chatx5_1"){
text[0]="IJI: That's what you get, you bastard! THAT'S WHAT YOU GET FOR TRYING TO KILL HIM!";
portrait=3;
outline=1;
pages=1;
obj_asha2trigger.ready2=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx5_2"){
text[0]="DAN: Iji! What just happened!?";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx5_3"){
text[0]="IJI: Hhh| Dan| I did it, I got that Assassin who caught you!";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx5_4"){
text[0]="DAN: Whoa| man, I wish I could've been there!";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx5_5"){
text[0]="IJI: Heh| no problem. He won't come after you again.";
portrait=12;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx5_6"){
text[0]="DAN: Thanks. Now don't stick around, we're really running out of time!";
portrait=99;
outline=2;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatx5_7"){
text[0]="IJI: Got it!";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chatx6_1"){
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0){
    text[0]="DAN: Iji, this must be where the General is. Keep in mind that I can't reach you out there, so you're on your own. Whatever you do, you need to keep calm - you're supposed to talk to this guy, not get in a fight with him.";
    pages=1;
    }
else if (global.kills+global.totkills>10*global.neutralkc){
    text[0]="DAN: Iji, this must be where the General is. Keep in mind that I can't reach you out there, so you're on your own. Whatever you do, don't get in a fight with this guy - this is a Komato General, not a Tasen Elite. But most of all| are you sure that you know";
    text[1]="exactly what's going on?";
    pages=2;
    }
else{
    text[0]="DAN: Iji, this must be where the General is. Keep in mind that I can't reach you out there, so you're on your own - whatever you do, don't get in a fight with this guy. But most of all| are you sure that you know exactly what's going on?";
    pages=1;
    }
portrait=99;
outline=2;
obj_iji.xdanleft=1;}
if (global.textid=="chatx6_2"){
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0)
    text[0]="IJI: What? Wouldn't it be faster to just kill him? That should teach the rest of them not to mess with us.";
else
    text[0]="IJI: Yeah, I'm sure. I'm ready.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatx6_3"){
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0)
    text[0]="DAN: No! That'd only make things worse - just stay focused on convincing him to stop the Alpha Strike, okay? Anyway, the Komato have all left around here, so I'm heading outside to meet up with you when you're done.";
else
    text[0]="DAN: Good luck| I'm counting on you. The Komato have all left around here, so I'm heading outside to meet up with you when you're done.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chatx6_4"){
text[0]="IJI: What!? Are you crazy?";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatx6_5"){
text[0]="DAN: Hey, there's no reason for me to stay here anyway. Especially if things go wrong again. Uh, not that I'm saying they will|";
text[1]="I believe in you, sis.";
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chatx6_6"){
text[0]="IJI: But -";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatx6_7"){
text[0]="DAN: Don't worry. You'll make it just fine. You, if anyone, should know how horrible this war is - you won't have any problems convincing the General of it.";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chatx6_8"){
text[0]="IJI: That's not what I'm worried about, you idiot! I'm worried about YOU!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatx6_9"){
text[0]="DAN: Heh. It's not exactly easy seeing you fight for your life either, you know| I need to get it out of my mind before I go crazy.";
text[1]="Go on. Hurry to the General, and I'll be waiting for you when you return. Okay?";
portrait=99;
outline=2;
pages=2;}
if (global.textid=="chatx6_10"){
text[0]="IJI: Well| okay.";
text[1]="See you soon. And take care.";
portrait=12;
outline=1;
pages=2;}
if (global.textid=="chatx6_11"){
text[0]="DAN: By the way, I saw through the cameras that the Assassin who captured me before seems to have blown himself up. He looked really angry about something. Don't make the General do the same, okay?";
portrait=99;
outline=2;
pages=1;}

//This chat won't happen when Iosa was spared
if (global.textid=="chatx7_1"){
global.cannotskipchat=1;
text[0]="TOR: Hmm? Who's there?";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatx7_2"){
if (global.kills+global.totkills>10*global.berserkkc)
    text[0]="IJI: Uh, hey. My name's Iji, and I'm here to have a word with you.$";
else
    text[0]="IJI: Uh, hello, General. My name's Iji, and I'd like to have a word with you.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatx7_3"){
text[0]="TOR: |";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatx7_4"){
if (global.kills+global.totkills>10*global.berserkkc){
    text[0]="IJI: Can you even understand me?";
    portrait=2;
    }
else{
    text[0]="IJI: Can you understand me?";
    portrait=1;
    }
outline=1;
pages=1;}
if (global.textid=="chatx7_5"){
text[0]="TOR: What exactly is this? Wait, you have to be|";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatx7_6"){
if (global.kills+global.totkills>10*global.berserkkc){
    text[0]="IJI: Yeah, I'm the `Human Anomaly`. So I'm here to tell you to -";
    portrait=1;
    }
else if (global.kills+global.totkills>10*global.neutralkc){
    text[0]="IJI: Yeah, I know, I'm the `Human Anomaly`. But there's something very important that -";
    portrait=1;
    }
else{
    text[0]="IJI: Yeah, I know, I'm the `Human Anomaly`. But there's something very important that -";
    portrait=5;
    }
outline=1;
pages=1;}
if (global.textid=="chatx7_7"){
text[0]="TOR: What the - YOU'RE THE SCUM WHO KILLED IOSA!";
portrait=110;
outline=4;
pages=1;
obj_torbody.sprite_index=spr_torbody_drawgun;
obj_torbody.image_single=-1;
obj_torbody.image_speed=0.5;
obj_torbody.alarm[2]=6;
with (obj_sabot)
    scr_music("mus_dark");}
if (global.textid=="chatx7_8"){
if (global.kills+global.totkills>10*global.berserkkc)
    text[0]="IJI: What!? It wasn't my fault, she's the one who got in my way!";
else
    text[0]="IJI: WAIT! General, please wait and let me explain!";
portrait=2;
outline=1;
pages=1;
obj_iji.sprite_index=spr_lookaround;
obj_iji.image_speed=0.5;
obj_torbodytrigger.alarm[0]=26;
}
if (global.textid=="chatx7_9"){
text[0]="TOR: How DARE you come here!? How DARE you insult a Komato General and -";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatx7_10"){
if (global.specialtriggerb2){
    if (global.kills+global.totkills>10*global.neutralkc)
        text[0]="IJI: I haven't insulted anyone! All the people I've tried to talk to have TRIED TO KILL ME! And besides, IOSA WAS KILLED BY A KOMATO!";
    else
        text[0]="IJI: I haven't insulted anyone! All the people I've tried to talk to have tried to kill me! And besides, Iosa was killed by a Komato!";
    }
else{
    if (global.kills+global.totkills>10*global.berserkkc)
        text[0]="IJI: I haven't insulted anyone! Now SHUT UP AND LISTEN TO ME!";
    else if (global.kills+global.totkills>10*global.neutralkc)
        text[0]="IJI: I haven't insulted anyone! All the people I've tried to talk to have TRIED TO KILL ME! None of you will EVER LISTEN TO WHAT I HAVE TO SAY!";
    else
        text[0]="IJI: I haven't insulted anyone! All the people I've tried to talk to have tried to kill me! None of you will ever listen to what I have to say!";
    }
portrait=3;
outline=1;
pages=1;}
if (global.textid=="chatx7_11"){
if (global.specialtriggerb2)
    text[0]="TOR: K - Killed by one of our own!? Preposterous!";
else
    text[0]="TOR: |";
portrait=110;
outline=4;
pages=1;
obj_torbody.nobob=1;}
if (global.textid=="chatx7_12"){
if (global.specialtriggerb2)
    text[0]="IJI: I'm not lying! And I'm not here to fight you - all I want is a peaceful discussion!";
else{
    if (global.kills+global.totkills>10*global.berserkkc)
        text[0]="IJI: I'm not here to argue with you - I'm just here to stop the Alpha Strike! So go do that right now!";
    else
        text[0]="IJI: I'm not here to fight you - all I want is a peaceful discussion!";
    }
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatx7_13"){
if (global.kills+global.totkills>10*global.berserkkc)
    text[0]="TOR: Oh, and why should I by following YOUR orders!?";
else
    text[0]="TOR: Oh, of WHAT, may I ask!?";
portrait=110;
outline=4;
pages=1;
obj_torbody.sprite_index=spr_torbody_drawgun;
obj_torbody.image_single=-1;
obj_torbody.image_index=2;
obj_torbody.image_speed=-0.5
obj_torbody.alarm[1]=6;
}
if (global.textid=="chatx7_14"){
if (global.kills+global.totkills>10*global.berserkkc)
    text[0]="IJI: Wh-Why do you think? We live here on this planet, and we haven't hurt anyone! All of a sudden, the Tasen came and wasted most of our people, and now you think you can get away with Alpha Striking us too!";
else
    text[0]="IJI: Wh-What do you think? We live here on this planet, and we haven't hurt anyone! All of a sudden, the Tasen came and wasted most of our people, and now you think you can get away with Alpha Striking us too!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatx7_15"){
text[0]="TOR: Of course we can get away with it. Perhaps you're not aware that the only way to make sure that the Tasen are extinct is to -";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatx7_16"){
if (global.specialtrigger2)
    text[0]="IJI: No, that's not right. You already know they're all gone! Not a single one left!";
else if (global.kills+global.totkills>10*global.berserkkc)
    text[0]="IJI: Shove it! You already know that the Tasen are as good as gone!";
else if (global.kills+global.totkills>10*global.neutralkc)
    text[0]="IJI: No, that's not right. You already know that the Tasen are as good as gone!";
else
    text[0]="IJI: No, that's not right. You already know that the Tasen are as good as gone.";
portrait=1;
outline=1;
pages=1;
obj_iji.sprite_index=spr_lookaround;
obj_iji.image_speed=0.5;
obj_torbodytrigger.alarm[0]=26;}
if (global.textid=="chatx7_17"){
text[0]="TOR: That's correct, but -";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatx7_18"){
if (global.kills+global.totkills>10*global.neutralkc)
    text[0]="IJI: But WHAT? If you think the humans don't even matter, that's just STUPID! Same with the Tasen, you killed them because they're not the same as you!";
else
    text[0]="IJI: But what? If you think the humans don't even matter, that's just stupid! It's the same as the reason you hunted the Tasen - because they're not the same as you!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatx7_19"){
text[0]="TOR: Fuh! You have no idea what you're talking about, human! What do you hope to accomplish by complaining to ME about the errors of my people? The Tasen were a lesser form of Komato, a society of outcasts and leeches! The Komatos' hatred for them grew over";
text[1]="so many starturns, and once the war started, there was no stopping it. The majority always thought of the Tasen as inferior, and no matter what you say, you cannot stop such a massive force of strife once it's begun to spread. Our";
text[2]="leaders in High Command were powerless - the Imperial Army took the law into its own hands!";
portrait=110;
outline=4;
pages=3;}
if (global.textid=="chatx7_20"){
if (global.kills+global.totkills>10*global.neutralkc)
    text[0]="IJI: Oh, yeah? You didn't care that the Komato would rather wipe the Tasen out than live in peace with them?";
else
    text[0]="IJI: So what you're saying is - is that you didn't care that the Komato would rather wipe the Tasen out than live in peace with them?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatx7_21"){
text[0]="TOR: BAH! You seem to think that it's so easy, human! You think that the handful of leaders of High Command, who DID seek a rational solution to the conflict, could stop the ignorance of the masses? When the war broke out, anyone opposing the";
text[1]="Imperial Army would be killed! You honestly think we're so heartless as to wipe out a planet if it wasn't even necessary? You can't blame me without first blaming the public and the Imperial Army!";
portrait=110;
outline=4;
pages=2;}
if (global.textid=="chatx7_22"){
text[0]="IJI: But, I, I thought the leaders of a people were responsible for them! You keep talking like it's not your fault, when YOU'RE the one with the power!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatx7_23"){
text[0]="TOR: Power!? The people outnumber their leaders, do you expect us to just wish their intolerance away? We TRIED to end the conflict, damnit - don't come here and tell me that we DIDN'T TRY! High Command did the right thing when going with the flow";
text[1]="of the Imperial Army, otherwise we'd be stuck in internal war! You just strut into my post and expect to know the answer to all of our problems, when all that you say has already been said! I'm sick of this conflict, and I'm sick of people like you - if";
text[2]="there's one good thing about the extinction of the Tasen, it's that we'll find an end to the most pointless war I've ever seen!";
portrait=110;
outline=4;
pages=3;}
if (global.textid=="chatx7_24"){
text[0]="IJI: But the Tasen are already dead!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatx7_25"){
text[0]="TOR: That may be good enough for me, but it's not enough for the people - they've waited ages for this to happen, and we have to finish what they started! They couldn't care less about this planet either, no matter what I or anyone else in High Command";
text[1]="says! This is the only way - the Alpha Strike is just about to begin powering up, and once I've returned to lower orbit, one word from me will put an end to your suffering!";
portrait=110;
outline=4;
pages=2;}
if (global.textid=="chatx7_26"){
text[0]="IJI: NO! I don't care what you say, I'll save the world if it so takes my life!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatx7_27"){
if (global.kills+global.totkills>10*global.neutralkc)
    text[0]="TOR: Fine - then I will grant your death wish. Prove to me that I am wrong| prove to me just how strongly you wish to survive! In the meantime| enjoy the view.";
else
    text[0]="TOR: Fine - then I will grant your death wish. Prove to me that I am wrong| prove to me just how strongly you believe in your words! In the meantime| enjoy the view.";
portrait=111;
outline=4;
pages=1;
obj_torbody.image_single=-1;
obj_torbody.image_index=0;
obj_torbody.image_speed=1/3;
obj_torbody.alarm[0]=6;
with (obj_sabot)
    scr_stopmusic();
}

if (global.textid=="chatx8_1"){
global.cannotskipchat=1;
text[0]="IJI: NO! STOP IT! STOP CHARGING THE ALPHA STRIKE!";
portrait=7;
outline=1;
pages=1;
obj_torbody.image_single=-1;
obj_torbody.image_index=2;
obj_torbody.image_speed=-0.5;
obj_torbody.alarm[1]=4;}
if (global.textid=="chatx8_2"){
if (global.killdata[797]==1)
    text[0]="TOR: Too late, human - one way or another, tonight is the end of our bloodstained history!";
else
    text[0]="TOR: Too late, human - tonight is the end of our bloodstained history!";
portrait=110;
outline=4;
pages=1;
}

if (global.textid=="chatxa_1"){
global.cannotskipchat=1;
if (global.wty){
    text[0]="TOR: Y-You fool! What have you done!? That Null driver prototype| the wormholes| the hallucinations! They'll drive you mad!";
    pages=1;
    }
else if (obj_sabot.firedmassacre==1){
    text[0]="TOR: Ugh| ack! Th-That weapon! No-one outside of Imperial Research should even know it exists!";
    text[1]="M-Mercy! Have mercy on me!";
    pages=2;
    }
else if (global.specialtrigger16 && global.tormaximumcharge){
    text[0]="TOR: Grraagh! Impossible| it, it's impossible!!! How could a mere human| so weak and insignificant| against a fully powered General? So much fighting skill and combat spirit| in such a frail body|";
    text[1]="Have mercy| please, I beg of you to have mercy on me!";
    pages=2;
    if (!global.iimsx){
        global.iimsx=1;
        global.ignoremessagescroll=30;
        }
    }
else{
    text[0]="TOR: Ugh| ack! M-Mercy! Please|";
    pages=1;
    }
portrait=114;
outline=4;
global.sector=0;
obj_sabot.cannotrestart=1;
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0 && !global.wty){
    obj_tor.berserkend=1;
    obj_iji.holdafterchat=1;
    }
else{
    if (instance_number(obj_end)==0)
        instance_create(obj_iji.x,obj_iji.y,obj_end);
    }
}

if (global.textid=="chatxb_1"){
text[0]="BERSERKER: This is Komato Berserker 78432-97680-46872. In case anyone missed the broadcast, I'm using the humans' communication network to update you on our strategic status. Good news, men - all Tasen on this planet have been exterminated successfully.";
portrait=115;
outline=4;
pages=1;
obj_iji.startmusics=1;
global.specialtriggerb1=0;
}
if (global.textid=="chatxb_2"){
if (global.kills+global.totkills>9*global.neutralkc)
    text[0]="IJI: Wh-What the? GET THE HELL OUT OF OUR CONTROL ROOM!";
else
    text[0]="IJI: Wh-What the? Get the hell out of our control room!";
if (global.kills+global.totkills>9*global.berserkkc && global.killdata[797]==0)
    portrait=3;
else
    portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_3"){
text[0]="BERSERKER: In other words, it is my honour to announce that we've finally eradicated those damned parasites once and for all! I'd like to thank everyone for a job well done; not only did we totally destroy the Tasens' final outpost, it was done in the";
text[1]="fastest time in history. Also, even if the `humans` here on Origin didn't prove to be a threat, it is our duty to Alpha Strike them into oblivion - personally, the last thing I'd want is another pesky, inferior little uprising race!";
portrait=115;
outline=4;
pages=2;
obj_iji.startmusics=1;
with (obj_sabot)
    scr_music("mus_dark");}
if (global.textid=="chatxb_4"){
if (global.specialtrigger2)
text[0]="IJI: Wait| they think the Tasen are all dead? They missed the ones in the outpost?";
else
text[0]="IJI: Wait| the Tasen are all dead? And now|";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_5"){
if (global.killdata[797]==1){
    text[0]="BERSERKER: Hold the celebrations, everyone in area 693K-A79, I'm not done yet. The Alpha strike has been put on hold until either any unit successfully terminates the `Human Anomaly`, or the casualties resulting from engaging her exceed one thousand";
    text[1]="lives. The High Command representatives in our fleet are highly interested in this individual's Nanotechnology, and once again on a personal note, I'd like to see her ass kicked DAMN HARD for the chaos she's caused during this operation! She sabotaged a";
    text[2]="Phantom Hammer, took down a Sentinel, and humiliated our honoured Annihilator Iosa! Assassin Asha reported that the male human the Anomaly worked together with would most probably be her weakness, yet even after his death, the Anomaly shows no sign of slowing";
    text[3]="down. Orders are orders, and I will personally see to it that anyone in area 693K-A79 refusing to accept this mission will face military law!";
    pages=4;
    }
else if (global.totkills>9*global.neutralkc){
    text[0]="BERSERKER: Hold the celebrations, everyone in area 693K-A79, I'm not done yet. The Alpha strike has been put on hold until either any unit successfully terminates the `Human Anomaly`, or the casualties resulting from engaging her exceed one thousand";
    text[1]="lives. The High Command representatives in our fleet are highly interested in this individual's Nanotechnology, and once again on a personal note, I'd like to see her ass kicked DAMN HARD for the chaos she's caused during this operation! She sabotaged a";
    text[2]="Phantom Hammer, took down a Sentinel, killed so many people the battle reports are still pouring in, and even killed our honoured Annihilator Iosa! Assassin Asha reported that the male human the Anomaly worked together with would most probably be her";
    text[3]="weakness, yet even after his death, the Anomaly shows no sign of slowing down in her aimless slaughter. Orders are orders, and I will personally see to it that anyone in area 693K-A79 refusing to accept this mission will face military law!";
    pages=4;
    }
else{
    text[0]="BERSERKER: Hold the celebrations, everyone in area 693K-A79, I'm not done yet. The Alpha strike has been put on hold until either any unit successfully terminates the `Human Anomaly`, or the casualties resulting from engaging her exceed one thousand";
    text[1]="lives. The High Command representatives in our fleet are highly interested in this individual's Nanotechnology, and once again on a personal note, I'd like to see her ass kicked DAMN HARD for the chaos she's caused during this operation! She sabotaged a";
    text[2]="Phantom Hammer, took down a Sentinel, and even killed our honoured Annihilator Iosa! Assassin Asha reported that the male human the Anomaly worked together with would most probably be her weakness, yet even after his death, the Anomaly shows no sign";
    text[3]="of slowing down. Orders are orders, and I will personally see to it that anyone in area 693K-A79 refusing to accept this mission will face military law!";
    pages=4;
    }
portrait=115;
outline=4;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_6"){
if (global.totkills>9*global.neutralkc){
    text[0]="IJI: I, I|";
    text[1]="killed that many people?";
    pages=2;
    portrait=5;
    }
else{
    text[0]="IJI: Huh! Of course I know what I'm doing. And you'd put a thousand lives on the line just to get ME?";
    pages=1;
    portrait=2;
    }
outline=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_7"){
if (global.killdata[797]==1){
    if (global.totkills>9*global.neutralkc){
        text[0]="IJI: No - I'm nothing like them! I'm nothing like that Annihilator!";
        portrait=2;
        }
    else{
        text[0]="IJI: You're right, Dan. They're crazy.";
        portrait=1;
        }
    }
else if (global.totkills>9*global.berserkkc){
    text[0]="IJI: No - I'm nothing like them! Dan, don't listen to them! You believe me, right!?";
    portrait=2;
    }
else if (global.totkills>9*global.neutralkc){
    text[0]="IJI: No, no, no, it's not true! I'm nothing like them! Dan, don't listen to them! You believe me, right!?";
    portrait=2;
    }
else{
    text[0]="IJI: You're right, Dan. They're crazy.";
    portrait=1;
    }
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_8"){
if (global.totkills>9*global.neutralkc){
    text[0]="BERSERKER: The reward for total termination of the Anomaly is 6'000'000 Units, but the reward for keeping her body in one piece is 20'000'000'000. The reward for live capture is fifty times that value. It's true that the Anomaly has eliminated an absurd";
    text[1]="amount of forces in mere cycles, but our fleet has overcome greater challenges than bringing down a single individual! GLORY TO THE KOMATO!";
    }
else{
    text[0]="BERSERKER: The reward for total termination of the Anomaly is 6'000'000 Units, but the reward for keeping her body in one piece is 20'000'000'000. The reward for live capture is fifty times that value. It's true that the Anomaly has made a name for";
    text[1]="herself in mere cycles, but our fleet has overcome greater challenges than bringing down a single individual! GLORY TO THE KOMATO!";
    }
portrait=115;
outline=4;
pages=2;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_9"){
text[0]="IJI: |";
portrait=5;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_10"){
if (global.totkills>9*global.berserkkc)
    text[0]="IJI: Hmph. You're that scared of me, huh? Well, I'm not afraid of you anymore. You're the ones who turned me into this| you, and those stupid Tasen.";
else if (global.totkills>9*global.neutralkc)
    text[0]="IJI: Hmph. You're that scared of me, huh? Fine, I'm not afraid anymore. You're the ones who turned me into this| you, and those stupid Tasen.";
else
    text[0]="IJI: Hmph. You're that scared of me, huh? Fine. I'm not afraid anymore.";
portrait=12;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_11"){
if (global.killdata[797]==1){
    if (global.totkills>9*global.neutralkc)
        text[0]="IJI: Dan. You know what I'm thinking, right? This is it. This is our only chance| and this is Sector X, so if the General's landed, he must be nearby. I have to keep a cool head| it's the only way to solve this now.";
    else
        text[0]="IJI: Dan. You know what I'm thinking, right? This is it. This is our only chance| and this is Sector X, so if the General's landed, he must be nearby.";
    }
else if (global.totkills>9*global.berserkkc)
    text[0]="IJI: Dan. You know what I'm thinking, right? This is it. This is our only chance| and this is Sector X, so if the General's landed, he must be nearby. I won't hold back on ANYONE who tries to take our world from us!";
else if (global.totkills>9*global.neutralkc)
    text[0]="IJI: Dan. You know what I'm thinking, right? This is it. This is our only chance| and this is Sector X, so if the General's landed, he must be nearby. I won't hold back anymore. I won't hold back on anyone who tries to take our world from us!";
else
    text[0]="IJI: Dan. You know what I'm thinking, right? This is it. This is our only chance| and this is Sector X, so if the General's landed, he must be nearby.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxb_12"){
if (global.totkills>9*global.berserkkc){
    text[0]="IJI: |";
    text[1]="Yeah, you're right. I can't stand here all day, I've got Komato to take care of. Hold tight!";
    }
else{
    text[0]="IJI: |";
    text[1]="Yeah, you're right. I can't stand here all day, I've got a job to do. Hold tight!";
    }
portrait=12;
outline=1;
pages=2;
obj_iji.startmusics=1;}

if (global.textid=="chatxc_1"){
text[0]="IJI: Damn, another door! Doesn't look like we can crack it either. There's got to be a way to open it, like destroying whatever gives it power|";
text[1]="Yeah, I saw that. Looks like there's a way to the rooftops from here, at least that's a start.";
portrait=2;
outline=1;
pages=2;}

if (global.textid=="chatxd_1"){
text[0]="BERSERKER: Attention, all units! The Anomaly is approaching the barricade. All stations ready.";
portrait=115;
outline=4;
pages=1;}
if (global.textid=="chatxd_2"){
if (global.kills+global.totkills>9*global.berserkkc && global.killdata[797]==0)
    text[0]="IJI: Damn it! Stupid cameras - get out of our control room already, you bastard!";
else
    text[0]="IJI: Damn it! Stupid cameras - get out of our control room already!";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chatxe_1"){
text[0]="ASHA: That's as far as you go, Anomaly - time to pay up!";
portrait=103;
outline=4;
pages=1;
obj_iji.xcannotfire=0;
obj_asha2trigger.ready=1;
obj_iji.startmusics=1;
with (obj_sabot)
    scr_music("mus_lightstroke");
}
if (global.textid=="chatxe_2"){
text[0]="IJI: Y - YOU!";
portrait=3;
outline=1;
pages=1;
global.facing=1;
obj_iji.sprite_index=spr_basic;
obj_iji.startmusics=1;
with (obj_sabot)
    scr_music("mus_asha");
}
if (global.textid=="chatxe_3"){
text[0]="ASHA: What, got a problem with me? I told you, I knew your weakness, so I killed him. Looks like it didn't stop you though| 'guess I'll have to take care of that little problem mysel -";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxe_4"){
text[0]="IJI: SHUT UP! SHUT THE HELL UP! THIS TIME YOU'RE GOING DOWN!";
portrait=3;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxe_5"){
text[0]="ASHA: Oh, drop it, you lunatic! I've got more than enough reason to kill you - more than your childish revenge! Don't underestimate the best Assassin in -";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxe_6"){
text[0]="IJI: AAAAAH!!!";
portrait=3;
outline=1;
pages=1;
obj_iji.startmusics=1;
with (obj_sabot)
    scr_stopmusic();}

if (global.textid=="chatxf_1"){
text[0]="IJI: Hhh| hhh| huhh|";
portrait=12;
outline=1;
pages=1;
obj_asha2trigger.ready2=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxf_2"){
if (global.kills+global.totkills>9*global.berserkkc && global.killdata[797]==0){
    text[0]="IJI: Dan| I killed him.";
    portrait=1;
    }
else{
    text[0]="IJI: Dan| I killed him|";
    portrait=5;
    }
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxf_3"){
text[0]="IJI: Hrg| eww.";
portrait=12;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxf_4"){
text[0]="IJI: Don't listen to him, I'm just glad you're still okay. Yeah, I know. Don't worry| he won't find you again.";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chatxg_1"){
text[0]="IJI: Okay, I think the General's getting close! I can't blow this chance.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxg_2"){
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0){
    text[0]="IJI: What was it you said again? Killing this guy should show them all not to mess with us, right?";
    portrait=12;
    }
else{
    text[0]="IJI: If this guy tries to fight me, I'm dead. I'll try not to say anything stupid, okay, Dan?";
    portrait=5;
    }
outline=1;
pages=1;}
if (global.textid=="chatxg_3"){
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0){
    text[0]="IJI: I'll try talking to him first, but there's no way that's gonna work. I gotta do whatever it takes to stop the Alpha Strike.$";
    text[1]="Dan, wait here| I'm afraid this could get ugly.";
    pages=2;
    }
else{
    text[0]="IJI: Good. I know you believe in me. Wait here| I'm afraid this could get ugly.";
    pages=1;
    }
portrait=1;
outline=1;}

if (global.textid=="chatxh_1"){
text[0]="IJI: It's raining acid! I hope my Nanofield can take it.";
portrait=4;
outline=1;
pages=1;
}
if (global.textid=="chatxh_2"){
text[0]="IJI: All those ships fighting must've messed up the atmosphere| or was it the Tasens' Alpha Strike?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxh_3"){
text[0]="IJI: Who cares, it's not gonna stop me!";
portrait=2;
outline=1;
pages=1;
}

if (global.textid=="chatxi_1"){
text[0]="IJI: HELL yeah! Take THAT, you stupid poster! YEAH!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxi_2"){
text[0]="DAN: Iji, who are you talking to?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chatxi_3"){
text[0]="IJI: Oh. I just have this crazy urge to find all these posters. I've no idea why.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxi_4"){
text[0]="DAN: Okay| moving on.";
portrait=99;
outline=2;
pages=1;}

if (global.textid=="chatxj_1"){
text[0]="You got a RESONANCE REFLECTOR, used for reflecting many kinds of enemy projectiles. Press 5 or "+chr(global.weap5key)+" twice to select it. You Nanogun must be in Active mode.";
text[1]="Another way to select the Resonance reflector is to press "+chr(global.prevkey)+" or "+chr(global.nextkey)+" until the Resonance detonator is selected, then pressing "+chr(global.specialkey)+".";
portrait=0;
outline=0;
pages=2;}

if (global.textid=="chatxk_1"){
text[0]="IJI: The blast doors to the power core over there are open now. Time to apply some force.";
portrait=1;
outline=1;
pages=1;
instance_activate_object(obj_trigger);
with (obj_trigger){
    if (textid=="chatxk")
        instance_destroy();
    }
}

if (global.textid=="chatxl_1"){
text[0]="IJI: Wait, this logbook| it looks important somehow.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chatxm_1"){
text[0]="ASHA: What the - you escaped with a restoration unit, but still want to face me again!?";
text[1]="Hahahah! That means I get to KILL YOU TWICE!";
portrait=103;
outline=4;
pages=2;
obj_iji.xcannotfire=0;
obj_asha2trigger.rready=1;
with (obj_sabot)
    scr_music("mus_lightstroke");
obj_iji.startmusics=1;}

if (global.textid=="chatxn_1"){
text[0]="IJI: Whoa! Guess that's another way to destroy that core!";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chatxo_1"){
text[0]="IJI: Hmm, this looks dangerous. I REALLY should take a look in those logbooks before touching anything out here!";
portrait=2;
outline=1;
pages=1;}

if (global.textid=="chatxp_1"){
text[0]="You got the Massacre, selected by pressing 0 while in Active mode. This weapon uses your own Armor as ammunition, and its power is unaffected by your Attack stat. Damage taken by firing it does not count towards your `Damage taken` total.";
portrait=0;
outline=0;
pages=1;}

if (global.textid=="chatxq_1"){
text[0]="IJI: You again?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxq_2"){
text[0]="ANSAKSIE: Hey. Don't mind me, I'm just here to pick the audio log out of Tor if he dies.";
portrait=117;
outline=4;
pages=1;}
if (global.textid=="chatxq_3"){
text[0]="IJI: I didn't come here to -";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxq_4"){
text[0]="ANSAKSIE: I know, but with the way you `argue`, I'm not keeping my hopes up. Just remember that I can't hold your hand this time, Anomaly.";
portrait=117;
outline=4;
pages=1;}
if (global.textid=="chatxq_5"){
text[0]="IJI: My name's Iji! And there's nothing else I can do, I'm not gonna let you destroy the world!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxq_6"){
text[0]="ANSAKSIE: Hm. The General has an easier time listening to someone calm and rational. Don't get too excited, Iji.";
portrait=117;
outline=4;
pages=1;}

if (global.textid=="chatxr_1"){
text[0]="IJI: About that - did you really have to kill Iosa?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxr_2"){
text[0]="ANSAKSIE: I knew it could cost my life. I knew it would devastate General Tor. I did it because that woman was wrong. Whether her death will be an awakening or further motivating her troops is for them to decide. I'm just glad I got to do it myself.";
portrait=117;
outline=4;
pages=1;}
if (global.textid=="chatxr_3"){
text[0]="IJI: Huh, you're really obsessed with this.";
portrait=12;
outline=1;
pages=1;}
if (global.textid=="chatxr_4"){
text[0]="ANSAKSIE: So what if I am? I want to stop the development of Generation 3 weapons and the ideals behind them, but of course there will be sacrifices. I admire your pacifism, but remember that the ones who don't fight back are the easiest to crush.";
portrait=117;
outline=4;
pages=1;}
if (global.textid=="chatxr_5"){
text[0]="IJI: |";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chatxs_1"){
text[0]="IJI: I gotta go, but do you have any more suggestions for convincing Tor?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxs_2"){
text[0]="ANSAKSIE: Simply arguing won't work. Tor doesn't care who pushes the buttons, as he thinks the one who gave the order is the one at fault. He'll blame anyone but himself, no matter what you're planning to tell him.";
portrait=117;
outline=4;
pages=1;}
if (global.textid=="chatxs_3"){
text[0]="IJI: Sheesh, thanks a lot.";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxs_4"){
text[0]="ANSAKSIE: I didn't say it's hopeless! If push comes to shove, your gun is a better weapon than your words. General exoskeletons can't aim at nearby units, and most of their weapons can be reflected. Your determination alone might just be enough to";
text[1]="make him change his mind. I have no sympathies for your planet, but if you do manage to have your way| I suppose there is more to you than survival instinct.";
portrait=117;
outline=4;
pages=2;}

if (global.textid=="chatxt_1"){
text[0]="ANSAKSIE: Don't wait around, Iji. I'd hate to see someone so stubborn die so young.";
portrait=117;
outline=4;
pages=1;}
if (global.textid=="chatxt_2"){
text[0]="IJI: Huh. Got it.";
portrait=1;
outline=1;
pages=1;}

if (global.textid=="chatxu_1"){
text[0]="ANSAKSIE: Figures. That Soldier sold me a malfunctioning translator, now I'm babysitting a human with people-poking issues. Might as well keep practicing this cool pose|";
portrait=117;
outline=4;
pages=1;}

if (global.textid=="chatxv_1"){
text[0]="ASHA: Hhh| HUMAN! Where| where in the Zentraidon do you find SO MANY RESTORATION UNITS!? Th-This is RIDICULOUS! It's UTTERLY IMPROBABLE!";
text[1]="How many times do I have to kill you!? I'LL TEAR YOU TO PIECES AND FIRE EVERY LAST ONE OF THEM INTO A BLACK HOLE! TEN TIMES OVER!!!";
portrait=103;
outline=4;
pages=2;
obj_iji.xcannotfire=0;
obj_asha2trigger.rready=1;
with (obj_sabot)
    scr_music("mus_lightstroke");
obj_iji.startmusics=1;
obj_asha2.insane=1;}
if (global.textid=="chatxv_2"){
text[0]="IJI: Huh, I guess he's serious this time.";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;
global.facing=1;
obj_iji.sprite_index=spr_basic;}
if (global.textid=="chatxv_3"){
text[0]="ASHA: Serious? SERIOUS! Y - YOU! BLARGH! DIIIIIIIIIIIIIEEEEEEE!!!";
portrait=103;
outline=4;
pages=1;
obj_iji.startmusics=1;}


if (global.textid=="chatxw_1"){
global.cannotskipchat=1;
text[0]="IJI: Hhh| hhh| alright.";
portrait=2;
outline=1;
pages=1;
obj_iji.holdafterchat=0;
if (instance_number(obj_end)==0)
    instance_create(obj_iji.x,obj_iji.y,obj_end);
}


if (obj_iji.xdanleft || global.specialtrigger1==0){
if (global.textid=="chatxmia_1"){
text[0]="IJI: A ribbon| Mia.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxmia_2"){
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0)
    text[0]="IJI: This is it| the whole world's waiting for me to fix this mess, and I'm not even sure how. I only know that everything leading up to this will be meaningless if I fail.";
else
    text[0]="IJI: This is it| the whole world's waiting for me to convince the General, and I don't even know what to say. I'm just a human, how will I know he'll even listen? Everything leading up to this will be meaningless if I fail.";
portrait=12;
outline=1;
pages=1;}
if (global.textid=="chatxmia_3"){
if (global.kills+global.totkills>10*global.berserkkc && global.killdata[797]==0)
    text[0]="IJI: Not that there's much to fix, anyway. Even if the Komato leave, the world's never going back to what it was.";
else
    text[0]="IJI: Not that I didn't have my doubts, anyway. Even if the Komato leave, the world's never going back to what it was.";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxmia_4"){
text[0]="IJI: At least I'll do what I can to save what's left of it| I'll never forget you. I love you, sis.";
if (global.kills+global.totkills>10*global.neutralkc)
    portrait=12;
else
    portrait=5;
outline=1;
pages=1;}
}

else{
if (global.textid=="chatxmia_1"){
text[0]="IJI: A ribbon? Mia|";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxmia_2"){
text[0]="DAN: What's wrong?";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chatxmia_3"){
text[0]="IJI: Ah -";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxmia_4"){
text[0]="DAN: Look, you have to hurry before the Komato General leaves his post and returns to lower orbit! You can do it, but quickly!";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chatxmia_5"){
text[0]="IJI: Thanks, I'll reach him soon. I won't let you down!";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxmia_6"){
text[0]="DAN: Of course not, you haven't made it this far for nothing. I believe in you, so hurry up! Show 'em not to mess with my sis!";
portrait=99;
outline=2;
pages=1;}
if (global.textid=="chatxmia_7"){
text[0]="IJI: Got it!";
portrait=8;
outline=1;
pages=1;}
if (global.textid=="chatxmia_8"){
text[0]="IJI: Mia, thank you for everything. I'll never forget you!";
portrait=12;
outline=1;
pages=1;}
}

if (global.textid=="chat11_1" && global.wty){
text[0]="SECTOR Y";
portrait=0;
outline=0;
pages=1;
obj_iji.startmusics=1;}


if (global.textid=="chatxx_1"){
text[0]="???: There you are. Do you understand what you've done?";
portrait=117;
outline=4;
pages=1;
with (obj_komatotrooper)
    angry=0;
with (obj_komatoberserker)
    angry=0;
with (obj_skysmasher)
    angry=0;
tempid=instance_create(8654,4281,obj_sec9ansaksie)
tempid.type=0;
with (tempid)
    instance_create(bbox_left+((bbox_right-bbox_left)/2), bbox_top+((bbox_bottom-bbox_top)/2), obj_megaflash);
with (obj_sabot)
    scr_music("mus_lightstroke");
obj_iji.startmusics=1;}
if (global.textid=="chatxx_2"){
text[0]="IJI: What!?";
portrait=2;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxx_3"){
text[0]="???: You failed to kill Iosa. No matter what you tell General Tor now, Iosa will come right back and convince him to Strike your planet.";
portrait=117;
outline=4;
pages=1;
obj_sec9ansaksie.shakehead=1;
with (obj_sabot)
    scr_music("mus_dark");
obj_iji.startmusics=1;}
if (global.textid=="chatxx_4"){
text[0]="IJI: That's| no!";
portrait=1;
outline=1;
pages=1;
obj_iji.startmusics=1;}
if (global.textid=="chatxx_5"){
text[0]="???: Too late, you softhearted bastard! Didn't you read the logs I left you? Good luck talking your way out of this one - you're on your own.";
portrait=117;
outline=4;
pages=1;
obj_iji.startmusics=1;}

if (global.textid=="chatxy_1"){
global.cannotskipchat=1;
text[0]="TOR: |Then she must be hiding near my position. I did NOT authorize the release of her Nanogun!";
portrait=111;
outline=4;
pages=1;}
if (global.textid=="chatxy_2"){
text[0]="IJI: General? Hello?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxy_3"){
text[0]="TOR: Huh? No| end of transmission.";
portrait=110;
outline=4;
pages=1;
obj_torbody.image_single=-1;
obj_torbody.image_index=2;
obj_torbody.image_speed=-1/3;
obj_torbody.alarm[3]=6;
}
if (global.textid=="chatxy_4"){
text[0]="IJI: Uh, hi. Can you understand me?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxy_5"){
text[0]="TOR: What exactly is this? Wait, you have to be|";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatxy_6"){
if (global.kills+global.totkills>10*global.neutralkc){
    text[0]="IJI: Yeah, I know, I'm the `Human Anomaly`. But there's something very important that -";
    portrait=1;
    }
else{
    text[0]="IJI: Yeah, I know, I'm the `Human Anomaly`. But there's something very important that -";
    portrait=5;
    }
outline=1;
pages=1;}
if (global.textid=="chatxy_7"){
text[0]="TOR: What the - what in the world are YOU doing just walking into my post? Do you have a death wish!?";
portrait=110;
outline=4;
pages=1;
with (obj_sabot)
    scr_music("mus_dark");}
if (global.textid=="chatxy_8"){
text[0]="IJI: WAIT! General, please wait and let me explain! I'm not here to fight you - all I want is a peaceful discussion!";
portrait=2;
outline=1;
pages=1;
obj_iji.sprite_index=spr_lookaround;
obj_iji.image_speed=0.5;
obj_torbodytrigger.alarm[0]=26;}
if (global.textid=="chatxy_9"){
text[0]="TOR: Oh, of WHAT, may I ask!?";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatxy_10"){
text[0]="IJI: Wh-What do you think? We live here on this planet, and we haven't hurt anyone! All of a sudden, the Tasen came and wasted most of our people, and now you think you can get away with Alpha Striking us too!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxy_11"){
text[0]="TOR: Of course we can get away with it. Perhaps you're not aware that the only way to make sure that the Tasen are extinct is to -";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatxy_12"){
if (global.kills+global.totkills>10*global.neutralkc)
    text[0]="IJI: No, that's not right. You already know that the Tasen are as good as gone!";
else
    text[0]="IJI: No, that's not right. You already know that the Tasen are as good as gone.";
portrait=1;
outline=1;
pages=1;
obj_iji.sprite_index=spr_lookaround;
obj_iji.image_speed=0.5;
obj_torbodytrigger.alarm[0]=26;}
if (global.textid=="chatxy_13"){
text[0]="TOR: That's correct, but -";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatxy_14"){
if (global.kills+global.totkills>10*global.neutralkc)
    text[0]="IJI: But WHAT? If you think the humans don't even matter, that's just STUPID! Same with the Tasen, you killed them because they're not the same as you!";
else
    text[0]="IJI: But what? If you think the humans don't even matter, that's just stupid! It's the same as the reason you hunted the Tasen - because they're not the same as you!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxy_15"){
text[0]="TOR: Fuh! You have no idea what you're talking about, human! What do you hope to accomplish by complaining to ME about the errors of my people? The Tasen were a lesser form of Komato, a society of outcasts and leeches! The Komatos' hatred for them grew over";
text[1]="so many starturns, and once the war started, there was no stopping it. The majority always thought of the Tasen as inferior, and no matter what you say, you cannot stop such a massive force of strife once it's begun to spread. Our";
text[2]="leaders in High Command were powerless - the Imperial Army took the law into its own hands!";
portrait=110;
outline=4;
pages=3;}
if (global.textid=="chatxy_16"){
if (global.kills+global.totkills>10*global.neutralkc)
    text[0]="IJI: Oh, yeah? You didn't care that the Komato would rather wipe the Tasen out than live in peace with them?";
else
    text[0]="IJI: So what you're saying is - is that you didn't care that the Komato would rather wipe the Tasen out than live in peace with them?";
portrait=1;
outline=1;
pages=1;}
if (global.textid=="chatxy_17"){
text[0]="TOR: BAH! You seem to think that it's so easy, human! You think that the handful of leaders of High Command, who DID seek a rational solution to the conflict, could stop the ignorance of the masses? When the war broke out, anyone opposing the";
text[1]="Imperial Army would be killed! You honestly think we're so heartless as to wipe out a planet if it wasn't even necessary? You can't blame me without first blaming the public and the Imperial Army!";
portrait=110;
outline=4;
pages=2;}
if (global.textid=="chatxy_18"){
text[0]="IJI: But, I, I thought the leaders of a people were responsible for them! You keep talking like it's not your fault, when YOU'RE the one with the power!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxy_19"){
text[0]="TOR: Power!? The people outnumber their leaders, do you expect us to just wish their intolerance away? We TRIED to end the conflict, damnit - don't come here and tell me that we DIDN'T TRY! High Command did the right thing when going with the flow";
text[1]="of the Imperial Army, otherwise we'd be stuck in internal war! You just strut into my post and expect to know the answer to all of our problems, when all that you say has already been said! I'm sick of this conflict, and I'm sick of people like you - if";
text[2]="there's one good thing about the extinction of the Tasen, it's that we'll find an end to the most pointless war I've ever seen!";
portrait=110;
outline=4;
pages=3;}
if (global.textid=="chatxy_20"){
text[0]="IJI: But the Tasen are already dead!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxy_21"){
text[0]="TOR: That may be good enough for me, but it's not enough for the people - they've waited ages for this to happen, and we have to finish what they started! They couldn't care less about this planet either, no matter what I or anyone else in High Command";
text[1]="says! The Alpha Strike is just about to begin powering up, and once I've returned to lower orbit, one word from me will put an end to your suffering!";
portrait=110;
outline=4;
pages=2;}
if (global.textid=="chatxy_22"){
text[0]="IJI: NO! I don't care what you say, I'll save the world if it so takes my life!";
portrait=2;
outline=1;
pages=1;}
if (global.textid=="chatxy_23"){
text[0]="TOR: Humph! Are you really prepared to make good on that promise? Sparing your planet would put MY life on the line as well, and I|";
portrait=110;
outline=4;
pages=1;}
if (global.textid=="chatxy_24"){
text[0]="TOR: I am merely the Army's pawn. If you wish me to reconsider, then prove to me that I am wrong| prove to me just how strongly you believe in your words! In the meantime| enjoy the view.";
portrait=111;
outline=4;
pages=1;
obj_torbody.image_single=-1;
obj_torbody.image_index=0;
obj_torbody.image_speed=1/3;
obj_torbody.alarm[0]=6;
with (obj_sabot)
    scr_stopmusic();
}

if (global.textid=="chatxz_1"){
if (global.wty)
    text[0]="TOR: Y-You fool! What have you done!? That Null driver prototype| the wormholes| the hallucinations! They'll drive you mad!";
else
    text[0]="TOR: Ugh| ack! M-Mercy!";
pages=1;
portrait=114;
outline=4;
obj_sabot.cannotrestart=1;
if (global.wty){
    if (instance_number(obj_end)==0)
        instance_create(obj_iji.x,obj_iji.y,obj_end);
    }
else
    obj_iji.holdafterchat=1;
}
if (global.textid=="chatxz_2"){
text[0]="IJI: Hhh| hhh| you surrender?";
pages=1;
portrait=2;
outline=1;}

if (global.textid=="chatxaa_1"){
text[0]="IOSA: That's enough!";
pages=1;
portrait=119;
outline=4;
with (obj_sabot)
    scr_music("mus_dark");
obj_iji.holdafterchat=1;}
if (global.textid=="chatxaa_2"){
text[0]="IJI: What? How did you -";
pages=1;
portrait=2;
outline=1;}
if (global.textid=="chatxaa_3"){
text[0]="IOSA: It took long enough recharging my Nanofield. But this won't take long at all|";
pages=1;
portrait=119;
outline=4;}
if (global.textid=="chatxaa_4"){
text[0]="TOR: Iosa! I warned you to stay out of this!";
pages=1;
portrait=114;
outline=4;}
if (global.textid=="chatxaa_5"){
text[0]="IOSA: Choose your words carefully, General. This is being broadcast to the entire fleet. I know what you're up to| but I won't let the Anomaly talk you into it.";
pages=1;
portrait=119;
outline=4;}
if (global.textid=="chatxaa_6"){
text[0]="TOR: What are you insinuating? Return to lower orbit at once! That's an order!";
pages=1;
portrait=114;
outline=4;}
if (global.textid=="chatxaa_7"){
text[0]="IOSA: Do you hear it? The cheers of our troops, screaming for me to finish what you obviously couldn't. I am the one in control here, dear General. Not you.";
pages=1;
portrait=119;
outline=4;}
if (global.textid=="chatxaa_8"){
text[0]="IOSA: Tell me, human - isn't true bravery to risk your life to protect what you love?";
pages=1;
portrait=119;
outline=4;
with (obj_sabot)
    scr_stopmusic();
}
if (global.textid=="chatxaa_9"){
text[0]="IJI: What?";
pages=1;
portrait=2;
outline=1;}

if (global.textid=="chatxab_1"){
text[0]="IOSA: I've never heard a more ridiculous thing in my life. Your death made no difference at all.";
pages=1;
portrait=119;
outline=4;
global.sector=0;
obj_iji.holdafterchat=1;
if (instance_number(obj_end)==0)
    instance_create(obj_iji.x,obj_iji.y,obj_end);
}



}
#define scr_chatlength
//Sectors
if (global.textid=="chatz1")
    global.chats=1;
if (global.textid=="chatz2")
    global.chats=1;

if (global.textid=="chat11")
    global.chats=1;
if (global.textid=="chat12")
    global.chats=6;
if (global.textid=="chat13")
    global.chats=5;
if (global.textid=="chat14")
    global.chats=1;
if (global.textid=="chat15")
    global.chats=3;
if (global.textid=="chat16")
    global.chats=7;
if (global.textid=="chat17")
    global.chats=3;
if (global.textid=="chat18")
    global.chats=1;
if (global.textid=="chat1mia")
    global.chats=3;

if (global.textid=="chat21")
    global.chats=8;
if (global.textid=="chat22")
    global.chats=1;
if (global.textid=="chat23")
    global.chats=1;
if (global.textid=="chat24")
    global.chats=6;
if (global.textid=="chat25")
    global.chats=2;
if (global.textid=="chat26")
    global.chats=1;
if (global.textid=="chat27")
    global.chats=7;
if (global.textid=="chat29")
    global.chats=2;
if (global.textid=="chat2mia")
    global.chats=3;

if (global.textid=="chat31" && global.totkills>2*global.neutralkc)
    global.chats=8;
if (global.textid=="chat31" && global.totkills<=2*global.neutralkc)
    global.chats=10;
if (global.textid=="chat32")
    global.chats=1;
if (global.textid=="chat33")
    global.chats=3;
if (global.textid=="chat34")
    global.chats=9+global.bosshint;
if (global.textid=="chat35"){
    if (global.truce2 && !obj_krotera.deathbyiji)
        global.chats=13;
    else if (global.truce2 || !obj_krotera.deathbyiji)
        global.chats=12;
    else
        global.chats=11;
    }
if (global.textid=="chat36")
    global.chats=13;
if (global.textid=="chat37")
    global.chats=24;
if (global.textid=="chat3mia")
    global.chats=7;

if (global.textid=="chat41")
    global.chats=3;
if (global.textid=="chat42")
    global.chats=1;
if (global.textid=="chat44"){
    if (global.specialtrigger1==1 && global.kills+global.totkills<=4*global.neutralkc)
        global.chats=4;
    else
        global.chats=1;
    }
if (global.textid=="chat45"){
    if (global.specialtrigger1==1 && global.kills+global.totkills<=4*global.neutralkc)
        global.chats=9;
    else
        global.chats=4;
    }
if (global.textid=="chat46")
    global.chats=4;
if (global.textid=="chat47")
    global.chats=1;
if (global.textid=="chat4mia")
    global.chats=14;

if (global.textid=="chat51")
    global.chats=5;
if (global.textid=="chat52")
    global.chats=3;
if (global.textid=="chat53")
    global.chats=1;
if (global.textid=="chat54")
    global.chats=5+global.bosshint;
if (global.textid=="chat55")
    global.chats=4;
if (global.textid=="chat56")
    global.chats=1;
if (global.textid=="chat57")
    global.chats=1;
if (global.textid=="chat58")
    global.chats=9;
if (global.textid=="chat5mia")
    global.chats=4;

if (global.textid=="chat61")
    global.chats=1;
if (global.textid=="chat62")
    global.chats=2;
if (global.textid=="chat63")
    global.chats=1;
if (global.textid=="chat64")
    global.chats=1;
if (global.textid=="chat65")
    global.chats=2;
if (global.textid=="chat66")
    global.chats=1;
if (global.textid=="chat67")
    global.chats=1;
if (global.textid=="chat68")
    global.chats=1;
if (global.textid=="chat69")
    global.chats=1;
if (global.textid=="chat6a")
    global.chats=1;
if (global.textid=="chat6mia")
    global.chats=6;

if (global.textid=="chat71"){
    if (global.healthlevel<10)
        global.chats=5;
    else
        global.chats=4;
    }
if (global.textid=="chat72")
    global.chats=2;
if (global.textid=="chat73")
    global.chats=8;
if (global.textid=="chat74")
    global.chats=6+global.bosshint;
if (global.textid=="chat75")
    global.chats=2;
if (global.textid=="chat76")
    global.chats=1;
if (global.textid=="chat78")
    global.chats=5;
if (global.textid=="chat79")
    global.chats=1;
if (global.textid=="chat7mia")
    global.chats=14;

if (global.textid=="chat81")
    global.chats=5;
if (global.textid=="chat82")
    global.chats=1;
if (global.textid=="chat83")
    global.chats=1;
if (global.textid=="chat84")
    global.chats=8;
if (global.textid=="chat85")
    global.chats=1;
if (global.textid=="chat86")
    global.chats=5;
if (global.textid=="chat87")
    global.chats=2;
if (global.textid=="chat88")
    global.chats=1;
if (global.textid=="chat89")
    global.chats=1;
if (global.textid=="chat8a")
    global.chats=3;
if (global.textid=="chat8mia")
    global.chats=3;

if (global.textid=="chat91"){
    if (global.totkills>8*global.berserkkc)
        global.chats=6;
    else
        global.chats=4;
    }
if (global.textid=="chat92")
    global.chats=3;
if (global.textid=="chat93"){
    if (global.specialtriggerb2)
        global.chats=20;
    else
        global.chats=19;
    }
if (global.textid=="chat94")
    global.chats=1+global.bosshint;
if (global.textid=="chat95"){
    if (global.specialtriggerb2==1)
        global.chats=6;
    else
        global.chats=3;
    }
if (global.textid=="chat96")
    global.chats=3;
if (global.textid=="chat97")
    global.chats=1;
if (global.textid=="chat98")
    global.chats=7;
if (global.textid=="chat99")
    global.chats=1;
if (global.textid=="chat9a")
    global.chats=1;
if (global.textid=="chat9b")
    global.chats=1;
if (global.textid=="chat9c")
    global.chats=2;
if (global.textid=="chat9d")
    global.chats=7;
if (global.textid=="chat9e")
    global.chats=3;
if (global.textid=="chat9e01")
    global.chats=1;
if (global.textid=="chat9e02")
    global.chats=2;
if (global.textid=="chat9e03")
    global.chats=4;
if (global.textid=="chat9e04")
    global.chats=1;
if (global.textid=="chat9e05")
    global.chats=5;
if (global.textid=="chat9e06")
    global.chats=3;
if (global.textid=="chat9e07")
    global.chats=1;
if (global.textid=="chat9e08")
    global.chats=3;
if (global.textid=="chat9e09")
    global.chats=8;
if (global.textid=="chat9e10")
    global.chats=1;
if (global.textid=="chat9e11")
    global.chats=4;
if (global.textid=="chat9e12")
    global.chats=4;
if (global.textid=="chat9e13")
    global.chats=1;
if (global.textid=="chat9e14")
    global.chats=3;
if (global.textid=="chat9e15")
    global.chats=1;
if (global.textid=="chat9e16")
    global.chats=6;
if (global.textid=="chat9e17")
    global.chats=5;
if (global.textid=="chat9e18")
    global.chats=2;
if (global.textid=="chat9e19")
    global.chats=1;
if (global.textid=="chat9e20")
    global.chats=3;
if (global.textid=="chat9e21")
    global.chats=1;
if (global.textid=="chat9e22")
    global.chats=9;
if (global.textid=="chat9e23")
    global.chats=9;
if (global.textid=="chat9e24")
    global.chats=1;
if (global.textid=="chat9e25")
    global.chats=5;
if (global.textid=="chat9e26")
    global.chats=1;
if (global.textid=="chat9f")
    global.chats=2;
if (global.textid=="chat9mia"){
    if (global.specialtrigger1==0)
        global.chats=4;
    else
        global.chats=9;
    }

if (global.textid=="chatx1"){
    if (global.killdata[797]==1 && global.totkills>9*global.neutralkc)
        global.chats=13;
    else
        global.chats=12;
    }
if (global.textid=="chatx2")
    global.chats=1;
if (global.textid=="chatx3")
    global.chats=2;
if (global.textid=="chatx4")
    global.chats=13;
if (global.textid=="chatx5")
    global.chats=7;
if (global.textid=="chatx6"){
    if (obj_sabot.killedasha2)
        global.chats=10;
    else
        global.chats=11;
    }
if (global.textid=="chatx7")
    global.chats=27;
if (global.textid=="chatx8")
    global.chats=2;
if (global.textid=="chatxa")
    global.chats=1;
if (global.textid=="chatxb")
    global.chats=12;
if (global.textid=="chatxc")
    global.chats=1;
if (global.textid=="chatxd")
    global.chats=2;
if (global.textid=="chatxe")
    global.chats=6;
if (global.textid=="chatxf")
    global.chats=4;
if (global.textid=="chatxg")
    global.chats=3;
if (global.textid=="chatxh")
    global.chats=3;
if (global.textid=="chatxi" && global.specialtrigger1==1)
    global.chats=4;
if (global.textid=="chatxi" && global.specialtrigger1==0)
    global.chats=1;
if (global.textid=="chatxj")
    global.chats=1;
if (global.textid=="chatxk")
    global.chats=1;
if (global.textid=="chatxl")
    global.chats=1;
if (global.textid=="chatxm")
    global.chats=1;
if (global.textid=="chatxn")
    global.chats=1;
if (global.textid=="chatxo")
    global.chats=1;
if (global.textid=="chatxp")
    global.chats=1;
if (global.textid=="chatxq")
    global.chats=6;
if (global.textid=="chatxr")
    global.chats=5;
if (global.textid=="chatxs")
    global.chats=4;
if (global.textid=="chatxt")
    global.chats=2;
if (global.textid=="chatxu")
    global.chats=1;
if (global.textid=="chatxv")
    global.chats=3;
if (global.textid=="chatxx")
    global.chats=5;
if (global.textid=="chatxy")
    global.chats=24;
if (global.textid=="chatxz"){
    if (global.wty)
        global.chats=1;
    else
        global.chats=2;
    }
if (global.textid=="chatxaa")
    global.chats=9;
if (global.textid=="chatxab")
    global.chats=1;
if (global.textid=="chatxmia"){
    if (obj_iji.xdanleft || global.specialtrigger1==0)
        global.chats=4;
    else
        global.chats=8;
    }

scr_cutchatlength();
#define scr_cutchats
//CUTSCENE 1: HOSTILES
//No dialogue


//CUTSCENE 2: AWAKENING

//REALLY
if (global.really){
if (global.textid=="cut201_1"){
text[0]="DOC: Becker, did you hear the latest?#$#(Press Down or "+chr(global.usekey)+" to advance messages, or Escape to skip dialogues and cutscenes completely.)";
outline=0;
pages=1;}
if (global.textid=="cut201_2"){
text[0]="BECKER: You mean reallyjoel's dad? Of course.";
outline=0;
pages=1;}

if (global.textid=="cut202_1"){
text[0]="DOC: I still don't believe it.";
outline=0;
pages=1;}
if (global.textid=="cut202_2"){
text[0]="BECKER: Hey, if anyone can beat that game while juggling three cakes AND doing the laundry, it's reallyjoel's dad.";
outline=0;
pages=1;}
if (global.textid=="cut202_3"){
text[0]="DOC: Look. All I'm saying is, you shouldn't believe everything you hear.";
outline=0;
pages=1;}
if (global.textid=="cut202_4"){
text[0]="BECKER: When it comes to that guy, I believe anything. I saw him in person, beating some game with a gopher in two minutes flat. He didn't even push the umbrella button ONCE.";
outline=0;
pages=1;}
if (global.textid=="cut202_5"){
text[0]="PLAIT: Stop bickering about video games. What about Iji?";
outline=0;
pages=1;}
if (global.textid=="cut202_6"){
text[0]="DOC: Oh, yes, of course| there, I've set her Nanofield to wake her up. So Becker, you even believe that part about him beating Hero Core with one toe while blindfolded and| wait| what's that sound?";
outline=0;
pages=1;}

if (global.textid=="cut203_1"){
text[0]="BECKER: What's wrong?";
outline=0;
pages=1;}
if (global.textid=="cut203_2"){
text[0]="DOC: Oh no| everyone to the safe room!";
outline=0;
pages=1;}
if (global.textid=="cut203_3"){
text[0]="PLAIT: TOO LATE! THE TAS- AAAAAH!";
outline=0;
pages=1;}

if (global.textid=="cut204_1"){
text[0]="IJI: Unh|";
outline=1;
pages=1;}
if (global.textid=="cut204_2"){
text[0]="IJI: Hello?";
outline=1;
pages=1;}
if (global.textid=="cut204_3"){
text[0]="IJI: All I can remember were some people talking about video games|";
outline=1;
pages=1;}

if (global.textid=="cut205_1"){
text[0]="SPEAKER: Iji!";
outline=2;
pages=1;}

if (global.textid=="cut206_1"){
text[0]="SPEAKER: Iji, calm down. It's me, reallyjoel's dad. I'm in a control room in the middle of this complex, and I'm here to help you out.";
outline=2;
pages=1;}
if (global.textid=="cut206_2"){
text[0]="IJI: reallyjoel's dad!? For real?";
outline=1;
pages=1;}
if (global.textid=="cut206_3"){
text[0]="DAD: Yes, but you shouldn't talk or the Tasen could hear you. I can talk as much as I want - I'm so pro, I use all the speakers at once, and they don't understand any human languages.";
outline=2;
pages=1;}

if (global.textid=="cut207_1"){
text[0]="DAD: As far as I know, you were visiting this place with your family. An alien spaceship has bombarded the area with a#space-to-ground weapon called an Alpha Strike| then they came down and killed nearly everyone inside. They're called the";
text[1]="Tasen, and your mission is to make them leave this place.";
outline=2;
pages=2;}
if (global.textid=="cut207_2"){
text[0]="IJI: H-how? How am I supposed to do that?";
outline=1;
pages=1;}
if (global.textid=="cut207_3"){
text[0]="DAD: Since the Tasen invaded, a team of researchers trapped in here studied their Nanotechnology, and managed to make a cyborg soldier out of you with that technology. All you need now are the skills of a true video game master, and this won't be a";
text[1]="challenge at all.";
outline=2;
pages=2;}
if (global.textid=="cut207_4"){
text[0]="IJI: But| but I don't have those skills! I could never be as good as you!";
outline=1;
pages=1;}
if (global.textid=="cut207_5"){
text[0]="DAD: Anyone can be, Iji. Just close your eyes and visualize yourself finding the nearest Tasen leader, talking sense into him and making them leave the planet. And if that fails, visualize yourself calling in a second race, fighting through a warzone,";
text[1]="sabotaging an alien spaceship, defeating some of their best and/or most insane soldiers, finding another leader and defeating his 40-foot mecha with nothing but a Resonance reflector with ridiculous reload time.";
outline=2;
pages=2;}
if (global.textid=="cut207_6"){
text[0]="IJI: That's| that's a lot to visualize! Okay, I'll do it| I can do this.";
outline=1;
pages=1;}

if (global.textid=="cut208_1"){
text[0]="DAD: Concentrate, now. You won't become pro without trying.";
outline=2;
pages=1;}

if (global.textid=="cut209_1"){
text[0]="DAD: Well? Are you done?";
outline=2;
pages=1;}
if (global.textid=="cut209_2"){
text[0]="IJI: Almost| but I can't even imagine getting past the first Sector.";
outline=1;
pages=1;}
if (global.textid=="cut209_3"){
text[0]="DAD: Oh, don't worry. Back when I beat Jumper without pressing the jump button, I thought it would be impossible too.";
outline=2;
pages=1;}
if (global.textid=="cut209_4"){
text[0]="IJI: Uh, that actually sounds| impossible.";
outline=1;
pages=1;}
if (global.textid=="cut209_5"){
text[0]="DAD: Naw, not really. It was tough at first, but I just had to get better.";
outline=2;
pages=1;}
if (global.textid=="cut209_6"){
text[0]="IJI: Hmm. So all I have to do is think, move and fight beyond perfectly? Like, superhumanly?";
outline=1;
pages=1;}

if (global.textid=="cut210_1"){
text[0]="DAD: Yes, but being even slightly worse than myself will get you killed out there. This is serious business, after all.";
outline=2;
pages=1;}
if (global.textid=="cut210_2"){
text[0]="IJI: Hhh. Alright, I'll try to match your skill if that's my only chance.";
outline=1;
pages=1;}
if (global.textid=="cut210_3"){
text[0]="DAD: Very good. Just remember that perfection is not enough.";
outline=2;
pages=1;}
}


//NORMAL
else{
if (global.textid=="cut201_1"){
text[0]="DOC: Alright| we're done.#$#(Press Down or "+chr(global.usekey)+" to advance messages, or Escape to skip dialogues and cutscenes completely.)";
outline=0;
pages=1;}
if (global.textid=="cut201_2"){
text[0]="BECKER: Are you sure we should do this? If she dies when we boot it up, it'll all be for nothing. I want another week to make sure.$";
outline=0;
pages=1;}

if (global.textid=="cut202_1"){
text[0]="DOC: I don't think we've got another week. We've wasted months enough.";
outline=0;
pages=1;}
if (global.textid=="cut202_2"){
text[0]="BECKER: What good will it do if we can't perfect her? They have an army, and we have a potential soldier at best. Even with that gun we found -";
outline=0;
pages=1;}
if (global.textid=="cut202_3"){
text[0]="DOC: Look. As long as we can do something, that's better than nothing at all. I'd rather see her alive again at least once before we die.";
outline=0;
pages=1;}
if (global.textid=="cut202_4"){
text[0]="BECKER: Hm. Like she'd make that much of a difference.";
outline=0;
pages=1;}
if (global.textid=="cut202_5"){
text[0]="PLAIT: Stop bickering already. Should we wake her up or not?";
outline=0;
pages=1;}
if (global.textid=="cut202_6"){
text[0]="DOC: Yes. Yes, of course| there. Now, first we should check mental stability, sensory response and| wait, what's that sound?";
outline=0;
pages=1;}

if (global.textid=="cut203_1"){
text[0]="BECKER: What's wrong?";
outline=0;
pages=1;}
if (global.textid=="cut203_2"){
text[0]="DOC: Oh no| everyone to the safe room!";
outline=0;
pages=1;}
if (global.textid=="cut203_3"){
text[0]="PLAIT: TOO LATE! THE TAS- AAAAAH!";
outline=0;
pages=1;}

if (global.textid=="cut204_1"){
text[0]="IJI: Unh|";
outline=1;
pages=1;}
if (global.textid=="cut204_2"){
text[0]="IJI: Hello?";
outline=1;
pages=1;}
if (global.textid=="cut204_3"){
text[0]="IJI: Dad? Mia?";
outline=1;
pages=1;}

if (global.textid=="cut205_1"){
text[0]="SPEAKER: Iji!";
outline=2;
pages=1;}

if (global.textid=="cut206_1"){
text[0]="SPEAKER: Iji, calm down. It's me, Dan. I'm in a control room in the middle of the complex, but I can see you through the cameras. There's a lot to explain.";
outline=2;
pages=1;}
if (global.textid=="cut206_2"){
text[0]="IJI: Dan!? Can you hear me?";
outline=1;
pages=1;}
if (global.textid=="cut206_3"){
text[0]="DAN: Keep your voice down! Yes, there are microphones in these speakers, but you shouldn't talk or the Tasen could hear you. I can talk as much as I want - I use all the speakers at once, and I don't think they understand any human languages.";
outline=2;
pages=1;}

if (global.textid=="cut207_1"){
text[0]="DAN: Listen. We were all visiting dad's workplace, when all of a sudden an alien spaceship bombarded the area with a space-to- ground weapon called the Alpha Strike. Then they came down and killed nearly everyone inside - that's why I'm stuck in this";
text[1]="control room. They're called the Tasen, and I don't know why they invaded this complex, but it's our job to make them leave.";
outline=2;
pages=2;}
if (global.textid=="cut207_2"){
text[0]="IJI: Y-You're lying! That's -";
outline=1;
pages=1;}
if (global.textid=="cut207_3"){
text[0]="DAN: Calm down. It's been six months since the Tasen invaded this place. Since then, a team of researchers trapped in here tried to find a way to stop them. They managed to make a cyborg soldier out of the only suitable survivor they could find, using the";
text[1]="Tasens' technology. You are that cyborg.";
outline=2;
pages=2;}
if (global.textid=="cut207_4"){
text[0]="IJI: No| y-you're just making this up! It's just a dream, isn't it!?";
outline=1;
pages=1;}
if (global.textid=="cut207_5"){
text[0]="DAN: Iji, calm down!";
outline=2;
pages=1;}
if (global.textid=="cut207_6"){
text[0]="IJI: NO! I|";
outline=1;
pages=1;}

if (global.textid=="cut208_1"){
text[0]="DAN: IJI!";
outline=2;
pages=1;}

if (global.textid=="cut209_1"){
text[0]="DAN: We've been over this a hundred times now. Our family's gone. You have to trust me and head out there - your only other option is to stay locked in that room and die.";
outline=2;
pages=1;}
if (global.textid=="cut209_2"){
text[0]="IJI: I know.";
outline=1;
pages=1;}
if (global.textid=="cut209_3"){
text[0]="DAN: Your goal is to talk to one of the Tasen leaders, and convince them to take their spaceship and leave.";
outline=2;
pages=1;}
if (global.textid=="cut209_4"){
text[0]="IJI: But why hasn't anyone done something about them? Hasn't the rest of the world noticed what's going on here?";
outline=1;
pages=1;}
if (global.textid=="cut209_5"){
text[0]="DAN: We'll have to take this one step at a time. You really have to get going soon, or the Tasen will find you.";
outline=2;
pages=1;}
if (global.textid=="cut209_6"){
text[0]="IJI: Okay.";
outline=1;
pages=1;}

if (global.textid=="cut210_1"){
text[0]="DAN: Right, time to move. Beside you lies a very special Tasen Nanogun - learn to use it, and guard it with your life. From now on, you have to do exactly as I say. Okay?";
outline=2;
pages=1;}
if (global.textid=="cut210_2"){
text[0]="IJI: Alright. I guess I'll try.";
outline=1;
pages=1;}
if (global.textid=="cut210_3"){
text[0]="DAN: I'll direct you to a Tasen Elite called Krotera, so we can have a talk with him. Remember his name. You have the ability to understand their language, and your personal Nanofield alters what you say, so they can understand you too. Stay on your";
text[1]="guard - everyone in this complex is under orders to kill on sight. Don't bother trying to communicate with anyone but Krotera. I'm sorry we have to do this, but| good luck.";
outline=2;
pages=2;}

}


//CUTSCENE 3: DESTRUCTION

if (global.textid=="cut301_1"){
text[0]="IJI: Huh? There's a balcony up there.";
outline=1;
pages=1;}
if (global.textid=="cut301_2"){
text[0]="DAN: Iji, don't go out there.";
outline=2;
pages=1;}
if (global.textid=="cut301_3"){
text[0]="IJI: What? Why not?";
outline=1;
pages=1;}
if (global.textid=="cut301_4"){
text[0]="DAN: Because. I don't want you to see what it looks like. You're not ready yet.";
outline=2;
pages=1;}

if (global.textid=="cut302_1"){
text[0]="IJI: What do you mean, not ready? I just want to take a look around!";
outline=1;
pages=1;}
if (global.textid=="cut302_2"){
text[0]="DAN: But - you won't like it, trust me. It's for your own good.";
outline=2;
pages=1;}
if (global.textid=="cut302_3"){
text[0]="IJI: Geez, stop hiding everything from me! I'd like to know what's going on around here too! Maybe I'd just like to get some fresh air for once, see what the Tasen spaceship looks like!";
outline=1;
pages=1;}

if (global.textid=="cut303_1"){
text[0]="DAN: But - just be careful up there, okay?";
outline=2;
pages=1;}
if (global.textid=="cut303_2"){
text[0]="IJI: Hmph.";
outline=1;
pages=1;}

if (global.textid=="cut304_1"){
text[0]="IJI: No|";
outline=1;
pages=1;}
if (global.textid=="cut304_2"){
text[0]="IJI: They're| he, he said there was only one|";
outline=1;
pages=1;}

if (global.textid=="cut306_1"){
text[0]="DAN: Iji|";
outline=2;
pages=1;}
if (global.textid=="cut306_2"){
text[0]="IJI: Leave me alone! You, you LIAR!";
outline=1;
pages=1;}
if (global.textid=="cut306_3"){
text[0]="DAN: Listen, I tried to warn you. I lied because there was no way you'd agree to do this otherwise, but now you know. The Tasen command an entire armada, and they Alpha Struck the whole planet. The Strike was a weak one to avoid destroying the surface";
text[1]="completely, but the human survivors are few. This complex is the center of the Tasen colony, which is why they left it intact. We can only assume they will eventually spread to the rest of the planet. I know it's not much of a world to save, but|";
outline=2;
pages=2;}
if (global.textid=="cut306_4"){
text[0]="IJI: It's just a dream| isn't it?";
outline=1;
pages=1;}
if (global.textid=="cut306_5"){
text[0]="DAN: Stay calm. You have to trust me, and you have to believe that we can convince Krotera to make them leave.";
outline=2;
pages=1;}
if (global.textid=="cut306_6"){
text[0]="IJI: But| I'm not some kind of| I was just -";
outline=1;
pages=1;}
if (global.textid=="cut306_7"){
text[0]="DAN: Damn it, I knew this'd happen! Everything - all of this will be for nothing unless you make it to Krotera!";
outline=2;
pages=1;}

if (global.textid=="cut307_1"){
text[0]="DAN: We'll make it. Okay?";
outline=2;
pages=1;}
if (global.textid=="cut307_2"){
text[0]="IJI: Okay.";
outline=1;
pages=1;}
if (global.textid=="cut307_3"){
text[0]="DAN: Good. I should've told you earlier to leave your feelings behind. I forgot that you haven't been around for the last six months.";
outline=2;
pages=1;}
if (global.textid=="cut307_4"){
text[0]="IJI: |Right.";
outline=1;
pages=1;}

if (global.textid=="cut308_1"){
text[0]="DAN: I'm sorry. I don't want to be me, either.";
outline=2;
pages=1;}



//CUTSCENE 4: CONTACT

if (global.textid=="cut401_1"){
if (global.specialtriggerc)
    text[0]="TOR: Inform the troops. We're readying the fleet.";
else
    text[0]="IOSA: Now the burden is not on your shoulders.";
outline=4;
pages=1;}

if (global.textid=="cut402_1"){
text[0]="TOR: The Tasen are on Origin. Their fake report wouldn't fool our troops.";
outline=4;
pages=1;
obj_cutsabot.timeline_position+=50;}
if (global.textid=="cut402_2"){
text[0]="IOSA: You insist, General? You're not making it public?";
outline=4;
pages=1;}
if (global.textid=="cut402_3"){
text[0]="TOR: No. This is as far as I'll take the campaign.";
outline=4;
pages=1;}
if (global.textid=="cut402_4"){
text[0]="IOSA: Hmm. So you'd rather see few survive than making billions happy? How will you explain this to High Command if it was uncovered?";
outline=4;
pages=1;}



//CUTSCENE 5: MEETING

if (global.textid=="cut501_1"){
if (global.kills+global.totkills<=6*global.neutralkc)
    text[0]="???: Iji!";
else
    text[0]="???: WAIT! Don't shoot!";
outline=2;
pages=1;}

if (global.textid=="cut502_1"){
text[0]="DAN: It's me| Dan.";
outline=2;
pages=1;}

if (global.textid=="cut503_1"){
text[0]="IJI: D - DAN! I thought, I mean, how did you!?";
outline=1;
pages=1;}
if (global.textid=="cut503_2"){
text[0]="DAN: Haha, it's a long story| I figured you'd look for me in this control room, so I did my best to get here as well. Ah, sorry, my leg hurts like hell|";
outline=2;
pages=1;}

if (global.textid=="cut504_1"){
text[0]="IJI: What happened!? Are you okay?";
outline=1;
pages=1;}
if (global.textid=="cut504_2"){
text[0]="DAN: Yeah, it's not too serious. I took a shot as I ran here, so I tried to stop the bleeding with my shirt. Hah| it looked so easy, watching you fight the Tasen. I guess I got a bit overconfident.";
outline=2;
pages=1;}
if (global.textid=="cut504_3"){
text[0]="IJI: Dan, I'm so happy to see you. When the Komato arrived|";
outline=1;
pages=1;}
if (global.textid=="cut504_4"){
text[0]="DAN: I know. Sorry for worrying you. And I'm sorry for bossing you around, I didn't want to sound so| well|";
outline=2;
pages=1;}
if (global.textid=="cut504_5"){
text[0]="IJI: Eh, you don't have to apologize. You've had it tough here, too.";
outline=1;
pages=1;}

if (global.textid=="cut505_1"){
text[0]="DAN: Heh. I thought you'd hate me for it.";
outline=2;
pages=1;}
if (global.textid=="cut505_2"){
if (global.kills+global.totkills>6*global.berserkkc){
    text[0]="IJI: No, not at all! I was just new to this alien killing thing, back then. I'm used to it by now."
    text[1]="It's not that bad, really. I've just| started seeing things sometimes.";
    pages=2;
    }
else if (global.kills+global.totkills>6*global.neutralkc){
    text[0]="IJI: No, not at all! I was just new to this alien shooting thing, back then. I mean, it's not that I like it, but I've sort of gotten used to it by now.";
    pages=1;
    }
else{
    text[0]="IJI: No, not at all! I was just| new to this alien invasion thing, back then. I'm still trying to shoot as few of them as possible though.";
    pages=1;
    }
outline=1;}
if (global.textid=="cut505_3"){
if (global.kills+global.totkills>6*global.berserkkc)
    text[0]="DAN: Seeing things? What do you mean?";
else if (global.kills+global.totkills>6*global.neutralkc)
    text[0]="DAN: I know. You've gotten more confident, I can tell that much. I just wanted to be more like you, I guess.";
else
    text[0]="DAN: I know. Just remember that your safety comes first. You can still kill them if you need to - I wouldn't think less of you for it. You're the only one who can do something about this mess.";
outline=2;
pages=1;}
//berserk
if (global.textid=="cut505_4"){
text[0]="IJI: It's nothing! It's just| things that aren't there sometimes.";
text[1]="But I'm fine. I promise.";
outline=1;
pages=2;}
if (global.textid=="cut505_5"){
text[0]="DAN: Hmm. I know it's tough, but your safety comes first. You're the only one who can do something about this mess. I'm just glad you don't hesitate anymore.";
outline=2;
pages=1;}


if (global.textid=="cut506_1"){
if (global.kills+global.totkills>6*global.berserkkc)
    text[0]="DAN: So you'd better get moving.";
else if (global.kills+global.totkills>6*global.neutralkc)
    text[0]="DAN: So| you'd better get moving.";
else
    text[0]="DAN: So you'd better get moving.";
outline=2;
pages=1;}
if (global.textid=="cut506_2"){
text[0]="IJI: What? Is there anything else we can do?";
outline=1;
pages=1;}
if (global.textid=="cut506_3"){
if (global.specialtriggerc){
text[0]="DAN: Well, I don't know how much you've been reading their logbooks, but I've been tapping into the Komato broadcasts. It looks like you were right about them| they're planning to Alpha Strike the planet, and unlike the Tasen, they're going to do it";
text[1]="at full force. They say it's the only way to ensure the Tasens' extinction. The only thing stopping them is the Tasen planetary shield generators, but only one is still standing. That last generator is buried underneath this complex.";
}
else{
text[0]="DAN: Well, I don't know how much you've been reading their logbooks, but I've been tapping into the Komato broadcasts. It looks like bringing them here wasn't exactly a good idea. They're planning to Alpha Strike the planet, and unlike the Tasen,";
text[1]="they're going to do it at full force. They say it's the only way to ensure the Tasens' extinction. The only thing stopping them is the Tasen planetary shield generators, but only one is still standing. That last generator is buried underneath this complex.";
}
outline=2;
pages=2;}
if (global.textid=="cut506_4"){
text[0]="IJI: What!? We gotta stop them!";
outline=1;
pages=1;}

if (global.textid=="cut507_1"){
text[0]="DAN: Of course, I was just getting to that. I've gathered that a Komato General is on his way down here, to a place called Sector X. He's in charge of the Komato fleet, and hopefully more reasonable than Krotera, plus his rank is way higher.";
outline=2;
pages=1;}
if (global.textid=="cut507_2"){
if (global.kills+global.totkills>6*global.berserkkc)
    text[0]="IJI: A Komato General? So if I kill him, that'll get them to leave?";
else
    text[0]="IJI: A Komato General? But we don't know if he's willing to listen to us either|";
outline=1;
pages=1;}
if (global.textid=="cut507_3"){
if (global.kills+global.totkills>6*global.berserkkc){
    text[0]="DAN: Hey, slow down - you need to convince him to withdraw the fleet, and trying to fight him won't make that any easier. Anyway, there's something more important to do first. The Komato have sent down a ship armed with a Phantom Hammer, a weapon";
    text[1]="that can shoot through several kilometers of solid rock. They're going to aim it into this building and hit the Tasens' planetary shield generator below. You have to delay them by boarding the ship and destroying the Phantom Hammer before they can fire it.";
    }
else{
    text[0]="DAN: I know it's a stretch, but it's the best we can do, as always| but there's something more important to do first. The Komato have sent down a ship armed with a Phantom Hammer, a weapon that can shoot through several kilometers of solid rock.";
    text[1]="They're going to aim it into this building and hit the Tasens' planetary shield generator below. You have to delay them by boarding the ship and destroying the Phantom Hammer before they can fire it.";
    }
outline=2;
pages=2;}
if (global.textid=="cut507_4"){
text[0]="IJI: Hang on, how am I going to board a spaceship?";
outline=1;
pages=1;}
if (global.textid=="cut507_5"){
text[0]="DAN: Easy - they've docked it in the sky above and connected it to an old armory down here with a lift, so you'll just have to get in, and get out before they take off.";
outline=2;
pages=1;}
if (global.textid=="cut507_6"){
text[0]="IJI: Okay. And after taking out their weapon, I head for the General who's somewhere in Sector X?";
outline=1;
pages=1;}
if (global.textid=="cut507_7"){
text[0]="DAN: Exactly. It's going to be tough, but -";
outline=2;
pages=1;}
if (global.textid=="cut507_8"){
text[0]="IJI: I know. I'll make sure they pay for this, and what they've done to us| and even the Tasen.";
outline=1;
pages=1;}
if (global.textid=="cut507_9"){
text[0]="DAN: So, you know that this is the last Tasen colony, and they've been hunted by the Komato?";
outline=2;
pages=1;}
if (global.textid=="cut507_10"){
text[0]="IJI: Hm. Maybe the Tasen ain't the bad guys here, but I'll never forgive what they did to us. It's just relative.";
outline=1;
pages=1;}
if (global.textid=="cut507_11"){
text[0]="DAN: Yeah. They even know this was the Komatos' home planet, long before we humans appeared| but now the Komato are about to destroy us all unless we do something.";
outline=2;
pages=1;}

if (global.textid=="cut508_1"){
text[0]="IJI: |";
outline=1;
pages=1;}
if (global.textid=="cut508_2"){
text[0]="DAN: What is it? Was it something I said?";
outline=2;
pages=1;}
if (global.textid=="cut508_3"){
text[0]="IJI: I read a logbook on my way here. A logbook about you.";
outline=1;
pages=1;}
if (global.textid=="cut508_4"){
text[0]="DAN: Huh? What did it say?";
outline=2;
pages=1;}
if (global.textid=="cut508_5"){
text[0]="IJI: It said you were working for the Komato - that you've been deceiving me, and that you'd lead me into a trap.";
outline=1;
pages=1;}
if (global.textid=="cut508_6"){
text[0]="DAN: What? Why would I do that? That's ridiculous!";
outline=2;
pages=1;}
if (global.textid=="cut508_7"){
text[0]="IJI: I know. I just wanted to hear what you had to say first.";
outline=1;
pages=1;}
if (global.textid=="cut508_8"){
text[0]="DAN: Hmm. I don't know how to prove that I'm not. I guess getting the Komato here was my idea, but -";
outline=2;
pages=1;}
if (global.textid=="cut508_9"){
text[0]="IJI: STOP IT. You don't have to say any more. I trust you. I always have, okay? Someone must have figured out we're working together, and is trying to separate us. If you were with the Komato, I'd have found out sooner. The only log I've seen was";
text[1]="written by an Assassin - probably the same one I fought in Sector 5. No-one else seems to be aware you even exist| and that guy is the last one I'd trust.";
outline=1;
pages=2;}
if (global.textid=="cut508_10"){
text[0]="DAN: Thanks| I dunno what to say.";
outline=2;
pages=1;}
if (global.textid=="cut508_11"){
text[0]="IJI: It's okay. You've saved my life and gotten me this far, and we're gonna get farther.";
outline=1;
pages=1;}
if (global.textid=="cut508_12"){
if (global.kills+global.totkills>6*global.neutralkc)
    text[0]="DAN: Yeah. We'll send them back where they came from!";
else
    text[0]="DAN: Yeah. We'll send them back where they came from, and we'll keep doing it your way| sabotaging their weapons and talking sense into their leader.";
outline=2;
pages=1;}

if (global.textid=="cut509_1"){
text[0]="IJI: Then I'd better get going, right? You can't sit there all day, either.";
outline=1;
pages=1;}
if (global.textid=="cut509_2"){
text[0]="DAN: You're right, I'll see if I can get this control room working. I won't last for long if they find me again.";
outline=2;
pages=1;}
if (global.textid=="cut509_3"){
text[0]="IJI: Don't worry! I wont let anyone near you.";
outline=1;
pages=1;}
if (global.textid=="cut509_4"){
text[0]="DAN: |Thanks.";
outline=2;
pages=1;}

if (global.textid=="cut510_1"){
text[0]="IJI: Stay safe.";
outline=1;
pages=1;}


//CUTSCENE 6: GOODNIGHT

if (global.textid=="cut601_1"){
text[0]="IJI: DAN!";
outline=1;
pages=1;}
if (global.textid=="cut601_2"){
text[0]="DAN: Uh| hhh|";
text[1]="Ij|";
outline=2;
pages=2;}
if (global.textid=="cut601_3"){
text[0]="IJI: H-Hang in there! Please!";
outline=1;
pages=1;}
if (global.textid=="cut601_4"){
text[0]="DAN: h| he| found me|";
outline=2;
pages=1;}
if (global.textid=="cut601_5"){
text[0]="IJI: Don't try to talk! I, I'll take you somewhere safe! Just -";
outline=1;
pages=1;}
if (global.textid=="cut601_6"){
text[0]="DAN: hhh| hhhhh|";
outline=2;
pages=1;}
if (global.textid=="cut601_7"){
text[0]="IJI: What?";
outline=1;
pages=1;}
if (global.textid=="cut601_8"){
text[0]="DAN: h| help| me|";
text[1]="|";
outline=2;
pages=2;}
if (global.textid=="cut601_9"){
text[0]="IJI: Dan?";
outline=1;
pages=1;}

if (global.textid=="cut602_1"){
text[0]="IJI: Dan?";
outline=1;
pages=1;}

if (global.textid=="cut603_1"){
text[0]="IJI: |";
text[1]="n| no|";
text[2]="hhh| uhhh| uuhhHHH!";
outline=1;
pages=3;}

if (global.textid=="cut604_1"){
text[0]="IJI: AAAAAAAAHH!!!";
outline=1;
pages=1;}

if (global.textid=="cut605_1"){
text[0]="IJI: Heh. You, you can't scare me like that. For a moment, I thought they had you.";
text[1]="No, no, I'm fine. I won't mention it again. Sorry.";
text[2]="So, Sector X, right? That's where the General is. Won't be easy getting there, but - you know. You've made me stronger than they'd ever suspect.";
outline=1;
pages=3;}

if (global.textid=="cut606_1"){
if (global.kills+global.totkills<=6*global.neutralkc)
    text[0]="IJI: Okay, no time to lose. Stay close, I'm gonna find us a way to Sector X. I'll be fine. I'm the one the world is counting on|";
else
    text[0]="IJI: Okay, no time to lose. Stay close, I'm gonna blast us a way to Sector X. I'll be fine. I'm the one the world is counting on|";
text[1]="I can't be weak now.";
outline=1;
pages=2;}


//CUTSCENE 7: GUARDIAN

if (global.textid=="cut701_1"){
text[0]="IJI: DAN! Are you okay?";
outline=1;
pages=1;}
if (global.textid=="cut701_2"){
text[0]="DAN: Ugh| he, *cough* he found me.";
outline=2;
pages=1;}
if (global.textid=="cut701_3"){
text[0]="IJI: Don't worry, I'm here! You're safe now.";
outline=1;
pages=1;}

if (global.textid=="cut702_1"){
text[0]="DAN: Damn| hhh, that was too close. Th-Thanks|";
outline=2;
pages=1;}
if (global.textid=="cut702_2"){
text[0]="IJI: Don't worry| I won't lose you that easily.";
outline=1;
pages=1;}
if (global.textid=="cut702_3"){
text[0]="DAN: Heh|";
outline=2;
pages=1;}
if (global.textid=="cut702_4"){
text[0]="IJI: Look, you gotta get somewhere safe. Are there any more control rooms around here?";
outline=1;
pages=1;}
if (global.textid=="cut702_5"){
text[0]="DAN: Uh, yeah| yeah, there's one just nearby, but -";
outline=2;
pages=1;}
if (global.textid=="cut702_6"){
text[0]="IJI: I know, that Assassin could come after you again| but I've got a feeling he won't.";
outline=1;
pages=1;}
if (global.textid=="cut702_7"){
text[0]="DAN: Hah| sure, I bet it's too much trouble taking YOU on again| we'd better get moving then.";
outline=2;
pages=1;}
if (global.textid=="cut702_8"){
text[0]="IJI: Yeah.";
outline=1;
pages=1;}

if (global.textid=="cut703_1"){
text[0]="DAN: I'm just so glad I'm alive.";
outline=2;
pages=1;}
if (global.textid=="cut703_2"){
text[0]="IJI: Me too. Stay safe this time. Promise?";
outline=1;
pages=1;}
if (global.textid=="cut703_3"){
text[0]="DAN: Promise.";
outline=2;
pages=1;}



//CUTSCENE 8: MERCY

if (global.textid=="cut801_1"){
if (global.totkills>10*global.berserkkc)
    text[0]="IJI: So| hhh| you surrender?";
else
    text[0]="IJI: Mercy? Hhh| you, you surrender?";
outline=1;
pages=1;}
if (global.textid=="cut801_2"){
text[0]="TOR: Cough! I won't die| by the hands of a Human!";
outline=4;
pages=1;}
if (global.textid=="cut801_3"){
if (global.specialtriggerb2)
    text[0]="IJI: Huh! You should've thought of that before you tried to fight me! Don't think I'm weak just because I'm human - now will you listen to me!?";
else if (global.totkills>10*global.berserkkc)
    text[0]="IJI: Huh! You should've thought of that before you tried to fight me! I could beat Iosa, and I can beat you too! NOW will you listen to me, Komato scum!?";
else if (global.totkills>10*global.neutralkc)
    text[0]="IJI: Huh! You should've thought of that before you tried to fight me! I could beat Iosa, and I can beat you too! NOW will you listen to me!?";
else
    text[0]="IJI: Huh! You should've thought of that before you tried to fight me! Don't think I'm weak just because I'm human - now will you listen to me!?";
outline=1;
pages=1;}
if (global.textid=="cut801_4"){
if (global.specialtriggerb2)
    text[0]="TOR: You| it's true, you're not much of a warrior| but your will is so strong, it doesn't seem to matter. Then again, to kill my honored Iosa|";
else if (global.totkills>10*global.berserkkc)
    text[0]="TOR: You| you think violence will solve everything? You think finding the one `responsible` and killing him would -";
else if (global.totkills>10*global.neutralkc)
    text[0]="TOR: You| you really think defeating me is all it takes? You think finding the one `responsible` and stopping him would -";
else
    text[0]="TOR: You| it's true, you're not much of a warrior| but your will is so strong, it doesn't seem to matter. Then again, to kill my honored Iosa|";
outline=4;
pages=1;}
if (global.textid=="cut801_5"){
if (global.specialtriggerb2)
    text[0]="IJI: I told you it wasn't me! Whatever, look, the Tasen are dead! All you gotta do is to show the report on their extinction to your army, and they'll believe you - right?";
else if (global.totkills>10*global.berserkkc)
    text[0]="IJI: SHUT UP! Look, the Tasen are dead, so there's no reason to Alpha Strike us! All you gotta do is to show the report on their extinction to your army, and they'll believe you - right?";
else if (global.totkills>10*global.neutralkc)
    text[0]="IJI: Shut up! You, you haven't listened to a word I've said at all, I just came here to stop the Alpha strike! Look, the Tasen are dead! All you gotta do is to show the report on their extinction to your army, and they'll believe you - right?";
else
    text[0]="IJI: D-Don't try to change the subject! I just came here to stop the Alpha Strike, and she stood in the way! Look, the Tasen are dead! All you gotta do is to show the report on their extinction to your army, and they'll believe you - right?";
outline=1;
pages=1;}

if (global.textid=="cut802_1"){
if (global.specialtrigger2)
    text[0]="TOR: Hm. It's not that simple. The report is already official, but there's still a chance of survivors.";
else
    text[0]="TOR: Hm. It's not that simple. The report is already official, but there's still a chance of survivors. The public won't -";
outline=4;
pages=1;}
if (global.textid=="cut802_2"){
if (global.specialtrigger2)
    text[0]="IJI: N-No there isn't! Anyone can understand that the Tasen never had a chance against the kind of force you brought down here!";
else if (global.totkills>10*global.berserkkc)
    text[0]="IJI: SCREW THEM! Anyone can understand that the Tasen never had a chance against the kind of force you brought down here!";
else if (global.totkills>10*global.neutralkc)
    text[0]="IJI: Forget them! Anyone can understand that the Tasen never had a chance against the kind of force you brought down here!";
else
    text[0]="IJI: Ugh! Stop talking about the `public` already, anyone can understand that the Tasen never had a chance against the kind of force you brought down here!";
outline=1;
pages=1;}
if (global.textid=="cut802_3"){
text[0]="TOR: |";
outline=4;
pages=1;}
if (global.textid=="cut802_4"){
text[0]="IJI: Don't YOU think it's meaningless to Alpha Strike this place?";
outline=1;
pages=1;}
if (global.textid=="cut802_5"){
text[0]="TOR: If we don't| what would the people think? They and the Tasen are the reason for the war in the first place.";
outline=4;
pages=1;}
if (global.textid=="cut802_6"){
text[0]="IJI: I| I'll tell you what the humans would think. We'd be grateful.";
outline=1;
pages=1;}

if (global.textid=="cut803_1"){
text[0]="TOR: Human| you are special. Your Nanotechnology must've been given to you by the Tasen, and we've no reason to believe the rest of your kind don't have the same potential.";
outline=4;
pages=1;}
if (global.textid=="cut803_2"){
if (global.totkills>10*global.neutralkc)
    text[0]="IJI: That's ridiculous! Some people did this to me by stealing the Tasens' stuff, they had nothing to do with it! And why the hell would they help us after Alpha Striking us?";
else
    text[0]="IJI: No, the Tasen didn't - some people did this to me by stealing the Tasens' stuff, they had nothing to do with it! And why would they help us after Alpha Striking us anyway?";
outline=1;
pages=1;}
if (global.textid=="cut803_3"){
text[0]="TOR: Hm, it was just a theory I'd heard. I don't personally believe it, but High Command likely would - any reason to Strike this planet is good enough. They're that afraid of the Imperial Army. If I defy them now, I can't tell what will happen to";
text[1]="Origin. The fleet that was sent here is but a fraction of the Army - I may be in charge of this particular attack force, but I'm only one of many Generals in the big picture.";
outline=4;
pages=2;}
if (global.textid=="cut803_4"){
text[0]="IJI: But then, at least you're the leader of THIS fleet! If they won't listen to you - I mean, how can you be their leader if they DON'T listen to you?";
outline=1;
pages=1;}

if (global.textid=="cut804_1"){
text[0]="TOR: Hmph.";
outline=4;
pages=1;}
if (global.textid=="cut804_2"){
text[0]="KIRON: General Tor. Respond, General Tor.";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut804_3"){
text[0]="TOR: Hm, Kiron? What is it?";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1)
        style=4;
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut804_4"){
text[0]="KIRON: The Strike is almost ready. Why haven't you returned yet?";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut804_5"){
text[0]="TOR: I've| been caught up in some personal business on ground level. What's the Strike time?";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1)
        style=4;
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut804_6"){
text[0]="KIRON: Half a cycle. You'd better get up here quick.";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut804_7"){
text[0]="TOR: |";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut804_8"){
text[0]="KIRON: Hold on. It's now a quarter cycle, so abort whatever you're doing and head up here right now.";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1)
        style=0;
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut804_9"){
text[0]="TOR: Kiron, wait. I have a message for the fleet.";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1)
        style=4;
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut804_10"){
text[0]="KIRON: What is it?";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}

if (global.textid=="cut805_1"){
text[0]="TOR: We're heading home. The Komatos' business with Origin is done.";
outline=4;
pages=1;}
if (global.textid=="cut805_2"){
text[0]="KIRON: Come again, General?";
outline=4;
pages=1;}
if (global.textid=="cut805_3"){
text[0]="TOR: You heard me, loud and clear. Abort the Alpha Strike!";
outline=4;
pages=1;
with (obj_cutsabot)
    scr_music("mus_calm");
}
if (global.textid=="cut805_4"){
if (global.totkills<=10*global.neutralkc)
    text[0]="KIRON: General! Are you out of your mind? What about the Tasen? What about the Anomaly? Her Nanogun -";
else
    text[0]="KIRON: General! Are you out of your mind? What about the Tasen? What about the Anomaly? We spent so many troops -";
outline=4;
pages=1;}
if (global.textid=="cut805_5"){
text[0]="TOR: Don't make me repeat myself, Kiron! The Tasen are gone, and the Komato will never again touch this planet - we don't need another civilization on our conscience. We're returning home, and the mission will be reported as a success, because that's what";
text[1]="it is. Is that perfectly clear?";
outline=4;
pages=2;}
if (global.textid=="cut805_6"){
text[0]="KIRON: Yes, General! Understood. There's always been reason behind your decisions, and I'm sure you're right this time, too.";
outline=4;
pages=1;}
if (global.textid=="cut805_7"){
text[0]="TOR: Good. As for the Anomaly, consider her dead. And Kiron, I may not return.";
outline=4;
pages=1;}
if (global.textid=="cut805_8"){
text[0]="KIRON: What do you mean, General?";
outline=4;
pages=1;}
if (global.textid=="cut805_9"){
text[0]="TOR: I have| made a personal decision. I entrust the fleet to you, and that you will report a full success.";
outline=4;
pages=1;}
if (global.textid=="cut805_10"){
text[0]="KIRON: I see. I had a feeling it'd come to this. I'll make sure to follow your orders down to the last word, General. It's been an honor knowing you.";
outline=4;
pages=1;}
if (global.textid=="cut805_11"){
text[0]="TOR: Thank you. Take care. End of transmission.";
outline=4;
pages=1;}

if (global.textid=="cut806_1"){
if (global.totkills>10*global.neutralkc){
    text[0]="TOR: Human, don't thank me yet. You must've seen the acid rain outside, the landscape blasted asunder. This is an Alpha Struck planet, and rebuilding it may be impossible. I spared you for two reasons| if Origin survives, consider it a gift for being the";
    text[1]="first to ever stand up to the Army. But if the planet dies, let it be a testament to your foolishness| that some things are not meant to be overcome.";
    }
else{
    text[0]="TOR: Human, don't thank me yet. You must've seen the acid rain outside, the landscape blasted asunder. This is an Alpha Struck planet, and rebuilding it may be impossible. I spared you for two reasons| if Origin survives, consider it a gift for being the";
    text[1]="first to ever stand up to the Army. Secondly, your mindset - that na&ve pacifism that should have gotten you killed by now - somehow, I admire it. Yet if the planet dies, it will be for nothing, and that's what's likely to happen.";
    }
outline=4;
pages=2;}
if (global.textid=="cut806_2"){
if (global.totkills>10*global.neutralkc)
    text[0]="IJI: You, you think we'll all die? You spared us just to make an example?";
else
    text[0]="IJI: You, you think we'll all die? You spared us, even though that's what you think will happen?";
outline=1;
pages=1;}
if (global.textid=="cut806_3"){
text[0]="TOR: No - to give you a chance. But that one chance is all you get. Remember that. Now tell me, how many of your kind survived here? How much of the natural life remains?";
outline=4;
pages=1;}
if (global.textid=="cut806_4"){
text[0]="IJI: Ah| not a whole lot, I think.";
outline=1;
pages=1;}
if (global.textid=="cut806_5"){
text[0]="TOR: Then, I assume that you don't have a home to return to?";
outline=4;
pages=1;}
if (global.textid=="cut806_6"){
text[0]="IJI: No|";
outline=1;
pages=1;}
if (global.textid=="cut806_7"){
if (global.specialtrigger1==1)
    text[0]="TOR: I see.";
else
    text[0]="TOR: I see. Human, I'm sorry about what happened to your friend.";
outline=4;
pages=1;}
if (global.textid=="cut806_8"){
text[0]="IJI: What?";
outline=1;
pages=1;}
if (global.textid=="cut806_9"){
text[0]="TOR: One of my Assassins, Asha, reported that he killed him during an attempt to capture you.";
outline=4;
pages=1;}
if (global.textid=="cut806_10"){
text[0]="IJI: Wh-What are you talking about? Dan is|";
outline=1;
pages=1;}
if (global.textid=="cut806_11"){
text[0]="TOR: |";
outline=4;
pages=1;}
if (global.textid=="cut806_12"){
text[0]="IJI: He's| dead?";
outline=1;
pages=1;}
if (global.textid=="cut806_13"){
text[0]="TOR: Hm. I was the same way once. Never mind what I said. It was a lie. Your friend is just fine.";
outline=4;
pages=1;}
if (global.textid=="cut806_14"){
if (global.totkills>10*global.neutralkc)
    text[0]="IJI: But|";
else
    text[0]="IJI: |";
outline=1;
pages=1;}

if (global.textid=="cut807_1"){
if (global.totkills>10*global.berserkkc){
    text[0]="TOR: As you have probably guessed, I'm tired of this. I'm tired of living with the knowledge of having killed more people than I can count, and I take full responsibility for what's happened to Origin. Iosa is dead| and the Tasen are gone. I don't believe";
    text[1]="in your future, so I don't want to live to see Origin die. But should there be more to your species than mere violence| only time will tell.";
    }
else{
    text[0]="TOR: You are a rare individual. Like Iosa, I can feel your inner workings just listening to your words, and I can't stand it. As you have probably guessed, I'm tired of this. I'm tired of living with the knowledge of having killed more people than I can";
    text[1]="count, and I take full responsibility for what's happened to Origin. Iosa is dead| and the Tasen are gone. I don't believe in your future, so I don't want to live to see Origin die. And if you can't return home| then neither shall I.";
    }
pages=2;
outline=4;
}

if (global.textid=="cut808_1"){
if (global.specialtrigger1==0 && global.kills+global.totkills>10*global.neutralkc)
    text[0]="IJI: Dan|";
else
    text[0]="IJI: General? Hello?";
outline=1;
pages=1;}


//CUTSCENE 9: SILENCE
//No dialogue


//CUTSCENE 10: VICTORY
//No dialogue


//CUTSCENE 11: HUMILIATED

if (global.textid=="cut1101_1"){
text[0]="BERSERKER: Annihilator Iosa! Are you alright?";
outline=4;
pages=1;}
if (global.textid=="cut1101_2"){
text[0]="IOSA: Gh| bring me my gun. I'm going to recharge my Nanofield.";
outline=4;
pages=1;}
if (global.textid=="cut1101_3"){
text[0]="BERSERKER: What? But Generation 2 Nanoweapons are illegal in engagements with -";
outline=4;
pages=1;}
if (global.textid=="cut1101_4"){
text[0]="IOSA: Bring me my gun. And not a word of this to General Tor. Understood?";
outline=4;
pages=1;}
if (global.textid=="cut1101_5"){
text[0]="BERSERKER: Yes, Annihilator!";
outline=4;
pages=1;}

if (global.textid=="cut1102_1"){
text[0]="IOSA: That human will PAY.";
outline=4;
pages=1;}


//CUTSCENE 12: EYE FOR AN EYE
if (global.textid=="cut1201_1"){
text[0]="TOR: Annihilator Iosa! I ordered you to -";
outline=4;
pages=1;}
if (global.textid=="cut1201_2"){
text[0]="IOSA: Careful, General. Live broadcast, remember? Now, let's return to orbit. You have an Alpha Strike to approve.";
outline=4;
pages=1;}
if (global.textid=="cut1201_3"){
text[0]="TOR: Hrrm!";
outline=4;
pages=1;}

if (global.textid=="cut1202_1"){
text[0]="IOSA: Or do you intend to say that the Anomaly's actions moved you? Perhaps that you planned to call off the Strike from the very beginning?";
outline=4;
pages=1;}
if (global.textid=="cut1202_2"){
text[0]="TOR: Don't put those words into my mouth! Besides, the order to fire is given by both me and General Kiron!";
outline=4;
pages=1;}
if (global.textid=="cut1202_3"){
text[0]="IOSA: Unless one of you is either dead or deemed unfit. Of course.$";
outline=4;
pages=1;}
if (global.textid=="cut1202_4"){
text[0]="TOR: Is that a threat? You can't be serious!";
outline=4;
pages=1;}
if (global.textid=="cut1202_5"){
text[0]="IOSA: The reports may say that the Tasen are extinct, but we both know that can't be true. The only reason you would hold back now is either to spare those low-life humans, breathing their last on a dying planet, or to willingly disobey High Command and let";
text[1]="the Tasen live. Do you know what that is called? Treason.";
outline=4;
pages=2;}
if (global.textid=="cut1202_6"){
text[0]="TOR: |";
outline=4;
pages=1;}
if (global.textid=="cut1202_7"){
text[0]="IOSA: Don't be a fool. Either stay here and die, or return to orbit with me and end the war you hate so much. The choice is yours.";
outline=4;
pages=1;}

if (global.textid=="cut1203_1"){
text[0]="KIRON: Your orders, General Tor?";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut1203_2"){
text[0]="TOR: Kiron! What Iosa said isn't true. I was prepared to Alpha Strike Origin as soon as we discovered the Tasens' presence!";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1)
        style=4;
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut1203_3"){
text[0]="KIRON: |Is that your honest reply?";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut1203_4"){
text[0]="TOR: What do you mean?";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1)
        style=4;
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut1203_5"){
text[0]="KIRON: There's no reason to play the fool anymore. I've already surpressed Iosa's broadcast and sent a notification to High Command of her refusal to follow orders - as well as threatening a General - with her own words as evidence. I hereby demote her";
text[1]="to Trooper rank, with further punishment pending her return to Tadezocora.";
outline=4;
pages=2;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}

if (global.textid=="cut1204_1"){
text[0]="IOSA: WHAT!? Are you insane!?";
outline=4;
pages=1;}
if (global.textid=="cut1204_2"){
text[0]="KIRON: Mind your words, former Annihilator! The only judgment I trust belongs to Tor. After all, we are the ones in control here. Not you.";
outline=4;
pages=1;}
if (global.textid=="cut1204_3"){
text[0]="IOSA: GHH! And you intend to spare this backwater planet as well? Why would our troops EVER agree to that, not to mention HIGH COMMAND!?";
outline=4;
pages=1;}
if (global.textid=="cut1204_4"){
text[0]="KIRON: Take a good look at yourself before asking that! The sole reason I am personally hesitating to Strike Origin is because of YOU constantly overstepping your boundaries! I see no future after a war that ended with the total annihilation of the";
text[1]="enemy. I see a world where people like you would continue to believe that's how peace is achieved! General Tor, the final decision rests with you. What are your thoughts?";
outline=4;
pages=2;}

if (global.textid=="cut1205_1"){
text[0]="TOR: It is as you say. Our mission is over. With the Tasen gone, the number of internal wars will soon increase. This is indeed the time for peace, and letting the humans live is the first step towards that. No matter whether our troops will accept this -";
text[1]="no matter whether another fleet will come back to wipe Origin clean in the future - at least I made my stand.";
outline=4;
pages=2;
with (obj_cutdoll){
    if (target==1)
        style=4;
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut1205_2"){
text[0]="KIRON: |I had a feeling you would go this far.";
text[1]="Fine - I'm calling off the Alpha Strike. Return to lower orbit as soon as possible| but we must both be prepared to face the consequences.";
outline=4;
pages=2;
with (obj_cutdoll){
    if (target==1){
        style=0;
        visible=0;
        }
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut1205_3"){
text[0]="TOR: Understood. End of transmission.";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==1)
        style=4;
    if (target==2){
        style=0;
        visible=0;
        }
    }
}

if (global.textid=="cut1206_1"){
text[0]="TOR: I see your thoughts. Kill me if you wish.";
outline=4;
pages=1;}

if (global.textid=="cut1207_1"){
text[0]="TOR: I have no regrets.";
outline=4;
pages=1;}



//CUTSCENE 13: REVOLUTION



//CUTSCENE 14: DESPERATION

if (global.textid=="cut1401_1"){
text[0]="IJI: Hhh| hhh| no mercy, not for the likes of you!";
outline=1;
pages=1;}
if (global.textid=="cut1401_2"){
text[0]="KIRON: Tor, it's Kiron! Respond, General Tor! Your readings are| no| NO!";
outline=4;
pages=1;
with (obj_cutsabot)
    scr_music("mus_dark");
with (obj_cutdoll){
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut1401_3"){
text[0]="IJI: Who's there? I killed your boss already, go home!";
outline=1;
pages=1;
with (obj_cutdoll){
    if (target==2){
        style=0;
        visible=0;
        }
    }
}
if (global.textid=="cut1401_4"){
text[0]="KIRON: What? Is that the Anomaly!? You -";
outline=4;
pages=1;
with (obj_cutdoll){
    if (target==2)
        style=4;
    }
}
if (global.textid=="cut1401_5"){
text[0]="KIRON: YOU! HUMAN TRASH! HOW COULD YOU HAVE DONE THIS!?";
outline=4;
pages=1;}

if (global.textid=="cut1402_1"){
text[0]="IJI: Wha -";
outline=1;
pages=1;}
if (global.textid=="cut1402_2"){
text[0]="KIRON: Tor, I knew it! He tried to test you, he TRIED to see if there was hope for you, but NO. Your species is pathetic! Not even on the brink of DEATH would you think twice about killing the one man who was willing to reason with you!";
text[1]="Iosa was right, you're nothing worth saving! YOU'VE NO RIGHT INFESTING ORIGIN!";
outline=4;
pages=2;}
if (global.textid=="cut1402_3"){
text[0]="IJI: N, no, no, NO! I -";
outline=1;
pages=1;}
if (global.textid=="cut1402_4"){
text[0]="KIRON: STRIKE COMMAND, YOU HEARD IT ALL!";
outline=4;
pages=1;}

if (global.textid=="cut1403_1"){
text[0]="KIRON: FIRE!!!";
outline=4;
pages=1;
with (obj_cutsabot)
    scr_stopmusic();
}


//CUTSCENE 15: PURGE
//No dialogue

#define scr_cutchatlength
//Cutscene lengths
if (global.textid=="cut201")
    global.chats=2;
else if (global.textid=="cut202")
    global.chats=6;
else if (global.textid=="cut203")
    global.chats=3;
else if (global.textid=="cut204")
    global.chats=3;
else if (global.textid=="cut205")
    global.chats=1;
else if (global.textid=="cut206")
    global.chats=3;
else if (global.textid=="cut207")
    global.chats=6;
else if (global.textid=="cut208")
    global.chats=1;
else if (global.textid=="cut209")
    global.chats=6;
else if (global.textid=="cut210")
    global.chats=3;

else if (global.textid=="cut301")
    global.chats=4;
else if (global.textid=="cut302")
    global.chats=3;
else if (global.textid=="cut303")
    global.chats=2;
else if (global.textid=="cut304")
    global.chats=2;
else if (global.textid=="cut305")
    global.chats=1;
else if (global.textid=="cut306")
    global.chats=7;
else if (global.textid=="cut307")
    global.chats=4;
else if (global.textid=="cut308")
    global.chats=1;

else if (global.textid=="cut401")
    global.chats=1;
else if (global.textid=="cut402")
    global.chats=4;

else if (global.textid=="cut501")
    global.chats=1;
else if (global.textid=="cut502")
    global.chats=1;
else if (global.textid=="cut503")
    global.chats=2;
else if (global.textid=="cut504")
    global.chats=5;
else if (global.textid=="cut505"){
    if (global.kills+global.totkills>6*global.berserkkc)
        global.chats=5;
    else
        global.chats=3;
    }
else if (global.textid=="cut506")
    global.chats=4;
else if (global.textid=="cut507")
    global.chats=11;
else if (global.textid=="cut508")
    global.chats=12;
else if (global.textid=="cut509")
    global.chats=4;
else if (global.textid=="cut510")
    global.chats=1;
    
else if (global.textid=="cut601")
    global.chats=9;
else if (global.textid=="cut602")
    global.chats=1;
else if (global.textid=="cut603")
    global.chats=1;
else if (global.textid=="cut604")
    global.chats=1;
else if (global.textid=="cut605")
    global.chats=1;
else if (global.textid=="cut606")
    global.chats=1;

else if (global.textid=="cut701")
    global.chats=3;
else if (global.textid=="cut702")
    global.chats=8;
else if (global.textid=="cut703")
    global.chats=3;

else if (global.textid=="cut801")
    global.chats=5;
else if (global.textid=="cut802")
    global.chats=6;
else if (global.textid=="cut803")
    global.chats=4;
else if (global.textid=="cut804")
    global.chats=10;
else if (global.textid=="cut805")
    global.chats=11;
else if (global.textid=="cut806"){
    if (global.specialtrigger1==1)
        global.chats=7;
    else
        global.chats=14;
    }
else if (global.textid=="cut807")
    global.chats=1;
else if (global.textid=="cut808")
    global.chats=1;

else if (global.textid=="cut1101")
    global.chats=5;
else if (global.textid=="cut1102")
    global.chats=1;

else if (global.textid=="cut1201")
    global.chats=3;
else if (global.textid=="cut1202")
    global.chats=7;
else if (global.textid=="cut1203")
    global.chats=5;
else if (global.textid=="cut1204")
    global.chats=4;
else if (global.textid=="cut1205")
    global.chats=3;
else if (global.textid=="cut1206")
    global.chats=1;
else if (global.textid=="cut1207")
    global.chats=1;

else if (global.textid=="cut1401")
    global.chats=5;
else if (global.textid=="cut1402")
    global.chats=4;
else if (global.textid=="cut1403")
    global.chats=1;

#define scr_vateilikashop
//Payment
if (global.xp<8)
    payment=0;
else
    payment=1;
//Refill health
if (global.hp<global.healthlevel*2){
    wanthp=1;
    if (payment)
        global.hp=global.healthlevel*2;
    }
else
    wanthp=0;
//Refill ammo
if (global.ammo2<global.assimilatebase+global.assimilatesize || global.ammo3<global.assimilatebase+global.assimilatesize || global.ammo4<global.assimilatebase+global.assimilatesize || global.ammo7<global.assimilatebase+global.assimilatesize || global.ammo8<global.assimilatebase+global.assimilatesize){
    wantammo=1;
    if (payment){
        if (global.ammo2<global.assimilatebase+global.assimilatesize) global.ammo2=global.assimilatebase+global.assimilatesize;
        if (global.ammo3<global.assimilatebase+global.assimilatesize) global.ammo3=global.assimilatebase+global.assimilatesize;
        if (global.ammo4<global.assimilatebase+global.assimilatesize) global.ammo4=global.assimilatebase+global.assimilatesize;
        if (global.ammo7<global.assimilatebase+global.assimilatesize) global.ammo7=global.assimilatebase+global.assimilatesize;
        if (global.ammo8<global.assimilatebase+global.assimilatesize) global.ammo8=global.assimilatebase+global.assimilatesize;
        }
    }
else
    wantammo=0;

//I want something
if (wanthp || wantammo){
    if (!payment){
        text[0]="VATEILIKA: Hey, you need at least 8 Nano to trade. Would be horrible if I asked for so much Nano that your Level decreased, now wouldn't it? I tried that once, guy broke my tibia bone. Never again, no thanks.";
        obj_sec7vateilika.nag=0;
        scr_sound("glo_crackfail");
        if (obj_sec7vateilika.x<obj_iji.x){
            obj_sec7vateilika.sprite_index=spr_tasensoldier_basic;
            obj_sec7vateilika.facing=1;
            }
        else{
            obj_sec7vateilika.sprite_index=spr_tasensoldier_basicleft;
            obj_sec7vateilika.facing=0;
            }
        exit;
        }
    else
        global.xp-=8;
    }

//Texts
if (wanthp && wantammo && payment){
    text[0]="VATEILIKA: Alright, I've filled up your Health and given you some ammo for all your weapons, except for the Pulse ammo. That'll be 8 Nano. Sounds fair to me!";
    scr_sound("glo_pickup2");
    with (obj_iji)
        scr_pickupflash(6,15,5);
    obj_sec7vateilika.nag=0;
    }
else if (wanthp && !wantammo && payment){
    text[0]="VATEILIKA: There, now you're at full Health for only 8 Nano. You already seem to have a ton of ammo though, so I'm keeping the rest to myself.";
    scr_sound("glo_pickup2");
    with (obj_iji)
        scr_pickupflash(6,15,5);
    obj_sec7vateilika.nag=0;
    }
else if (!wanthp && wantammo && payment){
    text[0]="VATEILIKA: You looked a bit dry, so I filled your weapons with up to "+string(global.assimilatebase+global.assimilatesize)+" ammo each, for the low, low cost of only 8 Nano. Sorry 'bout the lack of Pulse ammo though.";
    scr_sound("glo_pickup2");
    with (obj_iji)
        scr_pickupflash(6,15,5);
    obj_sec7vateilika.nag=0;
    }
else{
    scr_sound("glo_crackfail");
    if (obj_sec7vateilika.nag==0)
        text[0]="VATEILIKA: Come on, you're full of Health and have plenty of ammo. Don't poke me like that if you ain't gonna trade!";
    if (obj_sec7vateilika.nag==1)
        text[0]="VATEILIKA: Hey! I told you, I'm keeping the rest of this stuff for myself unless you're low on either Health or ammo.";
    if (obj_sec7vateilika.nag==2)
        text[0]="VATEILIKA: Do you mind? I'm not the type who likes to be touched, you got me?";
    if (obj_sec7vateilika.nag==3)
        text[0]="VATEILIKA: Seriously! Cut it out! Yukabacera used to do the same thing, you know why I broke up with him starturns ago?";
    if (obj_sec7vateilika.nag==4)
        text[0]="VATEILIKA: It's because he was annoying as Zentraidon and way too pushy! Didn't know when to quit! Thought it was funny to poke someone's shoulder until they exploded! THAT'S WHY!";
    if (obj_sec7vateilika.nag==5)
        text[0]="VATEILIKA: La la la| I'm ignoring you| hm hm hmmm|";
    if (obj_sec7vateilika.nag==6)
        text[0]="VATEILIKA: `With our war machines| gonna tear ya up| but they know it's wrong| so they turn on us| welcome to Ciretako, aw yeah|` mmm hmmm|";
    if (obj_sec7vateilika.nag==7)
        text[0]="VATEILIKA: Alright, I give up. `HERO CORE`. There, you happy now? Something Yuka was planning, thought you'd be interested.";
    if (obj_sec7vateilika.nag>=8){
        text[0]="VATEILIKA: By the way, if you ever play that game, I heard there are three difficulty levels. The first two have 190 rooms and 11 bosses, the third difficulty has 51 rooms and a secret boss|";
        obj_sec7vateilika.nag=-1;
        }
    obj_sec7vateilika.nag+=1;
    }

with (obj_sec7vateilika){
    if (nag<6 || nag>7){
        if (x<obj_iji.x){
            sprite_index=spr_tasensoldier_basic;
            facing=1;
            }
        else{
            sprite_index=spr_tasensoldier_basicleft;
            facing=0;
            }
        }
    else{
        if (x>obj_iji.x){
            sprite_index=spr_tasensoldier_basic;
            facing=1;
            }
        else{
            sprite_index=spr_tasensoldier_basicleft;
            facing=0;
            }
        }
    }
#define scr_bunkertalk
//1 116 vat
//2 118 com
//3 1000 eli
if (!stationary2){
if (x+type*3<obj_iji.x){
    if (type==1)
        sprite_index=spr_tasensoldier_basic;
    else if (type==2)
        sprite_index=spr_tasencommander_basic;
    else if (type==3)
        sprite_index=spr_tasenelite_basic;
    facing=1;
    }
else{
    if (type==1)
    sprite_index=spr_tasensoldier_basicleft;
    else if (type==2)
        sprite_index=spr_tasencommander_basicleft;
    else if (type==3)
        sprite_index=spr_tasenelite_basicleft;
    facing=0;
    }
}

//Texts
if (tag==1)
    chattemp.textid="chat9e01";
else if (tag==2 && talk==0){
    chattemp.textid="chat9e02";
    talk=1;
    }
else if (tag==2 && talk==1){
    chattemp.textid="chat9e03";
    talk=2;
    }
else if (tag==2 && talk==2)
    chattemp.textid="chat9e04";
else if (tag==3 && talk==0){
    chattemp.textid="chat9e05";
    talk=1;
    }
else if (tag==3 && talk==1){
    chattemp.textid="chat9e06";
    talk=2;
    }
else if (tag==3 && talk==2)
    chattemp.textid="chat9e07";
else if (tag==4 && talk==0){
    chattemp.textid="chat9e08";
    talk=1;
    }
else if (tag==4 && talk==1){
    chattemp.textid="chat9e09";
    talk=2;
    }
else if (tag==4 && talk==2)
    chattemp.textid="chat9e10";
else if (tag==5 && talk==0){
    chattemp.textid="chat9e11";
    talk=1;
    }
else if (tag==5 && talk==1){
    chattemp.textid="chat9e12";
    talk=2;
    }
else if (tag==5 && talk==2)
    chattemp.textid="chat9e13";
else if (tag==6 && talk==0){
    chattemp.textid="chat9e14";
    talk=1;
    }
else if (tag==6 && talk==1)
    chattemp.textid="chat9e15";
else if (tag==7 && talk==0){
    chattemp.textid="chat9e16";
    talk=1;
    }
else if (tag==7 && talk==1){
    chattemp.textid="chat9e17";
    talk=2;
    }
else if (tag==7 && talk==2)
    chattemp.textid="chat9e18";
else if (tag==8)
    chattemp.textid="chat9e19";
else if (tag==9 && talk==0){
    chattemp.textid="chat9e20";
    talk=1;
    }
else if (tag==9 && talk==1)
    chattemp.textid="chat9e21";
else if (tag==10 && talk==0){
    chattemp.textid="chat9e23";
    talk=1;
    }
else if (tag==10 && talk==1){
    subtalk+=1;
    if (subtalk==3){
        if (!snapped){
            snapped=1;
            chattemp.textid="chat9e25";
            }
        else
            chattemp.textid="chat9e26";
        subtalk=0;
        }        
    else
        chattemp.textid="chat9e24";
    }
#define scr_killtype
//Killdata types
//argument0 is killdataid
if (global.killdata[argument0]==9)
    return "Status: Killed in action - unknown weapon";
else if (global.killdata[argument0]==8)
    return "Status: Killed in action - fruit-assisted";
else if (global.killdata[argument0]==7)
    return "Status: Killed in action - Shredder impact";
else if (global.killdata[argument0]==6)
    return "Status: Killed in action - Turret head impact";
else if (global.killdata[argument0]==5)
    return "Status: Killed in action - extreme violence used";
else if (global.killdata[argument0]==4)
    return "Status: Killed in action - Nanofield compromised before death";
else if (global.killdata[argument0]==3)
    return "Status: Killed in action - remote-controlled Annihilator";
else if (global.killdata[argument0]==2)
    return "Status: Killed in action - self-destruct triggered";
else if (global.killdata[argument0]==1)
    return "Status: Killed in action";
else
    return "";
#define scr_killdata
//Every individual in the game that Iji can kill

//Cannot be killed
//Tasen Soldier KG111:PAIE Wak Torma, age 15 - cannot be killed by Iji and has no killdata
//Tasen Soldier IF5737:IHBA Naotgerai, age 23 - already dead when Iji gets there and has no killdata
//Komato General 76974-82068-54935 Tor, age 50 - cannot be killed by Iji and has no killdata

//Default response
global.killdataname[0]="[NO IDENTIFICATION]#$#"; //Used for identifying a killdata save slot in use

//Tasen Sector 1
global.killdataname[1]="Sector 1#Tasen Scout EK757:GNIR Tuva#Age: 40, Born: Elem Sioz#";
global.killdataname[2]="Sector 1#Tasen Scout JJ193:BEOE Ogrensie Tayu#Age: 39, Born: Elem Sioz outer colony 2#";
global.killdataname[3]="Sector 1#Tasen Scout KL864:NVNF Favi Savakrie#Age: 21, Born: Elem Sioz emergency breeding colony 10#";
global.killdataname[4]="Sector 1#Tasen Scout SA121:OTHT Zonrak#Age: 33, Born: Fleet Emi breeding colony 5#";
global.killdataname[5]="Sector 1#Tasen Scout OI745:JKGJ Xutei#Age: 81, Born: Elem Sioz outer colony 4#";
global.killdataname[6]="Sector 1#Tasen Soldier RO408:TMEM Iri#Age: 267, Born: Lonimadel#";
global.killdataname[7]="Sector 1#Tasen Soldier HN692:JKTE Elsa Haukti#Age: 55, Born: Elem Sioz#";
global.killdataname[8]="Sector 1#Tasen Scout TE343:AOKD Lofeito Hel#Age: 26, Born: Elem Sioz emergency breeding colony 5#";
global.killdataname[9]="Sector 1#Tasen Scout FJ090:POKL Shohaka#Age: 82, Born: Elem Sioz outer colony 3#";
global.killdataname[10]="Sector 1#Tasen Scout RT542:KOGF Uzon#Age: 89, Born: Elem Sioz outer colony 5#";
global.killdataname[11]="Sector 1#Tasen Soldier LK349:FJDD Tajasun#Age: 169, Born: Lonimadel outer colony 2#";
global.killdataname[12]="Sector 1#Tasen Scout CX820:XQOV Jao Viy#Age: 66, Born: Elem Sioz outer colony 1#";
global.killdataname[13]="Sector 1#Tasen Scout JZ895:LRPR Sunsak#Age: 84, Born: Elem Sioz outer colony 1#";
global.killdataname[14]="Sector 1#Tasen Scout RR079:GMGG Mari#Age: 55, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[15]="Sector 1#Tasen Scout KT581:PKBE Fahel#Age: 30, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[16]="Sector 1#Tasen Soldier ER152:OPTM Tusun Tuvaxu#Age: 42, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[17]="NONAME#";
global.killdataname[18]="NONAME#";
global.killdataname[19]="NONAME#";
global.killdataname[20]="NONAME#";

//Tasen Sector 2
global.killdataname[21]="Sector 2#Tasen Commander TO113:MVAA Shahauk Hasja#Age: 32, Born: Fleet Emi breeding colony 4#";
global.killdataname[22]="Sector 2#Tasen Soldier PO657:JOGE Cazedel#Age: 19, Born: Elem Sioz emergency breeding colony 6#";
global.killdataname[23]="Sector 2#Tasen Scout JH239:SNDE Sasjusa#Age: 57, Born: Elem Sioz#";
global.killdataname[24]="Sector 2#Tasen Soldier MC983:APNN Helmakai#Age: 291, Born: Lonimadel outer colony 2#";
global.killdataname[25]="Sector 2#Tasen Scout LR322:TMNY Grenkaitu#Age: 41, Born: Elem Sioz outer colony 6#";
global.killdataname[26]="Sector 2#Tasen Scout XO648:MHTZ Saetor#Age: 95, Born: Fleet Gren breeding colony 3#";
global.killdataname[27]="Sector 2#Tasen Scout ZR501:PEAA Tei Faratie#Age: 15, Born: Elem Sioz emergency breeding colony 4#";
global.killdataname[28]="Sector 2#Tasen Soldier EM023:HNJT Yizepay#Age: 38, Born: Fleet Emi breeding colony 5#";
global.killdataname[29]="Sector 2#Tasen Scout SJ883:EOYT Yuyu#Age: 20, Born: Fleet Emi breeding colony 2#";
global.killdataname[30]="Sector 2#Tasen Scout WA302:JBBR Asdel#Age: 26, Born: Fleet Emi breeding colony 4#";
global.killdataname[31]="Sector 2#Tasen Scout QF854:GKEP Kepaktoh#Age: 88, Born: Elem Sioz outer colony 3#";
global.killdataname[32]="Sector 2#Tasen Scout GE239:JVMZ Bulei#Age: 30, Born: Elem Sioz emergency breeding colony 10#";
global.killdataname[33]="Sector 2#Tasen Scout IR876:EVOM Cobu#Age: 42, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[34]="Sector 2#Tasen Soldier NR118:UWNJ Suntie#Age: 40, Born: Elem Sioz outer colony 3#";
global.killdataname[35]="Sector 2#Tasen Soldier TP545:LJAK Kari Lo#Age: 241, Born: Lonimadel outer colony 1#";
global.killdataname[36]="Sector 2#Tasen Commander UY747:UTOO Jage#Age: 27, Born: Elem Sioz emergency breeding colony 10#";
global.killdataname[37]="Sector 2#Tasen Scout PV324:JGEP Wakro#Age: 67, Born: Fleet Gren breeding colony 3#";
global.killdataname[38]="Sector 2#Tasen Scout ZE002:UYOR Quhtei#Age: 20, Born: Fleet Emi breeding colony 1#";
global.killdataname[39]="Sector 2#Tasen Scout JO620:PVKB Yah Rieba#Age: 71, Born: Fleet Gren breeding colony 1#";
global.killdataname[40]="Sector 2#Tasen Soldier PW784:BBPB Bupaqu#Age: 64, Born: Fleet Gren breeding colony 2#";
global.killdataname[41]="Sector 2#Tasen Commander PS847:JFHA Matoh Feiwaktor#Age: 82, Born: Elem Sioz#";
global.killdataname[42]="Sector 2#Tasen Scout JJ023:HJAP Elipera#Age: 30, Born: Elem Sioz#";
global.killdataname[43]="Sector 2#Tasen Scout PO070:JFFJ Zege Ba#Age: 28, Born: Elem Sioz outer colony 3#";
global.killdataname[44]="Sector 2#Tasen Elite HP203:LSPW Teira Sunjao#Age: 172, Born: Lonimadel outer colony 3#";
global.killdataname[45]="Sector 2#Tasen Scout TE213:ALRP Greno#Age: 92, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[46]="Sector 2#Tasen Soldier TE000:JTZZ Klexu#Age: 55, Born: Elem Sioz#";
global.killdataname[47]="Sector 2#Tasen Soldier LL039:SJKU Wusae#Age: 103, Born: Fleet Gren breeding colony 4#";
global.killdataname[48]="NONAME#";
global.killdataname[49]="NONAME#";
global.killdataname[50]="NONAME#";

//Tasen Sector 3
global.killdataname[51]="Sector 3#Tasen Soldier OE230:JOOJ Vateilika#Age: 25, Born: Elem Sioz outer colony 5#";
global.killdataname[52]="Sector 3#Tasen Scout KV588:XZQJ Yankaio#Age: 59, Born: Fleet Gren breeding colony 2#";
global.killdataname[53]="Sector 3#Tasen Scout OH220:YXFK Berge Ansho#Age: 17, Born: Elem Sioz emergency breeding colony 10#";
global.killdataname[54]="Sector 3#Tasen Scout NW061:RBZP Yisaktu#Age: 85, Born: Fleet Gren breeding colony 4#";
global.killdataname[55]="Sector 3#Tasen Soldier DK918:IDDK Naeman Jezo#Age: 109, Born: Elem Sioz#";
global.killdataname[56]="Sector 3#Tasen Soldier MN962:IPSS Vitohlei#Age: 27, Born: Fleet Emi breeding colony 4#";
global.killdataname[57]="Sector 3#Tasen Soldier NS204:FHIC Hasu#Age: 220, Born: Elem Sioz#";
global.killdataname[58]="Sector 3#Tasen Soldier SH065:DRNS Coriwaqu#Age: 26, Born: Elem Sioz emergency breeding colony 4#";
global.killdataname[59]="Sector 3#Tasen Scout PU199:LRLY Hemsarier Izoni#Age: 18, Born: Elem Sioz emergency breeding colony 1#";
global.killdataname[60]="Sector 3#Tasen Scout YC582:TXXI Zonotuca#Age: 96, Born: Fleet Gren breeding colony 3#";
global.killdataname[61]="Sector 3#Tasen Soldier UO464:MVNE Quburu Mari#Age: 111, Born: Elem Sioz outer colony 3#";
global.killdataname[62]="Sector 3#Tasen Scout CI280:WBQI Xuribeyi#Age: 74, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[63]="Sector 3#Tasen Commander JX490:EYMY Taasjasak#Age: 65, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[64]="Sector 3#Tasen Soldier GF251:ENVO Zonohasha#Age: 192, Born: Elem Sioz#";
global.killdataname[65]="Sector 3#Tasen Soldier YO706:NMPT An Wak#Age: 146, Born: Fleet Gren breeding colony 3#";
global.killdataname[66]="Sector 3#Tasen Commander NP474:VFUW Lohauk Mae#Age: 27, Born: Elem Sioz emergency breeding colony 1#";
global.killdataname[67]="Sector 3#Tasen Scout OU964:FTYZ Hauk Viqu#Age: 28, Born: Elem Sioz outer colony 6#";
global.killdataname[68]="Sector 3#Tasen Scout MW210:VGPO Waktuke Zo#Age: 75, Born: Fleet Gren breeding colony 4#";
global.killdataname[69]="Sector 3#Tasen Scout LW290:PKOY Emmae#Age: 70, Born: Elem Sioz#";
global.killdataname[70]="Sector 3#Tasen Soldier AT565:TALZ Waquhes#Age: 132, Born: Elem Sioz outer colony 5#";
global.killdataname[71]="Sector 3#Tasen Soldier VW861:CEEE Grenuti#Age: 121, Born: Lonimadel#";
global.killdataname[72]="Sector 3#Tasen Scout IV484:BAFT Hasto#Age: 69, Born: Elem Sioz outer colony 6#";
global.killdataname[73]="Sector 3#Tasen Commander GU944:UHBJ Falo#Age: 167, Born: Elem Sioz outer colony 4#";
global.killdataname[74]="Sector 3#Tasen Scout AG368:COEX Jati#Age: 33, Born: Elem Sioz outer colony 5#";
global.killdataname[75]="Sector 3#Tasen Soldier JU791:UGYK Yabaturaibu#Age: 205, Born: Elem Sioz#";
global.killdataname[76]="Sector 3#Tasen Commander JY704:VPAZ Pahot#Age: 68, Born: Elem Sioz outer colony 5#";
global.killdataname[77]="Sector 3#Tasen Soldier AD794:EWRV Cetor Fei#Age: 95, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[78]="Sector 3#Tasen Scout RV958:QYWE Siefa#Age: 26, Born: Elem Sioz outer colony 2#";
global.killdataname[79]="Sector 3#Tasen Scout KB159:FNYP Mawa Yae#Age: 64, Born: Fleet Gren breeding colony 4#";
global.killdataname[80]="Sector 3#Tasen Scout YT802:AQNO Zonhelico#Age: 95, Born: Elem Sioz#";
global.killdataname[81]="Sector 3#Tasen Scout ZC715:ZMSZ Zesie#Age: 21, Born: Fleet Emi breeding colony 2#";
global.killdataname[82]="Sector 3#Tasen Scout EC816:RBDE Hawu#Age: 21, Born: Elem Sioz emergency breeding colony 5#";
global.killdataname[83]="Sector 3#Tasen Elite VR332:CGVH Jhokta#Age: 282, Born: Lonimadel#";
global.killdataname[84]="Sector 3#Tasen Scout ZQ258:RXZG Heseilo#Age: 95, Born: Elem Sioz#";
global.killdataname[85]="Sector 3#Tasen Soldier PP588:AVWS Saenanita#Age: 18, Born: Elem Sioz emergency breeding colony 5#";
global.killdataname[86]="Sector 3#Tasen Soldier PI595:PTSA Jao Genio#Age: 175, Born: Lonimadel outer colony 2#";
global.killdataname[87]="Sector 3#Tasen Commander UT727:MKNK Quwao Sun#Age: 59, Born: Fleet Gren breeding colony 4#";
global.killdataname[88]="Sector 3#Tasen Scout AD961:TXUE Zongeas#Age: 96, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[89]="Sector 3#Tasen Commander KM450:CVTI Cerixumah#Age: 41, Born: Elem Sioz outer colony 6#";
global.killdataname[90]="Sector 3#Tasen Soldier NI010:GOST Maeja#Age: 15, Born: Elem Sioz emergency breeding colony 7#";
global.killdataname[91]="NONAME#";
global.killdataname[92]="NONAME#";
global.killdataname[93]="NONAME#";
global.killdataname[94]="NONAME#";
global.killdataname[95]="Sector 3#Tasen Elite SY099:HGEO Krotera#Age: 121, Born: Elem Sioz#";

//Tasen Sector 4
global.killdataname[96]="Sector 4#Tasen Commander SP635:MOTM Rakwu#Age: 63, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[97]="Sector 4#Tasen Soldier TM264:IALW Esem Sie#Age: 110, Born: Lonimadel outer colony 3#";
global.killdataname[98]="Sector 4#Tasen Scout OS123:WMUD Tiikatei#Age: 53, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[99]="Sector 4#Tasen Commander NS321:SIVZ Xaas#Age: 25, Born: Elem Sioz emergency breeding colony 5#";
global.killdataname[100]="Sector 4#Tasen Scout NZ811:JFAZ Haia#Age: 85, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[101]="Sector 4#Tasen Soldier IY998:PTOS Grenka#Age: 25, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[102]="Sector 4#Tasen Scout VJ742:GWRZ Ashdel Es#Age: 33, Born: Fleet Emi breeding colony 5#";
global.killdataname[103]="Sector 4#Tasen Soldier KE062:MRKS Hemgren#Age: 26, Born: Elem Sioz emergency breeding colony 2#";
global.killdataname[104]="Sector 4#Tasen Soldier HN205:BELW Sharaiqy#Age: 126, Born: Elem Sioz#";
global.killdataname[105]="Sector 4#Tasen Scout MK395:RXZC Mali#Age: 85, Born: Elem Sioz#";
global.killdataname[106]="Sector 4#Tasen Scout MV976:FSLN Saefa#Age: 38, Born: Fleet Emi breeding colony 5#";
global.killdataname[107]="Sector 4#Tasen Scout AO047:PNFF Wugren#Age: 46, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[108]="Sector 4#Tasen Scout YJ162:MRUE Pah Bai#Age: 76, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[109]="Sector 4#Tasen Soldier EB042:ZJYD Hassjawak#Age: 17, Born: Fleet Emi breeding colony 5#";
global.killdataname[110]="Sector 4#Tasen Soldier JK540:ACYG Zetirie#Age: 107, Born: Elem Sioz#";
global.killdataname[111]="Sector 4#Tasen Scout RR314:GOTW Tiei#Age: 61, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[112]="Sector 4#Tasen Scout DO443:MDOV Yinaklas#Age: 95, Born: Fleet Gren breeding colony 4#";
global.killdataname[113]="Sector 4#Tasen Soldier YT068:UNZH Tilohauk#Age: 263, Born: Lonimadel#";
global.killdataname[114]="Sector 4#Tasen Soldier SF450:LWDJ Zebeli#Age: 171, Born: Lonimadel outer colony 2#";
global.killdataname[115]="Sector 4#Tasen Soldier PB601:UZWO Ber Viketo#Age: 19, Born: Fleet Emi breeding colony 5#";
global.killdataname[116]="Sector 4#Tasen Scout MQ960:GNMW Tidepaash Sho#Age: 59, Born: Elem Sioz#";
global.killdataname[117]="Sector 4#Tasen Scout AL872:YNXJ Zerie Cahashem#Age: 15, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[118]="Sector 4#Tasen Soldier AE340:ULWH Uria#Age: 31, Born: Fleet Emi breeding colony 1#";
global.killdataname[119]="Sector 4#Tasen Soldier VJ981:SYWJ Yahwak#Age: 57, Born: Elem Sioz#";
global.killdataname[120]="Sector 4#Tasen Scout RP511:HWIP Hem Li#Age: 26, Born: Elem Sioz#";
global.killdataname[121]="Sector 4#Tasen Scout LL400:CPCY Vajagren#Age: 21, Born: Fleet Emi breeding colony 3#";
global.killdataname[122]="Sector 4#Tasen Commander OA576:POUE Paktei#Age: 175, Born: Lonimadel#";
global.killdataname[123]="Sector 4#Tasen Scout TQ096:ZLCS Detorpe Voe#Age: 23, Born: Elem Sioz emergency breeding colony 4#";
global.killdataname[124]="Sector 4#Tasen Scout ND338:GMGD Au Xutor#Age: 22, Born: Fleet Emi breeding colony 5#";
global.killdataname[125]="Sector 4#Tasen Scout NT181:GPYE Rakaiwu#Age: 35, Born: Fleet Emi breeding colony 1#";
global.killdataname[126]="Sector 4#Tasen Soldier UB893:LELE Otelcau#Age: 164, Born: Elem Sioz outer colony 1#";
global.killdataname[127]="Sector 4#Tasen Elite VN400:GVOA Xusha#Age: 248, Born: Lonimadel#";
global.killdataname[128]="Sector 4#Tasen Scout UT827:IFOP Torkai An#Age: 54, Born: Elem Sioz#";
global.killdataname[129]="Sector 4#Tasen Scout HN428:FHFD Rayah#Age: 68, Born: Fleet Gren breeding colony 1#";
global.killdataname[130]="Sector 4#Tasen Scout XP648:YCAV Ke Fakera#Age: 92, Born: Elem Sioz outer colony 5#";
global.killdataname[131]="Sector 4#Tasen Soldier KJ009:MLAS Jhoktei#Age: 259, Born: Lonimadel#";
global.killdataname[132]="Sector 4#Tasen Elite MG047:YUIK Peihemfei#Age: 147, Born: Lonimadel#";
global.killdataname[133]="Sector 4#Tasen Soldier QL592:BKPS Ribe Ayah#Age: 100, Born: Elem Sioz#";
global.killdataname[134]="Sector 4#Tasen Scout BV778:TFWA Hastuwate#Age: 37, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[135]="Sector 4#Tasen Scout BH959:DFWZ Malei Besha#Age: 88, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[136]="Sector 4#Tasen Commander RR211:SHBL Astoh Cacosaolo#Age: 78, Born: Elem Sioz outer colony 4#";
global.killdataname[137]="Sector 4#Tasen Soldier MZ036:HKNL Rafajena#Age: 28, Born: Fleet Emi breeding colony 5#";
global.killdataname[138]="Sector 4#Tasen Scout WV449:HXIP Saegren Ta#Age: 19, Born: Elem Sioz emergency breeding colony 6#";
global.killdataname[139]="Sector 4#Tasen Scout JY830:VHIV Asti#Age: 19, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[140]="Sector 4#Tasen Scout BX721:MSQL Xuotta#Age: 59, Born: Elem Sioz outer colony 1#";
global.killdataname[141]="Sector 4#Tasen Scout BW412:KNCR Sunhem#Age: 86, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[142]="Sector 4#Tasen Soldier GI573:JGJS Delderohas#Age: 54, Born: Elem Sioz outer colony 6#";
global.killdataname[143]="Sector 4#Tasen Commander UC325:YYFY Loroiyi#Age: 258, Born: Elem Sioz#";
global.killdataname[144]="Sector 4#Tasen Soldier FM229:HHOI Payte#Age: 119, Born: Fleet Gren breeding colony 1#";
global.killdataname[145]="Sector 4#Tasen Soldier CI115:CSWH Xuaroika#Age: 78, Born: Elem Sioz outer colony 6#";
global.killdataname[146]="Sector 4#Tasen Scout JD519:LVQK Del Bacoisun#Age: 53, Born: Fleet Gren breeding colony 4#";
global.killdataname[147]="Sector 4#Tasen Scout GV235:GJSS Ja Sha#Age: 41, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[148]="Sector 4#Tasen Scout TE496:DNTN Yaze#Age: 66, Born: Fleet Gren breeding colony 3#";
global.killdataname[149]="Sector 4#Tasen Soldier ZY547:XHVS Grenrahauk#Age: 29, Born: Fleet Emi breeding colony 5#";
global.killdataname[150]="Sector 4#Tasen Soldier VL569:SXNO Emshata#Age: 30, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[151]="NONAME#";
global.killdataname[152]="NONAME#";
global.killdataname[153]="NONAME#";
global.killdataname[154]="NONAME#";
global.killdataname[155]="NONAME#";

//Tasen in Sector 5
global.killdataname[156]="Sector 5#Tasen Soldier XA590:FIOH Visun#Age: 106, Born: Elem Sioz outer colony 1#";
global.killdataname[157]="Sector 5#Tasen Scout HH282:HKLL Rorak Viamae#Age: 64, Born: Elem Sioz#";
global.killdataname[158]="Sector 5#Tasen Soldier LK589:FYJJ Sunmawa#Age: 86, Born: Fleet Gren breeding colony 3#";
global.killdataname[159]="Sector 5#Tasen Scout KG591:CLWM Yriema#Age: 19, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[160]="Sector 5#Tasen Scout KI279:GZHP Askeiota#Age: 63, Born: Elem Sioz outer colony 3#";
global.killdataname[161]="Sector 5#Tasen Scout XY190:MIFB Roigren#Age: 17, Born: Elem Sioz emergency breeding colony 6#";
global.killdataname[162]="Sector 5#Tasen Soldier NO858:SMQP Ibupay#Age: 18, Born: Fleet Emi breeding colony 4#";
global.killdataname[163]="Sector 5#Tasen Scout PY854:AMBL Qurasha#Age: 29, Born: Elem Sioz emergency breeding colony 9#";
global.killdataname[164]="Sector 5#Tasen Scout OP703:WPKC Asei Xurai#Age: 69, Born: Elem Sioz#";
global.killdataname[165]="Sector 5#Tasen Scout JH210:QOFC Kaquotsun#Age: 37, Born: Fleet Emi breeding colony 1#";
global.killdataname[166]="Sector 5#Tasen Scout NB555:WISW Helsak Losaeja#Age: 87, Born: Elem Sioz outer colony 2#";
global.killdataname[167]="Sector 5#Tasen Scout BN212:FVMD Rakjanio#Age: 48, Born: Elem Sioz outer colony 5#";
global.killdataname[168]="Sector 5#Tasen Scout WO785:GDOO Utoli#Age: 59, Born: Elem Sioz#";
global.killdataname[169]="Sector 5#Tasen Soldier ZY022:SRNV Kapah#Age: 73, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[170]="Sector 5#Tasen Soldier UN319:MTQX Paydepei Xu#Age: 16, Born: Elem Sioz emergency breeding colony 3#";
global.killdataname[171]="Sector 5#Tasen Commander ZE755:ZYIE Otozobe Sha#Age: 32, Born: Fleet Emi breeding colony 3#";
global.killdataname[172]="Sector 5#Tasen Soldier CV333:XQZM Bevapa Riya#Age: 208, Born: Elem Sioz#";
global.killdataname[173]="Sector 5#Tasen Soldier YL229:EMRJ Hel Rie#Age: 22, Born: Elem Sioz emergency breeding colony 3#";
global.killdataname[174]="Sector 5#Tasen Soldier AP414:ODSR Tisae#Age: 35, Born: Fleet Emi breeding colony 4#";
global.killdataname[175]="Sector 5#Tasen Elite QQ021:SZCG Vakrai#Age: 190, Born: Lonimadel#";
global.killdataname[176]="Sector 5#Tasen Soldier XV067:JMID Grenhasel#Age: 291, Born: Elem Sioz#";
global.killdataname[177]="Sector 5#Tasen Scout OY422:LXXI Pahesk Maeo#Age: 21, Born: Elem Sioz emergency breeding colony 4#";
global.killdataname[178]="Sector 5#Tasen Scout UI056:XJVG Saka#Age: 25, Born: Elem Sioz emergency breeding colony 10#";
global.killdataname[179]="Sector 5#Tasen Commander FT300:UBFT Pahemli#Age: 83, Born: Fleet Gren breeding colony 4#";
global.killdataname[180]="Sector 5#Tasen Soldier DD140:BFFT Voe Vaksaera#Age: 15, Born: Elem Sioz emergency breeding colony 7#";
global.killdataname[181]="Sector 5#Tasen Soldier PO409:YSUX Helroihauk#Age: 29, Born: Elem Sioz emergency breeding colony 9#";
global.killdataname[182]="Sector 5#Tasen Commander PQ438:OXZO Baqyi#Age: 110, Born: Elem Sioz#";
global.killdataname[183]="Sector 5#Tasen Scout ML286:CTGA Klogrenu#Age: 26, Born: Elem Sioz emergency breeding colony 9#";
global.killdataname[184]="Sector 5#Tasen Scout TW132:TIPF Shouma#Age: 32, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[185]="Sector 5#Tasen Scout HF801:WWRZ Aswu#Age: 100, Born: Elem Sioz#";
global.killdataname[186]="Sector 5#Tasen Scout XE289:FKXM Harieje#Age: 83, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[187]="Sector 5#Tasen Soldier FR820:EKLP Kematasa#Age: 163, Born: Elem Sioz outer colony 2#";
global.killdataname[188]="Sector 5#Tasen Scout BU846:XXGB Torjaoto Sae#Age: 26, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[189]="Sector 5#Tasen Scout SW983:ORDT Berako#Age: 90, Born: Elem Sioz#";
global.killdataname[190]="Sector 5#Tasen Soldier BY670:EUKI Voesak#Age: 154, Born: Lonimadel#";
global.killdataname[191]="Sector 5#Tasen Soldier VG336:UKZE Ikajhok Mae#Age: 22, Born: Fleet Emi breeding colony 1#";
global.killdataname[192]="Sector 5#Tasen Scout UR110:NBOX Zonrie#Age: 18, Born: Elem Sioz emergency breeding colony 2#";
global.killdataname[193]="Sector 5#Tasen Scout JH580:ZJCI Elde Lipakotsun#Age: 35, Born: Elem Sioz#";
global.killdataname[194]="Sector 5#Tasen Scout KS018:NDYD Hel Wavate#Age: 53, Born: Fleet Gren breeding colony 1#";
global.killdataname[195]="Sector 5#Tasen Commander PK663:XKJO Saqubu#Age: 38, Born: Fleet Emi breeding colony 4#";
global.killdataname[196]="Sector 5#Tasen Soldier HN141:ACMP Yaeisako Sie#Age: 176, Born: Lonimadel outer colony 4#";
global.killdataname[197]="Sector 5#Tasen Soldier XE040:SYYI Peroi#Age: 116, Born: Lonimadel outer colony 2#";
global.killdataname[198]="Sector 5#Tasen Commander MO888:TXUJ Leige Raktor#Age: 31, Born: Fleet Emi breeding colony 2#";
global.killdataname[199]="Sector 5#Tasen Soldier TS394:VARI Shofali#Age: 107, Born: Fleet Gren breeding colony 3#";
global.killdataname[200]="Sector 5#Tasen Soldier YA389:CTTG Eswakzo#Age: 64, Born: Elem Sioz outer colony 2#";
global.killdataname[201]="Sector 5#Tasen Scout NG868:TRHR Xugepei#Age: 25, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[202]="Sector 5#Tasen Commander FJ594:XAPY Sunha#Age: 229, Born: Lonimadel#";
global.killdataname[203]="Sector 5#Tasen Soldier QM504:MJAV Besaeti#Age: 87, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[204]="Sector 5#Tasen Soldier PW686:ASWT Ti Ce#Age: 164, Born: Lonimadel#";
global.killdataname[205]="Sector 5#Tasen Commander EX182:SUUA Eswa Kepah#Age: 131, Born: Lonimadel#";
global.killdataname[206]="Sector 5#Tasen Soldier DX306:XBWR Xueshastu#Age: 214, Born: Lonimadel outer colony 3#";
global.killdataname[207]="Sector 5#Tasen Commander TQ408:CMLJ Liroto#Age: 39, Born: Fleet Emi breeding colony 5#";
global.killdataname[208]="Sector 5#Tasen Scout GO564:TDPM Covayah#Age: 75, Born: Elem Sioz outer colony 4#";
global.killdataname[209]="Sector 5#Tasen Commander YI447:CLJA Haisak#Age: 27, Born: Fleet Emi breeding colony 4#";
global.killdataname[210]="Sector 5#Tasen Scout JN300:PRCR Sunkeroi#Age: 47, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[211]="Sector 5#Tasen Elite LA017:QCVX An Fa#Age: 172, Born: Lonimadel#";
global.killdataname[212]="Sector 5#Tasen Commander BB383:PVSZ Zoyah#Age: 32, Born: Fleet Emi breeding colony 5#";
global.killdataname[213]="Sector 5#Tasen Elite FC645:AFWT Dehemni Helpak#Age: 156, Born: Elem Sioz#";
global.killdataname[214]="Sector 5#Tasen Scout AP268:NINF Aslova#Age: 31, Born: Fleet Emi breeding colony 3#";
global.killdataname[215]="Sector 5#Tasen Soldier TO057:MELH Sakhas#Age: 75, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[216]="Sector 5#Tasen Commander CP692:VLER Yukeca#Age: 81, Born: Elem Sioz outer colony 1#";
global.killdataname[217]="Sector 5#Tasen Elite TL838:LIHD Haspei#Age: 95, Born: Elem Sioz#";
global.killdataname[218]="Sector 5#Tasen Soldier IM084:GPNV Roniba#Age: 17, Born: Fleet Emi breeding colony 1#";
global.killdataname[219]="Sector 5#Tasen Soldier MM630:QQXF Otraktie#Age: 162, Born: Elem Sioz outer colony 3#";
global.killdataname[220]="Sector 5#Tasen Scout BP388:TJCT Derak Jhokdel#Age: 45, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[221]="Sector 5#Tasen Soldier ED504:LGAS Wu Mahro#Age: 246, Born: Lonimadel#";
global.killdataname[222]="Sector 5#Tasen Soldier MW363:LITP Yrak#Age: 45, Born: Elem Sioz outer colony 1#";
global.killdataname[223]="Sector 5#Tasen Scout BS608:HDFV Grenti Rokai#Age: 55, Born: Elem Sioz#";
global.killdataname[224]="Sector 5#Tasen Commander AI015:SDIW As Xuvaksie#Age: 264, Born: Lonimadel#";
global.killdataname[225]="Sector 5#Tasen Scout ZP397:YQYR Yahpa#Age: 73, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[226]="Sector 5#Tasen Scout RK914:QUJN Niwakmae#Age: 21, Born: Fleet Emi breeding colony 4#";
global.killdataname[227]="Sector 5#Tasen Soldier CR853:EYRP Embu#Age: 15, Born: Fleet Emi breeding colony 5#";
global.killdataname[228]="Sector 5#Tasen Scout TK790:TBPP Esgren Mae#Age: 37, Born: Elem Sioz#";
global.killdataname[229]="Sector 5#Tasen Scout KM861:TUFE Nidely#Age: 26, Born: Elem Sioz#";
global.killdataname[230]="Sector 5#Tasen Scout ZJ010:MQGB Anmaesk#Age: 40, Born: Fleet Emi breeding colony 1#";
global.killdataname[231]="Sector 5#Tasen Soldier UM627:DYQD Wawaksie#Age: 140, Born: Lonimadel#";
global.killdataname[232]="Sector 5#Tasen Scout CK112:ZEOX Voetoro#Age: 20, Born: Fleet Emi breeding colony 1#";
global.killdataname[233]="Sector 5#Tasen Scout OG491:QQEE Yies#Age: 98, Born: Fleet Gren breeding colony 3#";
global.killdataname[234]="Sector 5#Tasen Soldier VI980:BTJA Del Je#Age: 97, Born: Elem Sioz outer colony 1#";
global.killdataname[235]="Sector 5#Tasen Scout TB317:GPYJ Rasha#Age: 62, Born: Elem Sioz outer colony 3#";
global.killdataname[236]="Sector 5#Tasen Scout PJ505:XQCT Rihauk#Age: 68, Born: Fleet Zontohya breeding colony 1#";
global.killdataname[237]="Sector 5#Tasen Scout XG257:KMPW Toh Yuraiwu#Age: 60, Born: Fleet Gren breeding colony 2#";
global.killdataname[238]="Sector 5#Tasen Commander KD572:CKQY Na Mae#Age: 239, Born: Elem Sioz#";
global.killdataname[239]="Sector 5#Tasen Soldier OU710:PIXC Zoniorak#Age: 26, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[240]="Sector 5#Tasen Soldier BH535:QWSX Japeito#Age: 24, Born: Elem Sioz emergency breeding colony 4#";
global.killdataname[241]="Sector 5#Tasen Elite UV923:JGOE Kabe#Age: 89, Born: Elem Sioz outer colony 6#";
global.killdataname[242]="Sector 5#Tasen Scout GF076:VMSZ Xuantura#Age: 57, Born: Elem Sioz outer colony 5#";
global.killdataname[243]="Sector 5#Tasen Scout XZ221:KAXA Auta#Age: 83, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[244]="Sector 5#Tasen Soldier KY321:ZXGR Ra Bexu#Age: 74, Born: Fleet Gren breeding colony 4#";
global.killdataname[245]="Sector 5#Tasen Soldier CE662:JAOP Es Abersa#Age: 173, Born: Lonimadel#";
global.killdataname[246]="Sector 5#Tasen Soldier TU417:UCIA Yahi#Age: 109, Born: Fleet Gren breeding colony 2#";
global.killdataname[247]="Sector 5#Tasen Scout AA484:YYMV Aumaba#Age: 46, Born: Elem Sioz outer colony 6#";
global.killdataname[248]="Sector 5#Tasen Scout ZP410:YORO Tosjael#Age: 91, Born: Fleet Gren breeding colony 2#";
global.killdataname[249]="Sector 5#Tasen Scout KB272:TIQX Voesak Zoxu#Age: 43, Born: Elem Sioz outer colony 4#";
global.killdataname[250]="Sector 5#Tasen Soldier WC903:YIHV Cece#Age: 30, Born: Elem Sioz emergency breeding colony 10#";
global.killdataname[251]="Sector 5#Tasen Elite NI960:TNIY Raber Shamah#Age: 128, Born: Lonimadel#";
global.killdataname[252]="Sector 5#Tasen Scout UO479:MAWZ Ka Namae#Age: 42, Born: Elem Sioz#";
global.killdataname[253]="Sector 5#Tasen Scout MJ153:CAZO Caanwa#Age: 27, Born: Fleet Emi breeding colony 5#";
global.killdataname[254]="Sector 5#Tasen Scout BD331:VTQI Jaope Te#Age: 56, Born: Fleet Gren breeding colony 2#";
global.killdataname[255]="Sector 5#Tasen Soldier YS820:RVFD Ti Payra#Age: 18, Born: Elem Sioz emergency breeding colony 2#";
global.killdataname[256]="Sector 5#Tasen Soldier FT410:LIWX Yisie#Age: 183, Born: Lonimadel#";
global.killdataname[257]="Sector 5#Tasen Soldier TB375:IOWK Zotakai#Age: 30, Born: Fleet Emi breeding colony 2#";
global.killdataname[258]="Sector 5#Tasen Scout GY114:AZVO Tohel#Age: 90, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[259]="Sector 5#Tasen Soldier ZA618:HCAT Pakaze#Age: 82, Born: Fleet Gren breeding colony 3#";
global.killdataname[260]="NONAME#";
global.killdataname[261]="NONAME#";
global.killdataname[262]="NONAME#";
global.killdataname[263]="NONAME#";
global.killdataname[264]="NONAME#";
global.killdataname[265]="NONAME#";

//Tasen in Sector 6
global.killdataname[266]="Sector 6#Tasen Soldier IE011:VAYK Asa Riesratu#Age: 97, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[267]="Sector 6#Tasen Commander LU786:ZGHZ Yipaxu#Age: 258, Born: Lonimadel#";
global.killdataname[268]="Sector 6#Tasen Soldier IO893:BTXS Rieesk#Age: 20, Born: Elem Sioz emergency breeding colony 2#";
global.killdataname[269]="Sector 6#Tasen Soldier WS364:IQJX Nicosaktor#Age: 142, Born: Elem Sioz outer colony 2#";
global.killdataname[270]="Sector 6#Tasen Commander EP385:DHFS Ka Del#Age: 80, Born: Fleet Gren breeding colony 2#";
global.killdataname[271]="Sector 6#Tasen Soldier DE807:AOGV Hapa Famae#Age: 129, Born: Fleet Gren breeding colony 1#";
global.killdataname[272]="Sector 6#Tasen Soldier TM108:HKDG Teitu#Age: 29, Born: Elem Sioz emergency breeding colony 9#";
global.killdataname[273]="Sector 6#Tasen Commander GH814:MAUT Taelfei#Age: 240, Born: Elem Sioz#";
global.killdataname[274]="Sector 6#Tasen Soldier TS383:HYOJ Lite#Age: 135, Born: Lonimadel#";
global.killdataname[275]="Sector 6#Tasen Soldier HP872:MFOA Dezo Ge#Age: 139, Born: Lonimadel outer colony 4#";
global.killdataname[276]="Sector 6#Tasen Soldier HH868:ALDK Yukabacera#Age: 24, Born: Elem Sioz outer colony 2#";
global.killdataname[277]="Sector 6#Tasen Commander QY114:JERZ Aysa#Age: 194, Born: Lonimadel#";
global.killdataname[278]="Sector 6#Tasen Soldier HN213:OHXD Peio#Age: 224, Born: Elem Sioz#";
global.killdataname[279]="Sector 6#Tasen Soldier FP341:IXIN Ro Nio#Age: 39, Born: Fleet Emi breeding colony 4#";
global.killdataname[280]="Sector 6#Tasen Soldier AV276:HUUE Anli#Age: 198, Born: Lonimadel outer colony 3#";
global.killdataname[281]="Sector 6#Tasen Soldier LV750:HFNG Delpah#Age: 126, Born: Lonimadel outer colony 3#";
global.killdataname[282]="Sector 6#Tasen Commander JR354:HDMZ Cesun#Age: 274, Born: Elem Sioz#";
global.killdataname[283]="Sector 6#Tasen Commander FF178:CERZ Bacatabu#Age: 261, Born: Lonimadel outer colony 4#";
global.killdataname[284]="Sector 6#Tasen Commander SP775:IANC Raigren#Age: 35, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[285]="Sector 6#Tasen Soldier KX081:SOSX Bujaoro#Age: 124, Born: Fleet Gren breeding colony 2#";
global.killdataname[286]="Sector 6#Tasen Soldier QO372:NHMP Nio Wunio#Age: 238, Born: Lonimadel#";
global.killdataname[287]="Sector 6#Tasen Soldier PA069:ARHN Sharai Hage#Age: 16, Born: Fleet Emi breeding colony 1#";
global.killdataname[288]="Sector 6#Tasen Soldier OY908:CERY Jaofei Lotu#Age: 274, Born: Lonimadel outer colony 4#";
global.killdataname[289]="Sector 6#Tasen Soldier ZE359:VWUA Barosie#Age: 236, Born: Lonimadel#";
global.killdataname[290]="Sector 6#Tasen Soldier HU665:HQHM Pei Ashridel#Age: 64, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[291]="Sector 6#Tasen Commander VV235:TPON Mahxu#Age: 145, Born: Elem Sioz outer colony 2#";
global.killdataname[292]="Sector 6#Tasen Soldier IW408:IPHL Honadelot Tei#Age: 94, Born: Elem Sioz outer colony 4#";
global.killdataname[293]="Sector 6#Tasen Soldier FA645:ELEM Xufei#Age: 113, Born: Elem Sioz outer colony 5#";
global.killdataname[294]="Sector 6#Tasen Soldier KF909:FLGK Ashihaso#Age: 99, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[295]="Sector 6#Tasen Commander QY235:JCAV Zon Rihemco#Age: 216, Born: Lonimadel#";
global.killdataname[296]="Sector 6#Tasen Soldier CB634:KUAT Tor Zelei#Age: 19, Born: Elem Sioz emergency breeding colony 3#";
global.killdataname[297]="Sector 6#Tasen Soldier SZ607:ITFZ Nazon Payhauk#Age: 76, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[298]="Sector 6#Tasen Commander CO227:JAZV Roja#Age: 109, Born: Lonimadel outer colony 3#";
global.killdataname[299]="Sector 6#Tasen Soldier PF729:CBUV Maezon#Age: 54, Born: Elem Sioz outer colony 2#";
global.killdataname[300]="Sector 6#Tasen Soldier WY998:DELS Xatie#Age: 87, Born: Fleet Zontohya breeding colony 2#";
global.killdataname[301]="Sector 6#Tasen Soldier YM135:QURC Qurawa#Age: 105, Born: Lonimadel outer colony 4#";
global.killdataname[302]="Sector 6#Tasen Soldier UO140:PFTI Delsho#Age: 110, Born: Fleet Gren breeding colony 1#";
global.killdataname[303]="Sector 6#Tasen Commander HW573:ZIVV Klash#Age: 25, Born: Elem Sioz emergency breeding colony 8#";
global.killdataname[304]="Sector 6#Tasen Soldier FC717:MIVJ Qunati#Age: 183, Born: Lonimadel#";
global.killdataname[305]="Sector 6#Tasen Soldier QL152:RXWQ Espay Hauk#Age: 25, Born: Elem Sioz outer colony 1#";
global.killdataname[306]="Sector 6#Tasen Soldier UQ487:DUTD Riero#Age: 181, Born: Lonimadel outer colony 2#";
global.killdataname[307]="Sector 6#Tasen Soldier QB366:TABH Lixu Ce#Age: 15, Born: Elem Sioz emergency breeding colony 5#";
global.killdataname[308]="Sector 6#Tasen Soldier VW994:UXRD Kasaot#Age: 30, Born: Elem Sioz emergency breeding colony 1#";
global.killdataname[309]="Sector 6#Tasen Soldier MD676:RNRT Copakri Tu#Age: 110, Born: Lonimadel#";
global.killdataname[310]="Sector 6#Tasen Soldier HT528:HNJO Unijero#Age: 70, Born: Fleet Gren breeding colony 1#";
global.killdataname[311]="Sector 6#Tasen Soldier EE253:VZBO Zerak#Age: 285, Born: Lonimadel#";
global.killdataname[312]="Sector 6#Tasen Commander GE502:VBQS Shofei#Age: 57, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[313]="NONAME#";
global.killdataname[314]="NONAME#";
global.killdataname[315]="NONAME#";

//Tasen in Sector 7
global.killdataname[316]="Sector 7#Tasen Soldier HD369:EYHV Kalo#Age: 26, Born: Elem Sioz emergency breeding colony 2#";
global.killdataname[317]="Sector 7#Tasen Soldier DP680:HQIP Hastohem#Age: 106, Born: Fleet Gren breeding colony 1#";
global.killdataname[318]="Sector 7#Tasen Soldier RD700:LBWI Toshadel#Age: 96, Born: Elem Sioz outer colony 3#";
global.killdataname[319]="Sector 7#Tasen Soldier PR815:GEXJ Hempei#Age: 133, Born: Elem Sioz outer colony 4#";
global.killdataname[320]="Sector 7#Tasen Elite ZY267:GAGV Mavak#Age: 169, Born: Lonimadel#";
global.killdataname[321]="Sector 7#Tasen Soldier GO320:UBXC Shoca Bervoe#Age: 189, Born: Lonimadel#";
global.killdataname[322]="Sector 7#Tasen Soldier WD021:WUEI Teini#Age: 35, Born: Fleet Zontohya breeding colony 3#";
global.killdataname[323]="Sector 7#Tasen Soldier HJ232:OBNA Emhauk#Age: 94, Born: Elem Sioz#";
global.killdataname[324]="Sector 7#Tasen Soldier OP461:MTMP Ritema#Age: 15, Born: Fleet Emi breeding colony 1#";
global.killdataname[325]="Sector 7#Tasen Soldier IG265:VRLG Yutorha#Age: 149, Born: Fleet Gren breeding colony 3#";
global.killdataname[326]="Sector 7#Tasen Soldier CA243:OTAC Ifei#Age: 265, Born: Lonimadel#";
global.killdataname[327]="Sector 7#Tasen Soldier IA784:YDNU Mapak#Age: 36, Born: Fleet Zontohya breeding colony 4#";
global.killdataname[328]="Sector 7#Tasen Soldier GN520:VCWO Viride#Age: 19, Born: Elem Sioz emergency breeding colony 3#";
global.killdataname[329]="Sector 7#Tasen Elite HL297:OLEU Jeka Berke#Age: 190, Born: Lonimadel outer colony 2#";
global.killdataname[330]="Sector 7#Tasen Soldier CA450:CXZX Niowaklo#Age: 17, Born: Fleet Emi breeding colony 1#";
global.killdataname[331]="Sector 7#Tasen Elite CS655:AWSM Coesta#Age: 234, Born: Lonimadel outer colony 3#";
global.killdataname[332]="Sector 7#Tasen Elite YB418:KWPY Haukpei#Age: 274, Born: Lonimadel outer colony 2#";
global.killdataname[333]="Sector 7#Tasen Elite KH753:RCDN Niquh#Age: 198, Born: Lonimadel#";
global.killdataname[334]="NONAME#";
global.killdataname[335]="NONAME#";
global.killdataname[336]="NONAME#";
global.killdataname[337]="NONAME#";
global.killdataname[338]="NONAME#";
global.killdataname[339]="NONAME#";
global.killdataname[340]="NONAME#";

//Tasen in Sector 8
global.killdataname[341]="Sector 8#Tasen Commander ME359:XKTN Roha Pexu#Age: 114, Born: Elem Sioz#";
global.killdataname[342]="Sector 8#Tasen Elite BR258:IWXD Vakeelta#Age: 173, Born: Elem Sioz#";
global.killdataname[343]="Sector 8#Tasen Commander QK236:YNWO Nixuto Hastoh#Age: 78, Born: Fleet Gren breeding colony 1#";
global.killdataname[344]="Sector 8#Tasen Commander NN887:GABU Yahsie Kai#Age: 27, Born: Fleet Emi breeding colony 1#";
global.killdataname[345]="Sector 8#Tasen Elite CW148:WNIL Lei Ixuel#Age: 296, Born: Lonimadel outer colony 1#";
global.killdataname[346]="Sector 8#Tasen Elite MA109:MXPC Hasconio#Age: 221, Born: Elem Sioz#";
global.killdataname[347]="Sector 8#Tasen Elite PS739:EXQY Jao Zejeni#Age: 251, Born: Elem Sioz#";
global.killdataname[348]="Sector 8#Tasen Elite NS705:VUJZ Jaberi#Age: 152, Born: Lonimadel#";
global.killdataname[349]="Sector 8#Tasen Elite QP656:WSUN Kavak#Age: 132, Born: Lonimadel outer colony 1#";
global.killdataname[350]="Sector 8#Tasen Commander UY945:CWMK Deroi#Age: 67, Born: Elem Sioz#";
global.killdataname[351]="Sector 8#Tasen Commander YH912:NGCO Klasjaan#Age: 119, Born: Lonimadel#";
global.killdataname[352]="Sector 8#Tasen Elite SU817:ECFW Xalei#Age: 107, Born: Lonimadel outer colony 1#";
global.killdataname[353]="Sector 8#Tasen Elite PD269:CKFF Estepei#Age: 154, Born: Lonimadel outer colony 2#";
global.killdataname[354]="Sector 8#Tasen Commander AI920:KGWT As Teisie#Age: 178, Born: Lonimadel outer colony 3#";
global.killdataname[355]="Sector 8#Tasen Elite WY374:ORET Xarajao#Age: 210, Born: Lonimadel#";
global.killdataname[356]="Sector 8#Tasen Commander DQ537:HNAP Em Sho#Age: 53, Born: Elem Sioz outer colony 6#";
global.killdataname[357]="Sector 8#Tasen Elite AA649:HNJG Torri#Age: 198, Born: Lonimadel outer colony 2#";
global.killdataname[358]="Sector 8#Tasen Elite IR621:HIXX Mae Zeja#Age: 148, Born: Elem Sioz#";
global.killdataname[359]="Sector 8#Tasen Elite JH254:QTJK Pa Sjarak#Age: 100, Born: Lonimadel#";
global.killdataname[360]="Sector 8#Tasen Commander HP000:HLCB Xaxa Helni#Age: 30, Born: Elem Sioz emergency breeding colony 10#";
global.killdataname[361]="Sector 8#Tasen Commander OI395:VDIT Cosietu#Age: 53, Born: Fleet Gren breeding colony 4#";
global.killdataname[362]="NONAME#";
global.killdataname[363]="NONAME#";
global.killdataname[364]="NONAME#";
global.killdataname[365]="NONAME#";

//Tasen in Sector 9
global.killdataname[366]="Sector 9#Tasen Elite FK999:ZAIA Pahemsun#Age: 215, Born: Lonimadel outer colony 4#";
global.killdataname[367]="Sector 9#Tasen Elite SV576:BTFQ Haavi#Age: 90, Born: Elem Sioz outer colony 1#";
global.killdataname[368]="NONAME#";
global.killdataname[369]="NONAME#";
global.killdataname[370]="NONAME#";

//Leftover slots: 371-500 inclusive
global.killdataname[371]="NONAME#";
global.killdataname[372]="NONAME#";
global.killdataname[373]="NONAME#";
global.killdataname[374]="NONAME#";
global.killdataname[375]="NONAME#";
global.killdataname[376]="NONAME#";
global.killdataname[377]="NONAME#";
global.killdataname[378]="NONAME#";
global.killdataname[379]="NONAME#";
global.killdataname[380]="NONAME#";
global.killdataname[381]="NONAME#";
global.killdataname[382]="NONAME#";
global.killdataname[383]="NONAME#";
global.killdataname[384]="NONAME#";
global.killdataname[385]="NONAME#";
global.killdataname[386]="NONAME#";
global.killdataname[387]="NONAME#";
global.killdataname[388]="NONAME#";
global.killdataname[389]="NONAME#";
global.killdataname[390]="NONAME#";
global.killdataname[391]="NONAME#";
global.killdataname[392]="NONAME#";
global.killdataname[393]="NONAME#";
global.killdataname[394]="NONAME#";
global.killdataname[395]="NONAME#";
global.killdataname[396]="NONAME#";
global.killdataname[397]="NONAME#";
global.killdataname[398]="NONAME#";
global.killdataname[399]="NONAME#";
global.killdataname[400]="NONAME#";
global.killdataname[401]="NONAME#";
global.killdataname[402]="NONAME#";
global.killdataname[403]="NONAME#";
global.killdataname[404]="NONAME#";
global.killdataname[405]="NONAME#";
global.killdataname[406]="NONAME#";
global.killdataname[407]="NONAME#";
global.killdataname[408]="NONAME#";
global.killdataname[409]="NONAME#";
global.killdataname[410]="NONAME#";
global.killdataname[411]="NONAME#";
global.killdataname[412]="NONAME#";
global.killdataname[413]="NONAME#";
global.killdataname[414]="NONAME#";
global.killdataname[415]="NONAME#";
global.killdataname[416]="NONAME#";
global.killdataname[417]="NONAME#";
global.killdataname[418]="NONAME#";
global.killdataname[419]="NONAME#";
global.killdataname[420]="NONAME#";
global.killdataname[421]="NONAME#";
global.killdataname[422]="NONAME#";
global.killdataname[423]="NONAME#";
global.killdataname[424]="NONAME#";
global.killdataname[425]="NONAME#";
global.killdataname[426]="NONAME#";
global.killdataname[427]="NONAME#";
global.killdataname[428]="NONAME#";
global.killdataname[429]="NONAME#";
global.killdataname[430]="NONAME#";
global.killdataname[431]="NONAME#";
global.killdataname[432]="NONAME#";
global.killdataname[433]="NONAME#";
global.killdataname[434]="NONAME#";
global.killdataname[435]="NONAME#";
global.killdataname[436]="NONAME#";
global.killdataname[437]="NONAME#";
global.killdataname[438]="NONAME#";
global.killdataname[439]="NONAME#";
global.killdataname[440]="NONAME#";
global.killdataname[441]="NONAME#";
global.killdataname[442]="NONAME#";
global.killdataname[443]="NONAME#";
global.killdataname[444]="NONAME#";
global.killdataname[445]="NONAME#";
global.killdataname[446]="NONAME#";
global.killdataname[447]="NONAME#";
global.killdataname[448]="NONAME#";
global.killdataname[449]="NONAME#";
global.killdataname[450]="NONAME#";
global.killdataname[451]="NONAME#";
global.killdataname[452]="NONAME#";
global.killdataname[453]="NONAME#";
global.killdataname[454]="NONAME#";
global.killdataname[455]="NONAME#";
global.killdataname[456]="NONAME#";
global.killdataname[457]="NONAME#";
global.killdataname[458]="NONAME#";
global.killdataname[459]="NONAME#";
global.killdataname[460]="NONAME#";
global.killdataname[461]="NONAME#";
global.killdataname[462]="NONAME#";
global.killdataname[463]="NONAME#";
global.killdataname[464]="NONAME#";
global.killdataname[465]="NONAME#";
global.killdataname[466]="NONAME#";
global.killdataname[467]="NONAME#";
global.killdataname[468]="NONAME#";
global.killdataname[469]="NONAME#";
global.killdataname[470]="NONAME#";
global.killdataname[471]="NONAME#";
global.killdataname[472]="NONAME#";
global.killdataname[473]="NONAME#";
global.killdataname[474]="NONAME#";
global.killdataname[475]="NONAME#";
global.killdataname[476]="NONAME#";
global.killdataname[477]="NONAME#";
global.killdataname[478]="NONAME#";
global.killdataname[479]="NONAME#";
global.killdataname[480]="NONAME#";
global.killdataname[481]="NONAME#";
global.killdataname[482]="NONAME#";
global.killdataname[483]="NONAME#";
global.killdataname[484]="NONAME#";
global.killdataname[485]="NONAME#";
global.killdataname[486]="NONAME#";
global.killdataname[487]="NONAME#";
global.killdataname[488]="NONAME#";
global.killdataname[489]="NONAME#";
global.killdataname[490]="NONAME#";
global.killdataname[491]="NONAME#";
global.killdataname[492]="NONAME#";
global.killdataname[493]="NONAME#";
global.killdataname[494]="NONAME#";
global.killdataname[495]="NONAME#";
global.killdataname[496]="NONAME#";
global.killdataname[497]="NONAME#";
global.killdataname[498]="NONAME#";
global.killdataname[499]="NONAME#";
global.killdataname[500]="NONAME#";

//Komato in Sector 3
global.killdataname[501]="Sector 3#Komato Trooper 06712-07892-30144 Zonharak#Age: 45, Born: Au Es#";
global.killdataname[502]="Sector 3#Komato Trooper 08965-27358-10735 Siete#Age: 120, Born: Mashajhok Kasa#";
global.killdataname[503]="Sector 3#Komato Trooper 12558-61195-78950 Xavi#Age: 136, Born: Mashajhok Kasa outer colony 49#";

//Komato in Sector 5
global.killdataname[504]="Sector 5#Komato Trooper 98751-98408-79363 Tortie#Age: 143, Born: Turohauk outer colony 21#";
global.killdataname[505]="Sector 5#Komato Trooper 71065-67425-43856 Wulei#Age: 168, Born: Klasmanio#";
global.killdataname[506]="Sector 5#Komato Trooper 18510-33285-56711 Yaqupay#Age: 251, Born: Klasmanio outer colony 49#";
global.killdataname[507]="Sector 5#Komato Trooper 73361-69662-67544 Mapei Pake#Age: 197, Born: Turohauk#";
global.killdataname[508]="Sector 5#Komato Trooper 34882-38390-63977 Naperak#Age: 178, Born: Au Es#";
global.killdataname[509]="Sector 5#Komato Trooper 97625-39444-16760 Pa Essak#Age: 213, Born: Antarisho#";
global.killdataname[510]="Sector 5#Komato Trooper 67986-78122-22529 Xusun#Age: 101, Born: Ika#";
global.killdataname[511]="Sector 5#Komato Trooper 43962-66774-02410 Conaot#Age: 234, Born: Antarisho#";
global.killdataname[512]="Sector 5#Komato Trooper 90304-66345-27520 Ranibewu#Age: 104, Born: Tadezocora outer colony 117#";
global.killdataname[513]="Sector 5#Komato Trooper 07041-69195-96625 Ja Losho#Age: 247, Born: Turohauk#";
global.killdataname[514]="Sector 5#Komato Trooper 77355-40155-33785 Esmah#Age: 165, Born: Mashajhok Kasa#";
global.killdataname[515]="Sector 5#Komato Berserker 85100-99563-05082 Zonio#Age: 57, Born: Mashajhok Kasa outer colony 11#";
global.killdataname[516]="Sector 5#Komato Berserker 09867-16239-69811 Xarai#Age: 89, Born: Ika#";
global.killdataname[517]="Sector 5#Komato Trooper 21522-55891-06613 Berem Niri#Age: 65, Born: Mashajhok Kasa outer colony 25#";
global.killdataname[518]="Sector 5#Komato Trooper 42694-62122-98369 Elhas Valei#Age: 234, Born: Tadezocora outer colony 132#";
global.killdataname[519]="Sector 5#Komato Trooper 42961-45723-98650 Dehemtor#Age: 21, Born: Turohauk#";
global.killdataname[520]="Sector 5#Komato Trooper 20769-09762-53345 Coro#Age: 275, Born: Mashajhok Kasa outer colony 45#";
global.killdataname[521]="Sector 5#Komato Berserker 73288-64865-61037 Hasmah#Age: 299, Born: Klasmanio#";
global.killdataname[522]="Sector 5#Komato Trooper 76188-77781-24941 Heltei#Age: 132, Born: Turohauk#";
global.killdataname[523]="Sector 5#Komato Trooper 33589-35053-97019 Zonjapako#Age: 182, Born: Antarisho outer colony 7#";
global.killdataname[524]="Sector 5#Komato Trooper 71872-31287-29142 Anzoma#Age: 296, Born: Au Es outer colony 62#";
global.killdataname[525]="Sector 5#Komato Trooper 80799-33919-92252 Esa#Age: 197, Born: Tadezocora outer colony 40#";
global.killdataname[526]="Sector 5#Komato Trooper 82140-05342-41597 Hasnio#Age: 143, Born: Antarisho#";
global.killdataname[527]="Sector 5#Komato Trooper 53416-64322-40057 Delpay#Age: 160, Born: Tadezocora outer colony 87#";
global.killdataname[528]="Sector 5#Komato Trooper 67012-93541-72497 Hasa Vashode#Age: 106, Born: Ika#";
global.killdataname[529]="Sector 5#Komato Trooper 63466-26395-28054 Elbu#Age: 45, Born: Au Es outer colony 7#";
global.killdataname[530]="Sector 5#Komato Berserker 68770-04079-21658 Vakalei#Age: 176, Born: Tadezocora#";
global.killdataname[531]="Sector 5#Komato Trooper 87174-07664-45482 Sakteto#Age: 80, Born: Klasmanio#";
global.killdataname[532]="Sector 5#Komato Trooper 25495-36207-23098 Berotpak#Age: 166, Born: Mashajhok Kasa outer colony 55#";
global.killdataname[533]="NONAME#";
global.killdataname[534]="NONAME#";
global.killdataname[535]="NONAME#";

//Komato in Sector 6
global.killdataname[536]="Sector 6#Komato Trooper 25118-07224-92609 Bepei#Age: 198, Born: Antarisho#";
global.killdataname[537]="Sector 6#Komato Trooper 81918-23146-50502 Siero#Age: 109, Born: Mashajhok Kasa#";
global.killdataname[538]="Sector 6#Komato Trooper 55620-09697-83891 Maoliem Buyah#Age: 89, Born: Turohauk outer colony 60#";
global.killdataname[539]="Sector 6#Komato Trooper 41912-75233-98403 Hastodel#Age: 70, Born: Klasmanio#";
global.killdataname[540]="Sector 6#Komato Trooper 62413-72411-93652 Esvaksun#Age: 226, Born: Tadezocora#";
global.killdataname[541]="Sector 6#Komato Trooper 45468-06918-18051 Ashber#Age: 92, Born: Ika outer colony 5#";
global.killdataname[542]="Sector 6#Komato Trooper 15766-33026-36699 Licehel Yavoe#Age: 246, Born: Mashajhok Kasa outer colony 1#";
global.killdataname[543]="Sector 6#Komato Trooper 78598-97961-14758 Jahauk#Age: 133, Born: Tadezocora outer colony 53#";
global.killdataname[544]="Sector 6#Komato Trooper 17554-61788-24640 Yasjulo#Age: 22, Born: Au Es#";
global.killdataname[545]="Sector 6#Komato Trooper 21868-21509-63432 Bede#Age: 234, Born: Mashajhok Kasa#";
global.killdataname[546]="Sector 6#Komato Trooper 32906-48609-13183 Zevitei#Age: 73, Born: Turohauk#";
global.killdataname[547]="Sector 6#Komato Trooper 96156-54473-80611 Qudel#Age: 66, Born: Klasmanio outer colony 43#";
global.killdataname[548]="Sector 6#Komato Trooper 35381-73230-17834 Yeke#Age: 299, Born: Tadezocora outer colony 129#";
global.killdataname[549]="Sector 6#Komato Trooper 13825-30942-05933 Sae#Age: 160, Born: Tadezocora outer colony 15#";
global.killdataname[550]="Sector 6#Komato Berserker 07860-08062-75028 Toniterai#Age: 152, Born: Tadezocora outer colony 117#";
global.killdataname[551]="Sector 6#Komato Berserker 02785-32754-34075 Hemesko#Age: 51, Born: Ika outer colony 10#";
global.killdataname[552]="Sector 6#Komato Trooper 11941-40994-91210 Butie Pahes#Age: 184, Born: Antarisho outer colony 29#";
global.killdataname[553]="Sector 6#Komato Berserker 97063-10579-99129 Tegesun#Age: 145, Born: Antarisho outer colony 5#";
global.killdataname[554]="Sector 6#Komato Trooper 84775-43993-95393 Sunwaktor#Age: 207, Born: Mashajhok Kasa#";
global.killdataname[555]="Sector 6#Komato Trooper 75652-76814-11302 Teihasel#Age: 53, Born: Ika outer colony 2#";
global.killdataname[556]="Sector 6#Komato Trooper 08186-14492-84212 Rihauk Bewak#Age: 127, Born: Klasmanio outer colony 9#";
global.killdataname[557]="Sector 6#Komato Berserker 37514-76859-24785 Losho#Age: 26, Born: Au Es outer colony 110#";
global.killdataname[558]="Sector 6#Komato Trooper 43392-94512-78904 Bei Jexa#Age: 96, Born: Ika outer colony 5#";
global.killdataname[559]="Sector 6#Komato Trooper 73493-65878-65923 Shomahtu#Age: 100, Born: Klasmanio#";
global.killdataname[560]="Sector 6#Komato Trooper 21656-81890-34708 Sakja#Age: 164, Born: Klasmanio outer colony 49#";
global.killdataname[561]="Sector 6#Komato Berserker 08181-76246-53711 Xuge#Age: 75, Born: Turohauk outer colony 60#";
global.killdataname[562]="NONAME#";
global.killdataname[563]="NONAME#";
global.killdataname[564]="NONAME#";
global.killdataname[565]="NONAME#";

//Komato in Sector 7
global.killdataname[566]="Sector 7#Komato Trooper 67708-29777-40434 Shotupa#Age: 148, Born: Turohauk#";
global.killdataname[567]="Sector 7#Komato Trooper 41642-18912-56398 Fasiebe#Age: 294, Born: Klasmanio outer colony 44#";
global.killdataname[568]="Sector 7#Komato Trooper 87517-31454-88351 Vakesha#Age: 170, Born: Antarisho outer colony 15#";
global.killdataname[569]="Sector 7#Komato Trooper 37637-66752-07993 Ashelhauk#Age: 88, Born: Turohauk outer colony 54#";
global.killdataname[570]="Sector 7#Komato Berserker 70960-79456-42645 Roivi Besiena#Age: 113, Born: Tadezocora outer colony 27#";
global.killdataname[571]="Sector 7#Komato Trooper 89510-95830-54724 Hember#Age: 192, Born: Mashajhok Kasa outer colony 30#";
global.killdataname[572]="Sector 7#Komato Trooper 19721-56446-30199 Payroica#Age: 35, Born: Turohauk outer colony 43#";
global.killdataname[573]="Sector 7#Komato Trooper 18119-98588-66655 Yva Tataber#Age: 235, Born: Mashajhok Kasa#";
global.killdataname[574]="Sector 7#Komato Trooper 59799-80905-66361 Aurobu#Age: 53, Born: Mashajhok Kasa outer colony 15#";
global.killdataname[575]="Sector 7#Komato Berserker 59631-61037-72828 Xutei#Age: 95, Born: Au Es outer colony 105#";
global.killdataname[576]="Sector 7#Komato Trooper 33176-50007-02175 Klas Ze#Age: 68, Born: Klasmanio outer colony 58#";
global.killdataname[577]="Sector 7#Komato Trooper 72138-98535-59817 Jevak Delha#Age: 52, Born: Ika outer colony 5#";
global.killdataname[578]="Sector 7#Komato Berserker 34764-56987-43655 Ti Jhokro#Age: 180, Born: Turohauk outer colony 19#";
global.killdataname[579]="Sector 7#Komato Trooper 57077-36860-12449 Raisak#Age: 171, Born: Turohauk outer colony 5#";
global.killdataname[580]="Sector 7#Komato Trooper 10533-73268-79146 Uusun#Age: 186, Born: Mashajhok Kasa#";
global.killdataname[581]="Sector 7#Komato Trooper 43226-20861-14947 Shamakai#Age: 165, Born: Antarisho#";
global.killdataname[582]="Sector 7#Komato Trooper 00204-48265-33420 Hasetei#Age: 272, Born: Antarisho#";
global.killdataname[583]="Sector 7#Komato Beast 79806-11822-32832 Yahli Saetoh#Age: 37, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[584]="Sector 7#Komato Berserker 31010-28903-65068 Hauksha#Age: 280, Born: Mashajhok Kasa#";
global.killdataname[585]="Sector 7#Komato Trooper 16930-35533-55715 Valii Xuta#Age: 32, Born: Turohauk#";
global.killdataname[586]="Sector 7#Komato Beast 67921-15864-13752 Waktaka#Age: 36, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[587]="Sector 7#Komato Trooper 23294-35902-76410 Nawa#Age: 41, Born: Au Es#";
global.killdataname[588]="Sector 7#Komato Berserker 57028-56103-76921 Zondebaot#Age: 156, Born: Au Es outer colony 68#";
global.killdataname[589]="Sector 7#Komato Trooper 01252-33448-78094 Nihel#Age: 94, Born: Turohauk outer colony 13#";
global.killdataname[590]="Sector 7#Komato Beast 70351-06703-27625 Debapa#Age: 28, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[591]="Sector 7#Komato Beast 30746-22194-72499 Bu Sha#Age: 40, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[592]="Sector 7#Komato Trooper 35441-12276-15817 Ashniber#Age: 195, Born: Mashajhok Kasa#";
global.killdataname[593]="Sector 7#Komato Trooper 23685-37689-27628 Tieropay#Age: 102, Born: Tadezocora#";
global.killdataname[594]="Sector 7#Komato Trooper 85901-62039-34875 Saerak#Age: 198, Born: Tadezocora outer colony 134#";
global.killdataname[595]="Sector 7#Komato Trooper 78259-84121-15658 Zehas#Age: 176, Born: Mashajhok Kasa outer colony 15#";
global.killdataname[596]="Sector 7#Komato Trooper 62375-92796-05073 Payuka#Age: 143, Born: Mashajhok Kasa outer colony 69#";
global.killdataname[597]="Sector 7#Komato Trooper 81656-10784-57133 Yahlei#Age: 107, Born: Tadezocora outer colony 99#";
global.killdataname[598]="Sector 7#Komato Beast 10006-67336-80031 Pah Sunlonio#Age: 33, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[599]="Sector 7#Komato Trooper 49679-49538-20166 Tei Torber#Age: 276, Born: Mashajhok Kasa outer colony 50#";
global.killdataname[600]="Sector 7#Komato Beast 31748-00333-25828 Osaklas#Age: 23, Converted: Fleet 1089 Cybernetics wing#"
global.killdataname[601]="Sector 7#Komato Trooper 98259-72049-87126 Namahot#Age: 241, Born: Turohauk outer colony 24#";
global.killdataname[602]="Sector 7#Komato Beast 55034-76815-88121 Jaoemni Rodel#Age: 30, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[603]="Sector 7#Komato Trooper 22586-68294-42347 Toba#Age: 31, Born: Turohauk#";
global.killdataname[604]="Sector 7#Komato Beast 31684-68010-16456 Payma Fagren#Age: 27, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[605]="Sector 7#Komato Beast 89927-72498-29437 Wurie#Age: 24, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[606]="Sector 7#Komato Trooper 01860-20170-69712 Perie Viba#Age: 118, Born: Turohauk#";
global.killdataname[607]="Sector 7#Komato Beast 07131-64406-71966 Shatei#Age: 32, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[608]="Sector 7#Komato Berserker 20348-37228-21660 Saktoro#Age: 189, Born: Turohauk outer colony 9#";
global.killdataname[609]="Sector 7#Komato Berserker 82145-51859-38577 Teixato#Age: 128, Born: Turohauk#";
global.killdataname[610]="Sector 7#Komato Berserker 88076-12062-69457 Roquh#Age: 121, Born: Antarisho outer colony 17#";
global.killdataname[611]="Sector 7#Komato Trooper 41586-81808-39825 Peinioca#Age: 282, Born: Antarisho#";
global.killdataname[612]="Sector 7#Komato Trooper 71052-30993-46350 Yapakte Sabeze#Age: 54, Born: Ika outer colony 5#";
global.killdataname[613]="Sector 7#Komato Trooper 02282-49602-46099 Shavamah#Age: 164, Born: Mashajhok Kasa outer colony 30#";
global.killdataname[614]="Sector 7#Komato Berserker 81085-70413-54878 Ke Deyi#Age: 77, Born: Klasmanio outer colony 58#";
global.killdataname[615]="Sector 7#Komato Berserker 36585-43160-81890 Saesie#Age: 170, Born: Turohauk outer colony 65#";
global.killdataname[616]="Sector 7#Komato Berserker 71880-67724-95439 Betorsa#Age: 230, Born: Mashajhok Kasa#";
global.killdataname[617]="Sector 7#Komato Berserker 94480-33383-30894 Gevi#Age: 121, Born: Antarisho#";
global.killdataname[618]="Sector 7#Komato Beast 72112-58478-88015 Anvakta#Age: 22, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[619]="Sector 7#Komato Beast 91195-40300-85448 Mahnio#Age: 23, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[620]="Sector 7#Komato Berserker 22104-49242-19335 Coturie#Age: 111, Born: Tadezocora outer colony 80#";
global.killdataname[621]="Sector 7#Komato Beast 14466-69829-85056 Payjaxu#Age: 28, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[622]="NONAME#";
global.killdataname[623]="NONAME#";
global.killdataname[624]="NONAME#";
global.killdataname[625]="NONAME#";

//Komato in Sector 8
global.killdataname[626]="Sector 8#Komato Trooper 60860-55321-80814 Kairoi#Age: 237, Born: Klasmanio#";
global.killdataname[627]="Sector 8#Komato Trooper 02699-54178-26707 Teloro#Age: 159, Born: Antarisho outer colony 5#";
global.killdataname[628]="Sector 8#Komato Berserker 97339-90075-46139 Yubi#Age: 107, Born: Klasmanio#";
global.killdataname[629]="Sector 8#Komato Berserker 50174-89322-41521 Saewa#Age: 200, Born: Tadezocora outer colony 96#";
global.killdataname[630]="Sector 8#Komato Berserker 07857-35400-63802 Jao Otdel#Age: 80, Born: Ika#";
global.killdataname[631]="Sector 8#Komato Trooper 98369-70804-21510 Maeri#Age: 121, Born: Tadezocora outer colony 35#";
global.killdataname[632]="Sector 8#Komato Trooper 02039-04868-24000 Bewu#Age: 162, Born: Turohauk#";
global.killdataname[633]="Sector 8#Komato Trooper 91269-83278-72755 Grento Tei#Age: 110, Born: Ika outer colony 7#";
global.killdataname[634]="Sector 8#Komato Trooper 08219-27374-41424 Wakeske#Age: 186, Born: Antarisho#";
global.killdataname[635]="Sector 8#Komato Berserker 00644-53164-41937 Jali#Age: 118, Born: Ika outer colony 7#";
global.killdataname[636]="Sector 8#Komato Annihilator 68006-13919-06494 Deltojaro#Age: 103, Born: Imperial Research outer colony 2#";
global.killdataname[637]="Sector 8#Komato Trooper 42170-12304-81174 Aheli#Age: 129, Born: Mashajhok Kasa outer colony 54#";
global.killdataname[638]="Sector 8#Komato Trooper 57026-50557-07162 Teroma Rabuco#Age: 50, Born: Ika#";
global.killdataname[639]="Sector 8#Komato Trooper 29675-76074-92706 Buyi#Age: 129, Born: Turohauk outer colony 12#";
global.killdataname[640]="Sector 8#Komato Annihilator 04964-24346-99580 Helri Lo#Age: 85, Born: Imperial Research outer colony 4#";
global.killdataname[641]="Sector 8#Komato Berserker 62392-36489-32164 Bunazo#Age: 165, Born: Antarisho outer colony 17#";
global.killdataname[642]="Sector 8#Komato Trooper 67437-46187-18572 Tohankai#Age: 134, Born: Tadezocora#";
global.killdataname[643]="Sector 8#Komato Trooper 84639-98538-27386 Cotorni#Age: 249, Born: Klasmanio outer colony 35#";
global.killdataname[644]="Sector 8#Komato Trooper 41503-81793-38976 Emhaja#Age: 114, Born: Tadezocora outer colony 60#";
global.killdataname[645]="Sector 8#Komato Trooper 06137-64580-23958 Zokepei#Age: 89, Born: Klasmanio outer colony 60#";
global.killdataname[646]="Sector 8#Komato Trooper 72039-79233-91556 Xusa Yu#Age: 97, Born: Turohauk outer colony 78#";
global.killdataname[647]="Sector 8#Komato Berserker 40378-52805-92041 Gekeelzo#Age: 128, Born: Tadezocora#";
global.killdataname[648]="Sector 8#Komato Berserker 03196-60036-07363 Eri#Age: 239, Born: Antarisho outer colony 7#";
global.killdataname[649]="Sector 8#Komato Trooper 64241-28293-72257 Haukot#Age: 65, Born: Au Es outer colony 71#";
global.killdataname[650]="Sector 8#Komato Berserker 00498-22192-31921 Juibertei#Age: 117, Born: Mashajhok Kasa#";
global.killdataname[651]="Sector 8#Komato Trooper 55312-33883-73480 Yusak Jao#Age: 158, Born: Turohauk#";
global.killdataname[652]="Sector 8#Komato Trooper 87644-06156-86207 Torrabaya#Age: 171, Born: Au Es#";
global.killdataname[653]="Sector 8#Komato Berserker 50772-89985-55466 Leisun Jeyu#Age: 162, Born: Au Es#";
global.killdataname[654]="Sector 8#Komato Trooper 80875-28556-74562 Zonna#Age: 104, Born: Turohauk outer colony 50#";
global.killdataname[655]="Sector 8#Komato Berserker 53189-63526-96037 Voe Vi#Age: 265, Born: Klasmanio outer colony 49#";
global.killdataname[656]="Sector 8#Komato Trooper 02283-31551-70694 Xube#Age: 103, Born: Mashajhok Kasa#";
global.killdataname[657]="Sector 8#Komato Trooper 29852-99541-97533 Esuvi#Age: 113, Born: Antarisho outer colony 2#";
global.killdataname[658]="Sector 8#Komato Annihilator 98514-46954-69601 Gerakka#Age: 112, Born: Imperial Research outer colony 2#";
global.killdataname[659]="Sector 8#Komato Trooper 98546-21500-29539 Toheska#Age: 41, Born: Au Es#";
global.killdataname[660]="NONAME#";
global.killdataname[661]="NONAME#";
global.killdataname[662]="NONAME#";
global.killdataname[663]="NONAME#";
global.killdataname[664]="NONAME#";
global.killdataname[665]="NONAME#";

//Komato in Sector 9
global.killdataname[666]="Sector 9#Komato Trooper 57116-08618-06291 Hemvi#Age: 191, Born: Antarisho outer colony 30#";
global.killdataname[667]="Sector 9#Komato Trooper 57242-41989-61776 Xao#Age: 218, Born: Antarisho#";
global.killdataname[668]="Sector 9#Komato Trooper 64532-42359-27113 Asfaroi#Age: 275, Born: Klasmanio outer colony 56#";
global.killdataname[669]="Sector 9#Komato Trooper 02767-80706-09748 Bawa Natei#Age: 137, Born: Turohauk#";
global.killdataname[670]="Sector 9#Komato Trooper 90883-49706-87619 Haniri#Age: 192, Born: Antarisho#";
global.killdataname[671]="Sector 9#Komato Berserker 09515-42340-88510 Vilokato#Age: 83, Born: Turohauk#";
global.killdataname[672]="Sector 9#Komato Berserker 70283-95406-28898 Litor#Age: 134, Born: Antarisho outer colony 8#";
global.killdataname[673]="Sector 9#Komato Trooper 18116-36247-17021 Elhasan#Age: 258, Born: Klasmanio outer colony 10#";
global.killdataname[674]="Sector 9#Komato Trooper 34445-63579-54404 Saewu#Age: 105, Born: Tadezocora#";
global.killdataname[675]="Sector 9#Komato Trooper 61981-89144-07688 Zeca Paktubero#Age: 160, Born: Antarisho outer colony 23#";
global.killdataname[676]="Sector 9#Komato Beast 15560-67024-82620 Lioma#Age: 40, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[677]="Sector 9#Komato Berserker 39549-74569-71796 Sharaceti#Age: 63, Born: Turohauk#";
global.killdataname[678]="Sector 9#Komato Berserker 13540-44678-14701 Sie Esk#Age: 148, Born: Tadezocora outer colony 97#";
global.killdataname[679]="Sector 9#Komato Trooper 12834-12858-06859 Yusae Behem#Age: 152, Born: Tadezocora#";
global.killdataname[680]="Sector 9#Komato Trooper 34653-39234-85513 Voekasho#Age: 48, Born: Au Es#";
global.killdataname[681]="Sector 9#Komato Berserker 01934-14470-64837 Au Rakrai#Age: 76, Born: Klasmanio#";
global.killdataname[682]="Sector 9#Komato Trooper 74442-50221-07733 Zeberan#Age: 211, Born: Turohauk#";
global.killdataname[683]="Sector 9#Komato Trooper 75900-87126-10336 Payrie#Age: 103, Born: Ika outer colony 10#";
global.killdataname[684]="Sector 9#Komato Trooper 60077-52135-36714 Ohauk Wakrai#Age: 87, Born: Ika#";
global.killdataname[685]="Sector 9#Komato Trooper 69114-96113-59813 Saeta#Age: 172, Born: Turohauk outer colony 43#";
global.killdataname[686]="Sector 9#Komato Trooper 37908-82614-47189 Hasta#Age: 290, Born: Antarisho outer colony 6#";
global.killdataname[687]="Sector 9#Komato Annihilator 75382-43779-49873 Be Xuya#Age: 38, Born: Imperial Research outer colony 1#";
global.killdataname[688]="Sector 9#Komato Trooper 86988-92534-19077 Feidesho#Age: 43, Born: Ika#";
global.killdataname[689]="Sector 9#Komato Trooper 40865-03107-33064 Zozenata Tofao#Age: 63, Born: Turohauk outer colony 71#";
global.killdataname[690]="Sector 9#Komato Trooper 91751-28320-95124 Nio Xebe#Age: 67, Born: Klasmanio outer colony 53#";
global.killdataname[691]="Sector 9#Komato Berserker 38172-29153-65643 Licozon#Age: 192, Born: Tadezocora#";
global.killdataname[692]="Sector 9#Komato Beast 77782-47476-59392 Tupei Mator#Age: 33, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[693]="Sector 9#Komato Trooper 85462-24423-96604 Mahesmae#Age: 150, Born: Antarisho#";
global.killdataname[694]="Sector 9#Komato Trooper 72823-00994-78232 Xa Decaa#Age: 223, Born: Mashajhok Kasa outer colony 53#";
global.killdataname[695]="Sector 9#Komato Trooper 56371-21220-09400 Yao Wahem#Age: 222, Born: Tadezocora outer colony 145#";
global.killdataname[696]="Sector 9#Komato Trooper 39951-91790-97509 Tushata#Age: 142, Born: Turohauk#";
global.killdataname[697]="Sector 9#Komato Berserker 89642-60928-18072 Jefei#Age: 265, Born: Mashajhok Kasa#";
global.killdataname[698]="Sector 9#Komato Trooper 56944-93370-16119 Kaiya#Age: 288, Born: Tadezocora outer colony 151#";
global.killdataname[699]="Sector 9#Komato Berserker 60152-70737-95853 Li Sakel#Age: 195, Born: Au Es outer colony 71#";
global.killdataname[700]="Sector 9#Komato Berserker 90587-52324-81177 Kahapa#Age: 24, Born: Turohauk outer colony 59#";
global.killdataname[701]="Sector 9#Komato Trooper 03784-28051-12186 Baqu Ta#Age: 137, Born: Mashajhok Kasa#";
global.killdataname[702]="Sector 9#Komato Trooper 05848-45491-43394 Astor#Age: 148, Born: Klasmanio outer colony 18#";
global.killdataname[703]="Sector 9#Komato Trooper 29856-83626-95743 Delli#Age: 21, Born: Turohauk outer colony 81#";
global.killdataname[704]="Sector 9#Komato Trooper 94611-30551-74245 Mavatonio#Age: 80, Born: Klasmanio outer colony 44#";
global.killdataname[705]="Sector 9#Komato Trooper 53919-57561-82388 Zontu#Age: 139, Born: Mashajhok Kasa#";
global.killdataname[706]="Sector 9#Komato Trooper 18251-59410-31664 Fayati Sho#Age: 62, Born: Mashajhok Kasa outer colony 10#";
global.killdataname[707]="Sector 9#Komato Berserker 06916-00012-26066 Irai Helto#Age: 161, Born: Turohauk#";
global.killdataname[708]="Sector 9#Komato Annihilator 55301-91386-66304 Yrie#Age: 74, Born: Imperial Research outer colony 3#";
global.killdataname[709]="Sector 9#Komato Berserker 48304-93401-98526 Varo#Age: 134, Born: Mashajhok Kasa#";
global.killdataname[710]="Sector 9#Komato Berserker 48473-32634-21303 Auratoh#Age: 194, Born: Antarisho#";
global.killdataname[711]="Sector 9#Komato Trooper 14662-61399-18056 Keto#Age: 265, Born: Tadezocora outer colony 59#";
global.killdataname[712]="Sector 9#Komato Trooper 69721-43659-34782 Saki Ro#Age: 105, Born: Tadezocora outer colony 156#";
global.killdataname[713]="NONAME#";
global.killdataname[714]="NONAME#";
global.killdataname[715]="NONAME#";
global.killdataname[716]="NONAME#";
global.killdataname[717]="NONAME#";
global.killdataname[718]="NONAME#";
global.killdataname[719]="NONAME#";
global.killdataname[720]="Sector 9#Komato Annihilator 02200-90912-93068 Iosa Sakera#Age: 38, Born: Shuwajaxu#";

//Komato in Sector X
global.killdataname[721]="Sector X#Komato Trooper 89524-01120-91040 Hasroi#Age: 172, Born: Mashajhok Kasa outer colony 61#";
global.killdataname[722]="Sector X#Komato Trooper 17424-85361-65955 Xuroi#Age: 249, Born: Klasmanio#";
global.killdataname[723]="Sector X#Komato Berserker 09553-33757-36112 Livigren#Age: 194, Born: Au Es#";
global.killdataname[724]="Sector X#Komato Berserker 56782-24451-89655 Niodely#Age: 205, Born: Klasmanio#";
global.killdataname[725]="Sector X#Komato Trooper 87041-92210-38876 Ottohas Sha#Age: 129, Born: Klasmanio#";
global.killdataname[726]="Sector X#Komato Annihilator 32218-49301-79741 Vasa#Age: 92, Born: Imperial Research outer colony 2#";
global.killdataname[727]="Sector X#Komato Trooper 38075-71960-83488 Nasatorai#Age: 137, Born: Turohauk#";
global.killdataname[728]="Sector X#Komato Berserker 93015-09243-34429 Voe Ikahas#Age: 80, Born: Mashajhok Kasa outer colony 63#";
global.killdataname[729]="Sector X#Komato Beast 04841-51418-95968 Hassali#Age: 36, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[730]="Sector X#Komato Beast 00874-25420-07667 Viri#Age: 24, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[731]="Sector X#Komato Trooper 11666-46731-42372 Ba Waturi#Age: 224, Born: Antarisho outer colony 6#";
global.killdataname[732]="Sector X#Komato Beast 03694-72920-70465 Yiyu Qyan#Age: 33, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[733]="Sector X#Komato Trooper 07115-31243-46526 Batasa#Age: 104, Born: Antarisho outer colony 20#";
global.killdataname[734]="Sector X#Komato Trooper 57120-58306-32630 Yuta#Age: 23, Born: Turohauk outer colony 64#";
global.killdataname[735]="Sector X#Komato Trooper 41397-15975-96699 Una#Age: 296, Born: Tadezocora#";
global.killdataname[736]="Sector X#Komato Trooper 60746-04073-06304 Fahasma#Age: 148, Born: Mashajhok Kasa outer colony 64#";
global.killdataname[737]="Sector X#Komato Trooper 53772-40667-44948 Zon Hemriesk#Age: 39, Born: Au Es outer colony 30#";
global.killdataname[738]="Sector X#Komato Berserker 88692-48383-08977 Petorel#Age: 167, Born: Turohauk#";
global.killdataname[739]="Sector X#Komato Trooper 08248-69930-63977 Ausu#Age: 204, Born: Au Es outer colony 76#";
global.killdataname[740]="Sector X#Komato Trooper 72462-73693-08864 Tetorni Hasot#Age: 86, Born: Au Es#";
global.killdataname[741]="Sector X#Komato Trooper 73876-50556-73628 Jexao Haasa#Age: 109, Born: Mashajhok Kasa outer colony 79#";
global.killdataname[742]="Sector X#Komato Trooper 49105-40017-68298 Shokaiya#Age: 278, Born: Antarisho#";
global.killdataname[743]="Sector X#Komato Trooper 63723-22941-04293 Liquh Yirai#Age: 183, Born: Klasmanio#";
global.killdataname[744]="Sector X#Komato Trooper 63799-19780-70131 Mateii#Age: 292, Born: Klasmanio outer colony 8#";
global.killdataname[745]="Sector X#Komato Annihilator 55495-62937-42191 Siena#Age: 54, Born: Imperial Research outer colony 2#";
global.killdataname[746]="Sector X#Komato Trooper 84117-18178-73208 Yahesk#Age: 186, Born: Mashajhok Kasa#";
global.killdataname[747]="Sector X#Komato Trooper 37486-40518-14866 Ni Hato#Age: 106, Born: Mashajhok Kasa#";
global.killdataname[748]="Sector X#Komato Trooper 63705-05132-42722 Buzon#Age: 137, Born: Au Es outer colony 5#";
global.killdataname[749]="Sector X#Komato Trooper 23203-19479-98625 Pean#Age: 249, Born: Au Es#";
global.killdataname[750]="Sector X#Komato Berserker 70738-91774-92551 Cerisha#Age: 97, Born: Turohauk outer colony 70#";
global.killdataname[751]="Sector X#Komato Berserker 79616-20706-32645 Tor Rosun#Age: 198, Born: Tadezocora outer colony 157#";
global.killdataname[752]="Sector X#Komato Trooper 68501-46494-37636 Yuroi Kahel#Age: 287, Born: Klasmanio#";
global.killdataname[753]="Sector X#Komato Trooper 59151-60258-28269 Ateesto#Age: 59, Born: Mashajhok Kasa#";
global.killdataname[754]="Sector X#Komato Berserker 48488-09462-97236 Roxayi#Age: 159, Born: Tadezocora#";
global.killdataname[755]="Sector X#Komato Assassin 51001-89645-20042 Asha#Age: 44, Born: Turohauk outer colony 78#";
global.killdataname[756]="Sector X#Komato Berserker 57512-49441-69916 Baviem#Age: 116, Born: Antarisho#";
global.killdataname[757]="Sector X#Komato Trooper 95418-31578-60062 Xusakya#Age: 264, Born: Tadezocora#";
global.killdataname[758]="Sector X#Komato Trooper 91059-23908-05453 Otber#Age: 208, Born: Antarisho outer colony 5#";
global.killdataname[759]="Sector X#Komato Trooper 80984-00939-59484 Torash#Age: 179, Born: Au Es#";
global.killdataname[760]="Sector X#Komato Trooper 78741-85809-28710 Rai Ke#Age: 42, Born: Ika outer colony 9#";
global.killdataname[761]="Sector X#Komato Trooper 32196-91005-22967 Yugewu Shasha#Age: 109, Born: Klasmanio outer colony 26#";
global.killdataname[762]="Sector X#Komato Trooper 90475-36203-57827 Zekailo#Age: 139, Born: Mashajhok Kasa#";
global.killdataname[763]="Sector X#Komato Trooper 87265-32569-23592 Tarixuro#Age: 288, Born: Turohauk outer colony 43#";
global.killdataname[764]="Sector X#Komato Berserker 98159-36402-76887 Xubusak#Age: 153, Born: Antarisho#";
global.killdataname[765]="Sector X#Komato Trooper 27966-34987-36865 Shaba#Age: 115, Born: Au Es outer colony 64#";
global.killdataname[766]="Sector X#Komato Berserker 73859-39682-49292 Anbevi#Age: 59, Born: Ika outer colony 11#";
global.killdataname[767]="Sector X#Komato Berserker 00034-19034-29721 Hariewu Cekai#Age: 64, Born: Klasmanio outer colony 43#";
global.killdataname[768]="Sector X#Komato Berserker 01989-81138-68812 Cosaeco#Age: 76, Born: Mashajhok Kasa outer colony 48#";
global.killdataname[769]="Sector X#Komato Berserker 05629-92837-50068 Qygren#Age: 31, Born: Au Es#";
global.killdataname[770]="Sector X#Komato Berserker 70078-51119-37474 Viramah#Age: 257, Born: Mashajhok Kasa outer colony 41#";
global.killdataname[771]="Sector X#Komato Annihilator 92347-86529-67587 Saejao Buhastahel#Age: 60, Born: Imperial Research outer colony 4#";
global.killdataname[772]="Sector X#Komato Berserker 60935-44387-46670 Tormaebu#Age: 202, Born: Mashajhok Kasa#";
global.killdataname[773]="Sector X#Komato Berserker 97339-78841-01122 Feirakotem#Age: 88, Born: Mashajhok Kasa#";
global.killdataname[774]="Sector X#Komato Trooper 19264-69898-26190 Yahra#Age: 97, Born: Ika#";
global.killdataname[775]="Sector X#Komato Trooper 64653-97228-96005 Xuhauk Cozea#Age: 132, Born: Mashajhok Kasa#";
global.killdataname[776]="Sector X#Komato Beast 55523-98490-22185 Gejacora#Age: 33, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[777]="Sector X#Komato Trooper 95535-73580-48254 Xadelhauk#Age: 102, Born: Mashajhok Kasa outer colony 53#";
global.killdataname[778]="Sector X#Komato Trooper 31612-49168-08956 Tebusjua#Age: 241, Born: Antarisho outer colony 4#";
global.killdataname[779]="Sector X#Komato Trooper 59093-93709-72322 Sha Vaemash#Age: 275, Born: Mashajhok Kasa outer colony 63#";
global.killdataname[780]="Sector X#Komato Beast 43175-85046-83218 Auwak#Age: 37, Converted: Fleet 1089 Cybernetics wing#";
global.killdataname[781]="Sector X#Komato Trooper 63298-02537-34012 Yufei#Age: 107, Born: Mashajhok Kasa#";
global.killdataname[782]="Sector X#Komato Berserker 56174-25962-62131 Bauni Ce#Age: 72, Born: Klasmanio#";
global.killdataname[783]="Sector X#Komato Berserker 50137-37236-26644 Vazonja#Age: 155, Born: Tadezocora#";
global.killdataname[784]="Sector X#Komato Trooper 17581-41432-08954 Au Wuria#Age: 44, Born: Turohauk#";
global.killdataname[785]="Sector X#Komato Trooper 86848-18456-92100 Tupei#Age: 119, Born: Tadezocora outer colony 38#";
global.killdataname[786]="Sector X#Komato Trooper 70584-41408-29829 Dejama#Age: 97, Born: Mashajhok Kasa outer colony 61#";
global.killdataname[787]="Sector X#Komato Trooper 31661-37039-59848 Kerohasel#Age: 54, Born: Au Es outer colony 27#";
global.killdataname[788]="Sector X#Komato Trooper 07723-29283-93695 Jaau#Age: 70, Born: Turohauk#";
global.killdataname[789]="Sector X#Komato Trooper 21818-81214-13852 Satesja#Age: 93, Born: Au Es#";
global.killdataname[790]="Sector X#Komato Trooper 18038-99852-43334 Auzefei#Age: 160, Born: Antarisho#";
global.killdataname[791]="Sector X#Komato Trooper 78015-77032-54731 Cati Ketosun#Age: 295, Born: Tadezocora#";
global.killdataname[792]="Sector X#Komato Annihilator 65140-33906-13625 Tubuvak Asna#Age: 51, Born: Imperial Research outer colony 4#";
global.killdataname[793]="NONAME#";
global.killdataname[794]="NONAME#";
global.killdataname[795]="NONAME#";
global.killdataname[796]="NONAME#";
global.killdataname[797]="NONAME#"; //Iosa was spared
global.killdataname[798]="NONAME#"; //General Tor was killed
global.killdataname[799]="NONAME#"; //Used for saving global.passive

#define scr_herosabot
//Failsafe: quit
if (keyboard_check(vk_f12)){
    f12quit+=1;
    if (f12quit>=25){
        sound_stop_all();
        game_end();
        }
    }
else
    f12quit=0;

//INITIALIZE
if (!initialized){
if (!superinitialized){
    superinitialized=1;
    skill=0;
    skill2=1;
    if (room==rom_main){
        with (obj_face){
            scr_music("mus_hero3d");
            }
        }
    else{
        with (obj_sabot){
            scr_music("mus_hero3d");
            }
        }
    }
sentineldestroyed=0;
screenflash=250;
initialized=1;
maininitialized=0;
y1=300;
y2=300;
x1=-100;
sweepz=1;
sweepcycle=0;
sweepcycle2=0;
sweepdirection=0;
instance_create(400,300,obj_hero);
viewx=0;
viewy=0;
viewxprevious=0;
viewyprevious=0;
velocityx=0;
velocityy=0;
bouncing=0;
megamissile=0;
restartcycle=0;
ignoremove=7;
scr_heroopenlevel();
if (level==8)
    sentineldestroyed=1;
}

if (ignoremove>0)
    ignoremove-=1;

//CONTROL HERO AND ADJUST SABOT'S VIEW
if (instance_number(obj_hero)==1 && ignoremove==0){
if (keyboard_check(vk_left))
    velocityx-=2;
else if (keyboard_check(vk_right))
    velocityx+=2;
else{
    if (velocityx>0)
        velocityx-=1;
    else if (velocityx<0)
        velocityx+=1;
    }
if (keyboard_check(vk_up))
    velocityy-=2;
else if (keyboard_check(vk_down))
    velocityy+=2;
else{
     if (velocityy>0)
        velocityy-=1;
    else if (velocityy<0)
        velocityy+=1;
    }

if (velocityx>6)
    velocityx=6;
if (velocityx<-6)
    velocityx=-6;
if (velocityy>6)
    velocityy=6;
if (velocityy<-6)
    velocityy=-6;

//MOVE VIEW
viewxprevious=viewx;
viewyprevious=viewy;
viewx+=velocityx;
viewy+=velocityy;
}

//MOVE OTHER OBJECTS
with (obj_heroshot){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_heroexplo){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_heroexplo2){
    x-=obj_herosabot.velocityx/100;
    y-=obj_herosabot.velocityy/100;
    }
with (obj_herodrone){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_herocrusher){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_herogenerator){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_herobarrier){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_heromine){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_herolife){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_herogoal){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_herorobo){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }
with (obj_heroflower){
    x-=obj_herosabot.velocityx;
    y-=obj_herosabot.velocityy;
    }

//COLLISIONS + AI
with (obj_hero){
if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="1")
    scr_herodeath();
if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="6")
    scr_herodeath();
    }
with (obj_heroshot){
if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="1")
    instance_destroy();
    }
with (obj_herodrone){
    movecycle+=1;
    if (movecycle>=60 && (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]!="1")){
        movecycle=0;
        if (point_distance(x,y,obj_hero.x,obj_hero.y)<300)
            direction=point_direction(x,y,400,300);
        else
            direction=random(360);
        }
    if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="1")
        direction+=180;
    }
with (obj_herocrusher){
    movecycle+=1;
    if (movecycle>=30 && (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]!="1")){
        movecycle=0;
        if (point_distance(x,y,obj_hero.x,obj_hero.y)<300)
            direction=point_direction(x,y,400,300);
        else
            direction=random(360);
        }
    if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="1")
        direction+=180;
    }
with (obj_herorobo){
    movecycle+=1;
    if (movecycle==60 && (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]!="1")){
        direction=point_direction(x,y,400,300);
        if (instance_number(obj_hero)==1)
            (instance_create(x,y,obj_heromine)).direction+=random(40)-20;
        }
    if (movecycle>=120 && (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]!="1")){
        direction=random(360);
        if (instance_number(obj_hero)==1)
            instance_create(x,y,obj_heromine);
        movecycle=0;
        }
    if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="1")
        direction+=180;
    }
with (obj_heromegamissile){
    if (x==400 && y==300){
        scr_heroexplo();
        scr_heroexplo(-32,-32);
        scr_heroexplo(-32,+32);
        scr_heroexplo(+32,-32);
        scr_heroexplo(+32,+32);
        if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]!="2"){
            instance_destroy();
            scr_herodeath();
            }
        if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="2"){
            instance_destroy();
            obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]="0";
            }
        }
    }
with (obj_heromine){
    if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]=="1"){
        instance_destroy();
        scr_heroexplo();
        }
    }

//DRAW BACKGROUND
if (screenflash>0){
    screenflash-=25;
    draw_set_color(make_color_rgb(screenflash,screenflash,screenflash));
    }
else
    draw_set_color(c_black);
draw_rectangle(-4,-4,804,604,0);

//DRAW GROUND AND SENTINEL
draw_set_color(make_color_rgb(50,50,50));
draw_line(0,416-(viewy/10),800,416-(viewy/10));
draw_line(0,440-(viewy/8),800,440-(viewy/8));
draw_line(0,485-(viewy/6),800,485-(viewy/6));
draw_line(0,570-(viewy/4),800,570-(viewy/4));
draw_line(0,800-(viewy/2),800,800-(viewy/2));
draw_line(0,1300-(viewy/1),800,1300-(viewy/1));
if (!sentineldestroyed){
    if (screenflash>0)
        draw_set_color(make_color_rgb(screenflash,screenflash,screenflash));
    else
        draw_set_color(c_black);
    draw_rectangle(368-(viewx/10),384-(viewy/10),432-(viewx/10),420-(viewy/10),0);
    draw_set_color(make_color_rgb(50,50,50));
    draw_rectangle(368-(viewx/10),384-(viewy/10),432-(viewx/10),420-(viewy/10),1);
    draw_line(384-(viewx/10),384-(viewy/10),400-(viewx/10),300-(viewy/10));
    draw_line(400-(viewx/10),300-(viewy/10),416-(viewx/10),384-(viewy/10));
    }

//Sentinel sweep Y
if (sweepdirection==0){
    sweepcycle+=1*skill2;
    if (skill2==1)
        swadjust=0;
    else
        swadjust=+50;
    if (sweepcycle>=100+swadjust)
        sweepdirection=1;
    }
else{
    sweepcycle-=1*skill2;
    if (sweepcycle==0){
        sweepdirection=0;
        y1=300-(viewy/10);
        y2=300-(viewy/10);
        if (sweepz==1){
            x1=10000;
            sweepcycle2=0;
            sweepz=0;
            }
        else{
            x1=-100;
            sweepcycle2=0;
            sweepz=1;
            }
        }
    }
if (sweepdirection==0){
    y1-=sweepcycle/8;
    y2+=sweepcycle/8;
    }
else{
    y1+=sweepcycle/8;
    y2-=sweepcycle/8;
    }

if (y1>300-(viewy/10))
    y1=300-(viewy/10);
if (y2<300-(viewy/10))
    y2=300-(viewy/10);

//Sentinel sweep X
if (sweepz==0){
    if (x1<400)
        sweepcycle2+=2*skill2;
    else
        sweepcycle2-=2*skill2;
    }
else{
    if (x1<400)
        sweepcycle2+=0.1*skill2;
    else
        sweepcycle2-=0.1*skill2;
    }

if (sweepdirection2==0)
    x1+=sweepcycle2;
else
    x1-=sweepcycle2;

//Sentinel sweep DRAW
if (!sentineldestroyed){
draw_set_color(make_color_rgb(100,100,100));
if (sweepz==0){
    draw_line(400-(viewx/10),300-(viewy/10),x1,y1);
    draw_line(400-(viewx/10),300-(viewy/10),x1,y2);
    }
else
    draw_line(400-(viewx/10),300-(viewy/10),x1,300-(viewy/10));
}

//DRAW MEGAMISSILES
with (obj_heroexplo2){
    draw_set_color(c_gray);
    draw_circle(x,y,alarm[0]/6,1);
    }
draw_set_color(c_black);
with (obj_heromegamissile){
    draw_circle(x,y,size/1000,0);
    draw_circle(x,y,size/1200,0);
    }
draw_set_color(make_color_rgb(150,150,150));
with (obj_heromegamissile){
    draw_circle(x,y,size/1000,1);
    draw_circle(x,y,size/1200,1);
    draw_line(x-size/1800,y-size/1800,x+size/1800,y+size/1800);
    draw_line(x+size/1800,y-size/1800,x-size/1800,y+size/1800);
    }

//Sentinel sweep FLASH
if (abs(x1-400-(viewx/100))<100 && sweepz==0 && !sentineldestroyed){
    draw_set_color(make_color_rgb(250,250,250));
    draw_rectangle(0,0,800,600,0);
    //Launch megamissile
    if (!megamissile){
        with (obj_hero){
            if (obj_herosabot.levelarray[floor((x+560+obj_herosabot.viewx)/128),floor((y+660+obj_herosabot.viewy)/128)]!="2"){
                instance_create(400-(obj_herosabot.viewx/10),300-(obj_herosabot.viewy/10),obj_heromegamissile);
                obj_herosabot.megamissile=1;
                }
            }
        }
    }
else if (abs(x1-400-(viewx/100))<400 && sweepz==0 && !sentineldestroyed){
    draw_set_color(make_color_rgb(120,120,120));
    draw_rectangle(0,0,800,600,0);
    megamissile=0;
    }

//DRAW LEVEL
draw_set_color(c_black);
for (i=0; i<15; i+=1){
    for (j=0; j<15; j+=1){
        if (levelarray[i,j]=="2" && 96*i-viewx*0.75-224>0 && 96*i-viewx*0.75-224<896 && 96*j-viewy*0.75-324>0 && 96*j-viewy*0.75-324<696){
            draw_set_color(c_black);
            draw_rectangle(96*i-44-viewx*0.75-272,96*j-44-viewy*0.75-372,96*i+44-viewx*0.75-272,96*j+44-viewy*0.75-372,0)
            draw_set_color(make_color_rgb(120,120,120));
            draw_rectangle(96*i-44-viewx*0.75-272,96*j-44-viewy*0.75-372,96*i+44-viewx*0.75-272,96*j+44-viewy*0.75-372,1)
            draw_line(96*i-44-viewx*0.75-272,96*j-44-viewy*0.75-372,96*i+44-viewx*0.75-272,96*j+44-viewy*0.75-372)
            draw_line(96*i+44-viewx*0.75-274,96*j-44-viewy*0.75-371,96*i-44-viewx*0.75-272,96*j+44-viewy*0.75-373)
            }
        }
    }
if (fgrf>0)
    fgrf-=2;
if (ultrashake>0){
    ultrashake-=0.5;
    }
for (i=0; i<15; i+=1){
    for (j=0; j<15; j+=1){
        if (levelarray[i,j]=="1" && 128*i-viewx-432>0 && 128*i-viewx-432<928 && 128*j-viewy-532>0 && 128*j-viewy-532<728){
            draw_set_color(make_color_rgb(250,250,250));
            draw_rectangle(128*i-60-viewx-496+random(fgrf)-(fgrf/2),128*j-60-viewy-596+random(fgrf)-(fgrf/2),128*i+60-viewx-496+random(fgrf)-(fgrf/2),128*j+60-viewy-596+random(fgrf)-(fgrf/2),1);
            }
        }
    }

//DRAW LIVES
if (herolives>0){
    lifeadjust=0;
    repeat(herolives){
        lifeadjust+=1;
        draw_set_color(c_white);
        draw_line(16+lifeadjust*16,32,16+lifeadjust*16,16);
        draw_line(16+lifeadjust*16,16,24+lifeadjust*16,20);
        draw_line(24+lifeadjust*16,20,16+lifeadjust*16,24);
        }
    }

//DRAW LEVEL INDICATOR 0-8
draw_set_color(c_white);
templevel=level;
drawlevel1=0;
drawlevel2=0;
drawlevel3=0;
while (templevel>0){
    templevel-=1;
    drawlevel1+=1;
    if (drawlevel1==3){
        drawlevel1=0;
        drawlevel2+=1;
        if (drawlevel2==3){
            drawlevel2=0;
            drawlevel3+=1;
            }
        }
    }
dlxa=20;
dlya=-8;
draw_line(12+dlxa,572+dlya,12+dlxa,588+dlya);
draw_line(8+dlxa,588-drawlevel1*8+dlya,16+dlxa,588-drawlevel1*8+dlya);
if (level>=3){
    draw_line(24+dlxa,572+dlya,24+dlxa,588+dlya);
    draw_line(20+dlxa,588-drawlevel2*8+dlya,28+dlxa,588-drawlevel2*8+dlya);
    }

//NO HERO
if (instance_number(obj_hero)==0){
    restartcycle+=1;
    if (restartcycle==60){
        if (herolives>0)
            scr_herospawnlevel();
        else{
            herolives=3;        
            if (level>0)
                level-=1;
            scr_heroopenlevel();
            scr_herospawnlevel();
            //playing=0;
            //startplaying=0;
            //scr_herodestroy();
            //repeat(5)
            //    sound_stop(snd_glo_hero3d);
            }
        herolives-=1;
        }
    }
#define scr_heromain
//Wobble text
if (!maininitialized){
    obj_sabot.herochat=0;
    initialized=0;
    herolives=2;
    mxaspeed=0.1;
    myaspeed=0.09;
    mxadirection=0;
    myadirection=0;
    maininitialized=1;
    rf=0;
    spcycle=0;
    startplaying=0;
    mainpulse1direction=0;
    mainpulse2direction=0;
    mainpulse2direction=0;
    mainpulse1=100;
    mainpulse2=250;
    mainpulse3=100;
    }
if (mxaspeed>=0.1)
    mxadirection=0;
if (mxaspeed<=-0.1)
    mxadirection=1;

if (mxadirection==0)
    mxaspeed-=0.02;
else
    mxaspeed+=0.02;
mxatemp+=mxaspeed/6;
mxa=mxatemp+1.1;
mxa2=-60;

if (myaspeed>=0.09)
    myadirection=0;
if (myaspeed<=-0.09)
    myadirection=1;

if (myadirection==0)
    myaspeed-=0.02;
else
    myaspeed+=0.02;
myatemp+=myaspeed/6;
mya=myatemp+1.1;
mya2=-10;

if (startplaying==1){
    spcycle+=1;
    rf+=spcycle;
    }
if (spcycle>=30){
    startplaying=0;
    playing=1;
    }

draw_set_color(c_black);
draw_rectangle(-4,-4,804,604,0);

//Color text
if (startplaying==0){
if (mainpulse1direction==0)
    mainpulse1+=9;
else
    mainpulse1-=9;
if (mainpulse1>=245 && mainpulse1direction==0)
    mainpulse1direction=1;
if (mainpulse1<=50 && mainpulse1direction==1)
    mainpulse1direction=0;

if (mainpulse2direction==0)
    mainpulse2+=8;
else
    mainpulse2-=8;
if (mainpulse2>=245 && mainpulse2direction==0)
    mainpulse2direction=1;
if (mainpulse2<=50 && mainpulse2direction==1)
    mainpulse2direction=0;

if (mainpulse3direction==0)
    mainpulse3+=7;
else
    mainpulse3-=7;
if (mainpulse3>=245 && mainpulse3direction==0)
    mainpulse3direction=1;
if (mainpulse3<=50 && mainpulse3direction==1)
    mainpulse3direction=0;
}
else{
    mainpulse1-=10;
    mainpulse2-=10;
    mainpulse3-=10;
    }
if (mainpulse1<0)
    mainpulse1=0;
if (mainpulse2<0)
    mainpulse2=0;
if (mainpulse3<0)
    mainpulse3=0;

draw_set_color(make_color_rgb(mainpulse1,mainpulse2,mainpulse3));

//H
draw_line(96*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),96*mxa+mxa2+random(rf)-(rf/2),225*mya+mya2+random(rf)-(rf/2));
draw_line(96*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2),160*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2));
draw_line(160*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),160*mxa+mxa2+random(rf)-(rf/2),225*mya+mya2+random(rf)-(rf/2));
//E
draw_line(256*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),192*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2));
draw_line(192*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),192*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(192*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),257*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(192*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2),225*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2));
//R
draw_line(288*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),288*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(288*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),352*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(352*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),352*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2));
draw_line(352*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2),288*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2));
draw_line(288*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2),353*mxa+mxa2+random(rf)-(rf/2),225*mya+mya2+random(rf)-(rf/2));
//O
draw_line(384*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),384*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(384*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),448*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(448*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),448*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2));
draw_line(448*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),384*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2));
//3
draw_line(544*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),608*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2));
draw_line(608*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),608*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(608*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),543*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(608*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2),575*mxa+mxa2+random(rf)-(rf/2),160*mya+mya2+random(rf)-(rf/2));
//D
draw_line(640*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),640*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(640*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),672*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2));
draw_line(672*mxa+mxa2+random(rf)-(rf/2),96*mya+mya2+random(rf)-(rf/2),704*mxa+mxa2+random(rf)-(rf/2),128*mya+mya2+random(rf)-(rf/2));
draw_line(704*mxa+mxa2+random(rf)-(rf/2),128*mya+mya2+random(rf)-(rf/2),704*mxa+mxa2+random(rf)-(rf/2),192*mya+mya2+random(rf)-(rf/2));
draw_line(704*mxa+mxa2+random(rf)-(rf/2),192*mya+mya2+random(rf)-(rf/2),672*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2));
draw_line(672*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2),640*mxa+mxa2+random(rf)-(rf/2),224*mya+mya2+random(rf)-(rf/2));
//BOXES
draw_line(208*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2),208*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2));
draw_line(208*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2),336*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2));
draw_line(336*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2),336*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2));
draw_line(336*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2),208*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2));
draw_line(272*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2),272*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2));
draw_line(400*mxa+mxa2+random(rf)-(rf/2),448*mya+mya2+random(rf)-(rf/2),400*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2));
draw_line(400*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2),592*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2));
draw_line(592*mxa+mxa2+random(rf)-(rf/2),384*mya+mya2+random(rf)-(rf/2),592*mxa+mxa2+random(rf)-(rf/2),448*mya+mya2+random(rf)-(rf/2));
draw_line(592*mxa+mxa2+random(rf)-(rf/2),448*mya+mya2+random(rf)-(rf/2),400*mxa+mxa2+random(rf)-(rf/2),448*mya+mya2+random(rf)-(rf/2));
draw_line(464*mxa+mxa2+random(rf)-(rf/2),448*mya+mya2+random(rf)-(rf/2),464*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2));
draw_line(464*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2),528*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2));
draw_line(528*mxa+mxa2+random(rf)-(rf/2),320*mya+mya2+random(rf)-(rf/2),528*mxa+mxa2+random(rf)-(rf/2),448*mya+mya2+random(rf)-(rf/2));
//1
draw_line(224*mxa+mxa2+random(rf)-(rf/2),368*mya+mya2+random(rf)-(rf/2),256*mxa+mxa2+random(rf)-(rf/2),368*mya+mya2+random(rf)-(rf/2));
draw_line(240*mxa+mxa2+random(rf)-(rf/2),368*mya+mya2+random(rf)-(rf/2),240*mxa+mxa2+random(rf)-(rf/2),336*mya+mya2+random(rf)-(rf/2));
draw_line(240*mxa+mxa2+random(rf)-(rf/2),336*mya+mya2+random(rf)-(rf/2),224*mxa+mxa2+random(rf)-(rf/2),352*mya+mya2+random(rf)-(rf/2));
//2
draw_line(320*mxa+mxa2+random(rf)-(rf/2),368*mya+mya2+random(rf)-(rf/2),288*mxa+mxa2+random(rf)-(rf/2),368*mya+mya2+random(rf)-(rf/2));
draw_line(288*mxa+mxa2+random(rf)-(rf/2),368*mya+mya2+random(rf)-(rf/2),320*mxa+mxa2+random(rf)-(rf/2),344*mya+mya2+random(rf)-(rf/2));
draw_line(320*mxa+mxa2+random(rf)-(rf/2),344*mya+mya2+random(rf)-(rf/2),304*mxa+mxa2+random(rf)-(rf/2),336*mya+mya2+random(rf)-(rf/2));
draw_line(304*mxa+mxa2+random(rf)-(rf/2),336*mya+mya2+random(rf)-(rf/2),288*mxa+mxa2+random(rf)-(rf/2),344*mya+mya2+random(rf)-(rf/2));
//ARROW LEFT
draw_line(432*mxa+mxa2+random(rf)-(rf/2),400*mya+mya2+random(rf)-(rf/2),416*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2));
draw_line(448*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2),416*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2));
draw_line(432*mxa+mxa2+random(rf)-(rf/2),432*mya+mya2+random(rf)-(rf/2),416*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2));
//ARROW UP
draw_line(480*mxa+mxa2+random(rf)-(rf/2),352*mya+mya2+random(rf)-(rf/2),496*mxa+mxa2+random(rf)-(rf/2),336*mya+mya2+random(rf)-(rf/2));
draw_line(496*mxa+mxa2+random(rf)-(rf/2),368*mya+mya2+random(rf)-(rf/2),496*mxa+mxa2+random(rf)-(rf/2),336*mya+mya2+random(rf)-(rf/2));
draw_line(512*mxa+mxa2+random(rf)-(rf/2),352*mya+mya2+random(rf)-(rf/2),496*mxa+mxa2+random(rf)-(rf/2),336*mya+mya2+random(rf)-(rf/2));
//ARROW RIGHT
draw_line(560*mxa+mxa2+random(rf)-(rf/2),400*mya+mya2+random(rf)-(rf/2),576*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2));
draw_line(544*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2),576*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2));
draw_line(560*mxa+mxa2+random(rf)-(rf/2),432*mya+mya2+random(rf)-(rf/2),576*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2));
//ARROW DOWN
draw_line(480*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2),496*mxa+mxa2+random(rf)-(rf/2),432*mya+mya2+random(rf)-(rf/2));
draw_line(496*mxa+mxa2+random(rf)-(rf/2),400*mya+mya2+random(rf)-(rf/2),496*mxa+mxa2+random(rf)-(rf/2),432*mya+mya2+random(rf)-(rf/2));
draw_line(512*mxa+mxa2+random(rf)-(rf/2),416*mya+mya2+random(rf)-(rf/2),496*mxa+mxa2+random(rf)-(rf/2),432*mya+mya2+random(rf)-(rf/2));
#define scr_heroopenlevel
//   0 empty       1 solid       2 cover
//   3 DRONE       4 CRUSHER     5 GENERATOR
//   6 barrier     7 life        8 goal
//   9 ROBOHERO    A flower

if (level==0){
if (obj_sabot.herochat<1)
    obj_sabot.herochat=1;
 temp0="000111111111111";
 temp1="000171200600021";
 temp2="011121000600381";
 temp3="010301020111111";
 temp4="010111000100000";
 temp5="010006000100000";
 temp6="011111000100000";
 temp7="000001222100000";
 temp8="000001000100000";
 temp9="000001000111111";
temp10="000001020120001";
temp11="011111000120051";
temp12="012200000000001";
temp13="013002000220021";
temp14="011111111111111";
}

if (level==1){
if (obj_sabot.herochat<2)
    obj_sabot.herochat=2;
 temp0="000001110000000";
 temp1="000001810000000";
 temp2="111111311111111";
 temp3="100010013000001";
 temp4="120020012111101";
 temp5="100010317100601";
 temp6="116111111100111";
 temp7="012400222000210";
 temp8="111001111100111";
 temp9="100002010200001";
temp10="100002010200001";
temp11="120002353200021";
temp12="111111111111111";
temp13="000000000000000";
temp14="000000000000000";
}

if (level==2){
 temp0="111111111110000";
 temp1="100060000011100";
 temp2="100010000068100";
 temp3="100010020011100";
 temp4="100010000010000";
 temp5="101111121111100";
 temp6="101302000203100";
 temp7="101111020111100";
 temp8="101302000203100";
 temp9="101111121111100";
temp10="100012000210000";
temp11="100010000011100";
temp12="120010000002100";
temp13="174012000035100";
temp14="111111111111100";
}

if (level==3){
 temp0="011111111111110";
 temp1="116000020004711";
 temp2="186000000000031";
 temp3="111002100002001";
 temp4="100000000001001";
 temp5="102000000000001";
 temp6="100000000000201";
 temp7="140000020000191";
 temp8="120000000000001";
 temp9="100000000000021";
temp10="112111121111001";
temp11="100100021200001";
temp12="100202111001001";
temp13="114100052002311";
temp14="011111111111110";
}

if (level==4){
 temp0="000000000111111";
 temp1="011111000100471";
 temp2="018301000100041";
 temp3="010201111100001";
 temp4="010006000000001";
 temp5="011166010201111";
 temp6="000102000001000";
 temp7="011131020131110";
 temp8="013100000006210";
 temp9="016102010201610";
temp10="010000000000010";
temp11="010001111100010";
temp12="012006954600210";
temp13="011002060200110";
temp14="001111111111100";
}

if (level==5){
 temp0="000111111111000";
 temp1="000130252031000";
 temp2="000120000021000";
 temp3="111111121111111";
 temp4="120009101900021";
 temp5="100200202002001";
 temp6="161100111001001";
 temp7="108100222001231";
 temp8="161100111001001";
 temp9="100000232000001";
temp10="140000000000041";
temp11="111111161111111";
temp12="000000101000000";
temp13="000000171000000";
temp14="000000111000000";
}

if (level==6){
 temp0="000111111110000";
 temp1="000140000311100";
 temp2="000100000006111";
 temp3="011100000006071";
 temp4="110620090021611";
 temp5="100100212000001";
 temp6="100600000000001";
 temp7="105600020000091";
 temp8="100600000000001";
 temp9="140100212000001";
temp10="110620090021611";
temp11="011100000006081";
temp12="000100000006111";
temp13="000130000011100";
temp14="000111111110000";
}

if (level==7){
 temp0="111111111111111";
 temp1="190020090020681";
 temp2="100000000000161";
 temp3="100000000000001";
 temp4="120020020020021";
 temp5="100000000000001";
 temp6="100000000000001";
 temp7="170020020020001";
 temp8="100000000000001";
 temp9="100000000000001";
temp10="120020020020021";
temp11="100000000000001";
temp12="100000000000161";
temp13="190020090020651";
temp14="111111111111111";
}

if (level==8){
if (obj_sabot.herochat<3)
    obj_sabot.herochat=3;
if (skill==1 && obj_sabot.herochat<4)
    obj_sabot.herochat=4;
 temp0="000A000A000A000";
 temp1="A1111111111111A";
 temp2="110000000000011";
 temp3="18A0A00000A0A71";
 temp4="111111000111111";
 temp5="100000000000001";
 temp6="17A0A00000A0A71";
 temp7="11111A000A11111";
 temp8="000011101110000";
 temp9="000000101000000";
temp10="0000A01010A0000";
temp11="000011101110000";
temp12="000010000010000";
temp13="000017A0A710000";
temp14="00AA1111111AA00";
}

for (i=0; i<15; i+=1){
    levelarray[i,0]=string_char_at(temp0,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,1]=string_char_at(temp1,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,2]=string_char_at(temp2,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,3]=string_char_at(temp3,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,4]=string_char_at(temp4,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,5]=string_char_at(temp5,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,6]=string_char_at(temp6,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,7]=string_char_at(temp7,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,8]=string_char_at(temp8,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,9]=string_char_at(temp9,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,10]=string_char_at(temp10,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,11]=string_char_at(temp11,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,12]=string_char_at(temp12,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,13]=string_char_at(temp13,i+1);
    }
for (i=0; i<15; i+=1){
    levelarray[i,14]=string_char_at(temp14,i+1);
    }

//OBJECTS
for (i=0; i<15; i+=1){
    for (j=0; j<15; j+=1){
        if (levelarray[i,j]=="3"){
            instance_create(i*128-viewx-496,j*128-viewy-596,obj_herodrone);
            instance_create(i*128-viewx-496-32,j*128-viewy-596-32,obj_herodrone);
            instance_create(i*128-viewx-496+32,j*128-viewy-596+32,obj_herodrone);
            }
        if (levelarray[i,j]=="4")
            instance_create(i*128-viewx-496,j*128-viewy-596,obj_herocrusher);
        if (levelarray[i,j]=="5")
            instance_create(i*128-viewx-496,j*128-viewy-596,obj_herogenerator);
        if (levelarray[i,j]=="6")
            instance_create(i*128-viewx-496,j*128-viewy-596,obj_herobarrier);
        if (levelarray[i,j]=="7")
            instance_create(i*128-viewx-496,j*128-viewy-596,obj_herolife);
        if (levelarray[i,j]=="8")
            instance_create(i*128-viewx-496,j*128-viewy-596,obj_herogoal);
        if (levelarray[i,j]=="9")
            instance_create(i*128-viewx-496,j*128-viewy-596,obj_herorobo);
        if (levelarray[i,j]=="A")
            instance_create(i*128-viewx-496-64,j*128-viewy-596-64,obj_heroflower);
        }
    }
#define scr_hero
//INITIALIZE
if (!initialize){
initialize=1;
facing=1;
}

//DRAW
draw_set_color(c_white);
if (facing==0)
facing=-1;
draw_line(x-1*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+15+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x-1*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-16+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x-1*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-16+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x+5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-16+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x+5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-16+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x+8*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-13+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x+8*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-13+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x+8*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-9+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x+8*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-9+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x+5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-6+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x+5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-6+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x-5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-6+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x-5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-6+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x-9*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-2+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x-9*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-2+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x-9*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+4+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x-9*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+4+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x-5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+8+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x-5*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+8+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x-1*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+8+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x-1*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+8+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x+7*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+16+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x-1*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-1+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x+9*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-1+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x+9*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y-1+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x+7*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+1+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
draw_line(x+7*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+1+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),x-1*facing+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2),y+1+random(obj_herosabot.ultrashake)-(obj_herosabot.ultrashake/2));
if (facing==-1)
    facing=0;
#define scr_herodeath
with (obj_hero){
    instance_destroy();
    scr_heroexplo();
    }
with (obj_herosabot){
    velocityx=0;
    velocityy=0;
    }
#define scr_heroexplo
instance_create(x+argument0,y+argument1,obj_heroexplo);
instance_create(x-8+argument0,y-8+argument1,obj_heroexplo);
instance_create(x-8+argument0,y+8+argument1,obj_heroexplo);
instance_create(x+8+argument0,y-8+argument1,obj_heroexplo);
instance_create(x+8+argument0,y+8+argument1,obj_heroexplo);
#define scr_herospawnlevel
obj_herosabot.initialized=0;
scr_herodestroy();
#define scr_herodestroy
with (obj_hero)
    instance_destroy();
with (obj_heroshot)
    instance_destroy();
with (obj_herodrone)
    instance_destroy();
with (obj_herocrusher)
    instance_destroy();
with (obj_heromegamissile)
    instance_destroy();
with (obj_heroexplo)
    instance_destroy();
with (obj_heroexplo2)
    instance_destroy();
with (obj_herogenerator)
    instance_destroy();
with (obj_herobarrier)
    instance_destroy();
with (obj_heromine)
    instance_destroy();
with (obj_herolife)
    instance_destroy();
with (obj_herogoal)
    instance_destroy();
with (obj_herorobo)
    instance_destroy();
with (obj_heroflower)
    instance_destroy();

#define scr_firsttier
//Argument0 is megacharge
//Argument1 is cannot Stomp
if (argument1==0){
    totalweight=0;
    for (j=0; j<4; j+=1){
        for (i=0; i<weight[j]; i+=1){
            weightlist[totalweight]=j;
            totalweight+=1;
            }
        }
    weaponrand=weightlist[floor(random(totalweight))];
    }
else{
    totalweight=0;
    for (j=0; j<3; j+=1){
        for (i=0; i<weight[j]; i+=1){
            weightlist[totalweight]=j;
            totalweight+=1;
            }
        }
    weaponrand=weightlist[floor(random(totalweight))];
    }

//Three chargeballs?
if (instance_number(obj_chargeball)>=3 && argument0==1)
    megarand=1;
else
    megarand=0;

//Ripper always comes first, to intimidate
if (!firstripper){
    firstripper=1;
    weaponrand=2;
    }

//PHANTOM HAMMER / NANOSTORM
if (megarand==1){
    if (maxhp==1050)
        tempadjust=1;
    if (maxhp==1200)
        tempadjust=2;
    if (obj_tor.hp>=750+tempadjust*75){
        timeline_index=tim_phantom;
        timeline_position=0;
        }
    else{
        with (obj_chargeball){
            instance_create(x,y,obj_megaflash);
            repeat(25)
                instance_create(x,y,obj_nanostorm);
            instance_destroy();
            }
        (instance_create(x,y,obj_whiteblanket)).alarm[0]=2;
        }
    }

//RAGEBOMB
else if (weaponrand==0){
    scr_sound("tor_fire");
    scr_tor_fire();
    scr_shakescreen(3);
    repeat(potency[0]+1)
        instance_create(x-80,y+235,obj_ragebomb);
    weight[0]-=1;
    potencycount[0]+=1;
    }
//TYRIAN CLAW
else if (weaponrand==1){
    scr_sound("tor_fire");
    scr_tor_fire();
    scr_shakescreen(3);
    repeat((potency[1]*2)+2)
        instance_create(x-80,y+235,obj_tyrian);
    if (!obj_tortrigger.slowdowned){
        repeat(40-global.specialbake*30){
            tempid=instance_create(x-60+random(20),y+225+random(20),obj_detonatorspark);
            tempid.speed=5+random(21);
            tempid.direction=110+random(140);
            tempid.gravity=0.5;
            tempid.gravity_direction=tempid.direction+180;
            }
        }
    weight[1]-=1;
    potencycount[1]+=1;
    }
//RIPPER
else if (weaponrand==2){
    scr_sound("tor_fire");
    scr_tor_fire();
    scr_shakescreen(3);
    tempid=instance_create(x-80,y+235,obj_ripper);
    tempid.image_single=0;
    tempid.direction=116;
    tempid.speed=25-(15-potency[2]*3);
    tempid=instance_create(x-80,y+235,obj_ripper);
    tempid.image_single=1;
    tempid.direction=135;
    tempid.speed=60-(15-potency[2]*3);
    tempid=instance_create(x-80,y+235,obj_ripper);
    tempid.image_single=2;
    tempid.direction=180;
    tempid.speed=50-(15-potency[2]*3);
    tempid=instance_create(x-80,y+235,obj_ripper);
    tempid.image_single=3;
    tempid.direction=225;
    tempid.speed=60-(15-potency[2]*3);
    tempid=instance_create(x-80,y+235,obj_ripper);
    tempid.image_single=4;
    tempid.direction=244;
    tempid.speed=25-(15-potency[2]*3);
    weight[2]-=1;
    potencycount[2]+=1;
    }
//HEAVY STOMP
else if (weaponrand==3){
    scr_tor_stomp();
    superstomp=0;
    timeline_position+=18;
    weight[3]-=1;
    potencycount[3]+=1;
    }
#define scr_secondtier
//Argument0 is Charge
totalweight=0;
for (j=4; j<8; j+=1){
    for (i=0; i<weight[j]; i+=1){
        weightlist[totalweight]=j;
        totalweight+=1;
        }
    }
weaponrand=weightlist[floor(random(totalweight))];

//CHARGE
if (argument0==1){
    obj_tor.charging=1;        
    obj_tor.chargeamount=30;
    obj_tor.sndchargecyc=0;
    obj_tor.sndcharge=0;
    obj_tor.sndchargecycmax=15;
    }
//ARCH DEVASTATOR
else if (weaponrand==4){
    if (timeline_position<700)
        timeline_position+=30;
    scr_sound("tor_fire");
    scr_tor_fire();
    scr_shakescreen(3);
    tempid=instance_create(x-80,y+235,obj_komatompfb);
    tempid.speed=global.mpfbspeed-((5-potency[4])*5);
    if (instance_number(obj_iji)==1 && obj_iji.x<x-60)
        tempid.direction=point_direction(x-80,y+235,obj_iji.x+6,obj_iji.y+30);
    else
        tempid.direction=180;
    tempid.wakeless=1;
    if (obj_tortrigger.slowdowned)
        tempid.sparkless=1;
    tempid=instance_create(x-80,y+235,obj_komatompfb);
    tempid.speed=global.mpfbspeed-((5-potency[4])*5);
    tempid.direction=130;
    tempid.wakeless=1;
    if (obj_tortrigger.slowdowned)
        tempid.sparkless=1;
    tempid=instance_create(x-80,y+235,obj_komatompfb);
    tempid.speed=global.mpfbspeed-((5-potency[4])*5);
    tempid.direction=230;
    tempid.wakeless=1;
    if (obj_tortrigger.slowdowned)
        tempid.sparkless=1;
    tempid=instance_create(x-80,y+235,obj_komatompfb);
    tempid.speed=global.mpfbspeed-((5-potency[4])*5);
    tempid.direction=110;
    tempid.wakeless=1;
    if (obj_tortrigger.slowdowned)
        tempid.sparkless=1;
    tempid=instance_create(x-80,y+235,obj_komatompfb);
    tempid.speed=global.mpfbspeed-((5-potency[4])*5);
    tempid.direction=250;
    tempid.wakeless=1;
    if (obj_tortrigger.slowdowned)
        tempid.sparkless=1;
    if (!obj_tortrigger.slowdowned){
        repeat(40-global.specialbake*30){
            tempid=instance_create(x-60+random(20),y+225+random(20),obj_mpfbspark);
            tempid.speed=3+random(12);
            tempid.direction=110+random(140);
            tempid.gravity=0.6;
            tempid.gravity_direction=0;
            }
        }
    weight[4]-=1;
    potencycount[4]+=1;
    }
//ULTRA SHOTGUN
else if (weaponrand==5){
    if (timeline_position<700)
        timeline_position+=15;
    weight[5]-=1;
    potencycount[5]+=1;
    repeat(potency[5]+3)
        instance_create(view_xview[0]+random(obj_tor.x-view_xview[0]-60),view_yview[0]+190+random(260),obj_hypershotgun);
    hypershotgun=1;
    }
//RAGE BURST
else if (weaponrand==6){
    if (timeline_position<700)
        timeline_position+=30;
    scr_tor_stomp();
    scr_sound("tor_spark");
    superstomp=0;
    weight[6]-=1;
    potencycount[6]+=1;
    }
//FRACTAL ROCKETS
else if (weaponrand==7){
    scr_sound("tor_fire");
    scr_tor_fire();
    //if (timeline_position<650)
    //    obj_tortrigger.alarm[2]=40;
    scr_shakescreen(3);
    tempid=instance_create(x-80,y+235,obj_fractalrocket);
    tempid.direction=180;
    tempid.image_single=4;
    if (!obj_tortrigger.slowdowned){
        repeat(20-global.specialbake*15){
            tempid=instance_create(x-55+random(10),y+220+random(10),obj_bigsmoke);
            tempid.speed=3+random(8);
            tempid.direction=110+random(140);
            tempid.gravity=1;
            tempid.gravity_direction=90;
            }
        }
    weight[7]-=1;
    potencycount[7]+=1;
    }
#define scr_thirdtier
weaponrand=floor(random(3));

//Death hail always comes first
if (!firsthail){
    firsthail=1;
    weaponrand=0;
    }

//DEATH HAIL
if (weaponrand==0){
    if (global.difficulty==0 && !global.tormaximumcharge){
        if (hailtype<1)
            hailtype+=1;
        }
    else{
        if (hailtype<2)
            hailtype+=1;
        }
    obj_tor2.extend=1;
    obj_tor2.extendcyc=0;
    obj_tor2.alarm[0]=30;
    obj_tor2.alarm[1]=60;
    }

//ERUPTION
if (weaponrand==1){
    scr_sound("tor_eruption");
    instance_create(0,0,obj_eruptionslash);
    instance_create(background_x[0]+430,background_y[0]+363,obj_tor2muzzleflash);
    obj_tor2.alarm[3]=31-eruptiontype*4;
    timeline_position=165;
    showsafe=1;
    if (global.difficulty==0 && !global.tormaximumcharge){
        if (eruptiontype<1)
            eruptiontype+=1;
        }
    else{
        if (eruptiontype<2)
            eruptiontype+=1;
        }
    }

//MEGAMISSILE
if (weaponrand==2){
    obj_tor2.alarm[4]=1;
    obj_tor2.megamissilecyc=0;
    }

#define scr_rotate
//Rotate shape
//argument0 is seeking x(0) or y(1)
//argument1 is x value
//argument2 is y value
//argument3 is original angle
if (argument0==0)
    return(x+(sqrt(argument1*argument1+argument2*argument2)*global.lookupcos[floor((direction+argument3)*3)]));
if (argument0==1)
    return(y+(sqrt(argument1*argument1+argument2*argument2)*global.lookupsin[floor((direction+argument3)*3)]));
#define scr_findallangles
//In shape create event
for (i=0; i<points; i+=1){
    angle[i]=scr_findangle(shapex[i],shapey[i]);
    if (angle[i]<0)
        angle[i]+=360;
    else if (angle[i]>359)
        angle[i]-=360;
    }
#define scr_findangle
//argument0 is x
//argument1 is y
if (argument0==0)
argument0=0.001;
if (argument0>=0)
return(radtodeg(arctan(argument1/argument0)));
else
return(180+radtodeg(arctan(argument1/argument0)));
#define scr_createlookup
//Create lookup tables
for (i=0; i<2160; i+=1){
    global.lookupsin[i]=sin(degtorad(i/3));
    }
for (i=0; i<2160; i+=1){
    global.lookupcos[i]=cos(degtorad(i/3));
    }
#define scr_drawshape
//Draw Shape
if (!obj_tor.nodraw){
if (direction<0)
    direction+=360;
if (direction>359)
    direction-=360;
for (i=0; i<points; i+=1){
    if (bone==0){
        result[i,0]=x+shapex[i];
        result[i,1]=y+shapey[i];
        }
    else{
        result[i,0]=scr_rotate(0,shapex[i],shapey[i],angle[i]);
        result[i,1]=scr_rotate(1,shapex[i],shapey[i],angle[i]);
        }
    if (obj_tor.wobble>0){
        result[i,0]+=floor(random(obj_tor.wobble)*2)-obj_tor.wobble;
        result[i,1]+=floor(random(obj_tor.wobble)*2)-obj_tor.wobble;
        }
    }
if (obj_tor.wobble>0){
    draw_set_color(c_black);
    }
//Circle
if (circle){
    draw_ellipse(result[0,0]-width,result[0,1]-height,result[0,0]+width,result[0,1]+height,0);
    }
//Shape
else{
    draw_primitive_begin(pr_trianglefan);
    draw_vertex(result[0,0],result[0,1]);
    for (i=1; i<points; i+=1)
        draw_vertex(result[i,0],result[i,1]);
    draw_primitive_end();
    }

//Shadow
if (shadow>0 && !global.specialbake){
    shadow-=1;
    shadow2=shadowmax-shadow;
    shadowoff=shadow*4;
    shadowoff2=shadow*2;
    draw_set_color(c_black);
    //Shape
    if (!circle && !dot){
        for (i=0; i<points; i+=1){
            draw_primitive_begin(pr_trianglefan);
            draw_vertex(result[i,0]+shadow2*5,result[i,1]);
            draw_vertex(result[i,0]+600,result[i,1]-random(shadowoff2));
            draw_vertex(result[i,0]+400,result[i,1]+random(shadowoff2));
            draw_primitive_end();
            }
        }
    }

}
#define scr_getframe
//Tor: get full animation frame
bonedirections[0]=framedirections[frame,0];
for (i=2; i<10; i+=1)
    bonedirections[i]=framedirections[frame,i];
for (i=0; i<10; i+=1)
    bonepositionsx[i]=framepositionsx[frame,i];
for (i=0; i<10; i+=1)
    bonepositionsy[i]=framepositionsy[frame,i];
if (instance_number(obj_iji)==1 && obj_iji.x<x){
    ijixpz=obj_iji.x;
    ijiypz=obj_iji.y;
    }

look=360-point_direction(x+bonepositionsx[1],y+bonepositionsy[1],ijixpz,ijiypz);
repeat(20){
if (bonedirections[1]<look){
    bonedirections[1]+=0.25;
    if (bonedirections[1]>look)
        bonedirections[1]=look;
    }
else if (bonedirections[1]>look){
    bonedirections[1]-=0.25;
    if (bonedirections[1]<look)
        bonedirections[1]=look;
        }
    }
#define scr_tor_pose
frames=1;
frame=0;
anim=0;

framedirections[0,2]=334;
framedirections[0,3]=15;
framedirections[0,4]=330;
framedirections[0,5]=0;
framedirections[0,6]=0;
framedirections[0,7]=0;
framedirections[0,8]=0;
framedirections[0,9]=0;
framepositionsx[0,0]=0;
framepositionsx[0,1]=96;
framepositionsx[0,2]=114;
framepositionsx[0,3]=178;
framepositionsx[0,4]=224;
framepositionsx[0,5]=96;
framepositionsx[0,6]=16;
framepositionsx[0,7]=97;
framepositionsx[0,8]=162;
framepositionsx[0,9]=207;
framepositionsy[0,0]=0;
framepositionsy[0,1]=153;
framepositionsy[0,2]=214;
framepositionsy[0,3]=142;
framepositionsy[0,4]=240;
framepositionsy[0,5]=250;
framepositionsy[0,6]=300;
framepositionsy[0,7]=401;
framepositionsy[0,8]=249;
framepositionsy[0,9]=401;

framedirections[1,2]=334;
framedirections[1,3]=15;
framedirections[1,4]=330;
framedirections[1,5]=0;
framedirections[1,6]=0;
framedirections[1,7]=0;
framedirections[1,8]=0;
framedirections[1,9]=0;
framepositionsx[1,0]=0;
framepositionsx[1,1]=96;
framepositionsx[1,2]=114;
framepositionsx[1,3]=178;
framepositionsx[1,4]=224;
framepositionsx[1,5]=96;
framepositionsx[1,6]=16;
framepositionsx[1,7]=97;
framepositionsx[1,8]=162;
framepositionsx[1,9]=207;
framepositionsy[1,0]=0;
framepositionsy[1,1]=153;
framepositionsy[1,2]=214;
framepositionsy[1,3]=142;
framepositionsy[1,4]=240;
framepositionsy[1,5]=250;
framepositionsy[1,6]=300;
framepositionsy[1,7]=401;
framepositionsy[1,8]=249;
framepositionsy[1,9]=401;
#define scr_tor_drawgun
frames=40;
frame=0;
anim=1;

framedirections[0,2]=334;
framedirections[0,3]=15;
framedirections[0,4]=330;
framedirections[0,5]=0;
framedirections[0,6]=0;
framedirections[0,7]=0;
framedirections[0,8]=0;
framedirections[0,9]=0;
framepositionsx[0,0]=0;
framepositionsx[0,1]=96;
framepositionsx[0,2]=114;
framepositionsx[0,3]=178;
framepositionsx[0,4]=224;
framepositionsx[0,5]=96;
framepositionsx[0,6]=16;
framepositionsx[0,7]=97;
framepositionsx[0,8]=162;
framepositionsx[0,9]=207;
framepositionsy[0,0]=0;
framepositionsy[0,1]=153;
framepositionsy[0,2]=214;
framepositionsy[0,3]=142;
framepositionsy[0,4]=240;
framepositionsy[0,5]=250;
framepositionsy[0,6]=300;
framepositionsy[0,7]=401;
framepositionsy[0,8]=249;
framepositionsy[0,9]=401;

framedirections[1,2]=335;
framedirections[1,3]=25;
framedirections[1,4]=331;
framedirections[1,5]=359;
framedirections[1,6]=359;
framedirections[1,7]=0;
framedirections[1,8]=0;
framedirections[1,9]=0;
framepositionsx[1,0]=-2;
framepositionsx[1,1]=94;
framepositionsx[1,2]=112;
framepositionsx[1,3]=176;
framepositionsx[1,4]=204;
framepositionsx[1,5]=94;
framepositionsx[1,6]=15;
framepositionsx[1,7]=97;
framepositionsx[1,8]=160;
framepositionsx[1,9]=207;
framepositionsy[1,0]=0;
framepositionsy[1,1]=153;
framepositionsy[1,2]=214;
framepositionsy[1,3]=142;
framepositionsy[1,4]=246;
framepositionsy[1,5]=250;
framepositionsy[1,6]=302;
framepositionsy[1,7]=401;
framepositionsy[1,8]=249;
framepositionsy[1,9]=401;

framedirections[2,2]=336;
framedirections[2,3]=35;
framedirections[2,4]=332;
framedirections[2,5]=358;
framedirections[2,6]=358;
framedirections[2,7]=0;
framedirections[2,8]=359;
framedirections[2,9]=0;
framepositionsx[2,0]=-4;
framepositionsx[2,1]=92;
framepositionsx[2,2]=110;
framepositionsx[2,3]=174;
framepositionsx[2,4]=183;
framepositionsx[2,5]=92;
framepositionsx[2,6]=14;
framepositionsx[2,7]=97;
framepositionsx[2,8]=158;
framepositionsx[2,9]=207;
framepositionsy[2,0]=-1;
framepositionsy[2,1]=152;
framepositionsy[2,2]=213;
framepositionsy[2,3]=141;
framepositionsy[2,4]=249;
framepositionsy[2,5]=249;
framepositionsy[2,6]=303;
framepositionsy[2,7]=401;
framepositionsy[2,8]=249;
framepositionsy[2,9]=401;

framedirections[3,2]=337;
framedirections[3,3]=50;
framedirections[3,4]=332;
framedirections[3,5]=356;
framedirections[3,6]=358;
framedirections[3,7]=0;
framedirections[3,8]=359;
framedirections[3,9]=0;
framepositionsx[3,0]=-6;
framepositionsx[3,1]=90;
framepositionsx[3,2]=108;
framepositionsx[3,3]=172;
framepositionsx[3,4]=156;
framepositionsx[3,5]=90;
framepositionsx[3,6]=14;
framepositionsx[3,7]=97;
framepositionsx[3,8]=157;
framepositionsx[3,9]=207;
framepositionsy[3,0]=-2;
framepositionsy[3,1]=150;
framepositionsy[3,2]=212;
framepositionsy[3,3]=140;
framepositionsy[3,4]=247;
framepositionsy[3,5]=248;
framepositionsy[3,6]=302;
framepositionsy[3,7]=401;
framepositionsy[3,8]=249;
framepositionsy[3,9]=401;

framedirections[4,2]=338;
framedirections[4,3]=65;
framedirections[4,4]=332;
framedirections[4,5]=355;
framedirections[4,6]=358;
framedirections[4,7]=0;
framedirections[4,8]=358;
framedirections[4,9]=0;
framepositionsx[4,0]=-7;
framepositionsx[4,1]=89;
framepositionsx[4,2]=107;
framepositionsx[4,3]=171;
framepositionsx[4,4]=125;
framepositionsx[4,5]=89;
framepositionsx[4,6]=14;
framepositionsx[4,7]=97;
framepositionsx[4,8]=155;
framepositionsx[4,9]=207;
framepositionsy[4,0]=-4;
framepositionsy[4,1]=148;
framepositionsy[4,2]=210;
framepositionsy[4,3]=138;
framepositionsy[4,4]=236;
framepositionsy[4,5]=246;
framepositionsy[4,6]=302;
framepositionsy[4,7]=401;
framepositionsy[4,8]=249;
framepositionsy[4,9]=401;

framedirections[5,2]=339;
framedirections[5,3]=80;
framedirections[5,4]=340;
framedirections[5,5]=355;
framedirections[5,6]=358;
framedirections[5,7]=0;
framedirections[5,8]=358;
framedirections[5,9]=0;
framepositionsx[5,0]=-7;
framepositionsx[5,1]=89;
framepositionsx[5,2]=107;
framepositionsx[5,3]=171;
framepositionsx[5,4]=102;
framepositionsx[5,5]=89;
framepositionsx[5,6]=14;
framepositionsx[5,7]=97;
framepositionsx[5,8]=155;
framepositionsx[5,9]=207;
framepositionsy[5,0]=-6;
framepositionsy[5,1]=145;
framepositionsy[5,2]=208;
framepositionsy[5,3]=136;
framepositionsy[5,4]=219;
framepositionsy[5,5]=244;
framepositionsy[5,6]=302;
framepositionsy[5,7]=401;
framepositionsy[5,8]=248;
framepositionsy[5,9]=401;

framedirections[6,2]=340;
framedirections[6,3]=95;
framedirections[6,4]=350;
framedirections[6,5]=353;
framedirections[6,6]=359;
framedirections[6,7]=0;
framedirections[6,8]=358;
framedirections[6,9]=0;
framepositionsx[6,0]=-7;
framepositionsx[6,1]=89;
framepositionsx[6,2]=107;
framepositionsx[6,3]=171;
framepositionsx[6,4]=83;
framepositionsx[6,5]=89;
framepositionsx[6,6]=15;
framepositionsx[6,7]=97;
framepositionsx[6,8]=155;
framepositionsx[6,9]=207;
framepositionsy[6,0]=-8;
framepositionsy[6,1]=143;
framepositionsy[6,2]=206;
framepositionsy[6,3]=134;
framepositionsy[6,4]=196;
framepositionsy[6,5]=242;
framepositionsy[6,6]=300;
framepositionsy[6,7]=401;
framepositionsy[6,8]=247;
framepositionsy[6,9]=401;

framedirections[7,2]=341;
framedirections[7,3]=105;
framedirections[7,4]=0;
framedirections[7,5]=353;
framedirections[7,6]=0;
framedirections[7,7]=0;
framedirections[7,8]=358;
framedirections[7,9]=0;
framepositionsx[7,0]=-6;
framepositionsx[7,1]=90;
framepositionsx[7,2]=108;
framepositionsx[7,3]=172;
framepositionsx[7,4]=74;
framepositionsx[7,5]=90;
framepositionsx[7,6]=16;
framepositionsx[7,7]=97;
framepositionsx[7,8]=156;
framepositionsx[7,9]=207;
framepositionsy[7,0]=-10;
framepositionsy[7,1]=141;
framepositionsy[7,2]=204;
framepositionsy[7,3]=132;
framepositionsy[7,4]=178;
framepositionsy[7,5]=240;
framepositionsy[7,6]=298;
framepositionsy[7,7]=401;
framepositionsy[7,8]=246;
framepositionsy[7,9]=401;

framedirections[8,2]=342;
framedirections[8,3]=115;
framedirections[8,4]=10;
framedirections[8,5]=354;
framedirections[8,6]=1;
framedirections[8,7]=0;
framedirections[8,8]=359;
framedirections[8,9]=0;
framepositionsx[8,0]=-4;
framepositionsx[8,1]=92;
framepositionsx[8,2]=110;
framepositionsx[8,3]=174;
framepositionsx[8,4]=70;
framepositionsx[8,5]=92;
framepositionsx[8,6]=18;
framepositionsx[8,7]=97;
framepositionsx[8,8]=158;
framepositionsx[8,9]=207;
framepositionsy[8,0]=-11;
framepositionsy[8,1]=139;
framepositionsy[8,2]=203;
framepositionsy[8,3]=131;
framepositionsy[8,4]=159;
framepositionsy[8,5]=239;
framepositionsy[8,6]=297;
framepositionsy[8,7]=401;
framepositionsy[8,8]=244;
framepositionsy[8,9]=401;

framedirections[9,2]=345;
framedirections[9,3]=124;
framedirections[9,4]=25;
framedirections[9,5]=355;
framedirections[9,6]=1;
framedirections[9,7]=0;
framedirections[9,8]=0;
framedirections[9,9]=0;
framepositionsx[9,0]=-2;
framepositionsx[9,1]=94;
framepositionsx[9,2]=112;
framepositionsx[9,3]=176;
framepositionsx[9,4]=69;
framepositionsx[9,5]=94;
framepositionsx[9,6]=19;
framepositionsx[9,7]=97;
framepositionsx[9,8]=160;
framepositionsx[9,9]=207;
framepositionsy[9,0]=-11;
framepositionsy[9,1]=139;
framepositionsy[9,2]=202;
framepositionsy[9,3]=131;
framepositionsy[9,4]=142;
framepositionsy[9,5]=239;
framepositionsy[9,6]=296;
framepositionsy[9,7]=401;
framepositionsy[9,8]=244;
framepositionsy[9,9]=401;

framedirections[10,2]=349;
framedirections[10,3]=129;
framedirections[10,4]=33;
framedirections[10,5]=355;
framedirections[10,6]=2;
framedirections[10,7]=0;
framedirections[10,8]=0;
framedirections[10,9]=0;
framepositionsx[10,0]=-1;
framepositionsx[10,1]=95;
framepositionsx[10,2]=113;
framepositionsx[10,3]=177;
framepositionsx[10,4]=69;
framepositionsx[10,5]=95;
framepositionsx[10,6]=20;
framepositionsx[10,7]=97;
framepositionsx[10,8]=161;
framepositionsx[10,9]=207;
framepositionsy[10,0]=-12;
framepositionsy[10,1]=139;
framepositionsy[10,2]=200;
framepositionsy[10,3]=130;
framepositionsy[10,4]=132;
framepositionsy[10,5]=238;
framepositionsy[10,6]=295;
framepositionsy[10,7]=401;
framepositionsy[10,8]=243;
framepositionsy[10,9]=401;

framedirections[11,2]=354;
framedirections[11,3]=134;
framedirections[11,4]=44;
framedirections[11,5]=355;
framedirections[11,6]=2;
framedirections[11,7]=0;
framedirections[11,8]=0;
framedirections[11,9]=0;
framepositionsx[11,0]=-1;
framepositionsx[11,1]=95;
framepositionsx[11,2]=113;
framepositionsx[11,3]=177;
framepositionsx[11,4]=69;
framepositionsx[11,5]=95;
framepositionsx[11,6]=20;
framepositionsx[11,7]=97;
framepositionsx[11,8]=161;
framepositionsx[11,9]=207;
framepositionsy[11,0]=-12;
framepositionsy[11,1]=139;
framepositionsy[11,2]=197;
framepositionsy[11,3]=130;
framepositionsy[11,4]=122;
framepositionsy[11,5]=238;
framepositionsy[11,6]=295;
framepositionsy[11,7]=401;
framepositionsy[11,8]=243;
framepositionsy[11,9]=401;

framedirections[12,2]=0;
framedirections[12,3]=137;
framedirections[12,4]=53;
framedirections[12,5]=355;
framedirections[12,6]=2;
framedirections[12,7]=0;
framedirections[12,8]=0;
framedirections[12,9]=0;
framepositionsx[12,0]=0;
framepositionsx[12,1]=96;
framepositionsx[12,2]=114;
framepositionsx[12,3]=178;
framepositionsx[12,4]=71;
framepositionsx[12,5]=96;
framepositionsx[12,6]=20;
framepositionsx[12,7]=97;
framepositionsx[12,8]=162;
framepositionsx[12,9]=207;
framepositionsy[12,0]=-13;
framepositionsy[12,1]=138;
framepositionsy[12,2]=195;
framepositionsy[12,3]=129;
framepositionsy[12,4]=116;
framepositionsy[12,5]=237;
framepositionsy[12,6]=294;
framepositionsy[12,7]=401;
framepositionsy[12,8]=243;
framepositionsy[12,9]=401;

framedirections[13,2]=5;
framedirections[13,3]=140;
framedirections[13,4]=59;
framedirections[13,5]=355;
framedirections[13,6]=2;
framedirections[13,7]=0;
framedirections[13,8]=0;
framedirections[13,9]=0;
framepositionsx[13,0]=0;
framepositionsx[13,1]=96;
framepositionsx[13,2]=114;
framepositionsx[13,3]=178;
framepositionsx[13,4]=72;
framepositionsx[13,5]=96;
framepositionsx[13,6]=20;
framepositionsx[13,7]=97;
framepositionsx[13,8]=162;
framepositionsx[13,9]=207;
framepositionsy[13,0]=-13;
framepositionsy[13,1]=138;
framepositionsy[13,2]=191;
framepositionsy[13,3]=129;
framepositionsy[13,4]=110;
framepositionsy[13,5]=237;
framepositionsy[13,6]=294;
framepositionsy[13,7]=401;
framepositionsy[13,8]=243;
framepositionsy[13,9]=401;

framedirections[14,2]=10;
framedirections[14,3]=142;
framedirections[14,4]=65;
framedirections[14,5]=355;
framedirections[14,6]=2;
framedirections[14,7]=0;
framedirections[14,8]=0;
framedirections[14,9]=0;
framepositionsx[14,0]=0;
framepositionsx[14,1]=96;
framepositionsx[14,2]=114;
framepositionsx[14,3]=178;
framepositionsx[14,4]=72;
framepositionsx[14,5]=96;
framepositionsx[14,6]=20;
framepositionsx[14,7]=97;
framepositionsx[14,8]=162;
framepositionsx[14,9]=207;
framepositionsy[14,0]=-13;
framepositionsy[14,1]=139;
framepositionsy[14,2]=190;
framepositionsy[14,3]=129;
framepositionsy[14,4]=107;
framepositionsy[14,5]=237;
framepositionsy[14,6]=294;
framepositionsy[14,7]=401;
framepositionsy[14,8]=243;
framepositionsy[14,9]=401;

framedirections[15,2]=15;
framedirections[15,3]=144;
framedirections[15,4]=70;
framedirections[15,5]=355;
framedirections[15,6]=2;
framedirections[15,7]=0;
framedirections[15,8]=0;
framedirections[15,9]=0;
framepositionsx[15,0]=0;
framepositionsx[15,1]=96;
framepositionsx[15,2]=114;
framepositionsx[15,3]=178;
framepositionsx[15,4]=73;
framepositionsx[15,5]=96;
framepositionsx[15,6]=20;
framepositionsx[15,7]=97;
framepositionsx[15,8]=162;
framepositionsx[15,9]=207;
framepositionsy[15,0]=-13;
framepositionsy[15,1]=139;
framepositionsy[15,2]=190;
framepositionsy[15,3]=129;
framepositionsy[15,4]=103;
framepositionsy[15,5]=237;
framepositionsy[15,6]=294;
framepositionsy[15,7]=401;
framepositionsy[15,8]=243;
framepositionsy[15,9]=401;

framedirections[16,2]=20;
framedirections[16,3]=145;
framedirections[16,4]=75;
framedirections[16,5]=355;
framedirections[16,6]=2;
framedirections[16,7]=0;
framedirections[16,8]=0;
framedirections[16,9]=0;
framepositionsx[16,0]=0;
framepositionsx[16,1]=96;
framepositionsx[16,2]=114;
framepositionsx[16,3]=178;
framepositionsx[16,4]=74;
framepositionsx[16,5]=96;
framepositionsx[16,6]=20;
framepositionsx[16,7]=97;
framepositionsx[16,8]=162;
framepositionsx[16,9]=207;
framepositionsy[16,0]=-13;
framepositionsy[16,1]=139;
framepositionsy[16,2]=189;
framepositionsy[16,3]=129;
framepositionsy[16,4]=101;
framepositionsy[16,5]=237;
framepositionsy[16,6]=294;
framepositionsy[16,7]=401;
framepositionsy[16,8]=243;
framepositionsy[16,9]=401;

framedirections[17,2]=24;
framedirections[17,3]=146;
framedirections[17,4]=80;
framedirections[17,5]=355;
framedirections[17,6]=2;
framedirections[17,7]=0;
framedirections[17,8]=0;
framedirections[17,9]=0;
framepositionsx[17,0]=0;
framepositionsx[17,1]=96;
framepositionsx[17,2]=114;
framepositionsx[17,3]=178;
framepositionsx[17,4]=74;
framepositionsx[17,5]=96;
framepositionsx[17,6]=20;
framepositionsx[17,7]=97;
framepositionsx[17,8]=162;
framepositionsx[17,9]=207;
framepositionsy[17,0]=-13;
framepositionsy[17,1]=140;
framepositionsy[17,2]=189;
framepositionsy[17,3]=129;
framepositionsy[17,4]=99;
framepositionsy[17,5]=237;
framepositionsy[17,6]=294;
framepositionsy[17,7]=401;
framepositionsy[17,8]=243;
framepositionsy[17,9]=401;

framedirections[18,2]=27;
framedirections[18,3]=146;
framedirections[18,4]=84;
framedirections[18,5]=355;
framedirections[18,6]=2;
framedirections[18,7]=0;
framedirections[18,8]=0;
framedirections[18,9]=0;
framepositionsx[18,0]=0;
framepositionsx[18,1]=96;
framepositionsx[18,2]=114;
framepositionsx[18,3]=178;
framepositionsx[18,4]=74;
framepositionsx[18,5]=96;
framepositionsx[18,6]=20;
framepositionsx[18,7]=97;
framepositionsx[18,8]=162;
framepositionsx[18,9]=207;
framepositionsy[18,0]=-13;
framepositionsy[18,1]=140;
framepositionsy[18,2]=189;
framepositionsy[18,3]=129;
framepositionsy[18,4]=99;
framepositionsy[18,5]=237;
framepositionsy[18,6]=294;
framepositionsy[18,7]=401;
framepositionsy[18,8]=243;
framepositionsy[18,9]=401;

framedirections[19,2]=29;
framedirections[19,3]=146;
framedirections[19,4]=86;
framedirections[19,5]=355;
framedirections[19,6]=2;
framedirections[19,7]=0;
framedirections[19,8]=0;
framedirections[19,9]=0;
framepositionsx[19,0]=0;
framepositionsx[19,1]=96;
framepositionsx[19,2]=114;
framepositionsx[19,3]=178;
framepositionsx[19,4]=74;
framepositionsx[19,5]=96;
framepositionsx[19,6]=20;
framepositionsx[19,7]=97;
framepositionsx[19,8]=162;
framepositionsx[19,9]=207;
framepositionsy[19,0]=-13;
framepositionsy[19,1]=140;
framepositionsy[19,2]=189;
framepositionsy[19,3]=129;
framepositionsy[19,4]=99;
framepositionsy[19,5]=237;
framepositionsy[19,6]=294;
framepositionsy[19,7]=401;
framepositionsy[19,8]=243;
framepositionsy[19,9]=401;

framedirections[20,2]=30;
framedirections[20,3]=146;
framedirections[20,4]=88;
framedirections[20,5]=355;
framedirections[20,6]=2;
framedirections[20,7]=0;
framedirections[20,8]=0;
framedirections[20,9]=0;
framepositionsx[20,0]=0;
framepositionsx[20,1]=96;
framepositionsx[20,2]=114;
framepositionsx[20,3]=178;
framepositionsx[20,4]=74;
framepositionsx[20,5]=96;
framepositionsx[20,6]=20;
framepositionsx[20,7]=97;
framepositionsx[20,8]=162;
framepositionsx[20,9]=207;
framepositionsy[20,0]=-12;
framepositionsy[20,1]=141;
framepositionsy[20,2]=190;
framepositionsy[20,3]=130;
framepositionsy[20,4]=100;
framepositionsy[20,5]=237;
framepositionsy[20,6]=294;
framepositionsy[20,7]=401;
framepositionsy[20,8]=243;
framepositionsy[20,9]=401;

framedirections[21,2]=30;
framedirections[21,3]=145;
framedirections[21,4]=89;
framedirections[21,5]=355;
framedirections[21,6]=2;
framedirections[21,7]=0;
framedirections[21,8]=0;
framedirections[21,9]=0;
framepositionsx[21,0]=0;
framepositionsx[21,1]=96;
framepositionsx[21,2]=114;
framepositionsx[21,3]=178;
framepositionsx[21,4]=74;
framepositionsx[21,5]=96;
framepositionsx[21,6]=20;
framepositionsx[21,7]=97;
framepositionsx[21,8]=162;
framepositionsx[21,9]=207;
framepositionsy[21,0]=-12;
framepositionsy[21,1]=141;
framepositionsy[21,2]=190;
framepositionsy[21,3]=130;
framepositionsy[21,4]=102;
framepositionsy[21,5]=238;
framepositionsy[21,6]=294;
framepositionsy[21,7]=401;
framepositionsy[21,8]=244;
framepositionsy[21,9]=401;

framedirections[22,2]=30;
framedirections[22,3]=144;
framedirections[22,4]=90;
framedirections[22,5]=355;
framedirections[22,6]=2;
framedirections[22,7]=0;
framedirections[22,8]=0;
framedirections[22,9]=0;
framepositionsx[22,0]=0;
framepositionsx[22,1]=96;
framepositionsx[22,2]=114;
framepositionsx[22,3]=178;
framepositionsx[22,4]=73;
framepositionsx[22,5]=96;
framepositionsx[22,6]=20;
framepositionsx[22,7]=97;
framepositionsx[22,8]=162;
framepositionsx[22,9]=207;
framepositionsy[22,0]=-11;
framepositionsy[22,1]=142;
framepositionsy[22,2]=191;
framepositionsy[22,3]=131;
framepositionsy[22,4]=105;
framepositionsy[22,5]=239;
framepositionsy[22,6]=295;
framepositionsy[22,7]=401;
framepositionsy[22,8]=245;
framepositionsy[22,9]=401;

framedirections[23,2]=30;
framedirections[23,3]=142;
framedirections[23,4]=90;
framedirections[23,5]=355;
framedirections[23,6]=2;
framedirections[23,7]=0;
framedirections[23,8]=0;
framedirections[23,9]=0;
framepositionsx[23,0]=0;
framepositionsx[23,1]=96;
framepositionsx[23,2]=114;
framepositionsx[23,3]=178;
framepositionsx[23,4]=72;
framepositionsx[23,5]=96;
framepositionsx[23,6]=20;
framepositionsx[23,7]=97;
framepositionsx[23,8]=162;
framepositionsx[23,9]=207;
framepositionsy[23,0]=-11;
framepositionsy[23,1]=142;
framepositionsy[23,2]=192;
framepositionsy[23,3]=131;
framepositionsy[23,4]=109;
framepositionsy[23,5]=239;
framepositionsy[23,6]=296;
framepositionsy[23,7]=401;
framepositionsy[23,8]=245;
framepositionsy[23,9]=401;

framedirections[24,2]=29;
framedirections[24,3]=139;
framedirections[24,4]=89;
framedirections[24,5]=355;
framedirections[24,6]=2;
framedirections[24,7]=0;
framedirections[24,8]=0;
framedirections[24,9]=0;
framepositionsx[24,0]=0;
framepositionsx[24,1]=96;
framepositionsx[24,2]=114;
framepositionsx[24,3]=178;
framepositionsx[24,4]=71;
framepositionsx[24,5]=96;
framepositionsx[24,6]=20;
framepositionsx[24,7]=97;
framepositionsx[24,8]=162;
framepositionsx[24,9]=207;
framepositionsy[24,0]=-10;
framepositionsy[24,1]=143;
framepositionsy[24,2]=194;
framepositionsy[24,3]=132;
framepositionsy[24,4]=115;
framepositionsy[24,5]=240;
framepositionsy[24,6]=297;
framepositionsy[24,7]=401;
framepositionsy[24,8]=245;
framepositionsy[24,9]=401;

framedirections[25,2]=28;
framedirections[25,3]=135;
framedirections[25,4]=88;
framedirections[25,5]=356;
framedirections[25,6]=2;
framedirections[25,7]=0;
framedirections[25,8]=0;
framedirections[25,9]=0;
framepositionsx[25,0]=0;
framepositionsx[25,1]=96;
framepositionsx[25,2]=114;
framepositionsx[25,3]=178;
framepositionsx[25,4]=70;
framepositionsx[25,5]=96;
framepositionsx[25,6]=20;
framepositionsx[25,7]=97;
framepositionsx[25,8]=162;
framepositionsx[25,9]=207;
framepositionsy[25,0]=-9;
framepositionsy[25,1]=144;
framepositionsy[25,2]=196;
framepositionsy[25,3]=133;
framepositionsy[25,4]=124;
framepositionsy[25,5]=242;
framepositionsy[25,6]=297;
framepositionsy[25,7]=401;
framepositionsy[25,8]=246;
framepositionsy[25,9]=401;

framedirections[26,2]=27;
framedirections[26,3]=130;
framedirections[26,4]=87;
framedirections[26,5]=356;
framedirections[26,6]=2;
framedirections[26,7]=0;
framedirections[26,8]=0;
framedirections[26,9]=0;
framepositionsx[26,0]=0;
framepositionsx[26,1]=96;
framepositionsx[26,2]=114;
framepositionsx[26,3]=178;
framepositionsx[26,4]=70;
framepositionsx[26,5]=96;
framepositionsx[26,6]=20;
framepositionsx[26,7]=97;
framepositionsx[26,8]=162;
framepositionsx[26,9]=207;
framepositionsy[26,0]=-8;
framepositionsy[26,1]=145;
framepositionsy[26,2]=198;
framepositionsy[26,3]=134;
framepositionsy[26,4]=134;
framepositionsy[26,5]=242;
framepositionsy[26,6]=298;
framepositionsy[26,7]=401;
framepositionsy[26,8]=247;
framepositionsy[26,9]=401;

framedirections[27,2]=25;
framedirections[27,3]=120;
framedirections[27,4]=83;
framedirections[27,5]=356;
framedirections[27,6]=2;
framedirections[27,7]=0;
framedirections[27,8]=0;
framedirections[27,9]=0;
framepositionsx[27,0]=0;
framepositionsx[27,1]=96;
framepositionsx[27,2]=114;
framepositionsx[27,3]=178;
framepositionsx[27,4]=72;
framepositionsx[27,5]=96;
framepositionsx[27,6]=20;
framepositionsx[27,7]=97;
framepositionsx[27,8]=162;
framepositionsx[27,9]=207;
framepositionsy[27,0]=-7;
framepositionsy[27,1]=146;
framepositionsy[27,2]=200;
framepositionsy[27,3]=135;
framepositionsy[27,4]=154;
framepositionsy[27,5]=243;
framepositionsy[27,6]=298;
framepositionsy[27,7]=401;
framepositionsy[27,8]=247;
framepositionsy[27,9]=401;

framedirections[28,2]=22;
framedirections[28,3]=110;
framedirections[28,4]=75;
framedirections[28,5]=357;
framedirections[28,6]=2;
framedirections[28,7]=0;
framedirections[28,8]=0;
framedirections[28,9]=0;
framepositionsx[28,0]=0;
framepositionsx[28,1]=96;
framepositionsx[28,2]=114;
framepositionsx[28,3]=178;
framepositionsx[28,4]=77;
framepositionsx[28,5]=96;
framepositionsx[28,6]=20;
framepositionsx[28,7]=97;
framepositionsx[28,8]=162;
framepositionsx[28,9]=207;
framepositionsy[28,0]=-6;
framepositionsy[28,1]=147;
framepositionsy[28,2]=202;
framepositionsy[28,3]=136;
framepositionsy[28,4]=173;
framepositionsy[28,5]=244;
framepositionsy[28,6]=298;
framepositionsy[28,7]=401;
framepositionsy[28,8]=248;
framepositionsy[28,9]=401;

framedirections[29,2]=20;
framedirections[29,3]=95;
framedirections[29,4]=65;
framedirections[29,5]=357;
framedirections[29,6]=1;
framedirections[29,7]=0;
framedirections[29,8]=0;
framedirections[29,9]=0;
framepositionsx[29,0]=0;
framepositionsx[29,1]=96;
framepositionsx[29,2]=114;
framepositionsx[29,3]=178;
framepositionsx[29,4]=90;
framepositionsx[29,5]=96;
framepositionsx[29,6]=18;
framepositionsx[29,7]=97;
framepositionsx[29,8]=162;
framepositionsx[29,9]=207;
framepositionsy[29,0]=-5;
framepositionsy[29,1]=148;
framepositionsy[29,2]=204;
framepositionsy[29,3]=137;
framepositionsy[29,4]=199;
framepositionsy[29,5]=245;
framepositionsy[29,6]=299;
framepositionsy[29,7]=401;
framepositionsy[29,8]=248;
framepositionsy[29,9]=401;

framedirections[30,2]=17;
framedirections[30,3]=80;
framedirections[30,4]=55;
framedirections[30,5]=358;
framedirections[30,6]=1;
framedirections[30,7]=0;
framedirections[30,8]=0;
framedirections[30,9]=0;
framepositionsx[30,0]=0;
framepositionsx[30,1]=96;
framepositionsx[30,2]=114;
framepositionsx[30,3]=178;
framepositionsx[30,4]=109;
framepositionsx[30,5]=96;
framepositionsx[30,6]=18;
framepositionsx[30,7]=97;
framepositionsx[30,8]=162;
framepositionsx[30,9]=207;
framepositionsy[30,0]=-4;
framepositionsy[30,1]=149;
framepositionsy[30,2]=206;
framepositionsy[30,3]=138;
framepositionsy[30,4]=221;
framepositionsy[30,5]=246;
framepositionsy[30,6]=300;
framepositionsy[30,7]=401;
framepositionsy[30,8]=249;
framepositionsy[30,9]=401;

framedirections[31,2]=14;
framedirections[31,3]=60;
framedirections[31,4]=45;
framedirections[31,5]=358;
framedirections[31,6]=1;
framedirections[31,7]=0;
framedirections[31,8]=0;
framedirections[31,9]=0;
framepositionsx[31,0]=0;
framepositionsx[31,1]=96;
framepositionsx[31,2]=114;
framepositionsx[31,3]=178;
framepositionsx[31,4]=141;
framepositionsx[31,5]=96;
framepositionsx[31,6]=18;
framepositionsx[31,7]=97;
framepositionsx[31,8]=162;
framepositionsx[31,9]=207;
framepositionsy[31,0]=-3;
framepositionsy[31,1]=150;
framepositionsy[31,2]=208;
framepositionsy[31,3]=139;
framepositionsy[31,4]=240;
framepositionsy[31,5]=247;
framepositionsy[31,6]=300;
framepositionsy[31,7]=401;
framepositionsy[31,8]=249;
framepositionsy[31,9]=401;

framedirections[32,2]=10;
framedirections[32,3]=40;
framedirections[32,4]=30;
framedirections[32,5]=359;
framedirections[32,6]=0;
framedirections[32,7]=0;
framedirections[32,8]=0;
framedirections[32,9]=0;
framepositionsx[32,0]=0;
framepositionsx[32,1]=96;
framepositionsx[32,2]=114;
framepositionsx[32,3]=178;
framepositionsx[32,4]=178;
framepositionsx[32,5]=96;
framepositionsx[32,6]=16;
framepositionsx[32,7]=97;
framepositionsx[32,8]=162;
framepositionsx[32,9]=207;
framepositionsy[32,0]=-2;
framepositionsy[32,1]=151;
framepositionsy[32,2]=210;
framepositionsy[32,3]=140;
framepositionsy[32,4]=248;
framepositionsy[32,5]=248;
framepositionsy[32,6]=301;
framepositionsy[32,7]=401;
framepositionsy[32,8]=250;
framepositionsy[32,9]=401;

framedirections[33,2]=5;
framedirections[33,3]=20;
framedirections[33,4]=15;
framedirections[33,5]=359;
framedirections[33,6]=0;
framedirections[33,7]=0;
framedirections[33,8]=0;
framedirections[33,9]=0;
framepositionsx[33,0]=0;
framepositionsx[33,1]=96;
framepositionsx[33,2]=114;
framepositionsx[33,3]=178;
framepositionsx[33,4]=215;
framepositionsx[33,5]=96;
framepositionsx[33,6]=16;
framepositionsx[33,7]=97;
framepositionsx[33,8]=162;
framepositionsx[33,9]=207;
framepositionsy[33,0]=-1;
framepositionsy[33,1]=152;
framepositionsy[33,2]=212;
framepositionsy[33,3]=141;
framepositionsy[33,4]=242;
framepositionsy[33,5]=249;
framepositionsy[33,6]=301;
framepositionsy[33,7]=401;
framepositionsy[33,8]=250;
framepositionsy[33,9]=401;

framedirections[34,2]=0;
framedirections[34,3]=0;
framedirections[34,4]=0;
framedirections[34,5]=0;
framedirections[34,6]=0;
framedirections[34,7]=0;
framedirections[34,8]=0;
framedirections[34,9]=0;
framepositionsx[34,0]=0;
framepositionsx[34,1]=96;
framepositionsx[34,2]=114;
framepositionsx[34,3]=178;
framepositionsx[34,4]=247;
framepositionsx[34,5]=96;
framepositionsx[34,6]=16;
framepositionsx[34,7]=97;
framepositionsx[34,8]=162;
framepositionsx[34,9]=207;
framepositionsy[34,0]=0;
framepositionsy[34,1]=153;
framepositionsy[34,2]=214;
framepositionsy[34,3]=142;
framepositionsy[34,4]=225;
framepositionsy[34,5]=250;
framepositionsy[34,6]=301;
framepositionsy[34,7]=401;
framepositionsy[34,8]=250;
framepositionsy[34,9]=401;

framedirections[35,2]=0;
framedirections[35,3]=0;
framedirections[35,4]=0;
framedirections[35,5]=0;
framedirections[35,6]=0;
framedirections[35,7]=0;
framedirections[35,8]=0;
framedirections[35,9]=0;
framepositionsx[35,0]=0;
framepositionsx[35,1]=96;
framepositionsx[35,2]=114;
framepositionsx[35,3]=178;
framepositionsx[35,4]=247;
framepositionsx[35,5]=96;
framepositionsx[35,6]=16;
framepositionsx[35,7]=97;
framepositionsx[35,8]=162;
framepositionsx[35,9]=207;
framepositionsy[35,0]=8;
framepositionsy[35,1]=163;
framepositionsy[35,2]=222;
framepositionsy[35,3]=150;
framepositionsy[35,4]=233;
framepositionsy[35,5]=256;
framepositionsy[35,6]=304;
framepositionsy[35,7]=401;
framepositionsy[35,8]=253;
framepositionsy[35,9]=401;

framedirections[36,2]=0;
framedirections[36,3]=0;
framedirections[36,4]=0;
framedirections[36,5]=0;
framedirections[36,6]=0;
framedirections[36,7]=0;
framedirections[36,8]=0;
framedirections[36,9]=0;
framepositionsx[36,0]=0;
framepositionsx[36,1]=96;
framepositionsx[36,2]=114;
framepositionsx[36,3]=178;
framepositionsx[36,4]=247;
framepositionsx[36,5]=96;
framepositionsx[36,6]=16;
framepositionsx[36,7]=97;
framepositionsx[36,8]=162;
framepositionsx[36,9]=207;
framepositionsy[36,0]=6;
framepositionsy[36,1]=161;
framepositionsy[36,2]=220;
framepositionsy[36,3]=148;
framepositionsy[36,4]=231;
framepositionsy[36,5]=255;
framepositionsy[36,6]=303;
framepositionsy[36,7]=401;
framepositionsy[36,8]=252;
framepositionsy[36,9]=401;

framedirections[37,2]=0;
framedirections[37,3]=0;
framedirections[37,4]=0;
framedirections[37,5]=0;
framedirections[37,6]=0;
framedirections[37,7]=0;
framedirections[37,8]=0;
framedirections[37,9]=0;
framepositionsx[37,0]=0;
framepositionsx[37,1]=96;
framepositionsx[37,2]=114;
framepositionsx[37,3]=178;
framepositionsx[37,4]=247;
framepositionsx[37,5]=96;
framepositionsx[37,6]=16;
framepositionsx[37,7]=97;
framepositionsx[37,8]=162;
framepositionsx[37,9]=207;
framepositionsy[37,0]=4;
framepositionsy[37,1]=158;
framepositionsy[37,2]=218;
framepositionsy[37,3]=146;
framepositionsy[37,4]=229;
framepositionsy[37,5]=253;
framepositionsy[37,6]=302;
framepositionsy[37,7]=401;
framepositionsy[37,8]=251;
framepositionsy[37,9]=401;

framedirections[38,2]=0;
framedirections[38,3]=0;
framedirections[38,4]=0;
framedirections[38,5]=0;
framedirections[38,6]=0;
framedirections[38,7]=0;
framedirections[38,8]=0;
framedirections[38,9]=0;
framepositionsx[38,0]=0;
framepositionsx[38,1]=96;
framepositionsx[38,2]=114;
framepositionsx[38,3]=178;
framepositionsx[38,4]=247;
framepositionsx[38,5]=96;
framepositionsx[38,6]=16;
framepositionsx[38,7]=97;
framepositionsx[38,8]=162;
framepositionsx[38,9]=207;
framepositionsy[38,0]=2;
framepositionsy[38,1]=156;
framepositionsy[38,2]=216;
framepositionsy[38,3]=144;
framepositionsy[38,4]=227;
framepositionsy[38,5]=252;
framepositionsy[38,6]=301;
framepositionsy[38,7]=401;
framepositionsy[38,8]=250;
framepositionsy[38,9]=401;

framedirections[39,2]=0;
framedirections[39,3]=0;
framedirections[39,4]=0;
framedirections[39,5]=0;
framedirections[39,6]=0;
framedirections[39,7]=0;
framedirections[39,8]=0;
framedirections[39,9]=0;
framepositionsx[39,0]=0;
framepositionsx[39,1]=96;
framepositionsx[39,2]=114;
framepositionsx[39,3]=178;
framepositionsx[39,4]=247;
framepositionsx[39,5]=96;
framepositionsx[39,6]=16;
framepositionsx[39,7]=97;
framepositionsx[39,8]=162;
framepositionsx[39,9]=207;
framepositionsy[39,0]=1;
framepositionsy[39,1]=154;
framepositionsy[39,2]=215;
framepositionsy[39,3]=143;
framepositionsy[39,4]=226;
framepositionsy[39,5]=251;
framepositionsy[39,6]=301;
framepositionsy[39,7]=401;
framepositionsy[39,8]=250;
framepositionsy[39,9]=401;

framedirections[40,2]=0;
framedirections[40,3]=0;
framedirections[40,4]=0;
framedirections[40,5]=0;
framedirections[40,6]=0;
framedirections[40,7]=0;
framedirections[40,8]=0;
framedirections[40,9]=0;
framepositionsx[40,0]=0;
framepositionsx[40,1]=96;
framepositionsx[40,2]=114;
framepositionsx[40,3]=178;
framepositionsx[40,4]=247;
framepositionsx[40,5]=96;
framepositionsx[40,6]=16;
framepositionsx[40,7]=97;
framepositionsx[40,8]=162;
framepositionsx[40,9]=207;
framepositionsy[40,0]=0;
framepositionsy[40,1]=153;
framepositionsy[40,2]=214;
framepositionsy[40,3]=142;
framepositionsy[40,4]=225;
framepositionsy[40,5]=250;
framepositionsy[40,6]=300;
framepositionsy[40,7]=401;
framepositionsy[40,8]=249;
framepositionsy[40,9]=401;

#define scr_tor_fire
frames=16;
frame=0;
anim=2;

framedirections[0,2]=0;
framedirections[0,3]=0;
framedirections[0,4]=0;
framedirections[0,5]=0;
framedirections[0,6]=0;
framedirections[0,7]=0;
framedirections[0,8]=0;
framedirections[0,9]=0;
framepositionsx[0,0]=0;
framepositionsx[0,1]=96;
framepositionsx[0,2]=114;
framepositionsx[0,3]=178;
framepositionsx[0,4]=247;
framepositionsx[0,5]=96;
framepositionsx[0,6]=16;
framepositionsx[0,7]=97;
framepositionsx[0,8]=162;
framepositionsx[0,9]=207;
framepositionsy[0,0]=0;
framepositionsy[0,1]=153;
framepositionsy[0,2]=214;
framepositionsy[0,3]=142;
framepositionsy[0,4]=225;
framepositionsy[0,5]=250;
framepositionsy[0,6]=300;
framepositionsy[0,7]=401;
framepositionsy[0,8]=249;
framepositionsy[0,9]=401;

framedirections[1,2]=4;
framedirections[1,3]=0;
framedirections[1,4]=4;
framedirections[1,5]=2;
framedirections[1,6]=2;
framedirections[1,7]=0;
framedirections[1,8]=2;
framedirections[1,9]=0;
framepositionsx[1,0]=5;
framepositionsx[1,1]=101;
framepositionsx[1,2]=121;
framepositionsx[1,3]=183;
framepositionsx[1,4]=252;
framepositionsx[1,5]=101;
framepositionsx[1,6]=20;
framepositionsx[1,7]=97;
framepositionsx[1,8]=167;
framepositionsx[1,9]=207;
framepositionsy[1,0]=0;
framepositionsy[1,1]=153;
framepositionsy[1,2]=207;
framepositionsy[1,3]=142;
framepositionsy[1,4]=225;
framepositionsy[1,5]=250;
framepositionsy[1,6]=298;
framepositionsy[1,7]=401;
framepositionsy[1,8]=249;
framepositionsy[1,9]=401;

framedirections[2,2]=8;
framedirections[2,3]=0;
framedirections[2,4]=8;
framedirections[2,5]=3;
framedirections[2,6]=3;
framedirections[2,7]=0;
framedirections[2,8]=3;
framedirections[2,9]=0;
framepositionsx[2,0]=9;
framepositionsx[2,1]=105;
framepositionsx[2,2]=127;
framepositionsx[2,3]=187;
framepositionsx[2,4]=256;
framepositionsx[2,5]=105;
framepositionsx[2,6]=22;
framepositionsx[2,7]=97;
framepositionsx[2,8]=171;
framepositionsx[2,9]=207;
framepositionsy[2,0]=0;
framepositionsy[2,1]=153;
framepositionsy[2,2]=198;
framepositionsy[2,3]=142;
framepositionsy[2,4]=225;
framepositionsy[2,5]=250;
framepositionsy[2,6]=296;
framepositionsy[2,7]=401;
framepositionsy[2,8]=249;
framepositionsy[2,9]=401;

framedirections[3,2]=11;
framedirections[3,3]=359;
framedirections[3,4]=11;
framedirections[3,5]=4;
framedirections[3,6]=4;
framedirections[3,7]=0;
framedirections[3,8]=4;
framedirections[3,9]=0;
framepositionsx[3,0]=12;
framepositionsx[3,1]=108;
framepositionsx[3,2]=134;
framepositionsx[3,3]=190;
framepositionsx[3,4]=261;
framepositionsx[3,5]=108;
framepositionsx[3,6]=24;
framepositionsx[3,7]=97;
framepositionsx[3,8]=174;
framepositionsx[3,9]=207;
framepositionsy[3,0]=0;
framepositionsy[3,1]=153;
framepositionsy[3,2]=189;
framepositionsy[3,3]=142;
framepositionsy[3,4]=223;
framepositionsy[3,5]=250;
framepositionsy[3,6]=295;
framepositionsy[3,7]=401;
framepositionsy[3,8]=249;
framepositionsy[3,9]=401;

framedirections[4,2]=14;
framedirections[4,3]=358;
framedirections[4,4]=14;
framedirections[4,5]=5;
framedirections[4,6]=5;
framedirections[4,7]=0;
framedirections[4,8]=5;
framedirections[4,9]=0;
framepositionsx[4,0]=14;
framepositionsx[4,1]=110;
framepositionsx[4,2]=139;
framepositionsx[4,3]=192;
framepositionsx[4,4]=264;
framepositionsx[4,5]=110;
framepositionsx[4,6]=26;
framepositionsx[4,7]=97;
framepositionsx[4,8]=176;
framepositionsx[4,9]=207;
framepositionsy[4,0]=0;
framepositionsy[4,1]=153;
framepositionsy[4,2]=182;
framepositionsy[4,3]=142;
framepositionsy[4,4]=222;
framepositionsy[4,5]=250;
framepositionsy[4,6]=294;
framepositionsy[4,7]=401;
framepositionsy[4,8]=249;
framepositionsy[4,9]=401;

framedirections[5,2]=16;
framedirections[5,3]=357;
framedirections[5,4]=16;
framedirections[5,5]=5;
framedirections[5,6]=5;
framedirections[5,7]=0;
framedirections[5,8]=6;
framedirections[5,9]=0;
framepositionsx[5,0]=15;
framepositionsx[5,1]=111;
framepositionsx[5,2]=143;
framepositionsx[5,3]=193;
framepositionsx[5,4]=267;
framepositionsx[5,5]=111;
framepositionsx[5,6]=26;
framepositionsx[5,7]=97;
framepositionsx[5,8]=177;
framepositionsx[5,9]=207;
framepositionsy[5,0]=0;
framepositionsy[5,1]=153;
framepositionsy[5,2]=176;
framepositionsy[5,3]=142;
framepositionsy[5,4]=221;
framepositionsy[5,5]=250;
framepositionsy[5,6]=294;
framepositionsy[5,7]=401;
framepositionsy[5,8]=249;
framepositionsy[5,9]=401;

framedirections[6,2]=17;
framedirections[6,3]=356;
framedirections[6,4]=17;
framedirections[6,5]=6;
framedirections[6,6]=5;
framedirections[6,7]=0;
framedirections[6,8]=6;
framedirections[6,9]=0;
framepositionsx[6,0]=16;
framepositionsx[6,1]=112;
framepositionsx[6,2]=146;
framepositionsx[6,3]=194;
framepositionsx[6,4]=269;
framepositionsx[6,5]=112;
framepositionsx[6,6]=26;
framepositionsx[6,7]=97;
framepositionsx[6,8]=178;
framepositionsx[6,9]=207;
framepositionsy[6,0]=1;
framepositionsy[6,1]=154;
framepositionsy[6,2]=174;
framepositionsy[6,3]=143;
framepositionsy[6,4]=221;
framepositionsy[6,5]=251;
framepositionsy[6,6]=294;
framepositionsy[6,7]=401;
framepositionsy[6,8]=249;
framepositionsy[6,9]=401;

framedirections[7,2]=15;
framedirections[7,3]=355;
framedirections[7,4]=15;
framedirections[7,5]=7;
framedirections[7,6]=6;
framedirections[7,7]=0;
framedirections[7,8]=6;
framedirections[7,9]=0;
framepositionsx[7,0]=16;
framepositionsx[7,1]=112;
framepositionsx[7,2]=144;
framepositionsx[7,3]=194;
framepositionsx[7,4]=270;
framepositionsx[7,5]=112;
framepositionsx[7,6]=27;
framepositionsx[7,7]=97;
framepositionsx[7,8]=178;
framepositionsx[7,9]=207;
framepositionsy[7,0]=2;
framepositionsy[7,1]=155;
framepositionsy[7,2]=178;
framepositionsy[7,3]=144;
framepositionsy[7,4]=220;
framepositionsy[7,5]=252;
framepositionsy[7,6]=293;
framepositionsy[7,7]=401;
framepositionsy[7,8]=250;
framepositionsy[7,9]=401;

framedirections[8,2]=13;
framedirections[8,3]=354;
framedirections[8,4]=13;
framedirections[8,5]=7;
framedirections[8,6]=5;
framedirections[8,7]=0;
framedirections[8,8]=6;
framedirections[8,9]=0;
framepositionsx[8,0]=15;
framepositionsx[8,1]=111;
framepositionsx[8,2]=144;
framepositionsx[8,3]=193;
framepositionsx[8,4]=271;
framepositionsx[8,5]=111;
framepositionsx[8,6]=26;
framepositionsx[8,7]=97;
framepositionsx[8,8]=177;
framepositionsx[8,9]=207;
framepositionsy[8,0]=3;
framepositionsy[8,1]=156;
framepositionsy[8,2]=182;
framepositionsy[8,3]=145;
framepositionsy[8,4]=220;
framepositionsy[8,5]=253;
framepositionsy[8,6]=294;
framepositionsy[8,7]=401;
framepositionsy[8,8]=251;
framepositionsy[8,9]=401;

framedirections[9,2]=11;
framedirections[9,3]=355;
framedirections[9,4]=11;
framedirections[9,5]=7;
framedirections[9,6]=4;
framedirections[9,7]=0;
framedirections[9,8]=5;
framedirections[9,9]=0;
framepositionsx[9,0]=13;
framepositionsx[9,1]=109;
framepositionsx[9,2]=139;
framepositionsx[9,3]=191;
framepositionsx[9,4]=267;
framepositionsx[9,5]=109;
framepositionsx[9,6]=24;
framepositionsx[9,7]=97;
framepositionsx[9,8]=175;
framepositionsx[9,9]=207;
framepositionsy[9,0]=4;
framepositionsy[9,1]=157;
framepositionsy[9,2]=188;
framepositionsy[9,3]=146;
framepositionsy[9,4]=222;
framepositionsy[9,5]=254;
framepositionsy[9,6]=295;
framepositionsy[9,7]=401;
framepositionsy[9,8]=252;
framepositionsy[9,9]=401;

framedirections[10,2]=8;
framedirections[10,3]=356;
framedirections[10,4]=8;
framedirections[10,5]=6;
framedirections[10,6]=3;
framedirections[10,7]=0;
framedirections[10,8]=4;
framedirections[10,9]=0;
framepositionsx[10,0]=11;
framepositionsx[10,1]=107;
framepositionsx[10,2]=134;
framepositionsx[10,3]=189;
framepositionsx[10,4]=264;
framepositionsx[10,5]=107;
framepositionsx[10,6]=22;
framepositionsx[10,7]=97;
framepositionsx[10,8]=173;
framepositionsx[10,9]=207;
framepositionsy[10,0]=4;
framepositionsy[10,1]=157;
framepositionsy[10,2]=197;
framepositionsy[10,3]=146;
framepositionsy[10,4]=224;
framepositionsy[10,5]=254;
framepositionsy[10,6]=296;
framepositionsy[10,7]=401;
framepositionsy[10,8]=252;
framepositionsy[10,9]=401;

framedirections[11,2]=5;
framedirections[11,3]=357;
framedirections[11,4]=5;
framedirections[11,5]=5;
framedirections[11,6]=2;
framedirections[11,7]=0;
framedirections[11,8]=3;
framedirections[11,9]=0;
framepositionsx[11,0]=8;
framepositionsx[11,1]=104;
framepositionsx[11,2]=129;
framepositionsx[11,3]=186;
framepositionsx[11,4]=260;
framepositionsx[11,5]=104;
framepositionsx[11,6]=20;
framepositionsx[11,7]=97;
framepositionsx[11,8]=170;
framepositionsx[11,9]=207;
framepositionsy[11,0]=4;
framepositionsy[11,1]=157;
framepositionsy[11,2]=205;
framepositionsy[11,3]=146;
framepositionsy[11,4]=225;
framepositionsy[11,5]=254;
framepositionsy[11,6]=298;
framepositionsy[11,7]=401;
framepositionsy[11,8]=252;
framepositionsy[11,9]=401;

framedirections[12,2]=3;
framedirections[12,3]=358;
framedirections[12,4]=3;
framedirections[12,5]=4;
framedirections[12,6]=1;
framedirections[12,7]=0;
framedirections[12,8]=2;
framedirections[12,9]=0;
framepositionsx[12,0]=5;
framepositionsx[12,1]=101;
framepositionsx[12,2]=123;
framepositionsx[12,3]=183;
framepositionsx[12,4]=255;
framepositionsx[12,5]=101;
framepositionsx[12,6]=18;
framepositionsx[12,7]=97;
framepositionsx[12,8]=167;
framepositionsx[12,9]=207;
framepositionsy[12,0]=3;
framepositionsy[12,1]=156;
framepositionsy[12,2]=209;
framepositionsy[12,3]=145;
framepositionsy[12,4]=225;
framepositionsy[12,5]=253;
framepositionsy[12,6]=299;
framepositionsy[12,7]=401;
framepositionsy[12,8]=251;
framepositionsy[12,9]=401;

framedirections[13,2]=2;
framedirections[13,3]=359;
framedirections[13,4]=2;
framedirections[13,5]=3;
framedirections[13,6]=1;
framedirections[13,7]=0;
framedirections[13,8]=1;
framedirections[13,9]=0;
framepositionsx[13,0]=3;
framepositionsx[13,1]=99;
framepositionsx[13,2]=120;
framepositionsx[13,3]=181;
framepositionsx[13,4]=252;
framepositionsx[13,5]=99;
framepositionsx[13,6]=18;
framepositionsx[13,7]=97;
framepositionsx[13,8]=165;
framepositionsx[13,9]=207;
framepositionsy[13,0]=2;
framepositionsy[13,1]=155;
framepositionsy[13,2]=211;
framepositionsy[13,3]=144;
framepositionsy[13,4]=225;
framepositionsy[13,5]=252;
framepositionsy[13,6]=299;
framepositionsy[13,7]=401;
framepositionsy[13,8]=250;
framepositionsy[13,9]=401;

framedirections[14,2]=1;
framedirections[14,3]=0;
framedirections[14,4]=1;
framedirections[14,5]=2;
framedirections[14,6]=0;
framedirections[14,7]=0;
framedirections[14,8]=0;
framedirections[14,9]=0;
framepositionsx[14,0]=2;
framepositionsx[14,1]=98;
framepositionsx[14,2]=116;
framepositionsx[14,3]=180;
framepositionsx[14,4]=249;
framepositionsx[14,5]=98;
framepositionsx[14,6]=16;
framepositionsx[14,7]=97;
framepositionsx[14,8]=162;
framepositionsx[14,9]=207;
framepositionsy[14,0]=2;
framepositionsy[14,1]=155;
framepositionsy[14,2]=215;
framepositionsy[14,3]=144;
framepositionsy[14,4]=227;
framepositionsy[14,5]=252;
framepositionsy[14,6]=300;
framepositionsy[14,7]=401;
framepositionsy[14,8]=250;
framepositionsy[14,9]=401;

framedirections[15,2]=0;
framedirections[15,3]=0;
framedirections[15,4]=0;
framedirections[15,5]=1;
framedirections[15,6]=0;
framedirections[15,7]=0;
framedirections[15,8]=0;
framedirections[15,9]=0;
framepositionsx[15,0]=1;
framepositionsx[15,1]=97;
framepositionsx[15,2]=115;
framepositionsx[15,3]=179;
framepositionsx[15,4]=248;
framepositionsx[15,5]=97;
framepositionsx[15,6]=16;
framepositionsx[15,7]=97;
framepositionsx[15,8]=162;
framepositionsx[15,9]=207;
framepositionsy[15,0]=1;
framepositionsy[15,1]=154;
framepositionsy[15,2]=215;
framepositionsy[15,3]=143;
framepositionsy[15,4]=226;
framepositionsy[15,5]=251;
framepositionsy[15,6]=300;
framepositionsy[15,7]=401;
framepositionsy[15,8]=250;
framepositionsy[15,9]=401;

framedirections[16,2]=0;
framedirections[16,3]=0;
framedirections[16,4]=0;
framedirections[16,5]=0;
framedirections[16,6]=0;
framedirections[16,7]=0;
framedirections[16,8]=0;
framedirections[16,9]=0;
framepositionsx[16,0]=0;
framepositionsx[16,1]=96;
framepositionsx[16,2]=114;
framepositionsx[16,3]=178;
framepositionsx[16,4]=247;
framepositionsx[16,5]=96;
framepositionsx[16,6]=16;
framepositionsx[16,7]=97;
framepositionsx[16,8]=162;
framepositionsx[16,9]=207;
framepositionsy[16,0]=0;
framepositionsy[16,1]=153;
framepositionsy[16,2]=214;
framepositionsy[16,3]=142;
framepositionsy[16,4]=225;
framepositionsy[16,5]=250;
framepositionsy[16,6]=300;
framepositionsy[16,7]=401;
framepositionsy[16,8]=249;
framepositionsy[16,9]=401;

#define scr_tor_jump
frames=20;
frame=0;
anim=3;
with (obj_skysmasher){
    flyaway=1;
    alarm[2]=120;
    }

framedirections[0,2]=0;
framedirections[0,3]=0;
framedirections[0,4]=359;
framedirections[0,5]=2;
framedirections[0,6]=359;
framedirections[0,7]=0;
framedirections[0,8]=0;
framedirections[0,9]=0;
framepositionsx[0,0]=0;
framepositionsx[0,1]=96;
framepositionsx[0,2]=114;
framepositionsx[0,3]=178;
framepositionsx[0,4]=247;
framepositionsx[0,5]=96;
framepositionsx[0,6]=15;
framepositionsx[0,7]=97;
framepositionsx[0,8]=162;
framepositionsx[0,9]=207;
framepositionsy[0,0]=4;
framepositionsy[0,1]=158;
framepositionsy[0,2]=218;
framepositionsy[0,3]=146;
framepositionsy[0,4]=229;
framepositionsy[0,5]=255;
framepositionsy[0,6]=303;
framepositionsy[0,7]=401;
framepositionsy[0,8]=256;
framepositionsy[0,9]=401;

framedirections[1,2]=0;
framedirections[1,3]=0;
framedirections[1,4]=358;
framedirections[1,5]=6;
framedirections[1,6]=357;
framedirections[1,7]=0;
framedirections[1,8]=0;
framedirections[1,9]=0;
framepositionsx[1,0]=0;
framepositionsx[1,1]=96;
framepositionsx[1,2]=115;
framepositionsx[1,3]=178;
framepositionsx[1,4]=247;
framepositionsx[1,5]=96;
framepositionsx[1,6]=11;
framepositionsx[1,7]=97;
framepositionsx[1,8]=162;
framepositionsx[1,9]=207;
framepositionsy[1,0]=12;
framepositionsy[1,1]=168;
framepositionsy[1,2]=232;
framepositionsy[1,3]=154;
framepositionsy[1,4]=237;
framepositionsy[1,5]=264;
framepositionsy[1,6]=306;
framepositionsy[1,7]=401;
framepositionsy[1,8]=258;
framepositionsy[1,9]=401;

framedirections[2,2]=357;
framedirections[2,3]=0;
framedirections[2,4]=356;
framedirections[2,5]=8;
framedirections[2,6]=356;
framedirections[2,7]=0;
framedirections[2,8]=0;
framedirections[2,9]=0;
framepositionsx[2,0]=0;
framepositionsx[2,1]=96;
framepositionsx[2,2]=115;
framepositionsx[2,3]=178;
framepositionsx[2,4]=247;
framepositionsx[2,5]=96;
framepositionsx[2,6]=10;
framepositionsx[2,7]=97;
framepositionsx[2,8]=162;
framepositionsx[2,9]=207;
framepositionsy[2,0]=16;
framepositionsy[2,1]=174;
framepositionsy[2,2]=240;
framepositionsy[2,3]=158;
framepositionsy[2,4]=241;
framepositionsy[2,5]=269;
framepositionsy[2,6]=307;
framepositionsy[2,7]=401;
framepositionsy[2,8]=260;
framepositionsy[2,9]=401;

framedirections[3,2]=355;
framedirections[3,3]=0;
framedirections[3,4]=355;
framedirections[3,5]=9;
framedirections[3,6]=355;
framedirections[3,7]=0;
framedirections[3,8]=0;
framedirections[3,9]=0;
framepositionsx[3,0]=0;
framepositionsx[3,1]=96;
framepositionsx[3,2]=114;
framepositionsx[3,3]=178;
framepositionsx[3,4]=247;
framepositionsx[3,5]=96;
framepositionsx[3,6]=9;
framepositionsx[3,7]=97;
framepositionsx[3,8]=162;
framepositionsx[3,9]=207;
framepositionsy[3,0]=18;
framepositionsy[3,1]=176;
framepositionsy[3,2]=243;
framepositionsy[3,3]=160;
framepositionsy[3,4]=243;
framepositionsy[3,5]=271;
framepositionsy[3,6]=309;
framepositionsy[3,7]=401;
framepositionsy[3,8]=262;
framepositionsy[3,9]=401;

framedirections[4,2]=355;
framedirections[4,3]=0;
framedirections[4,4]=355;
framedirections[4,5]=9;
framedirections[4,6]=355;
framedirections[4,7]=0;
framedirections[4,8]=0;
framedirections[4,9]=0;
framepositionsx[4,0]=0;
framepositionsx[4,1]=96;
framepositionsx[4,2]=114;
framepositionsx[4,3]=178;
framepositionsx[4,4]=247;
framepositionsx[4,5]=96;
framepositionsx[4,6]=9;
framepositionsx[4,7]=97;
framepositionsx[4,8]=162;
framepositionsx[4,9]=207;
framepositionsy[4,0]=19;
framepositionsy[4,1]=177;
framepositionsy[4,2]=244;
framepositionsy[4,3]=161;
framepositionsy[4,4]=244;
framepositionsy[4,5]=271;
framepositionsy[4,6]=309;
framepositionsy[4,7]=401;
framepositionsy[4,8]=263;
framepositionsy[4,9]=401;

framedirections[5,2]=355;
framedirections[5,3]=0;
framedirections[5,4]=355;
framedirections[5,5]=9;
framedirections[5,6]=355;
framedirections[5,7]=0;
framedirections[5,8]=0;
framedirections[5,9]=0;
framepositionsx[5,0]=0;
framepositionsx[5,1]=96;
framepositionsx[5,2]=114;
framepositionsx[5,3]=178;
framepositionsx[5,4]=247;
framepositionsx[5,5]=96;
framepositionsx[5,6]=9;
framepositionsx[5,7]=97;
framepositionsx[5,8]=162;
framepositionsx[5,9]=207;
framepositionsy[5,0]=19;
framepositionsy[5,1]=177;
framepositionsy[5,2]=244;
framepositionsy[5,3]=161;
framepositionsy[5,4]=244;
framepositionsy[5,5]=271;
framepositionsy[5,6]=309;
framepositionsy[5,7]=401;
framepositionsy[5,8]=263;
framepositionsy[5,9]=401;

framedirections[6,2]=355;
framedirections[6,3]=0;
framedirections[6,4]=355;
framedirections[6,5]=8;
framedirections[6,6]=356;
framedirections[6,7]=0;
framedirections[6,8]=0;
framedirections[6,9]=0;
framepositionsx[6,0]=0;
framepositionsx[6,1]=96;
framepositionsx[6,2]=114;
framepositionsx[6,3]=178;
framepositionsx[6,4]=247;
framepositionsx[6,5]=96;
framepositionsx[6,6]=10;
framepositionsx[6,7]=97;
framepositionsx[6,8]=162;
framepositionsx[6,9]=207;
framepositionsy[6,0]=16;
framepositionsy[6,1]=173;
framepositionsy[6,2]=242;
framepositionsy[6,3]=158;
framepositionsy[6,4]=241;
framepositionsy[6,5]=268;
framepositionsy[6,6]=307;
framepositionsy[6,7]=401;
framepositionsy[6,8]=262;
framepositionsy[6,9]=401;

framedirections[7,2]=357;
framedirections[7,3]=0;
framedirections[7,4]=355;
framedirections[7,5]=3;
framedirections[7,6]=359;
framedirections[7,7]=0;
framedirections[7,8]=0;
framedirections[7,9]=0;
framepositionsx[7,0]=0;
framepositionsx[7,1]=96;
framepositionsx[7,2]=115;
framepositionsx[7,3]=178;
framepositionsx[7,4]=247;
framepositionsx[7,5]=96;
framepositionsx[7,6]=14;
framepositionsx[7,7]=97;
framepositionsx[7,8]=162;
framepositionsx[7,9]=207;
framepositionsy[7,0]=6;
framepositionsy[7,1]=161;
framepositionsy[7,2]=234;
framepositionsy[7,3]=148;
framepositionsy[7,4]=231;
framepositionsy[7,5]=258;
framepositionsy[7,6]=304;
framepositionsy[7,7]=401;
framepositionsy[7,8]=259;
framepositionsy[7,9]=401;

framedirections[8,2]=356;
framedirections[8,3]=0;
framedirections[8,4]=355;
framedirections[8,5]=0;
framedirections[8,6]=0;
framedirections[8,7]=0;
framedirections[8,8]=0;
framedirections[8,9]=0;
framepositionsx[8,0]=0;
framepositionsx[8,1]=96;
framepositionsx[8,2]=114;
framepositionsx[8,3]=178;
framepositionsx[8,4]=247;
framepositionsx[8,5]=96;
framepositionsx[8,6]=16;
framepositionsx[8,7]=97;
framepositionsx[8,8]=162;
framepositionsx[8,9]=207;
framepositionsy[8,0]=-4;
framepositionsy[8,1]=149;
framepositionsy[8,2]=222;
framepositionsy[8,3]=138;
framepositionsy[8,4]=221;
framepositionsy[8,5]=246;
framepositionsy[8,6]=300;
framepositionsy[8,7]=401;
framepositionsy[8,8]=253;
framepositionsy[8,9]=401;

framedirections[9,2]=357;
framedirections[9,3]=0;
framedirections[9,4]=355;
framedirections[9,5]=0;
framedirections[9,6]=0;
framedirections[9,7]=350;
framedirections[9,8]=0;
framedirections[9,9]=357;
framepositionsx[9,0]=0;
framepositionsx[9,1]=96;
framepositionsx[9,2]=115;
framepositionsx[9,3]=178;
framepositionsx[9,4]=247;
framepositionsx[9,5]=96;
framepositionsx[9,6]=16;
framepositionsx[9,7]=97;
framepositionsx[9,8]=162;
framepositionsx[9,9]=207;
framepositionsy[9,0]=-24;
framepositionsy[9,1]=129;
framepositionsy[9,2]=204;
framepositionsy[9,3]=118;
framepositionsy[9,4]=201;
framepositionsy[9,5]=226;
framepositionsy[9,6]=276;
framepositionsy[9,7]=380;
framepositionsy[9,8]=225;
framepositionsy[9,9]=386;

framedirections[10,2]=357;
framedirections[10,3]=0;
framedirections[10,4]=355;
framedirections[10,5]=351;
framedirections[10,6]=3;
framedirections[10,7]=343;
framedirections[10,8]=0;
framedirections[10,9]=354;
framepositionsx[10,0]=0;
framepositionsx[10,1]=96;
framepositionsx[10,2]=115;
framepositionsx[10,3]=178;
framepositionsx[10,4]=247;
framepositionsx[10,5]=96;
framepositionsx[10,6]=25;
framepositionsx[10,7]=100;
framepositionsx[10,8]=162;
framepositionsx[10,9]=207;
framepositionsy[10,0]=-74;
framepositionsy[10,1]=79;
framepositionsy[10,2]=154;
framepositionsy[10,3]=68;
framepositionsy[10,4]=151;
framepositionsy[10,5]=181;
framepositionsy[10,6]=243;
framepositionsy[10,7]=352;
framepositionsy[10,8]=175;
framepositionsy[10,9]=337;

framedirections[11,2]=357;
framedirections[11,3]=0;
framedirections[11,4]=355;
framedirections[11,5]=351;
framedirections[11,6]=3;
framedirections[11,7]=343;
framedirections[11,8]=0;
framedirections[11,9]=354;
framepositionsx[11,0]=0;
framepositionsx[11,1]=96;
framepositionsx[11,2]=115;
framepositionsx[11,3]=178;
framepositionsx[11,4]=247;
framepositionsx[11,5]=96;
framepositionsx[11,6]=25;
framepositionsx[11,7]=100;
framepositionsx[11,8]=162;
framepositionsx[11,9]=207;
framepositionsy[11,0]=-134;
framepositionsy[11,1]=19;
framepositionsy[11,2]=94;
framepositionsy[11,3]=8;
framepositionsy[11,4]=91;
framepositionsy[11,5]=121;
framepositionsy[11,6]=183;
framepositionsy[11,7]=292;
framepositionsy[11,8]=115;
framepositionsy[11,9]=267;

framedirections[12,2]=357;
framedirections[12,3]=0;
framedirections[12,4]=355;
framedirections[12,5]=351;
framedirections[12,6]=3;
framedirections[12,7]=343;
framedirections[12,8]=0;
framedirections[12,9]=354;
framepositionsx[12,0]=0;
framepositionsx[12,1]=96;
framepositionsx[12,2]=115;
framepositionsx[12,3]=178;
framepositionsx[12,4]=247;
framepositionsx[12,5]=96;
framepositionsx[12,6]=25;
framepositionsx[12,7]=100;
framepositionsx[12,8]=162;
framepositionsx[12,9]=207;
framepositionsy[12,0]=-194;
framepositionsy[12,1]=-41;
framepositionsy[12,2]=34;
framepositionsy[12,3]=-52;
framepositionsy[12,4]=31;
framepositionsy[12,5]=61;
framepositionsy[12,6]=123;
framepositionsy[12,7]=232;
framepositionsy[12,8]=55;
framepositionsy[12,9]=207;

framedirections[13,2]=357;
framedirections[13,3]=0;
framedirections[13,4]=355;
framedirections[13,5]=351;
framedirections[13,6]=3;
framedirections[13,7]=343;
framedirections[13,8]=0;
framedirections[13,9]=354;
framepositionsx[13,0]=0;
framepositionsx[13,1]=96;
framepositionsx[13,2]=115;
framepositionsx[13,3]=178;
framepositionsx[13,4]=247;
framepositionsx[13,5]=96;
framepositionsx[13,6]=25;
framepositionsx[13,7]=100;
framepositionsx[13,8]=162;
framepositionsx[13,9]=207;
framepositionsy[13,0]=-254;
framepositionsy[13,1]=-101;
framepositionsy[13,2]=-26;
framepositionsy[13,3]=-112;
framepositionsy[13,4]=-29;
framepositionsy[13,5]=1;
framepositionsy[13,6]=63;
framepositionsy[13,7]=172;
framepositionsy[13,8]=-5;
framepositionsy[13,9]=147;

framedirections[14,2]=357;
framedirections[14,3]=0;
framedirections[14,4]=355;
framedirections[14,5]=351;
framedirections[14,6]=3;
framedirections[14,7]=343;
framedirections[14,8]=0;
framedirections[14,9]=354;
framepositionsx[14,0]=0;
framepositionsx[14,1]=96;
framepositionsx[14,2]=115;
framepositionsx[14,3]=178;
framepositionsx[14,4]=247;
framepositionsx[14,5]=96;
framepositionsx[14,6]=25;
framepositionsx[14,7]=100;
framepositionsx[14,8]=162;
framepositionsx[14,9]=207;
framepositionsy[14,0]=-314;
framepositionsy[14,1]=-161;
framepositionsy[14,2]=-86;
framepositionsy[14,3]=-172;
framepositionsy[14,4]=-89;
framepositionsy[14,5]=-59;
framepositionsy[14,6]=3;
framepositionsy[14,7]=112;
framepositionsy[14,8]=-65;
framepositionsy[14,9]=87;

framedirections[15,2]=357;
framedirections[15,3]=0;
framedirections[15,4]=355;
framedirections[15,5]=351;
framedirections[15,6]=3;
framedirections[15,7]=343;
framedirections[15,8]=0;
framedirections[15,9]=354;
framepositionsx[15,0]=0;
framepositionsx[15,1]=96;
framepositionsx[15,2]=115;
framepositionsx[15,3]=178;
framepositionsx[15,4]=247;
framepositionsx[15,5]=96;
framepositionsx[15,6]=25;
framepositionsx[15,7]=100;
framepositionsx[15,8]=162;
framepositionsx[15,9]=207;
framepositionsy[15,0]=-374;
framepositionsy[15,1]=-221;
framepositionsy[15,2]=-146;
framepositionsy[15,3]=-232;
framepositionsy[15,4]=-149;
framepositionsy[15,5]=-119;
framepositionsy[15,6]=-57;
framepositionsy[15,7]=52;
framepositionsy[15,8]=-125;
framepositionsy[15,9]=27;

framedirections[16,2]=357;
framedirections[16,3]=0;
framedirections[16,4]=355;
framedirections[16,5]=351;
framedirections[16,6]=3;
framedirections[16,7]=343;
framedirections[16,8]=0;
framedirections[16,9]=354;
framepositionsx[16,0]=0;
framepositionsx[16,1]=96;
framepositionsx[16,2]=115;
framepositionsx[16,3]=178;
framepositionsx[16,4]=247;
framepositionsx[16,5]=96;
framepositionsx[16,6]=25;
framepositionsx[16,7]=100;
framepositionsx[16,8]=162;
framepositionsx[16,9]=207;
framepositionsy[16,0]=-434;
framepositionsy[16,1]=-281;
framepositionsy[16,2]=-201;
framepositionsy[16,3]=-292;
framepositionsy[16,4]=-209;
framepositionsy[16,5]=-179;
framepositionsy[16,6]=-117;
framepositionsy[16,7]=-8;
framepositionsy[16,8]=-185;
framepositionsy[16,9]=-33;

framedirections[17,2]=357;
framedirections[17,3]=0;
framedirections[17,4]=355;
framedirections[17,5]=351;
framedirections[17,6]=3;
framedirections[17,7]=343;
framedirections[17,8]=0;
framedirections[17,9]=354;
framepositionsx[17,0]=0;
framepositionsx[17,1]=96;
framepositionsx[17,2]=115;
framepositionsx[17,3]=178;
framepositionsx[17,4]=247;
framepositionsx[17,5]=96;
framepositionsx[17,6]=25;
framepositionsx[17,7]=100;
framepositionsx[17,8]=162;
framepositionsx[17,9]=207;
framepositionsy[17,0]=-494;
framepositionsy[17,1]=-341;
framepositionsy[17,2]=-261;
framepositionsy[17,3]=-352;
framepositionsy[17,4]=-269;
framepositionsy[17,5]=-239;
framepositionsy[17,6]=-177;
framepositionsy[17,7]=-68;
framepositionsy[17,8]=-245;
framepositionsy[17,9]=-93;

framedirections[18,2]=357;
framedirections[18,3]=0;
framedirections[18,4]=355;
framedirections[18,5]=351;
framedirections[18,6]=3;
framedirections[18,7]=343;
framedirections[18,8]=0;
framedirections[18,9]=354;
framepositionsx[18,0]=0;
framepositionsx[18,1]=96;
framepositionsx[18,2]=115;
framepositionsx[18,3]=178;
framepositionsx[18,4]=247;
framepositionsx[18,5]=96;
framepositionsx[18,6]=25;
framepositionsx[18,7]=100;
framepositionsx[18,8]=162;
framepositionsx[18,9]=207;
framepositionsy[18,0]=-554;
framepositionsy[18,1]=-401;
framepositionsy[18,2]=-321;
framepositionsy[18,3]=-412;
framepositionsy[18,4]=-329;
framepositionsy[18,5]=-299;
framepositionsy[18,6]=-237;
framepositionsy[18,7]=-128;
framepositionsy[18,8]=-305;
framepositionsy[18,9]=-153;

framedirections[19,2]=357;
framedirections[19,3]=0;
framedirections[19,4]=355;
framedirections[19,5]=351;
framedirections[19,6]=3;
framedirections[19,7]=343;
framedirections[19,8]=0;
framedirections[19,9]=354;
framepositionsx[19,0]=0;
framepositionsx[19,1]=96;
framepositionsx[19,2]=115;
framepositionsx[19,3]=178;
framepositionsx[19,4]=247;
framepositionsx[19,5]=96;
framepositionsx[19,6]=25;
framepositionsx[19,7]=100;
framepositionsx[19,8]=162;
framepositionsx[19,9]=207;
framepositionsy[19,0]=-614;
framepositionsy[19,1]=-461;
framepositionsy[19,2]=-381;
framepositionsy[19,3]=-472;
framepositionsy[19,4]=-389;
framepositionsy[19,5]=-359;
framepositionsy[19,6]=-297;
framepositionsy[19,7]=-188;
framepositionsy[19,8]=-365;
framepositionsy[19,9]=-213;

framedirections[20,2]=357;
framedirections[20,3]=0;
framedirections[20,4]=355;
framedirections[20,5]=351;
framedirections[20,6]=3;
framedirections[20,7]=343;
framedirections[20,8]=0;
framedirections[20,9]=354;
framepositionsx[20,0]=0;
framepositionsx[20,1]=96;
framepositionsx[20,2]=115;
framepositionsx[20,3]=178;
framepositionsx[20,4]=247;
framepositionsx[20,5]=96;
framepositionsx[20,6]=25;
framepositionsx[20,7]=100;
framepositionsx[20,8]=162;
framepositionsx[20,9]=207;
framepositionsy[20,0]=-614;
framepositionsy[20,1]=-461;
framepositionsy[20,2]=-381;
framepositionsy[20,3]=-472;
framepositionsy[20,4]=-389;
framepositionsy[20,5]=-359;
framepositionsy[20,6]=-297;
framepositionsy[20,7]=-188;
framepositionsy[20,8]=-365;
framepositionsy[20,9]=-213;

#define scr_tor_land
frames=18;
frame=0;
anim=4;
xprev=x;
x=view_xview[0]+580;
if (x>=1098)
    x=1098;
superstomp=0;

framedirections[0,2]=357;
framedirections[0,3]=0;
framedirections[0,4]=355;
framedirections[0,5]=351;
framedirections[0,6]=3;
framedirections[0,7]=343;
framedirections[0,8]=0;
framedirections[0,9]=354;
framepositionsx[0,0]=0;
framepositionsx[0,1]=96;
framepositionsx[0,2]=115;
framepositionsx[0,3]=178;
framepositionsx[0,4]=247;
framepositionsx[0,5]=96;
framepositionsx[0,6]=25;
framepositionsx[0,7]=96;
framepositionsx[0,8]=162;
framepositionsx[0,9]=207;
framepositionsy[0,0]=-600;
framepositionsy[0,1]=-447;
framepositionsy[0,2]=-372;
framepositionsy[0,3]=-458;
framepositionsy[0,4]=-375;
framepositionsy[0,5]=-345;
framepositionsy[0,6]=-283;
framepositionsy[0,7]=-174;
framepositionsy[0,8]=-351;
framepositionsy[0,9]=-189;

framedirections[1,2]=357;
framedirections[1,3]=0;
framedirections[1,4]=355;
framedirections[1,5]=351;
framedirections[1,6]=3;
framedirections[1,7]=343;
framedirections[1,8]=0;
framedirections[1,9]=354;
framepositionsx[1,0]=0;
framepositionsx[1,1]=96;
framepositionsx[1,2]=115;
framepositionsx[1,3]=178;
framepositionsx[1,4]=247;
framepositionsx[1,5]=96;
framepositionsx[1,6]=25;
framepositionsx[1,7]=96;
framepositionsx[1,8]=162;
framepositionsx[1,9]=207;
framepositionsy[1,0]=-520;
framepositionsy[1,1]=-367;
framepositionsy[1,2]=-292;
framepositionsy[1,3]=-378;
framepositionsy[1,4]=-295;
framepositionsy[1,5]=-265;
framepositionsy[1,6]=-203;
framepositionsy[1,7]=-94;
framepositionsy[1,8]=-271;
framepositionsy[1,9]=-109;

framedirections[2,2]=357;
framedirections[2,3]=0;
framedirections[2,4]=355;
framedirections[2,5]=351;
framedirections[2,6]=3;
framedirections[2,7]=343;
framedirections[2,8]=0;
framedirections[2,9]=354;
framepositionsx[2,0]=0;
framepositionsx[2,1]=96;
framepositionsx[2,2]=115;
framepositionsx[2,3]=178;
framepositionsx[2,4]=247;
framepositionsx[2,5]=96;
framepositionsx[2,6]=25;
framepositionsx[2,7]=96;
framepositionsx[2,8]=162;
framepositionsx[2,9]=207;
framepositionsy[2,0]=-440;
framepositionsy[2,1]=-287;
framepositionsy[2,2]=-212;
framepositionsy[2,3]=-298;
framepositionsy[2,4]=-215;
framepositionsy[2,5]=-185;
framepositionsy[2,6]=-123;
framepositionsy[2,7]=-14;
framepositionsy[2,8]=-191;
framepositionsy[2,9]=-29;

framedirections[3,2]=357;
framedirections[3,3]=0;
framedirections[3,4]=355;
framedirections[3,5]=351;
framedirections[3,6]=3;
framedirections[3,7]=343;
framedirections[3,8]=0;
framedirections[3,9]=354;
framepositionsx[3,0]=0;
framepositionsx[3,1]=96;
framepositionsx[3,2]=115;
framepositionsx[3,3]=178;
framepositionsx[3,4]=247;
framepositionsx[3,5]=96;
framepositionsx[3,6]=25;
framepositionsx[3,7]=96;
framepositionsx[3,8]=162;
framepositionsx[3,9]=207;
framepositionsy[3,0]=-360;
framepositionsy[3,1]=-207;
framepositionsy[3,2]=-132;
framepositionsy[3,3]=-218;
framepositionsy[3,4]=-135;
framepositionsy[3,5]=-105;
framepositionsy[3,6]=-43;
framepositionsy[3,7]=66;
framepositionsy[3,8]=-111;
framepositionsy[3,9]=51;

framedirections[4,2]=357;
framedirections[4,3]=0;
framedirections[4,4]=355;
framedirections[4,5]=351;
framedirections[4,6]=3;
framedirections[4,7]=343;
framedirections[4,8]=0;
framedirections[4,9]=354;
framepositionsx[4,0]=0;
framepositionsx[4,1]=96;
framepositionsx[4,2]=115;
framepositionsx[4,3]=178;
framepositionsx[4,4]=247;
framepositionsx[4,5]=96;
framepositionsx[4,6]=25;
framepositionsx[4,7]=96;
framepositionsx[4,8]=162;
framepositionsx[4,9]=207;
framepositionsy[4,0]=-280;
framepositionsy[4,1]=-127;
framepositionsy[4,2]=-52;
framepositionsy[4,3]=-138;
framepositionsy[4,4]=-55;
framepositionsy[4,5]=-25;
framepositionsy[4,6]=37;
framepositionsy[4,7]=146;
framepositionsy[4,8]=-31;
framepositionsy[4,9]=131;

framedirections[5,2]=357;
framedirections[5,3]=0;
framedirections[5,4]=355;
framedirections[5,5]=351;
framedirections[5,6]=3;
framedirections[5,7]=343;
framedirections[5,8]=0;
framedirections[5,9]=354;
framepositionsx[5,0]=0;
framepositionsx[5,1]=96;
framepositionsx[5,2]=115;
framepositionsx[5,3]=178;
framepositionsx[5,4]=247;
framepositionsx[5,5]=96;
framepositionsx[5,6]=25;
framepositionsx[5,7]=96;
framepositionsx[5,8]=162;
framepositionsx[5,9]=207;
framepositionsy[5,0]=-200;
framepositionsy[5,1]=-47;
framepositionsy[5,2]=28;
framepositionsy[5,3]=-58;
framepositionsy[5,4]=25;
framepositionsy[5,5]=55;
framepositionsy[5,6]=117;
framepositionsy[5,7]=226;
framepositionsy[5,8]=49;
framepositionsy[5,9]=211;

framedirections[6,2]=357;
framedirections[6,3]=0;
framedirections[6,4]=355;
framedirections[6,5]=351;
framedirections[6,6]=3;
framedirections[6,7]=343;
framedirections[6,8]=0;
framedirections[6,9]=354;
framepositionsx[6,0]=0;
framepositionsx[6,1]=96;
framepositionsx[6,2]=115;
framepositionsx[6,3]=178;
framepositionsx[6,4]=247;
framepositionsx[6,5]=96;
framepositionsx[6,6]=25;
framepositionsx[6,7]=96;
framepositionsx[6,8]=162;
framepositionsx[6,9]=207;
framepositionsy[6,0]=-120;
framepositionsy[6,1]=33;
framepositionsy[6,2]=108;
framepositionsy[6,3]=22;
framepositionsy[6,4]=105;
framepositionsy[6,5]=135;
framepositionsy[6,6]=197;
framepositionsy[6,7]=306;
framepositionsy[6,8]=129;
framepositionsy[6,9]=291;

framedirections[7,2]=357;
framedirections[7,3]=0;
framedirections[7,4]=355;
framedirections[7,5]=351;
framedirections[7,6]=3;
framedirections[7,7]=352;
framedirections[7,8]=0;
framedirections[7,9]=354;
framepositionsx[7,0]=0;
framepositionsx[7,1]=96;
framepositionsx[7,2]=115;
framepositionsx[7,3]=178;
framepositionsx[7,4]=247;
framepositionsx[7,5]=96;
framepositionsx[7,6]=25;
framepositionsx[7,7]=96;
framepositionsx[7,8]=162;
framepositionsx[7,9]=207;
framepositionsy[7,0]=-40;
framepositionsy[7,1]=113;
framepositionsy[7,2]=188;
framepositionsy[7,3]=102;
framepositionsy[7,4]=185;
framepositionsy[7,5]=215;
framepositionsy[7,6]=277;
framepositionsy[7,7]=386;
framepositionsy[7,8]=209;
framepositionsy[7,9]=371;

framedirections[8,2]=357;
framedirections[8,3]=0;
framedirections[8,4]=355;
framedirections[8,5]=4;
framedirections[8,6]=358;
framedirections[8,7]=0;
framedirections[8,8]=0;
framedirections[8,9]=0;
framepositionsx[8,0]=0;
framepositionsx[8,1]=96;
framepositionsx[8,2]=115;
framepositionsx[8,3]=178;
framepositionsx[8,4]=247;
framepositionsx[8,5]=96;
framepositionsx[8,6]=13;
framepositionsx[8,7]=97;
framepositionsx[8,8]=162;
framepositionsx[8,9]=207;
framepositionsy[8,0]=10;
framepositionsy[8,1]=164;
framepositionsy[8,2]=238;
framepositionsy[8,3]=152;
framepositionsy[8,4]=235;
framepositionsy[8,5]=260;
framepositionsy[8,6]=305;
framepositionsy[8,7]=401;
framepositionsy[8,8]=253;
framepositionsy[8,9]=401;

framedirections[9,2]=357;
framedirections[9,3]=0;
framedirections[9,4]=355;
framedirections[9,5]=14;
framedirections[9,6]=354;
framedirections[9,7]=0;
framedirections[9,8]=0;
framedirections[9,9]=0;
framepositionsx[9,0]=0;
framepositionsx[9,1]=96;
framepositionsx[9,2]=115;
framepositionsx[9,3]=178;
framepositionsx[9,4]=247;
framepositionsx[9,5]=96;
framepositionsx[9,6]=6;
framepositionsx[9,7]=97;
framepositionsx[9,8]=162;
framepositionsx[9,9]=207;
framepositionsy[9,0]=30;
framepositionsy[9,1]=186;
framepositionsy[9,2]=258;
framepositionsy[9,3]=172;
framepositionsy[9,4]=255;
framepositionsy[9,5]=280;
framepositionsy[9,6]=311;
framepositionsy[9,7]=401;
framepositionsy[9,8]=263;
framepositionsy[9,9]=401;

framedirections[10,2]=357;
framedirections[10,3]=0;
framedirections[10,4]=355;
framedirections[10,5]=16;
framedirections[10,6]=353;
framedirections[10,7]=0;
framedirections[10,8]=0;
framedirections[10,9]=0;
framepositionsx[10,0]=0;
framepositionsx[10,1]=96;
framepositionsx[10,2]=115;
framepositionsx[10,3]=178;
framepositionsx[10,4]=247;
framepositionsx[10,5]=96;
framepositionsx[10,6]=5;
framepositionsx[10,7]=97;
framepositionsx[10,8]=162;
framepositionsx[10,9]=207;
framepositionsy[10,0]=35;
framepositionsy[10,1]=193;
framepositionsy[10,2]=268;
framepositionsy[10,3]=182;
framepositionsy[10,4]=265;
framepositionsy[10,5]=285;
framepositionsy[10,6]=313;
framepositionsy[10,7]=401;
framepositionsy[10,8]=265;
framepositionsy[10,9]=401;

framedirections[11,2]=357;
framedirections[11,3]=0;
framedirections[11,4]=355;
framedirections[11,5]=16;
framedirections[11,6]=353;
framedirections[11,7]=0;
framedirections[11,8]=0;
framedirections[11,9]=0;
framepositionsx[11,0]=0;
framepositionsx[11,1]=96;
framepositionsx[11,2]=115;
framepositionsx[11,3]=178;
framepositionsx[11,4]=247;
framepositionsx[11,5]=96;
framepositionsx[11,6]=5;
framepositionsx[11,7]=97;
framepositionsx[11,8]=162;
framepositionsx[11,9]=207;
framepositionsy[11,0]=35;
framepositionsy[11,1]=193;
framepositionsy[11,2]=273;
framepositionsy[11,3]=184;
framepositionsy[11,4]=270;
framepositionsy[11,5]=285;
framepositionsy[11,6]=313;
framepositionsy[11,7]=401;
framepositionsy[11,8]=265;
framepositionsy[11,9]=401;

framedirections[12,2]=357;
framedirections[12,3]=0;
framedirections[12,4]=355;
framedirections[12,5]=14;
framedirections[12,6]=354;
framedirections[12,7]=0;
framedirections[12,8]=0;
framedirections[12,9]=0;
framepositionsx[12,0]=0;
framepositionsx[12,1]=96;
framepositionsx[12,2]=115;
framepositionsx[12,3]=178;
framepositionsx[12,4]=247;
framepositionsx[12,5]=96;
framepositionsx[12,6]=6;
framepositionsx[12,7]=97;
framepositionsx[12,8]=162;
framepositionsx[12,9]=207;
framepositionsy[12,0]=30;
framepositionsy[12,1]=186;
framepositionsy[12,2]=270;
framepositionsy[12,3]=179;
framepositionsy[12,4]=267;
framepositionsy[12,5]=280;
framepositionsy[12,6]=311;
framepositionsy[12,7]=401;
framepositionsy[12,8]=263;
framepositionsy[12,9]=401;

framedirections[13,2]=355;
framedirections[13,3]=0;
framedirections[13,4]=355;
framedirections[13,5]=11;
framedirections[13,6]=355;
framedirections[13,7]=0;
framedirections[13,8]=0;
framedirections[13,9]=0;
framepositionsx[13,0]=0;
framepositionsx[13,1]=96;
framepositionsx[13,2]=114;
framepositionsx[13,3]=178;
framepositionsx[13,4]=247;
framepositionsx[13,5]=96;
framepositionsx[13,6]=8;
framepositionsx[13,7]=97;
framepositionsx[13,8]=162;
framepositionsx[13,9]=207;
framepositionsy[13,0]=26;
framepositionsy[13,1]=180;
framepositionsy[13,2]=262;
framepositionsy[13,3]=173;
framepositionsy[13,4]=261;
framepositionsy[13,5]=276;
framepositionsy[13,6]=310;
framepositionsy[13,7]=401;
framepositionsy[13,8]=259;
framepositionsy[13,9]=401;

framedirections[14,2]=356;
framedirections[14,3]=0;
framedirections[14,4]=356;
framedirections[14,5]=8;
framedirections[14,6]=356;
framedirections[14,7]=0;
framedirections[14,8]=0;
framedirections[14,9]=0;
framepositionsx[14,0]=0;
framepositionsx[14,1]=96;
framepositionsx[14,2]=114;
framepositionsx[14,3]=178;
framepositionsx[14,4]=247;
framepositionsx[14,5]=96;
framepositionsx[14,6]=10;
framepositionsx[14,7]=97;
framepositionsx[14,8]=162;
framepositionsx[14,9]=207;
framepositionsy[14,0]=20;
framepositionsy[14,1]=173;
framepositionsy[14,2]=248;
framepositionsy[14,3]=165;
framepositionsy[14,4]=251;
framepositionsy[14,5]=270;
framepositionsy[14,6]=308;
framepositionsy[14,7]=401;
framepositionsy[14,8]=258;
framepositionsy[14,9]=401;

framedirections[15,2]=356;
framedirections[15,3]=0;
framedirections[15,4]=357;
framedirections[15,5]=4;
framedirections[15,6]=358;
framedirections[15,7]=0;
framedirections[15,8]=0;
framedirections[15,9]=0;
framepositionsx[15,0]=0;
framepositionsx[15,1]=96;
framepositionsx[15,2]=113;
framepositionsx[15,3]=178;
framepositionsx[15,4]=247;
framepositionsx[15,5]=96;
framepositionsx[15,6]=13;
framepositionsx[15,7]=97;
framepositionsx[15,8]=162;
framepositionsx[15,9]=207;
framepositionsy[15,0]=10;
framepositionsy[15,1]=163;
framepositionsy[15,2]=230;
framepositionsy[15,3]=153;
framepositionsy[15,4]=237;
framepositionsy[15,5]=260;
framepositionsy[15,6]=305;
framepositionsy[15,7]=401;
framepositionsy[15,8]=254;
framepositionsy[15,9]=401;

framedirections[16,2]=358;
framedirections[16,3]=0;
framedirections[16,4]=358;
framedirections[16,5]=0;
framedirections[16,6]=0;
framedirections[16,7]=0;
framedirections[16,8]=0;
framedirections[16,9]=0;
framepositionsx[16,0]=0;
framepositionsx[16,1]=96;
framepositionsx[16,2]=114;
framepositionsx[16,3]=178;
framepositionsx[16,4]=247;
framepositionsx[16,5]=96;
framepositionsx[16,6]=16;
framepositionsx[16,7]=97;
framepositionsx[16,8]=162;
framepositionsx[16,9]=207;
framepositionsy[16,0]=3;
framepositionsy[16,1]=156;
framepositionsy[16,2]=220;
framepositionsy[16,3]=145;
framepositionsy[16,4]=228;
framepositionsy[16,5]=253;
framepositionsy[16,6]=302;
framepositionsy[16,7]=401;
framepositionsy[16,8]=251;
framepositionsy[16,9]=401;

framedirections[17,2]=359;
framedirections[17,3]=0;
framedirections[17,4]=359;
framedirections[17,5]=0;
framedirections[17,6]=0;
framedirections[17,7]=0;
framedirections[17,8]=0;
framedirections[17,9]=0;
framepositionsx[17,0]=0;
framepositionsx[17,1]=96;
framepositionsx[17,2]=114;
framepositionsx[17,3]=178;
framepositionsx[17,4]=247;
framepositionsx[17,5]=96;
framepositionsx[17,6]=16;
framepositionsx[17,7]=97;
framepositionsx[17,8]=162;
framepositionsx[17,9]=207;
framepositionsy[17,0]=1;
framepositionsy[17,1]=154;
framepositionsy[17,2]=215;
framepositionsy[17,3]=143;
framepositionsy[17,4]=226;
framepositionsy[17,5]=251;
framepositionsy[17,6]=301;
framepositionsy[17,7]=401;
framepositionsy[17,8]=250;
framepositionsy[17,9]=401;

framedirections[18,2]=0;
framedirections[18,3]=0;
framedirections[18,4]=0;
framedirections[18,5]=0;
framedirections[18,6]=0;
framedirections[18,7]=0;
framedirections[18,8]=0;
framedirections[18,9]=0;
framepositionsx[18,0]=0;
framepositionsx[18,1]=96;
framepositionsx[18,2]=114;
framepositionsx[18,3]=178;
framepositionsx[18,4]=247;
framepositionsx[18,5]=96;
framepositionsx[18,6]=16;
framepositionsx[18,7]=97;
framepositionsx[18,8]=162;
framepositionsx[18,9]=207;
framepositionsy[18,0]=0;
framepositionsy[18,1]=153;
framepositionsy[18,2]=214;
framepositionsy[18,3]=142;
framepositionsy[18,4]=225;
framepositionsy[18,5]=250;
framepositionsy[18,6]=300;
framepositionsy[18,7]=401;
framepositionsy[18,8]=249;
framepositionsy[18,9]=401;

#define scr_tor_stomp
frames=16;
frame=0;
anim=5;

framedirections[0,2]=0;
framedirections[0,3]=0;
framedirections[0,4]=0;
framedirections[0,5]=0;
framedirections[0,6]=0;
framedirections[0,7]=0;
framedirections[0,8]=0;
framedirections[0,9]=0;
framepositionsx[0,0]=0;
framepositionsx[0,1]=96;
framepositionsx[0,2]=114;
framepositionsx[0,3]=178;
framepositionsx[0,4]=247;
framepositionsx[0,5]=96;
framepositionsx[0,6]=16;
framepositionsx[0,7]=97;
framepositionsx[0,8]=162;
framepositionsx[0,9]=207;
framepositionsy[0,0]=0;
framepositionsy[0,1]=153;
framepositionsy[0,2]=214;
framepositionsy[0,3]=142;
framepositionsy[0,4]=225;
framepositionsy[0,5]=250;
framepositionsy[0,6]=300;
framepositionsy[0,7]=401;
framepositionsy[0,8]=249;
framepositionsy[0,9]=401;

framedirections[1,2]=0;
framedirections[1,3]=0;
framedirections[1,4]=0;
framedirections[1,5]=0;
framedirections[1,6]=1;
framedirections[1,7]=0;
framedirections[1,8]=0.25;
framedirections[1,9]=0;
framepositionsx[1,0]=1;
framepositionsx[1,1]=97;
framepositionsx[1,2]=115;
framepositionsx[1,3]=179;
framepositionsx[1,4]=248;
framepositionsx[1,5]=97;
framepositionsx[1,6]=17;
framepositionsx[1,7]=97;
framepositionsx[1,8]=163;
framepositionsx[1,9]=207;
framepositionsy[1,0]=-1;
framepositionsy[1,1]=152;
framepositionsy[1,2]=213;
framepositionsy[1,3]=141;
framepositionsy[1,4]=224;
framepositionsy[1,5]=249;
framepositionsy[1,6]=299;
framepositionsy[1,7]=401;
framepositionsy[1,8]=248;
framepositionsy[1,9]=401;

framedirections[2,2]=0;
framedirections[2,3]=1;
framedirections[2,4]=0;
framedirections[2,5]=4;
framedirections[2,6]=0;
framedirections[2,7]=356;
framedirections[2,8]=0.75;
framedirections[2,9]=0;
framepositionsx[2,0]=2;
framepositionsx[2,1]=98;
framepositionsx[2,2]=115;
framepositionsx[2,3]=180;
framepositionsx[2,4]=248;
framepositionsx[2,5]=98;
framepositionsx[2,6]=15;
framepositionsx[2,7]=96;
framepositionsx[2,8]=164;
framepositionsx[2,9]=207;
framepositionsy[2,0]=-4;
framepositionsy[2,1]=149;
framepositionsy[2,2]=210;
framepositionsy[2,3]=138;
framepositionsy[2,4]=222;
framepositionsy[2,5]=246;
framepositionsy[2,6]=291;
framepositionsy[2,7]=392;
framepositionsy[2,8]=247;
framepositionsy[2,9]=401;

framedirections[3,2]=1;
framedirections[3,3]=2;
framedirections[3,4]=1;
framedirections[3,5]=8;
framedirections[3,6]=358;
framedirections[3,7]=352;
framedirections[3,8]=1;
framedirections[3,9]=0;
framepositionsx[3,0]=3;
framepositionsx[3,1]=99;
framepositionsx[3,2]=115;
framepositionsx[3,3]=181;
framepositionsx[3,4]=247;
framepositionsx[3,5]=99;
framepositionsx[3,6]=13;
framepositionsx[3,7]=97;
framepositionsx[3,8]=165;
framepositionsx[3,9]=207;
framepositionsy[3,0]=-8;
framepositionsy[3,1]=145;
framepositionsy[3,2]=206;
framepositionsy[3,3]=134;
framepositionsy[3,4]=219;
framepositionsy[3,5]=242;
framepositionsy[3,6]=281;
framepositionsy[3,7]=379;
framepositionsy[3,8]=245;
framepositionsy[3,9]=401;

framedirections[4,2]=3;
framedirections[4,3]=3;
framedirections[4,4]=2;
framedirections[4,5]=14;
framedirections[4,6]=356;
framedirections[4,7]=353;
framedirections[4,8]=1;
framedirections[4,9]=0;
framepositionsx[4,0]=3;
framepositionsx[4,1]=99;
framepositionsx[4,2]=114;
framepositionsx[4,3]=181;
framepositionsx[4,4]=246;
framepositionsx[4,5]=99;
framepositionsx[4,6]=9;
framepositionsx[4,7]=96;
framepositionsx[4,8]=165;
framepositionsx[4,9]=207;
framepositionsy[4,0]=-9;
framepositionsy[4,1]=144;
framepositionsy[4,2]=204;
framepositionsy[4,3]=133;
framepositionsy[4,4]=219;
framepositionsy[4,5]=241;
framepositionsy[4,6]=271;
framepositionsy[4,7]=366;
framepositionsy[4,8]=244;
framepositionsy[4,9]=401;

framedirections[5,2]=3;
framedirections[5,3]=4;
framedirections[5,4]=3;
framedirections[5,5]=20;
framedirections[5,6]=356;
framedirections[5,7]=356;
framedirections[5,8]=0.75;
framedirections[5,9]=0;
framepositionsx[5,0]=2;
framepositionsx[5,1]=98;
framepositionsx[5,2]=111;
framepositionsx[5,3]=180;
framepositionsx[5,4]=243;
framepositionsx[5,5]=98;
framepositionsx[5,6]=6;
framepositionsx[5,7]=93;
framepositionsx[5,8]=164;
framepositionsx[5,9]=207;
framepositionsy[5,0]=-8;
framepositionsy[5,1]=145;
framepositionsy[5,2]=201;
framepositionsy[5,3]=134;
framepositionsy[5,4]=221;
framepositionsy[5,5]=242;
framepositionsy[5,6]=262;
framepositionsy[5,7]=357;
framepositionsy[5,8]=244;
framepositionsy[5,9]=401;

framedirections[6,2]=2;
framedirections[6,3]=4;
framedirections[6,4]=3;
framedirections[6,5]=24;
framedirections[6,6]=355;
framedirections[6,7]=359;
framedirections[6,8]=0.25;
framedirections[6,9]=0;
framepositionsx[6,0]=1;
framepositionsx[6,1]=97;
framepositionsx[6,2]=110;
framepositionsx[6,3]=179;
framepositionsx[6,4]=242;
framepositionsx[6,5]=97;
framepositionsx[6,6]=3;
framepositionsx[6,7]=93;
framepositionsx[6,8]=163;
framepositionsx[6,9]=207;
framepositionsy[6,0]=-6;
framepositionsy[6,1]=147;
framepositionsy[6,2]=201;
framepositionsy[6,3]=136;
framepositionsy[6,4]=223;
framepositionsy[6,5]=244;
framepositionsy[6,6]=258;
framepositionsy[6,7]=351;
framepositionsy[6,8]=245;
framepositionsy[6,9]=401;

framedirections[7,2]=1;
framedirections[7,3]=4;
framedirections[7,4]=1.50;
framedirections[7,5]=15;
framedirections[7,6]=358;
framedirections[7,7]=2;
framedirections[7,8]=0;
framedirections[7,9]=0;
framepositionsx[7,0]=0;
framepositionsx[7,1]=96;
framepositionsx[7,2]=108;
framepositionsx[7,3]=178;
framepositionsx[7,4]=241;
framepositionsx[7,5]=96;
framepositionsx[7,6]=6;
framepositionsx[7,7]=90;
framepositionsx[7,8]=162;
framepositionsx[7,9]=207;
framepositionsy[7,0]=-1;
framepositionsy[7,1]=152;
framepositionsy[7,2]=210;
framepositionsy[7,3]=141;
framepositionsy[7,4]=228;
framepositionsy[7,5]=249;
framepositionsy[7,6]=277;
framepositionsy[7,7]=375;
framepositionsy[7,8]=248;
framepositionsy[7,9]=401;

framedirections[8,2]=359;
framedirections[8,3]=3;
framedirections[8,4]=357;
framedirections[8,5]=7;
framedirections[8,6]=356.50;
framedirections[8,7]=0;
framedirections[8,8]=-0.75;
framedirections[8,9]=0;
framepositionsx[8,0]=0;
framepositionsx[8,1]=96;
framepositionsx[8,2]=111;
framepositionsx[8,3]=178;
framepositionsx[8,4]=243;
framepositionsx[8,5]=96;
framepositionsx[8,6]=9;
framepositionsx[8,7]=97;
framepositionsx[8,8]=162;
framepositionsx[8,9]=207;
framepositionsy[8,0]=15;
framepositionsy[8,1]=168;
framepositionsy[8,2]=243;
framepositionsy[8,3]=157;
framepositionsy[8,4]=243;
framepositionsy[8,5]=269;
framepositionsy[8,6]=310;
framepositionsy[8,7]=401;
framepositionsy[8,8]=257;
framepositionsy[8,9]=401;

framedirections[9,2]=359;
framedirections[9,3]=2.75;
framedirections[9,4]=357.50;
framedirections[9,5]=6;
framedirections[9,6]=357;
framedirections[9,7]=0;
framedirections[9,8]=-0.50;
framedirections[9,9]=0;
framepositionsx[9,0]=0;
framepositionsx[9,1]=96;
framepositionsx[9,2]=111;
framepositionsx[9,3]=178;
framepositionsx[9,4]=243;
framepositionsx[9,5]=96;
framepositionsx[9,6]=10;
framepositionsx[9,7]=97;
framepositionsx[9,8]=162;
framepositionsx[9,9]=207;
framepositionsy[9,0]=14;
framepositionsy[9,1]=167;
framepositionsy[9,2]=239;
framepositionsy[9,3]=156;
framepositionsy[9,4]=241;
framepositionsy[9,5]=266;
framepositionsy[9,6]=308;
framepositionsy[9,7]=401;
framepositionsy[9,8]=256;
framepositionsy[9,9]=401;

framedirections[10,2]=359;
framedirections[10,3]=2;
framedirections[10,4]=358;
framedirections[10,5]=5;
framedirections[10,6]=357.50;
framedirections[10,7]=0;
framedirections[10,8]=-0.50;
framedirections[10,9]=0;
framepositionsx[10,0]=0;
framepositionsx[10,1]=96;
framepositionsx[10,2]=111;
framepositionsx[10,3]=178;
framepositionsx[10,4]=244;
framepositionsx[10,5]=96;
framepositionsx[10,6]=11;
framepositionsx[10,7]=97;
framepositionsx[10,8]=162;
framepositionsx[10,9]=207;
framepositionsy[10,0]=12;
framepositionsy[10,1]=165;
framepositionsy[10,2]=234;
framepositionsy[10,3]=154;
framepositionsy[10,4]=239;
framepositionsy[10,5]=263;
framepositionsy[10,6]=306;
framepositionsy[10,7]=401;
framepositionsy[10,8]=255;
framepositionsy[10,9]=401;

framedirections[11,2]=0;
framedirections[11,3]=1.50;
framedirections[11,4]=359;
framedirections[11,5]=4;
framedirections[11,6]=358;
framedirections[11,7]=0;
framedirections[11,8]=-0.25;
framedirections[11,9]=0;
framepositionsx[11,0]=0;
framepositionsx[11,1]=96;
framepositionsx[11,2]=112;
framepositionsx[11,3]=178;
framepositionsx[11,4]=244;
framepositionsx[11,5]=96;
framepositionsx[11,6]=12;
framepositionsx[11,7]=97;
framepositionsx[11,8]=162;
framepositionsx[11,9]=207;
framepositionsy[11,0]=10;
framepositionsy[11,1]=163;
framepositionsy[11,2]=230;
framepositionsy[11,3]=152;
framepositionsy[11,4]=237;
framepositionsy[11,5]=260;
framepositionsy[11,6]=305;
framepositionsy[11,7]=401;
framepositionsy[11,8]=254;
framepositionsy[11,9]=401;

framedirections[12,2]=0;
framedirections[12,3]=0.75;
framedirections[12,4]=359.50;
framedirections[12,5]=3;
framedirections[12,6]=358.50;
framedirections[12,7]=0;
framedirections[12,8]=-0.25;
framedirections[12,9]=0;
framepositionsx[12,0]=0;
framepositionsx[12,1]=96;
framepositionsx[12,2]=113;
framepositionsx[12,3]=178;
framepositionsx[12,4]=246;
framepositionsx[12,5]=96;
framepositionsx[12,6]=13;
framepositionsx[12,7]=97;
framepositionsx[12,8]=162;
framepositionsx[12,9]=207;
framepositionsy[12,0]=7;
framepositionsy[12,1]=160;
framepositionsy[12,2]=224;
framepositionsy[12,3]=149;
framepositionsy[12,4]=233;
framepositionsy[12,5]=257;
framepositionsy[12,6]=304;
framepositionsy[12,7]=401;
framepositionsy[12,8]=253;
framepositionsy[12,9]=401;

framedirections[13,2]=0;
framedirections[13,3]=0.50;
framedirections[13,4]=0;
framedirections[13,5]=2;
framedirections[13,6]=359;
framedirections[13,7]=0;
framedirections[13,8]=0;
framedirections[13,9]=0;
framepositionsx[13,0]=0;
framepositionsx[13,1]=96;
framepositionsx[13,2]=113;
framepositionsx[13,3]=178;
framepositionsx[13,4]=246;
framepositionsx[13,5]=96;
framepositionsx[13,6]=14;
framepositionsx[13,7]=97;
framepositionsx[13,8]=162;
framepositionsx[13,9]=207;
framepositionsy[13,0]=4;
framepositionsy[13,1]=157;
framepositionsy[13,2]=219;
framepositionsy[13,3]=146;
framepositionsy[13,4]=230;
framepositionsy[13,5]=254;
framepositionsy[13,6]=303;
framepositionsy[13,7]=401;
framepositionsy[13,8]=252;
framepositionsy[13,9]=401;

framedirections[14,2]=0;
framedirections[14,3]=0;
framedirections[14,4]=0;
framedirections[14,5]=1;
framedirections[14,6]=359;
framedirections[14,7]=0;
framedirections[14,8]=0;
framedirections[14,9]=0;
framepositionsx[14,0]=0;
framepositionsx[14,1]=96;
framepositionsx[14,2]=114;
framepositionsx[14,3]=178;
framepositionsx[14,4]=247;
framepositionsx[14,5]=96;
framepositionsx[14,6]=14;
framepositionsx[14,7]=97;
framepositionsx[14,8]=162;
framepositionsx[14,9]=207;
framepositionsy[14,0]=2;
framepositionsy[14,1]=155;
framepositionsy[14,2]=216;
framepositionsy[14,3]=144;
framepositionsy[14,4]=227;
framepositionsy[14,5]=252;
framepositionsy[14,6]=302;
framepositionsy[14,7]=401;
framepositionsy[14,8]=251;
framepositionsy[14,9]=401;

framedirections[15,2]=0;
framedirections[15,3]=0;
framedirections[15,4]=0;
framedirections[15,5]=0;
framedirections[15,6]=359.50;
framedirections[15,7]=0;
framedirections[15,8]=0;
framedirections[15,9]=0;
framepositionsx[15,0]=0;
framepositionsx[15,1]=96;
framepositionsx[15,2]=114;
framepositionsx[15,3]=178;
framepositionsx[15,4]=247;
framepositionsx[15,5]=96;
framepositionsx[15,6]=15;
framepositionsx[15,7]=97;
framepositionsx[15,8]=162;
framepositionsx[15,9]=207;
framepositionsy[15,0]=1;
framepositionsy[15,1]=154;
framepositionsy[15,2]=215;
framepositionsy[15,3]=143;
framepositionsy[15,4]=226;
framepositionsy[15,5]=251;
framepositionsy[15,6]=301;
framepositionsy[15,7]=401;
framepositionsy[15,8]=250;
framepositionsy[15,9]=401;

framedirections[16,2]=0;
framedirections[16,3]=0;
framedirections[16,4]=0;
framedirections[16,5]=0;
framedirections[16,6]=0;
framedirections[16,7]=0;
framedirections[16,8]=0;
framedirections[16,9]=0;
framepositionsx[16,0]=0;
framepositionsx[16,1]=96;
framepositionsx[16,2]=114;
framepositionsx[16,3]=178;
framepositionsx[16,4]=247;
framepositionsx[16,5]=96;
framepositionsx[16,6]=16;
framepositionsx[16,7]=97;
framepositionsx[16,8]=162;
framepositionsx[16,9]=207;
framepositionsy[16,0]=0;
framepositionsy[16,1]=153;
framepositionsy[16,2]=214;
framepositionsy[16,3]=142;
framepositionsy[16,4]=225;
framepositionsy[16,5]=250;
framepositionsy[16,6]=300;
framepositionsy[16,7]=401;
framepositionsy[16,8]=249;
framepositionsy[16,9]=401;

#define scr_tor_death
frames=18;
frame=0;
anim=6;
alarm[0]=18;

framedirections[0,2]=40;
framedirections[0,3]=13;
framedirections[0,4]=333;
framedirections[0,5]=0;
framedirections[0,6]=0;
framedirections[0,7]=0;
framedirections[0,8]=0;
framedirections[0,9]=0;
framepositionsx[0,0]=0;
framepositionsx[0,1]=96;
framepositionsx[0,2]=119;
framepositionsx[0,3]=178;
framepositionsx[0,4]=227;
framepositionsx[0,5]=96;
framepositionsx[0,6]=16;
framepositionsx[0,7]=97;
framepositionsx[0,8]=162;
framepositionsx[0,9]=207;
framepositionsy[0,0]=0;
framepositionsy[0,1]=153;
framepositionsy[0,2]=224;
framepositionsy[0,3]=142;
framepositionsy[0,4]=238;
framepositionsy[0,5]=250;
framepositionsy[0,6]=300;
framepositionsy[0,7]=401;
framepositionsy[0,8]=249;
framepositionsy[0,9]=401;

framedirections[1,2]=39.75;
framedirections[1,3]=13;
framedirections[1,4]=334;
framedirections[1,5]=1;
framedirections[1,6]=0.25;
framedirections[1,7]=0;
framedirections[1,8]=0.75;
framedirections[1,9]=0;
framepositionsx[1,0]=2;
framepositionsx[1,1]=98;
framepositionsx[1,2]=121;
framepositionsx[1,3]=180;
framepositionsx[1,4]=229;
framepositionsx[1,5]=98;
framepositionsx[1,6]=16;
framepositionsx[1,7]=97;
framepositionsx[1,8]=164;
framepositionsx[1,9]=207;
framepositionsy[1,0]=0;
framepositionsy[1,1]=153;
framepositionsy[1,2]=224;
framepositionsy[1,3]=142;
framepositionsy[1,4]=238;
framepositionsy[1,5]=250;
framepositionsy[1,6]=300;
framepositionsy[1,7]=401;
framepositionsy[1,8]=249;
framepositionsy[1,9]=401;

framedirections[2,2]=39.50;
framedirections[2,3]=12;
framedirections[2,4]=335;
framedirections[2,5]=2;
framedirections[2,6]=1.25;
framedirections[2,7]=0;
framedirections[2,8]=1.25;
framedirections[2,9]=0;
framepositionsx[2,0]=4;
framepositionsx[2,1]=100;
framepositionsx[2,2]=123;
framepositionsx[2,3]=182;
framepositionsx[2,4]=233;
framepositionsx[2,5]=100;
framepositionsx[2,6]=19;
framepositionsx[2,7]=97;
framepositionsx[2,8]=166;
framepositionsx[2,9]=207;
framepositionsy[2,0]=1;
framepositionsy[2,1]=154;
framepositionsy[2,2]=225;
framepositionsy[2,3]=143;
framepositionsy[2,4]=238;
framepositionsy[2,5]=251;
framepositionsy[2,6]=299;
framepositionsy[2,7]=401;
framepositionsy[2,8]=250;
framepositionsy[2,9]=401;

framedirections[3,2]=39.25;
framedirections[3,3]=11;
framedirections[3,4]=335.75;
framedirections[3,5]=3;
framedirections[3,6]=2;
framedirections[3,7]=0;
framedirections[3,8]=2;
framedirections[3,9]=0;
framepositionsx[3,0]=6;
framepositionsx[3,1]=102;
framepositionsx[3,2]=125;
framepositionsx[3,3]=184;
framepositionsx[3,4]=236;
framepositionsx[3,5]=102;
framepositionsx[3,6]=20;
framepositionsx[3,7]=97;
framepositionsx[3,8]=168;
framepositionsx[3,9]=207;
framepositionsy[3,0]=1;
framepositionsy[3,1]=154;
framepositionsy[3,2]=225;
framepositionsy[3,3]=143;
framepositionsy[3,4]=237;
framepositionsy[3,5]=251;
framepositionsy[3,6]=299;
framepositionsy[3,7]=401;
framepositionsy[3,8]=250;
framepositionsy[3,9]=401;

framedirections[4,2]=39;
framedirections[4,3]=10.50;
framedirections[4,4]=336;
framedirections[4,5]=4;
framedirections[4,6]=2;
framedirections[4,7]=0;
framedirections[4,8]=2.25;
framedirections[4,9]=0;
framepositionsx[4,0]=7;
framepositionsx[4,1]=103;
framepositionsx[4,2]=126;
framepositionsx[4,3]=185;
framepositionsx[4,4]=238;
framepositionsx[4,5]=103;
framepositionsx[4,6]=20;
framepositionsx[4,7]=97;
framepositionsx[4,8]=169;
framepositionsx[4,9]=207;
framepositionsy[4,0]=2;
framepositionsy[4,1]=155;
framepositionsy[4,2]=226;
framepositionsy[4,3]=144;
framepositionsy[4,4]=238;
framepositionsy[4,5]=252;
framepositionsy[4,6]=299;
framepositionsy[4,7]=401;
framepositionsy[4,8]=251;
framepositionsy[4,9]=401;

framedirections[5,2]=39;
framedirections[5,3]=10;
framedirections[5,4]=335.75;
framedirections[5,5]=4;
framedirections[5,6]=2;
framedirections[5,7]=0;
framedirections[5,8]=2.25;
framedirections[5,9]=0;
framepositionsx[5,0]=7;
framepositionsx[5,1]=103;
framepositionsx[5,2]=126;
framepositionsx[5,3]=185;
framepositionsx[5,4]=239;
framepositionsx[5,5]=103;
framepositionsx[5,6]=20;
framepositionsx[5,7]=97;
framepositionsx[5,8]=169;
framepositionsx[5,9]=207;
framepositionsy[5,0]=3;
framepositionsy[5,1]=156;
framepositionsy[5,2]=227;
framepositionsy[5,3]=145;
framepositionsy[5,4]=238;
framepositionsy[5,5]=253;
framepositionsy[5,6]=299;
framepositionsy[5,7]=401;
framepositionsy[5,8]=252;
framepositionsy[5,9]=401;

framedirections[6,2]=38.75;
framedirections[6,3]=9;
framedirections[6,4]=335;
framedirections[6,5]=4;
framedirections[6,6]=1.25;
framedirections[6,7]=0;
framedirections[6,8]=2;
framedirections[6,9]=0;
framepositionsx[6,0]=6;
framepositionsx[6,1]=102;
framepositionsx[6,2]=125;
framepositionsx[6,3]=184;
framepositionsx[6,4]=240;
framepositionsx[6,5]=102;
framepositionsx[6,6]=19;
framepositionsx[6,7]=97;
framepositionsx[6,8]=168;
framepositionsx[6,9]=207;
framepositionsy[6,0]=4;
framepositionsy[6,1]=157;
framepositionsy[6,2]=228;
framepositionsy[6,3]=146;
framepositionsy[6,4]=239;
framepositionsy[6,5]=254;
framepositionsy[6,6]=300;
framepositionsy[6,7]=401;
framepositionsy[6,8]=253;
framepositionsy[6,9]=401;

framedirections[7,2]=38.50;
framedirections[7,3]=8;
framedirections[7,4]=334;
framedirections[7,5]=4;
framedirections[7,6]=0.25;
framedirections[7,7]=0;
framedirections[7,8]=1.25;
framedirections[7,9]=0;
framepositionsx[7,0]=4;
framepositionsx[7,1]=100;
framepositionsx[7,2]=123;
framepositionsx[7,3]=182;
framepositionsx[7,4]=239;
framepositionsx[7,5]=100;
framepositionsx[7,6]=17;
framepositionsx[7,7]=97;
framepositionsx[7,8]=166;
framepositionsx[7,9]=207;
framepositionsy[7,0]=4;
framepositionsy[7,1]=157;
framepositionsy[7,2]=228;
framepositionsy[7,3]=146;
framepositionsy[7,4]=238;
framepositionsy[7,5]=254;
framepositionsy[7,6]=301;
framepositionsy[7,7]=401;
framepositionsy[7,8]=253;
framepositionsy[7,9]=401;

framedirections[8,2]=38.25;
framedirections[8,3]=7;
framedirections[8,4]=333.50;
framedirections[8,5]=4;
framedirections[8,6]=359.25;
framedirections[8,7]=0;
framedirections[8,8]=0.75;
framedirections[8,9]=0;
framepositionsx[8,0]=2;
framepositionsx[8,1]=98;
framepositionsx[8,2]=121;
framepositionsx[8,3]=180;
framepositionsx[8,4]=239;
framepositionsx[8,5]=98;
framepositionsx[8,6]=15;
framepositionsx[8,7]=97;
framepositionsx[8,8]=164;
framepositionsx[8,9]=207;
framepositionsy[8,0]=5;
framepositionsy[8,1]=158;
framepositionsy[8,2]=229;
framepositionsy[8,3]=147;
framepositionsy[8,4]=238;
framepositionsy[8,5]=255;
framepositionsy[8,6]=302;
framepositionsy[8,7]=401;
framepositionsy[8,8]=254;
framepositionsy[8,9]=401;

framedirections[9,2]=38;
framedirections[9,3]=7;
framedirections[9,4]=333;
framedirections[9,5]=3;
framedirections[9,6]=358.50;
framedirections[9,7]=0;
framedirections[9,8]=0;
framedirections[9,9]=0;
framepositionsx[9,0]=0;
framepositionsx[9,1]=96;
framepositionsx[9,2]=119;
framepositionsx[9,3]=178;
framepositionsx[9,4]=237;
framepositionsx[9,5]=96;
framepositionsx[9,6]=13;
framepositionsx[9,7]=97;
framepositionsx[9,8]=162;
framepositionsx[9,9]=207;
framepositionsy[9,0]=5;
framepositionsy[9,1]=158;
framepositionsy[9,2]=229;
framepositionsy[9,3]=147;
framepositionsy[9,4]=238;
framepositionsy[9,5]=255;
framepositionsy[9,6]=303;
framepositionsy[9,7]=401;
framepositionsy[9,8]=254;
framepositionsy[9,9]=401;

framedirections[10,2]=38.25;
framedirections[10,3]=7;
framedirections[10,4]=332;
framedirections[10,5]=2;
framedirections[10,6]=358;
framedirections[10,7]=0;
framedirections[10,8]=359;
framedirections[10,9]=0;
framepositionsx[10,0]=-2;
framepositionsx[10,1]=94;
framepositionsx[10,2]=117;
framepositionsx[10,3]=176;
framepositionsx[10,4]=235;
framepositionsx[10,5]=94;
framepositionsx[10,6]=12;
framepositionsx[10,7]=97;
framepositionsx[10,8]=160;
framepositionsx[10,9]=207;
framepositionsy[10,0]=5;
framepositionsy[10,1]=158;
framepositionsy[10,2]=229;
framepositionsy[10,3]=147;
framepositionsy[10,4]=238;
framepositionsy[10,5]=255;
framepositionsy[10,6]=304;
framepositionsy[10,7]=401;
framepositionsy[10,8]=254;
framepositionsy[10,9]=401;

framedirections[11,2]=38.50;
framedirections[11,3]=8;
framedirections[11,4]=331;
framedirections[11,5]=0;
framedirections[11,6]=357.25;
framedirections[11,7]=0;
framedirections[11,8]=358.25;
framedirections[11,9]=0;
framepositionsx[11,0]=-4;
framepositionsx[11,1]=92;
framepositionsx[11,2]=115;
framepositionsx[11,3]=174;
framepositionsx[11,4]=231;
framepositionsx[11,5]=92;
framepositionsx[11,6]=11;
framepositionsx[11,7]=97;
framepositionsx[11,8]=158;
framepositionsx[11,9]=207;
framepositionsy[11,0]=4;
framepositionsy[11,1]=157;
framepositionsy[11,2]=228;
framepositionsy[11,3]=146;
framepositionsy[11,4]=238;
framepositionsy[11,5]=254;
framepositionsy[11,6]=305;
framepositionsy[11,7]=401;
framepositionsy[11,8]=253;
framepositionsy[11,9]=401;

framedirections[12,2]=38.75;
framedirections[12,3]=9;
framedirections[12,4]=330.25;
framedirections[12,5]=359;
framedirections[12,6]=356.50;
framedirections[12,7]=0;
framedirections[12,8]=357.75;
framedirections[12,9]=0;
framepositionsx[12,0]=-6;
framepositionsx[12,1]=90;
framepositionsx[12,2]=113;
framepositionsx[12,3]=172;
framepositionsx[12,4]=228;
framepositionsx[12,5]=90;
framepositionsx[12,6]=10;
framepositionsx[12,7]=97;
framepositionsx[12,8]=156;
framepositionsx[12,9]=207;
framepositionsy[12,0]=4;
framepositionsy[12,1]=157;
framepositionsy[12,2]=228;
framepositionsy[12,3]=146;
framepositionsy[12,4]=239;
framepositionsy[12,5]=254;
framepositionsy[12,6]=306;
framepositionsy[12,7]=401;
framepositionsy[12,8]=253;
framepositionsy[12,9]=401;

framedirections[13,2]=39;
framedirections[13,3]=9.50;
framedirections[13,4]=330;
framedirections[13,5]=359;
framedirections[13,6]=356.25;
framedirections[13,7]=0;
framedirections[13,8]=357;
framedirections[13,9]=0;
framepositionsx[13,0]=-7;
framepositionsx[13,1]=89;
framepositionsx[13,2]=112;
framepositionsx[13,3]=171;
framepositionsx[13,4]=226;
framepositionsx[13,5]=89;
framepositionsx[13,6]=9;
framepositionsx[13,7]=97;
framepositionsx[13,8]=154;
framepositionsx[13,9]=207;
framepositionsy[13,0]=3;
framepositionsy[13,1]=156;
framepositionsy[13,2]=227;
framepositionsy[13,3]=145;
framepositionsy[13,4]=238;
framepositionsy[13,5]=253;
framepositionsy[13,6]=306;
framepositionsy[13,7]=401;
framepositionsy[13,8]=252;
framepositionsy[13,9]=401;

framedirections[14,2]=39;
framedirections[14,3]=10;
framedirections[14,4]=330.25;
framedirections[14,5]=358;
framedirections[14,6]=357;
framedirections[14,7]=0;
framedirections[14,8]=357;
framedirections[14,9]=0;
framepositionsx[14,0]=-7;
framepositionsx[14,1]=89;
framepositionsx[14,2]=112;
framepositionsx[14,3]=171;
framepositionsx[14,4]=225;
framepositionsx[14,5]=89;
framepositionsx[14,6]=10;
framepositionsx[14,7]=97;
framepositionsx[14,8]=154;
framepositionsx[14,9]=207;
framepositionsy[14,0]=2;
framepositionsy[14,1]=155;
framepositionsy[14,2]=226;
framepositionsy[14,3]=144;
framepositionsy[14,4]=237;
framepositionsy[14,5]=252;
framepositionsy[14,6]=305;
framepositionsy[14,7]=401;
framepositionsy[14,8]=251;
framepositionsy[14,9]=401;

framedirections[15,2]=39.25;
framedirections[15,3]=11;
framedirections[15,4]=331;
framedirections[15,5]=358;
framedirections[15,6]=357.25;
framedirections[15,7]=0;
framedirections[15,8]=357.75;
framedirections[15,9]=0;
framepositionsx[15,0]=-6;
framepositionsx[15,1]=90;
framepositionsx[15,2]=113;
framepositionsx[15,3]=172;
framepositionsx[15,4]=224;
framepositionsx[15,5]=90;
framepositionsx[15,6]=11;
framepositionsx[15,7]=97;
framepositionsx[15,8]=156;
framepositionsx[15,9]=207;
framepositionsy[15,0]=1;
framepositionsy[15,1]=154;
framepositionsy[15,2]=225;
framepositionsy[15,3]=143;
framepositionsy[15,4]=237;
framepositionsy[15,5]=251;
framepositionsy[15,6]=304;
framepositionsy[15,7]=401;
framepositionsy[15,8]=250;
framepositionsy[15,9]=401;

framedirections[16,2]=39.50;
framedirections[16,3]=12;
framedirections[16,4]=332;
framedirections[16,5]=359;
framedirections[16,6]=358;
framedirections[16,7]=0;
framedirections[16,8]=358.25;
framedirections[16,9]=0;
framepositionsx[16,0]=-4;
framepositionsx[16,1]=92;
framepositionsx[16,2]=115;
framepositionsx[16,3]=174;
framepositionsx[16,4]=225;
framepositionsx[16,5]=92;
framepositionsx[16,6]=12;
framepositionsx[16,7]=97;
framepositionsx[16,8]=158;
framepositionsx[16,9]=207;
framepositionsy[16,0]=1;
framepositionsy[16,1]=154;
framepositionsy[16,2]=225;
framepositionsy[16,3]=143;
framepositionsy[16,4]=238;
framepositionsy[16,5]=251;
framepositionsy[16,6]=303;
framepositionsy[16,7]=401;
framepositionsy[16,8]=250;
framepositionsy[16,9]=401;

framedirections[17,2]=39.75;
framedirections[17,3]=13;
framedirections[17,4]=332.50;
framedirections[17,5]=359;
framedirections[17,6]=359;
framedirections[17,7]=0;
framedirections[17,8]=359;
framedirections[17,9]=0;
framepositionsx[17,0]=-2;
framepositionsx[17,1]=94;
framepositionsx[17,2]=117;
framepositionsx[17,3]=176;
framepositionsx[17,4]=225;
framepositionsx[17,5]=94;
framepositionsx[17,6]=14;
framepositionsx[17,7]=97;
framepositionsx[17,8]=160;
framepositionsx[17,9]=207;
framepositionsy[17,0]=0;
framepositionsy[17,1]=153;
framepositionsy[17,2]=224;
framepositionsy[17,3]=142;
framepositionsy[17,4]=238;
framepositionsy[17,5]=250;
framepositionsy[17,6]=302;
framepositionsy[17,7]=401;
framepositionsy[17,8]=249;
framepositionsy[17,9]=401;

framedirections[18,2]=40;
framedirections[18,3]=13;
framedirections[18,4]=333;
framedirections[18,5]=0;
framedirections[18,6]=0;
framedirections[18,7]=0;
framedirections[18,8]=0;
framedirections[18,9]=0;
framepositionsx[18,0]=0;
framepositionsx[18,1]=96;
framepositionsx[18,2]=119;
framepositionsx[18,3]=178;
framepositionsx[18,4]=227;
framepositionsx[18,5]=96;
framepositionsx[18,6]=16;
framepositionsx[18,7]=97;
framepositionsx[18,8]=162;
framepositionsx[18,9]=207;
framepositionsy[18,0]=0;
framepositionsy[18,1]=153;
framepositionsy[18,2]=224;
framepositionsy[18,3]=142;
framepositionsy[18,4]=238;
framepositionsy[18,5]=250;
framepositionsy[18,6]=300;
framepositionsy[18,7]=401;
framepositionsy[18,8]=249;
framepositionsy[18,9]=401;

#define scr_torexplo
if (argument0==1)
instance_create(x-20+random(200),y+random(400),obj_bigsmoke);
if (argument0==0){
instance_create(x-20+random(200),y+random(400),obj_enemyrocketexplosion);
scr_shakescreen(3);
}
#define scr_tor_phantom
with (obj_shape){
    if (visible){
        shadow=15+floor(random(25));
        shadowmax=shadow;
        }
    }
scr_tor_fire();
instance_create(obj_tor.x,obj_tor.y,obj_torhammer);
scr_sound("exp_nuke");
scr_sound("exp_rock");
scr_sound("wea_plas");
if (global.hp>0)
    scr_sound("tor_emote3");
supercharging=0;
charging=0;
weaponflash=0;
superstomp=0;
tile_layer_show(999999);
obj_tortrigger.destroyedground=1;
//for (i=256;i<896;i+=16)
//    tempid=instance_create(i+random(12),636+random(4),obj_torsmoke);
obj_tortrigger.alarm[3]=3;
obj_tortrigger.cshake=20;
#define scr_seczmusicinit
seczplaya=0;
seczplayb=0;
seczplayc=0;
seczplayd=0;
seczplaye=0;
szmspeed=1;
seczmtrig=0;

szmhe[0]=2;
szmhe[68]=1;
szmhe[128]=2;
szmhe[196]=3;

szmhd[0]=1;
szmhd[56]=1;
szmhd[64]=1;
szmhd[120]=1;
szmhd[128]=1;
szmhd[184]=1;
szmhd[192]=1;
szmhd[248]=1;

szmhc[0]=1;
szmhc[8]=1;
szmhc[16]=3;
szmhc[24]=1;
szmhc[32]=1;
szmhc[48]=1;
szmhc[56]=3;
szmhc[64]=1;
szmhc[80]=2;
szmhc[96]=4;
szmhc[128+0]=1;
szmhc[128+8]=1;
szmhc[128+16]=3;
szmhc[128+24]=1;
szmhc[128+32]=1;
szmhc[128+48]=1;
szmhc[128+56]=3;
szmhc[128+64]=1;
szmhc[128+72]=1;
szmhc[128+80]=2;
szmhc[128+96]=5;

szmhb[0]=1;
szmhb[16]=1;
szmhb[32]=2;
szmhb[48]=1;
szmhb[64]=1;
szmhb[72]=1;
szmhb[88]=2;
szmhb[96]=3;
szmhb[112]=1;
szmhb[128+0]=1;
szmhb[128+16]=1;
szmhb[128+32]=2;
szmhb[128+48]=1;
szmhb[128+56]=1;
szmhb[128+64]=2;
szmhb[128+72]=1;
szmhb[128+88]=3;
szmhb[128+96]=3;
szmhb[128+112]=1;

szmha[0]=1;
szmha[16]=1;
szmha[32]=2;
szmha[48]=1;
szmha[56]=2;
szmha[64+0]=1;
szmha[64+16]=1;
szmha[64+32]=2;
szmha[64+48]=1;
szmha[64+56]=2;
szmha[128+0]=1;
szmha[128+16]=1;
szmha[128+32]=2;
szmha[128+48]=1;
szmha[128+56]=2;
szmha[192+0]=1;
szmha[192+16]=1;
szmha[192+32]=2;
szmha[192+40]=1;
szmha[192+48]=2;
szmha[192+56]=2;

#define scr_seczmusicchange
if (seczmtrig==0){
    seczmtrig=1;
    seczplaya=1;
    seczplaye=1;
    seczplaystart=1;
    szmp=0;
    }
else if (seczmtrig==1){
    seczmtrig=2;
    seczplayb=1;
    seczplaye=0;
    szmspeed=2;
    if (szmp mod 2==1)
        szmp+=1;
    }
else if (seczmtrig==2){
    seczmtrig=3;
    seczplayc=1;
    szmspeed=1;
    }
else if (seczmtrig==3){
    seczmtrig=4;
    if (szmp mod 2==1)
        szmp+=1;
    szmspeed=2;
    }
else if (seczmtrig==4){
    seczmtrig=5;
    seczplaya=0;
    seczplayb=0;
    seczplayc=0;
    seczplayd=1;
    seczplaye=1;
    szmspeed=1;
    }
#define scr_seczmusicplay
if (seczplaystart){

//A
if (szmha[szmp]>0 && seczplaya && (szmp mod 2 == 0)){
    if (!global.nomusic || iamthemenu){
        if (szmha[szmp]==1)
            sound_play(snd_glo_seczmusic1);
        else if (szmha[szmp]==2)
            sound_play(snd_glo_seczmusic1_q2);
        }
    }
//B
if (szmhb[szmp]>0 && seczplayb && (szmp mod 2 == 0)){
    if (!global.nomusic || iamthemenu){
        if (szmhb[szmp]==1)
            sound_play(snd_glo_seczmusic2);
        else if (szmhb[szmp]==2)
            sound_play(snd_glo_seczmusic2_q2);
        else if (szmhb[szmp]==3)
            sound_play(snd_glo_seczmusic2_q3);
        }
    }
//C
if (szmhc[szmp]>0 && seczplayc && (szmp mod 2 == 0)){
    if (!global.nomusic || iamthemenu){
        if (szmhc[szmp]==1)
            sound_play(snd_glo_seczmusic3);
        else if (szmhc[szmp]==2)
            sound_play(snd_glo_seczmusic3_q2);
        else if (szmhc[szmp]==3)
            sound_play(snd_glo_seczmusic3_q3);
        else if (szmhc[szmp]==4)
            sound_play(snd_glo_seczmusic3_q4);
        else if (szmhc[szmp]==5)
            sound_play(snd_glo_seczmusic3_q5);
        }
    }
//D
if (szmhd[szmp]>0 && seczplayd && (szmp mod 2 == 0)){
    if (!global.nomusic || iamthemenu)
        sound_play(snd_glo_seczmusic2);
    }
//E
if (szmhe[szmp]>0 && seczplaye && (szmp mod 2 == 0)){
    if (!global.nomusic || iamthemenu){
        if (szmhe[szmp]==1)
            sound_play(snd_glo_seczmusic5);
        else if (szmhe[szmp]==2)
            sound_play(snd_glo_seczmusic5_q2);
        else if (szmhe[szmp]==3)
            sound_play(snd_glo_seczmusic5_q3);
        }
    }

szmp+=1*szmspeed;
if (szmp>=256)
    szmp=0;
}
#define scr_sound
//argument1 1 and above is also some "instant sounds"
//argument1 is no elec sound on ijipain etc
if ((global.nosound==0 && obj_sabot.gameoversound<50) || iamthemenu){
if ((x>obj_shakescreen.x-900 && x<obj_shakescreen.x+900 && y>obj_shakescreen.y-600 && y<obj_shakescreen.y+600) || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || room==rom_sector15 || room==rom_sector16 || pausemenu){

//GLOBAL
if (argument0=="glo_menuselect"){
    repeat(5)
        sound_stop(snd_glo_menuselect);
    sound_play(snd_glo_menuselect);
    }
else if (argument0=="glo_menuback"){
    repeat(5)
        sound_stop(snd_glo_menuback);
    sound_play(snd_glo_menuback);
    }
else if (argument0=="glo_menumove"){
    repeat(5)
        sound_stop(snd_glo_menumove);
    sound_play(snd_glo_menumove);
    }
else if (argument0=="glo_getoverload"){
    repeat(5)
        sound_stop(snd_glo_getoverload);
    sound_play(snd_glo_getoverload);
    }
else if (argument0=="glo_swipe"){
    repeat(5)
        sound_stop(snd_glo_swipe);
    sound_play(snd_glo_swipe);
    }
else if (argument0=="glo_selectweapon"){
    repeat(5)
        sound_stop(snd_glo_selectweapon);
    sound_play(snd_glo_selectweapon);
    }
else if (argument0=="glo_noammo"){
    if (noammosoundx<=0){
        noammosoundx=8;
        repeat(5)
            sound_stop(snd_glo_selectweapon);
        sound_play(snd_glo_selectweapon);
        }
    }
else if (argument0=="glo_rico"){
    temprand=floor(random(6));
    if (argument1==1){
        repeat(5)
            sound_stop(snd_glo_rico1);
        sound_play(snd_glo_rico1);
        }
    else if (argument1==2){
        repeat(5)
            sound_stop(snd_glo_rico2);
        sound_play(snd_glo_rico2);
        }
    else if (argument1==3){
        repeat(5)
            sound_stop(snd_glo_rico3);
        sound_play(snd_glo_rico3);
        }
    else if (temprand==0){
        repeat(5)
            sound_stop(snd_glo_rico1);
        sound_play(snd_glo_rico1);
        }
    else if (temprand==1){
        repeat(5)
            sound_stop(snd_glo_rico2);
        sound_play(snd_glo_rico2);
        }
    else if (temprand==2){
        repeat(5)
            sound_stop(snd_glo_rico3);
        sound_play(snd_glo_rico3);
        }
    }
else if (argument0=="glo_thunder"){
    repeat(5)
        sound_stop(snd_glo_thunder);
    sound_play(snd_glo_thunder);
    }
else if (argument0=="glo_liftstart"){
    repeat(5)
        sound_stop(snd_glo_liftstart);
    sound_play(snd_glo_liftstart);
    }
else if (argument0=="glo_liftend"){
    repeat(5)
        sound_stop(snd_glo_liftend);
    sound_play(snd_glo_liftend);
    }
else if (argument0=="glo_crackbegin"){
    repeat(5)
        sound_stop(snd_glo_crackbegin);
    sound_play(snd_glo_crackbegin);
    }
else if (argument0=="glo_cracktick"){
    temprand2=floor(random(3));
    if (temprand2==0)
        sound_play(snd_glo_cracktick);
    else if (temprand2==1)
        sound_play(snd_glo_cracktick_q1);
    else if (temprand2==2)
        sound_play(snd_glo_cracktick_q2);
    }
else if (argument0=="glo_debris"){
    temprand=floor(random(2));
    if (temprand==0 || argument1==1){
        temprand2=floor(random(2));
        if (temprand2==0){
            repeat(5)
                sound_stop(snd_glo_debris1);
            sound_volume(snd_glo_debris1,0.88+random(0.12))
            sound_play(snd_glo_debris1);
            }
        else if (temprand2==1){
            repeat(5)
                sound_stop(snd_glo_debris1_q1);
            sound_volume(snd_glo_debris1_q1,0.88+random(0.12))
            sound_play(snd_glo_debris1_q1);
            }
        }
    else if (temprand==1 || argument1==2){
        temprand2=floor(random(2));
        if (temprand2==0){
            repeat(5)
                sound_stop(snd_glo_debris2);
            sound_volume(snd_glo_debris2,0.88+random(0.12))
            sound_play(snd_glo_debris2);
            }
        else if (temprand2==1){
            repeat(5)
                sound_stop(snd_glo_debris2_q1);
            sound_volume(snd_glo_debris2_q1,0.88+random(0.12))
            sound_play(snd_glo_debris2_q1);
            }
        }
    }
else if (argument0=="glo_kick"){
    if (global.squeak){
        repeat(5)
            sound_stop(snd_wea_banana);
        sound_play(snd_wea_banana);
        }
    repeat(5)
        sound_stop(snd_glo_kick);
    sound_play(snd_glo_kick);
    global.voc_glo_kick=26;
    }
else if (argument0=="glo_land"){
    if ((x > obj_shakescreen.x-420) && (x < obj_shakescreen.x+420) && (y > obj_shakescreen.y-320) && (y < obj_shakescreen.y+320) || global.sector==13){
        repeat(5)
            sound_stop(snd_glo_land);
        sound_play(snd_glo_land);
        }
    }
else if (argument0=="glo_shell"){
    temprand=random(1)
    if (argument1==1)
        temprand=1;
    if (temprand>0.8){
        temprand2=floor(random(3));
        if (temprand2==0){
            repeat(5)
                sound_stop(snd_glo_shell);
            sound_play(snd_glo_shell);
            }
        else if (temprand2==1){
            repeat(5)
                sound_stop(snd_glo_shell_q1);
            sound_play(snd_glo_shell_q1);
            }
        else if (temprand2==2){
            repeat(5)
                sound_stop(snd_glo_shell_q2);
            sound_play(snd_glo_shell_q2);
            }
        }
    }
else if (argument0=="glo_crackfail"){
    repeat(5)
        sound_stop(snd_glo_crackfail);
    sound_play(snd_glo_crackfail);
    }
else if (argument0=="glo_cracksuccess"){
    repeat(5)
        sound_stop(snd_glo_cracksuccess);
    sound_play(snd_glo_cracksuccess);
    }
else if (argument0=="glo_door"){
    repeat(5)
        sound_stop(snd_glo_door);
    sound_play(snd_glo_door);
    }
else if (argument0=="glo_reflect"){
    repeat(5)
        sound_stop(snd_glo_reflect);
    sound_play(snd_glo_reflect);
    }
else if (argument0=="glo_teleport"){
    repeat(5)
        sound_stop(snd_glo_teleport);
    sound_play(snd_glo_teleport);
    }
else if (argument0=="glo_doorclose"){
    repeat(5)
        sound_stop(snd_glo_doorclose);
    sound_play(snd_glo_doorclose);
    }
else if (argument0=="glo_shard"){
    temprand=floor(random(3));
    if (temprand==0 || argument1==1){
        repeat(5)
            sound_stop(snd_glo_shard1);
        sound_volume(snd_glo_shard1,0.88+random(0.12))
        sound_play(snd_glo_shard1);
        }
    else if (temprand==1 || argument1==2){
        repeat(5)
            sound_stop(snd_glo_shard2);
        sound_volume(snd_glo_shard2,0.88+random(0.12))
        sound_play(snd_glo_shard2);
        }
    }
else if (argument0=="glo_levelup"){
    repeat(5)
        sound_stop(snd_glo_levelup);
    sound_play(snd_glo_levelup);
    }
else if (argument0=="glo_pickup"){
    repeat(5)
        sound_stop(snd_glo_pickup);
    sound_play(snd_glo_pickup);
    }
else if (argument0=="glo_pickup2"){
    repeat(5)
        sound_stop(snd_glo_pickup2);
    sound_play(snd_glo_pickup2);
    }
else if (argument0=="glo_spark"){
    if (x>obj_shakescreen.x-400 && x<obj_shakescreen.x+400 && y>obj_shakescreen.y-300 && y<obj_shakescreen.y+300){
        temprand=floor(random(2));
        if (temprand==0 || argument1==1){
            repeat(5)
                sound_stop(snd_glo_spark1);
            sound_play(snd_glo_spark1);
            }
        else if (temprand==1 || argument1==2){
            repeat(5)
                sound_stop(snd_glo_spark2);
            sound_play(snd_glo_spark2);
            }
        }
    }
else if (argument0=="glo_electrocute"){
    repeat(5)
        sound_stop(snd_glo_electrocute);
    sound_play(snd_glo_electrocute);
    }
else if (argument0=="glo_destroy"){
    repeat(5)
        sound_stop(snd_glo_destroy);
    sound_play(snd_glo_destroy);
    }
else if (argument0=="glo_bootelec"){
    repeat(5)
        sound_stop(snd_glo_bootelec);
    sound_play(snd_glo_bootelec);
    }
else if (argument0=="glo_blit"){
    if (x>obj_shakescreen.x-700 && x<obj_shakescreen.x+700 && y>obj_shakescreen.y-400 && y<obj_shakescreen.y+400){
        temprand2=floor(random(3));
        if (temprand2==0){
            repeat(5)
                sound_stop(snd_glo_blit);
            sound_volume(snd_glo_blit,0.88+random(0.12))
            sound_play(snd_glo_blit);
            }
        else if (temprand2==1){
            repeat(5)
                sound_stop(snd_glo_blit_q1);
            sound_volume(snd_glo_blit_q1,0.88+random(0.12))
            sound_play(snd_glo_blit_q1);
            }
        }
    }

//WEAPONS
else if (argument0=="wea_shot"){
    repeat(5)
        sound_stop(snd_wea_shot);
    sound_play(snd_wea_shot);
    }
else if (argument0=="wea_imach"){
    temprand2=floor(random(3));
    if (temprand2==0)
        sound_play(snd_wea_imach);
    else if (temprand2==1)
        sound_play(snd_wea_imach_q1);
    else if (temprand2==2)
        sound_play(snd_wea_imach_q2);
    }
else if (argument0=="wea_mach"){
    repeat(5){
        sound_stop(snd_wea_mach);
        sound_stop(snd_wea_mach_q1);
        sound_stop(snd_wea_mach_q2);
        }
    temprand2=floor(random(3));
    if (temprand2==0)
        sound_play(snd_wea_mach);
    else if (temprand2==1)
        sound_play(snd_wea_mach_q1);
    else if (temprand2==2)
        sound_play(snd_wea_mach_q2);
    }
else if (argument0=="wea_rock"){
    repeat(5)
        sound_stop(snd_wea_rock);
    sound_play(snd_wea_rock);
    }
else if (argument0=="wea_mpfb"){
    repeat(5)
        sound_stop(snd_wea_mpfb);
    sound_play(snd_wea_mpfb);
    }
else if (argument0=="wea_reso"){
    repeat(5)
        sound_stop(snd_wea_reso);
    sound_play(snd_wea_reso);
    }
else if (argument0=="wea_puls"){
    repeat(5)
        sound_stop(snd_wea_puls);
    sound_play(snd_wea_puls);
    }
else if (argument0=="wea_pulsend"){
    repeat(5)
        sound_stop(snd_wea_pulsend);
    sound_play(snd_wea_pulsend);
    }
else if (argument0=="wea_shoc"){
    repeat(5)
        sound_stop(snd_wea_shoc);
    if (argument1==1)
        sound_volume(snd_wea_shoc,0.9);
    else
        sound_volume(snd_wea_shoc,1);
    sound_play(snd_wea_shoc);
    }
else if (argument0=="wea_spli"){
    temprand2=floor(random(3));
    if (temprand2==0){
        repeat(5)
            sound_stop(snd_wea_spli);
        sound_play(snd_wea_spli);
        }
    else if (temprand2==1){
        repeat(5)
            sound_stop(snd_wea_spli_q1);
        sound_play(snd_wea_spli_q1);
        }
    else if (temprand2==2){
        repeat(5)
            sound_stop(snd_wea_spli_q2);
        sound_play(snd_wea_spli_q2);
        }
    }
else if (argument0=="wea_plas"){
    repeat(5)
        sound_stop(snd_wea_plas);
    sound_play(snd_wea_plas);
    }
else if (argument0=="wea_thor"){
    repeat(5)
        sound_stop(snd_wea_thor);
    sound_play(snd_wea_thor);
    }
else if (argument0=="wea_thorend"){
    repeat(5)
        sound_stop(snd_wea_thorend);
    sound_play(snd_wea_thorend);
    }
else if (argument0=="wea_charge"){
    repeat(5)
        sound_stop(snd_wea_charge);
    sound_play(snd_wea_charge);
    }
else if (argument0=="wea_cfis"){
    repeat(5)
        sound_stop(snd_wea_cfis);
    sound_play(snd_wea_cfis);
    }
else if (argument0=="wea_cfisend"){
    repeat(5)
        sound_stop(snd_wea_cfisend);
    sound_play(snd_wea_cfisend);
    }
else if (argument0=="wea_banana"){
    repeat(5)
        sound_stop(snd_wea_banana);
    sound_play(snd_wea_banana);
    }

//EXPLOSIONS
else if (argument0=="exp_turret"){
    repeat(5)
        sound_stop(snd_exp_turret);
    sound_play(snd_exp_turret);
    }
else if (argument0=="exp_glass"){
    repeat(5)
        sound_stop(snd_exp_glass);
    if (argument1==1)
        sound_volume(snd_exp_glass,0.9);
    else
        sound_volume(snd_exp_glass,1);
    sound_play(snd_exp_glass);
    }
else if (argument0=="exp_miniglass"){
    repeat(5)
        sound_stop(snd_exp_miniglass);
    if (argument1==1)
        sound_volume(snd_exp_miniglass,0.9);
    else
        sound_volume(snd_exp_miniglass,1);
    sound_play(snd_exp_miniglass);
    }
else if (argument0=="exp_shoc"){
    repeat(5)
        sound_stop(snd_exp_shoc);
    sound_play(snd_exp_shoc);
    }
else if (argument0=="exp_spli"){
    temprand2=floor(random(3));
    repeat(5){
        sound_stop(snd_exp_spli);
        sound_stop(snd_exp_spli_q1);
        sound_stop(snd_exp_spli_q2);
        }
    if (temprand2==0)
        sound_play(snd_exp_spli);
    else if (temprand2==1)
        sound_play(snd_exp_spli_q1);
    else if (temprand2==2)
        sound_play(snd_exp_spli_q2);
    }
else if (argument0=="exp_mpfb"){
    repeat(5)
        sound_stop(snd_exp_mpfb);
    sound_play(snd_exp_mpfb);
    }
else if (argument0=="exp_meta"){
    temprand=floor(random(2));
    if (temprand==0 || argument1==1){
        repeat(5)
            sound_stop(snd_exp_meta1);
        sound_play(snd_exp_meta1);
        }
    else if (temprand==1 || argument1==2){
        repeat(5)
            sound_stop(snd_exp_meta2);
        sound_play(snd_exp_meta2);
        }
    }
else if (argument0=="exp_nano"){
    if ((x > obj_shakescreen.x-420) && (x < obj_shakescreen.x+420) && (y > obj_shakescreen.y-320) && (y < obj_shakescreen.y+320)){
        repeat(5)
            sound_stop(snd_exp_nano);
        sound_play(snd_exp_nano);
        }
    }
else if (argument0=="exp_nuke"){
    repeat(5)
        sound_stop(snd_exp_nuke);
    if (argument1==1)
        sound_volume(snd_exp_nuke,0.9);
    else
        sound_volume(snd_exp_nuke,1);
    sound_play(snd_exp_nuke);
    }
else if (argument0=="exp_pew"){
    repeat(5)
        sound_stop(snd_exp_pew);
    sound_play(snd_exp_pew);
    }
else if (argument0=="exp_rock"){
    repeat(5)
        sound_stop(snd_exp_rock);
    sound_play(snd_exp_rock);
    }
else if (argument0=="exp_boss"){
    repeat(5)
        sound_stop(snd_exp_boss);
    sound_play(snd_exp_boss);
    }

//IJI
else if (argument0=="iji_land"){
    if (global.squeak){
        repeat(5)
            sound_stop(snd_wea_banana);
        sound_play(snd_wea_banana);
        }
    repeat(5)
        sound_stop(snd_iji_land);
    sound_play(snd_iji_land);
    }
else if (argument0=="iji_land2"){
    if (global.squeak){
        repeat(5)
            sound_stop(snd_wea_banana);
        sound_play(snd_wea_banana);
        }
    repeat(5)
        sound_stop(snd_iji_land2);
    sound_play(snd_iji_land2);
    }
else if (argument0=="iji_hitfloor"){
    repeat(5)
        sound_stop(snd_iji_hitfloor);
    sound_play(snd_iji_hitfloor);
    }
else if (argument0=="iji_swiped"){
    repeat(5)
        sound_stop(snd_iji_swiped);
    sound_play(snd_iji_swiped);
    }
else if (argument0=="iji_sworded"){
    repeat(5)
        sound_stop(snd_iji_sworded);
    sound_play(snd_iji_sworded);
    }
else if ((argument0=="iji_basepain" || argument0=="iji_pain" || argument0=="iji_bigpain") && argument1==0){
    repeat(5)
        sound_stop(snd_iji_basepain);
    sound_play(snd_iji_basepain);
    }

//TURRET
else if (argument0=="tur_appear"){
    repeat(5)
        sound_stop(snd_tur_appear);
    sound_play(snd_tur_appear);
    }
else if (argument0=="tur_find"){
    repeat(5)
        sound_stop(snd_tur_find);
    sound_play(snd_tur_find);
    }
else if (argument0=="tur_lose"){
    repeat(5)
        sound_stop(snd_tur_lose);
    sound_play(snd_tur_lose);
    }

//SHREDDER
else if (argument0=="shr_step"){
    sound_play(snd_shr_step);
    }
else if (argument0=="shr_step_q1"){
    sound_play(snd_shr_step_q1);
    }

//ANNIHILATOR
else if (argument0=="ann_step"){
    repeat(5)
        sound_stop(snd_ann_step);
    sound_play(snd_ann_step);
    }

//TOR
else if (argument0=="tor_fire"){
    repeat(5)
        sound_stop(snd_tor_fire);
    sound_play(snd_tor_fire);
    }
else if (argument0=="tor_gather"){
    if (argument1==0){
        repeat(5)
            sound_stop(snd_tor_gather);
        }
    sound_play(snd_tor_gather);
    }
else if (argument0=="tor_gather_q01"){
    if (argument1==0){
        repeat(5)
            sound_stop(snd_tor_gather_q01);
        }
    sound_play(snd_tor_gather_q01);
    }
else if (argument0=="tor_gather_q03"){
    if (argument1==0){
        repeat(5)
            sound_stop(snd_tor_gather_q03);
        }
    sound_play(snd_tor_gather_q03);
    }
else if (argument0=="tor_spark"){
    repeat(5)
        sound_stop(snd_tor_spark);
    sound_play(snd_tor_spark);
    }
else if (argument0=="tor_eruption"){
    repeat(5)
        sound_stop(snd_tor_eruption);
    sound_play(snd_tor_eruption);
    }
else if (argument0=="tor_fly"){
    repeat(5)
        sound_stop(snd_tor_fly);
    sound_play(snd_tor_fly);
    }

//PROXIMA
else if (argument0=="pro_powerdown"){
    repeat(5)
        sound_stop(snd_pro_powerdown);
    sound_play(snd_pro_powerdown);
    }
else if (argument0=="pro_beep1"){
    sound_play(snd_pro_beep1);
    }
else if (argument0=="pro_beep2"){
    sound_play(snd_pro_beep2);
    }
else if (argument0=="pro_beep3"){
    sound_play(snd_pro_beep3);
    }

//EXTENDED
else if (argument0=="ext_impulseexplo"){
    repeat(5)
        sound_stop(snd_ext_impulseexplo);
    sound_play(snd_ext_impulseexplo);
    }
else if (argument0=="ext_barrier"){
    repeat(5)
        sound_stop(snd_ext_barrier);
    sound_play(snd_ext_barrier);
    }
else if (argument0=="ext_barrierexplo"){
    repeat(5)
        sound_stop(snd_ext_barrierexplo);
    sound_play(snd_ext_barrierexplo);
    }


}
}

scr_voice(argument0,argument1);
#define scr_voice
if (iamthemenu){
global.voc_iji_berserk1=0;
global.voc_iji_berserk2=0;
global.voc_iji_berserk3=0;
global.voc_iji_death=0;
global.voc_sco_find1=0;
global.voc_sco_find2=0;
global.voc_sol_find1=0;
global.voc_sol_find2=0;
global.voc_com_find1=0;
global.voc_com_find2=0;
global.voc_eli_find1=0;
global.voc_eli_find2=0;
global.voc_tro_find1=0;
global.voc_tro_find2=0;
global.voc_ber_find1=0;
global.voc_ber_find2=0;
global.voc_ber_ciretako=0;
global.voc_ash_death=0;
global.voc_ash_ambient1=0;
global.voc_ash_ambient2=0;
global.voc_ash_ambient3=0;
global.voc_ash_ambient4=0;
global.voc_ext_ansaksie1=0;
global.voc_ext_ansaksie2=0;
global.voc_ext_ansaksie3=0;
global.voc_ext_ansaksie4=0;
global.voc_ext_ansaksie5=0;
global.voc_ext_ansaksie6=0;
global.voc_iosa_ambient1=0;
global.voc_iosa_ambient2=0;
global.voc_iosa_ambient3=0;
global.voc_iosa_ambient4=0;
global.voc_iosa_ambient5=0;
}

//argument1 is some instant sounds
if ((global.novoice==0 && obj_sabot.gameoversound<50) || iamthemenu){
if (((x > obj_shakescreen.x-700) && (x < obj_shakescreen.x+700) && (y > obj_shakescreen.y-400) && (y < obj_shakescreen.y+400)) || argument0=="ber_ciretako" || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || room==rom_sector15 || room==rom_sector16){

//IJI
if (argument0=="iji_jump" && global.voc_iji_berserk1==0 && global.voc_iji_berserk2==0 && global.voc_iji_berserk3==0){
    if (global.voc_iji_death==0){
        temprand=random(1);
        if (temprand<0.4 || argument1==1 || argument1==2){
            scr_stopijivoice();
            if (argument1==1)
                sound_play(snd_iji_jump);
            else if (argument1==2)
                sound_play(snd_iji_jump2);
            else if (global.totkills+global.kills>=global.neutralkc*berserkkills || attitude==1)
                sound_play(snd_iji_jump2);
            else
                sound_play(snd_iji_jump);
            }
        }
    }
else if (argument0=="iji_kick" && global.voc_iji_berserk1==0 && global.voc_iji_berserk2==0 && global.voc_iji_berserk3==0){
    if (global.voc_iji_death==0){
        temprand=random(1);
        if (temprand<0.3 || argument1==1 || argument1==2){
            scr_stopijivoice();
            if (argument1==1)
                sound_play(snd_iji_kick);
            else if (argument1==2)
                sound_play(snd_iji_kick2);
            else if (global.totkills+global.kills>=(global.neutralkc+2)*berserkkills || attitude==1)
                sound_play(snd_iji_kick2);
            else
                sound_play(snd_iji_kick);
            }
        }
    }
else if (argument0=="iji_pain" && (global.hp>0 || argument1==1 || argument1==2 || argument1==3)){
    if (global.voc_iji_death==0){
        temprand=ceil(random(3));
        scr_stopijivoice();
        if (argument1==1)
            temprand=1;
        else if (argument1==2)
            temprand=2;
        else if (argument1==3)
            temprand=3;
        if (temprand==1)
            sound_play(snd_iji_pain1);
        else if (temprand==2)
            sound_play(snd_iji_pain2);
        else if (temprand==3)
            sound_play(snd_iji_pain3);
        }
    }
else if (argument0=="iji_bigpain" && (global.hp>0 || argument1==1 || argument1==2)){
    if (global.voc_iji_death==0){
        temprand=ceil(random(2));
        scr_stopijivoice();
        if (argument1==1)
            temprand=1;
        else if (argument1==2)
            temprand=2;
        if (temprand==1)
            sound_play(snd_iji_bigpain1);
        else if (temprand==2)
            sound_play(snd_iji_bigpain2);
        }
    }
else if (argument0=="iji_death"){
    if (global.voc_iji_death==0 || argument1==1){
        scr_stopijivoice();
        sound_play(snd_iji_death);
        global.voc_iji_death=31;
        }
    }
else if (argument0=="iji_damnit"){
    if (global.voc_iji_death==0){
        scr_stopijivoice();
        sound_play(snd_iji_damnit);
        }
    }
else if (argument0=="iji_cry"){
    if (global.voc_iji_death==0){
        temprand=random(1);
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=0.6;
        if (temprand<0.4){
            scr_stopijivoice();
            sound_play(snd_iji_cry1);
            }
        else if (temprand<0.8){
            scr_stopijivoice();
            sound_play(snd_iji_cry2);
            }
        }
    }
else if (argument0=="iji_berserk" && (global.hp>0 || argument1==1 || argument1==2 || argument1==3)){
    if (global.voc_iji_death==0){
        temprand=random(1);
        if (argument1>=1)
            temprand=(argument1-1)*0.1;
        if (temprand<0.1){
            scr_stopijivoice();
            sound_play(snd_iji_berserk1);
            global.voc_iji_berserk1=19;
            }
        else if (temprand<0.2){
            scr_stopijivoice();
            sound_play(snd_iji_berserk2);
            global.voc_iji_berserk2=41;
            }
        else if (temprand<0.3){
            scr_stopijivoice();
            sound_play(snd_iji_berserk3);
            global.voc_iji_berserk2=22;
            }
        }
    }
else if (argument0=="iji_ougi1"){
    scr_stopijivoice();
    sound_play(snd_iji_ougi1);
    }
else if (argument0=="iji_ougi2"){
    scr_stopijivoice();
    sound_play(snd_iji_ougi2);
    }
else if (argument0=="iji_breathe"){
    scr_stopijivoice();
    sound_play(snd_iji_breathe);
    }

//DAN
else if (argument0=="dan_choke"){
    sound_play(snd_dan_choke);
    }
else if (argument0=="dan_death"){
    sound_play(snd_dan_death);
    }

//SCOUT
else if (argument0=="sco_find"){
    temprand=random(1);
    if ((global.voc_sco_find1==0 && global.voc_sco_find2==0) || argument1==1 || argument1==2){
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5){
            sound_play(snd_sco_find1);
            global.voc_sco_find1=15;
            }
        else if (temprand>=0.5){
            sound_play(snd_sco_find2);
            global.voc_sco_find2=15;
            }
        }
    }
else if (argument0=="sco_death"){
    repeat(5){
        sound_stop(snd_sco_find1);
        sound_stop(snd_sco_find2);
        }
    temprand=random(1);
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_sco_death1);
    else if (temprand>=0.5)
        sound_play(snd_sco_death2);
    }

//SOLDIER
else if (argument0=="sol_find" && !golden){
    temprand=random(1);
    if ((global.voc_sol_find1==0 && global.voc_sol_find2==0) || argument1==1 || argument1==2){
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5){
            sound_play(snd_sol_find1);
            global.voc_sol_find1=19;
            }
        else if (temprand>=0.5){
            sound_play(snd_sol_find2);
            global.voc_sol_find2=15;
            }
        }
    }
else if (argument0=="sol_pain" && !golden){
    temprand=random(1);
    scr_stopsoldiervoice();
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_sol_pain1);
    else if (temprand>=0.5)
        sound_play(snd_sol_pain2);
    }
else if (argument0=="sol_death" && !golden){
    temprand=random(1);
    scr_stopsoldiervoice();
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_sol_death1);
    else if (temprand>=0.5)
        sound_play(snd_sol_death2);
    }

//COMMANDER
else if (argument0=="com_find" || (argument0=="sol_find" && golden)){
    temprand=random(1);
    if ((global.voc_com_find1==0 && global.voc_com_find2==0) || argument1==1 || argument1==2){
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5){
            sound_play(snd_com_find1);
            global.voc_com_find1=28;
            }
        else if (temprand>=0.5){
            sound_play(snd_com_find2);
            global.voc_com_find2=34;
            }
        }
    }
else if (argument0=="com_pain" || (argument0=="sol_pain" && golden)){
    temprand=random(1);
    scr_stopcommandervoice();
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_com_pain1);
    else if (temprand>=0.5)
        sound_play(snd_com_pain2);
    }
else if (argument0=="com_death" || (argument0=="sol_death" && golden)){
    temprand=random(1);
    scr_stopcommandervoice();
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_com_death1);
    else if (temprand>=0.5)
        sound_play(snd_com_death2);
    }

//ELITE
else if (argument0=="eli_find"){
    temprand=random(1);
    if ((global.voc_eli_find1==0 && global.voc_eli_find2==0) || argument1==1 || argument1==2){
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5){
            sound_play(snd_eli_find1);
            global.voc_eli_find1=32;
            }
        else if (temprand>=0.5){
            sound_play(snd_eli_find2);
            global.voc_eli_find2=32;
            }
        }
    }
else if (argument0=="eli_pain"){
    temprand=random(1);
    if (temprand>0.5 || argument1>0){
        temprand=random(1);
        scr_stopelitevoice();
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5)
            sound_play(snd_eli_pain1);
        else if (temprand>=0.5)
            sound_play(snd_eli_pain2);
        }
    }
else if (argument0=="eli_death"){
    temprand=random(1);
    scr_stopelitevoice();
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_eli_death1);
    else if (temprand>=0.5)
        sound_play(snd_eli_death2);
    }

//TROOPER
else if (argument0=="tro_find"){
    temprand=random(1);
    if ((global.voc_tro_find1==0 && global.voc_tro_find2==0) || argument1==1 || argument1==2){
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5){
            sound_play(snd_tro_find1);
            global.voc_tro_find1=13;
            }
        else if (temprand>=0.5){
            sound_play(snd_tro_find2);
            global.voc_tro_find2=19;
            }
        }
    }
else if (argument0=="tro_pain"){
    temprand=random(1);
    scr_stoptroopervoice();
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_tro_pain1);
    else if (temprand>=0.5)
        sound_play(snd_tro_pain2);
    }
else if (argument0=="tro_death"){
    temprand=random(1);
    scr_stoptroopervoice();
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_tro_death1);
    else if (temprand>=0.5)
        sound_play(snd_tro_death2);
    }

//BERSERKER
else if (argument0=="ber_find"){
    temprand=random(1);
    if ((global.voc_ber_find1==0 && global.voc_ber_find2==0) || argument1==1 || argument1==2){
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5){
            sound_play(snd_ber_find1);
            global.voc_ber_find1=30;
            }
        else if (temprand>=0.5){
            sound_play(snd_ber_find2);
            global.voc_ber_find2=32;
            }
        }
    }
else if (argument0=="ber_pain"){
    if ((global.voc_ber_find1==0 && global.voc_ber_find2==0) || argument1==1 || argument1==2){
        temprand=random(1);
        if (temprand>0.5 || argument1>0){
            temprand=random(1);
            scr_stopberserkervoice();
            if (argument1==1)
                temprand=0;
            else if (argument1==2)
                temprand=1;
            if (temprand<0.5)
                sound_play(snd_ber_pain1);
            else if (temprand>=0.5)
                sound_play(snd_ber_pain2);
            }
        }
    }
else if (argument0=="ber_ciretako"){
    if (global.voc_ber_ciretako==0 || argument1==1){
        sound_play(snd_ber_ciretako);
        global.voc_ber_ciretako=40;
        }
    }

//BEAST
else if (argument0=="bea_find"){
    temprand=random(1);
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_bea_find1);
    else if (temprand>=0.5)
        sound_play(snd_bea_find2);
    }
else if (argument0=="bea_jump"){
    repeat(5){
        sound_stop(snd_bea_find1);
        sound_stop(snd_bea_find1);
        }
    sound_play(snd_bea_jump);
    }

//ASSASSIN
else if (argument0=="asa_pain"){
    temprand=random(1);
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=1;
    if (temprand<0.5)
        sound_play(snd_asa_pain1);
    else if (temprand>=0.5)
        sound_play(snd_asa_pain2);
    }

//ANNIHILATOR
else if (argument0=="ann_find"){
    temprand=random(1);
    if (argument1==1 || argument1==3)
        temprand=0;
    else if (argument1==2 || argument1==4)
        temprand=1;
    if (temprand<0.5){
        if (argument1==3)
            sound_play(snd_ann_find1_q1);
        else
            sound_play(snd_ann_find1);
        }
    else if (temprand>=0.5){
        if (argument1==4)
            sound_play(snd_ann_find2_q1);
        else
            sound_play(snd_ann_find2);
        }
    }
else if (argument0=="ann_destroy"){
    repeat(5){
        sound_stop(snd_ann_find1);
        sound_stop(snd_ann_find2);
        }
    sound_play(snd_ann_destroy);
    }

//KROTERA
else if (argument0=="kro_pain" && !dead){
    temprand=random(1);
    if (temprand>0.5 || argument1>0){
        temprand=random(1);
        scr_stopkrovoice();
        if (argument1==1)
            temprand=0;
        else if (argument1==2)
            temprand=1;
        if (temprand<0.5)
            sound_play(snd_kro_pain1);
        else if (temprand>=0.5)
            sound_play(snd_kro_pain2);
        }
    }
else if (argument0=="kro_death"){
    scr_stopkrovoice();
    sound_play(snd_kro_death);
    }
else if (argument0=="kro_ambient1" && !dead){
    scr_stopkrovoice();
    sound_play(snd_kro_ambient1);
    }
else if (argument0=="kro_ambient2" && !dead){
    scr_stopkrovoice();
    sound_play(snd_kro_ambient2);
    }
else if (argument0=="kro_ambient3" && !dead){
    scr_stopkrovoice();
    sound_play(snd_kro_ambient3);
    }
else if (argument0=="kro_win" && !dead){
    scr_stopkrovoice();
    sound_play(snd_kro_win);
    }
else if (argument0=="kro_emote2" && !dead){
    scr_stopkrovoice();
    sound_play(snd_kro_emote2);
    }

//ASHA
else if (argument0=="ash_ambient"){
    if ((global.voc_ash_death==0 && global.voc_ash_ambient1==0 && global.voc_ash_ambient2==0 && global.voc_ash_ambient3==0 && global.voc_ash_ambient4==0) || argument1==1 || argument1==3 || argument1==4){
        scr_stopashavoice();
        temprand=ceil(random(3));
        if (argument1==1)
            temprand=1;
        else if (argument1==3)
            temprand=2;
        else if (argument1==4)
            temprand=3;
        if (temprand==1){
            sound_play(snd_ash_ambient1);
            global.voc_ash_ambient1=33;
            }
        else if (temprand==2){
            sound_play(snd_ash_ambient3);
            global.voc_ash_ambient3=33;
            }
        else if (temprand==3){
            sound_play(snd_ash_ambient4);
            global.voc_ash_ambient4=46;
            }
        }
    }
else if (argument0=="ash_ambient2"){
    if ((global.voc_ash_death==0 && global.voc_ash_ambient1==0 && global.voc_ash_ambient2==0 && global.voc_ash_ambient3==0 && global.voc_ash_ambient4==0) || argument1==1){
        scr_stopashavoice();
        sound_play(snd_ash_ambient2);
        global.voc_ash_ambient2=71;
        }
    }
else if (argument0=="ash_ambient3"){
    if (global.voc_ash_death==0 && global.voc_ash_ambient1==0 && global.voc_ash_ambient2==0 && global.voc_ash_ambient3==0 && global.voc_ash_ambient4==0){
        scr_stopashavoice();
        sound_play(snd_ash_ambient3);
        global.voc_ash_ambient3=33;
        }
    }
else if (argument0=="ash_pain"){
    if (global.voc_ash_death==0){
        scr_stopashavoice();
        sound_play(snd_ash_pain);
        }
    }
else if (argument0=="ash_death"){
    scr_stopashavoice();
    sound_play(snd_ash_death);
    global.voc_ash_death=12;
    }
else if (argument0=="ash_win"){
    scr_stopashavoice();
    sound_play(snd_ash_win);
    }
else if (argument0=="ash_win2"){
    scr_stopashavoice();
    sound_play(snd_ash_win2);
    }

//IOSA
else if (argument0=="ios_ambient1"){
    if (global.voc_ext_ansaksie1==0 && global.voc_ext_ansaksie2==0 && global.voc_ext_ansaksie3==0 && global.voc_ext_ansaksie4==0 && global.voc_ext_ansaksie5==0 && global.voc_ext_ansaksie6==0){
        if ((global.voc_ios_ambient1==0 && global.voc_ios_ambient2==0 && global.voc_ios_ambient3==0 && global.voc_ios_ambient4==0 && global.voc_ios_ambient5==0) || argument1==1){
            scr_stopiosavoice();
            sound_play(snd_ios_ambient1);
            global.voc_ios_ambient1=49;
            temprand=random(1)
            if (temprand<0.4){
                obj_ansaksie.voice=200+random(200);
                obj_ansaksie.shutup=55;
                obj_ansaksie.stopfooling=0;
                }
            }
        }
    }
else if (argument0=="ios_ambient2"){
    if (global.voc_ext_ansaksie1==0 && global.voc_ext_ansaksie2==0 && global.voc_ext_ansaksie3==0 && global.voc_ext_ansaksie4==0 && global.voc_ext_ansaksie5==0 && global.voc_ext_ansaksie6==0){
        if ((global.voc_ios_ambient1==0 && global.voc_ios_ambient2==0 && global.voc_ios_ambient3==0 && global.voc_ios_ambient4==0 && global.voc_ios_ambient5==0) || argument1==1){
            scr_stopiosavoice();
            sound_play(snd_ios_ambient2);
            global.voc_ios_ambient2=32;
            temprand=random(1)
            if (temprand<0.4){
                obj_ansaksie.voice=200+random(200);
                obj_ansaksie.shutup=45;
                obj_ansaksie.stopfooling=0;
                }
            }
        }
    }
else if (argument0=="ios_ambient3"){
    if (global.voc_ext_ansaksie1==0 && global.voc_ext_ansaksie2==0 && global.voc_ext_ansaksie3==0 && global.voc_ext_ansaksie4==0 && global.voc_ext_ansaksie5==0 && global.voc_ext_ansaksie6==0){
        if ((global.voc_ios_ambient1==0 && global.voc_ios_ambient2==0 && global.voc_ios_ambient3==0 && global.voc_ios_ambient4==0 && global.voc_ios_ambient5==0) || argument1==1){
            scr_stopiosavoice();
            sound_play(snd_ios_ambient3);
            global.voc_ios_ambient3=34;
            }
        }
    }
else if (argument0=="ios_ambient4"){
    if (global.voc_ext_ansaksie1==0 && global.voc_ext_ansaksie2==0 && global.voc_ext_ansaksie3==0 && global.voc_ext_ansaksie4==0 && global.voc_ext_ansaksie5==0 && global.voc_ext_ansaksie6==0){
        if ((global.voc_ios_ambient1==0 && global.voc_ios_ambient2==0 && global.voc_ios_ambient3==0 && global.voc_ios_ambient4==0 && global.voc_ios_ambient5==0) || argument1==1){
            scr_stopiosavoice();
            sound_play(snd_ios_ambient4);
            global.voc_ios_ambient4=49;
            }
        }
    }
else if (argument0=="ios_ambient5"){
    if (global.voc_ext_ansaksie1==0 && global.voc_ext_ansaksie2==0 && global.voc_ext_ansaksie3==0 && global.voc_ext_ansaksie4==0 && global.voc_ext_ansaksie5==0 && global.voc_ext_ansaksie6==0){
        if ((global.voc_ios_ambient1==0 && global.voc_ios_ambient2==0 && global.voc_ios_ambient3==0 && global.voc_ios_ambient4==0 && global.voc_ios_ambient5==0) || argument1==1){
            scr_stopiosavoice();
            sound_play(snd_ios_ambient5);
            global.voc_ios_ambient5=51;
            }
        }
    }
else if (argument0=="ios_pain"){
    if (global.voc_ext_ansaksie1==0 && global.voc_ext_ansaksie2==0 && global.voc_ext_ansaksie3==0 && global.voc_ext_ansaksie4==0 && global.voc_ext_ansaksie5==0 && global.voc_ext_ansaksie6==0){
        scr_stopiosavoice();
        sound_play(snd_ios_pain);
        }
    }
else if (argument0=="ios_win"){
    scr_stopiosavoice();
    sound_play(snd_ios_win);
    }

//IOSA2
else if (argument0=="io2_jump"){
    scr_stopiosavoice();
    sound_play(snd_io2_jump);
    }
else if (argument0=="io2_melee"){
    scr_stopiosavoice();
    sound_play(snd_io2_melee);
    }
else if (argument0=="io2_melee2"){
    scr_stopiosavoice();
    sound_play(snd_io2_melee2);
    }
else if (argument0=="io2_kicked"){
    scr_stopiosavoice();
    sound_play(snd_io2_kicked);
    }
else if (argument0=="io2_death"){
    scr_stopiosavoice();
    sound_play(snd_io2_death);
    }
else if (argument0=="io2_win"){
    scr_stopiosavoice();
    sound_play(snd_io2_win);
    }

//TOR
else if (argument0=="tor_ambient"){
    scr_stoptorvoice();
    temprand=random(1);
    ambiented=1;
    if (argument1==1)
        temprand=0;
    else if (argument1==2)
        temprand=0.15;
    else if (argument1==3)
        temprand=0.25;
    else if (argument1==4)
        temprand=0.35;
    if (temprand<0.1)
        sound_play(snd_tor_ambient1);
    else if (temprand<0.2)
        sound_play(snd_tor_ambient2);
    else if (temprand<0.3)
        sound_play(snd_tor_ambient3);
    else if ((temprand<0.4 && hp<maxhp/2) || argument1==4)
        sound_play(snd_tor_ambient4);
    else
        ambiented=0;
    }
else if (argument0=="tor_pain"){
    scr_stoptorvoice();
    sound_play(snd_tor_pain);
    }
else if (argument0=="tor_win"){
    scr_stoptorvoice();
    sound_play(snd_tor_win);
    }
else if (argument0=="tor_emote2"){
    scr_stoptorvoice();
    sound_play(snd_tor_emote2);
    }
else if (argument0=="tor_emote3"){
    scr_stoptorvoice();
    sound_play(snd_tor_emote3);
    }

//ANSAKSIE
else if (argument0=="ext_ansaksie"){
    if (global.voc_ios_ambient1==0 && global.voc_ios_ambient2==0 && global.voc_ios_ambient3==0 && global.voc_ios_ambient4==0 && global.voc_ios_ambient5==0){
        temprand=ceil(random(6));
        if (argument1==1)
            temprand=1;
        else if (argument1==2)
            temprand=2;
        else if (argument1==3)
            temprand=3;
        else if (argument1==4)
            temprand=4;
        else if (argument1==5)
            temprand=5;
        else if (argument1==6)
            temprand=6;
        if (temprand==1){
            sound_play(snd_ext_ansaksie1);
            global.voc_ext_ansaksie1=42;
            }
        else if (temprand==2){
            sound_play(snd_ext_ansaksie2);
            global.voc_ext_ansaksie2=32;
            }
        else if (temprand==3){
            sound_play(snd_ext_ansaksie3);
            global.voc_ext_ansaksie3=37;
            }
        else if (temprand==4){
            sound_play(snd_ext_ansaksie4);
            global.voc_ext_ansaksie4=43;
            }
        else if (temprand==5){
            sound_play(snd_ext_ansaksie5);
            global.voc_ext_ansaksie5=36;
            }
        else if (temprand==6){
            sound_play(snd_ext_ansaksie6);
            global.voc_ext_ansaksie6=54;
            }
        }
    }
}
}
#define scr_music
scr_stopmusic(1);
//Do it
if (!global.nomusic || iamthemenu){
    if (argument0=="mus_secintro" && (global.music!="mus_secintro" || forcemusic || iamthemenu)){
        sound_loop(mus_secintro);
        forcemusic=0;
        }
    else if (argument0=="mus_sec1"){
        sound_loop(mus_sec1);
        }
    else if (argument0=="mus_sec2"){
        sound_loop(mus_sec2);
        }
    else if (argument0=="mus_sec3"){
        sound_loop(mus_sec3);
        }
    else if (argument0=="mus_sec4"){
        sound_loop(mus_sec4);
        }
    else if (argument0=="mus_sec5"){
        sound_loop(mus_sec5);
        }
    else if (argument0=="mus_mainmenu"){
        sound_loop(mus_mainmenu);
        }
    else if (argument0=="mus_clear"){
        sound_loop(mus_clear);
        }
    else if (argument0=="mus_boss"){
        sound_loop(mus_boss);
        }
    else if (argument0=="mus_tor"){
        sound_loop(mus_tor);
        }
    else if (argument0=="mus_ending"){
        sound_play(mus_ending);
        }
    else if (argument0=="mus_darkstroke"){
        sound_play(mus_darkstroke);
        global.music="";
        tempsmusic=1;
        }
    else if (argument0=="mus_lightstroke"){
        sound_play(mus_lightstroke);
        global.music="";
        tempsmusic=1;
        }
    else if (argument0=="mus_calm"){
        sound_loop(mus_calm);
        }
    else if (argument0=="mus_dark"){
        sound_loop(mus_dark);
        }
    else if (argument0=="mus_sad"){
        sound_loop(mus_sad);
        }
    else if (argument0=="mus_asha"){
        sound_loop(mus_asha);
        }
    else if (argument0=="mus_gameover"){
        sound_play(mus_gameover);
        }
    else if (argument0=="mus_hero3d"){
        sound_loop(mus_hero3d);
        }
    else if (argument0=="mus_doom"){
        sound_play(mus_doom);
        global.music="";
        tempsmusic=1;
        }
    }

//Currently playing
if (!tempsmusic)
    global.music=argument0;
tempsmusic=0;
#define scr_musicvolume
//DOESN'T WORK WITH MP3 FILES
/*
sound_volume(mus_secintro,0.85);
sound_volume(mus_sec1,0.85);
sound_volume(mus_sec2,0.85);
sound_volume(mus_sec3,0.85);
sound_volume(mus_sec4,0.85);
sound_volume(mus_sec5,0.85);
sound_volume(mus_boss,0.85);
sound_volume(mus_tor,0.85);
sound_volume(mus_ending,0.85);
sound_volume(mus_mainmenu,0.85);
sound_volume(mus_clear,0.85);
sound_volume(mus_darkstroke,0.85);
sound_volume(mus_lightstroke,0.85);
sound_volume(mus_calm,0.85);
sound_volume(mus_dark,0.85);
sound_volume(mus_sad,0.85);
sound_volume(mus_asha,0.85);
sound_volume(mus_gameover,0.85);
sound_volume(mus_hero3d,0.85);
sound_volume(mus_doom,0.85);
*/
#define scr_loopsounds
if (global.nosound==0){

//PULSE CANNON / HYPER PULSE
sndpulsprev=sndpuls;
sndpuls=0;
if (obj_iji.firingpulse>0)
    sndpuls=1;
with (obj_komatotrooper){
    if (state==2){
        if (x>obj_shakescreen.x-900 && x<obj_shakescreen.x+900 && y>obj_shakescreen.y-600 && y<obj_shakescreen.y+600)
            obj_sabot.sndpuls=1;
        }
    }
with (obj_komatoannihilator){
    if (state==2 && weapon==0){
        if (x>obj_shakescreen.x-900 && x<obj_shakescreen.x+900 && y>obj_shakescreen.y-600 && y<obj_shakescreen.y+600)
            obj_sabot.sndpuls=1;
        }
    }
with (obj_iosa){
    if (state==2 && weapon==0)
        obj_sabot.sndpuls=1;
    }

if (sndpuls>0){
    sndpuls2-=1;
    if (sndpuls2<=0){
        sndpuls2=42;
        scr_sound("wea_puls");
        }
    if (sndpulsprev==0){
        repeat(10)
            sound_stop(snd_wea_pulsend)
        scr_sound("exp_pew");
        }
    }
else if (sndpuls==0 && sndpulsprev>0){
    repeat(10)
        sound_stop(snd_wea_puls)
    if (!obj_sabot.pause)
        scr_sound("wea_pulsend");
    }
if (sndpuls==0)
    sndpuls2=0;

//CFIS
sndcfisprev=sndcfis;
sndcfis=instance_number(obj_cfistrace);
sndcfis+=instance_number(obj_enemycfistrace);
if (sndcfis>0){
    sndcfis2-=1;
    if (sndcfis2<=0){
        sndcfis2=73;
        scr_sound("wea_cfis");
        }
    if (sndcfisprev==0){
        repeat(10)
            sound_stop(snd_wea_cfisend)
        scr_sound("exp_pew");
        }
    }
else if (sndcfis==0 && sndcfisprev>0){
    repeat(10)
        sound_stop(snd_wea_cfis)
    if (!obj_sabot.pause)
        scr_sound("wea_cfisend");
    }
if (sndcfis==0)
    sndcfis2=0;

//VELOCITHOR V2-10
sndthorprev=sndthor;
sndthor=instance_number(obj_thor)+instance_number(obj_enemythor);
if (sndthor>0){
    sndthor2-=1;
    if (sndthor2<=0){
        sndthor2=52;
        scr_sound("wea_thor");
        }
    if (sndthorprev==0){
        repeat(10)
            sound_stop(snd_wea_thorend)
        scr_sound("exp_rock");
        scr_sound("exp_mpfb");
        }
    }
else if (sndthor==0 && sndthorprev>0){
    repeat(10)
        sound_stop(snd_wea_thor)
    if (!obj_sabot.pause)
        scr_sound("wea_thorend");
    }
if (sndthor==0)
    sndthor2=0;

}
#define scr_voicecyc
//THIS IS HOW WE DO IT IN UGLY CODE COUNTRY
if (global.voc_iji_berserk1>0)
    global.voc_iji_berserk1-=1;
if (global.voc_iji_berserk2>0)
    global.voc_iji_berserk2-=1;
if (global.voc_iji_berserk3>0)
    global.voc_iji_berserk3-=1;
if (global.voc_iji_death>0)
    global.voc_iji_death-=1;
if (global.voc_sco_find1>0)
    global.voc_sco_find1-=1;
if (global.voc_sco_find2>0)
    global.voc_sco_find2-=1;
if (global.voc_sol_find1>0)
    global.voc_sol_find1-=1;
if (global.voc_sol_find2>0)
    global.voc_sol_find2-=1;
if (global.voc_com_find1>0)
    global.voc_com_find1-=1;
if (global.voc_com_find2>0)
    global.voc_com_find2-=1;
if (global.voc_eli_find1>0)
    global.voc_eli_find1-=1;
if (global.voc_eli_find2>0)
    global.voc_eli_find2-=1;
if (global.voc_tro_find1>0)
    global.voc_tro_find1-=1;
if (global.voc_tro_find2>0)
    global.voc_tro_find2-=1;
if (global.voc_ber_find1>0)
    global.voc_ber_find1-=1;
if (global.voc_ber_find2>0)
    global.voc_ber_find2-=1;
if (global.voc_ber_ciretako>0)
    global.voc_ber_ciretako-=1;
if (global.voc_ash_death>0)
    global.voc_ash_death-=1;
if (global.voc_ash_ambient1>0)
    global.voc_ash_ambient1-=1;
if (global.voc_ash_ambient2>0)
    global.voc_ash_ambient2-=1;
if (global.voc_ash_ambient3>0)
    global.voc_ash_ambient3-=1;
if (global.voc_ash_ambient4>0)
    global.voc_ash_ambient4-=1;
if (global.voc_ext_ansaksie1>0)
    global.voc_ext_ansaksie1-=1;
if (global.voc_ext_ansaksie2>0)
    global.voc_ext_ansaksie2-=1;
if (global.voc_ext_ansaksie3>0)
    global.voc_ext_ansaksie3-=1;
if (global.voc_ext_ansaksie4>0)
    global.voc_ext_ansaksie4-=1;
if (global.voc_ext_ansaksie5>0)
    global.voc_ext_ansaksie5-=1;
if (global.voc_ext_ansaksie6>0)
    global.voc_ext_ansaksie6-=1;
if (global.voc_iosa_ambient1>0)
    global.voc_iosa_ambient1-=1;
if (global.voc_iosa_ambient2>0)
    global.voc_iosa_ambient2-=1;
if (global.voc_iosa_ambient3>0)
    global.voc_iosa_ambient3-=1;
if (global.voc_iosa_ambient4>0)
    global.voc_iosa_ambient4-=1;
if (global.voc_iosa_ambient5>0)
    global.voc_iosa_ambient5-=1;
if (global.voc_glo_kick>0)
    global.voc_glo_kick-=1;

#define scr_loadsounds
//Obsolete

#define scr_loadmusic
//Argument0 is specific song
global.music=""; //currently playing music
tempmusic=0;

//SECINTRO
//if (room==rom_sector1 || room==rom_sector2 || argument0==1){
    if (file_exists("music\secintro.mp3"))
        sound_replace(mus_secintro,"music\secintro.mp3",1,1);
    else if (file_exists("secintro.mp3"))
        sound_replace(mus_secintro,"secintro.mp3",1,1);
//    }
//SEC1
//if (room==rom_sector1 || room==rom_sector6 || argument0==2){
    if (file_exists("music\sec1.mp3"))
        sound_replace(mus_sec1,"music\sec1.mp3",1,1);
    else if (file_exists("sec1.mp3"))
        sound_replace(mus_sec1,"sec1.mp3",1,1);
//    }
//SEC2
//if (room==rom_sector2 || room==rom_sector7 || argument0==3){
    if (file_exists("music\sec2.mp3"))
        sound_replace(mus_sec2,"music\sec2.mp3",1,1);
    else if (file_exists("sec2.mp3"))
        sound_replace(mus_sec2,"sec2.mp3",1,1);
//    }
//SEC3
//if (room==rom_sector3 || room==rom_sector8 || argument0==4){
    if (file_exists("music\sec3.mp3"))
        sound_replace(mus_sec3,"music\sec3.mp3",1,1);
    else if (file_exists("sec3.mp3"))
        sound_replace(mus_sec3,"sec3.mp3",1,1);
//    }
//SEC4
//if (room==rom_sector4 || room==rom_sector9 || argument0==5){
    if (file_exists("music\sec4.mp3"))
        sound_replace(mus_sec4,"music\sec4.mp3",1,1);
    else if (file_exists("sec4.mp3"))
        sound_replace(mus_sec4,"sec4.mp3",1,1);
//    }
//SEC5
//if (room==rom_sector5 || room==rom_sectorx || argument0==6){
    if (file_exists("music\sec5.mp3"))
        sound_replace(mus_sec5,"music\sec5.mp3",1,1);
    else if (file_exists("sec5.mp3"))
        sound_replace(mus_sec5,"sec5.mp3",1,1);
//    }
//BOSS
//if (room==rom_sectorx || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || argument0==7){
    if (file_exists("music\boss.mp3"))
        sound_replace(mus_boss,"music\boss.mp3",1,1);
    else if (file_exists("boss.mp3"))
        sound_replace(mus_boss,"boss.mp3",1,1);
//    }
//TOR
//if (room==rom_sector15 || argument0==8){
    if (file_exists("music\tor.mp3"))
        sound_replace(mus_tor,"music\tor.mp3",1,1);
    else if (file_exists("tor.mp3"))
        sound_replace(mus_tor,"tor.mp3",1,1);
//    }
//ENDING
//if (room==rom_cut && global.cut==10 || argument0==9){
    if (file_exists("music\ending.mp3"))
        sound_replace(mus_ending,"music\ending.mp3",1,1);
    else if (file_exists("ending.mp3"))
        sound_replace(mus_ending,"ending.mp3",1,1);
//    }
//MAINMENU
//if (room==rom_main || argument0==10){
    if (file_exists("music\mainmenu.mp3"))
        sound_replace(mus_mainmenu,"music\mainmenu.mp3",1,1);
    else if (file_exists("mainmenu.mp3"))
        sound_replace(mus_mainmenu,"mainmenu.mp3",1,1);
//    }
//CLEAR
//if (room==rom_clear || argument0==11){
    if (file_exists("music\clear.mp3"))
        sound_replace(mus_clear,"music\clear.mp3",1,1);
    else if (file_exists("clear.mp3"))
        sound_replace(mus_clear,"clear.mp3",1,1);
//    }
//DARKSTROKE
//if (room==rom_sectorz || room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || room==rom_sector15 || room==rom_sector16 || room==rom_cut || argument0==12){
    if (file_exists("music\darkstroke.mp3"))
        sound_replace(mus_darkstroke,"music\darkstroke.mp3",1,1);
    else if (file_exists("darkstroke.mp3"))
        sound_replace(mus_darkstroke,"darkstroke.mp3",1,1);
//    }
//LIGHTSTROKE
//if (room==rom_sectorz || room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || room==rom_sector15 || room==rom_sector16 || room==rom_cut || argument0==13){
    if (file_exists("music\lightstroke.mp3"))
        sound_replace(mus_lightstroke,"music\lightstroke.mp3",0,1);
    else if (file_exists("lightstroke.mp3"))
        sound_replace(mus_lightstroke,"lightstroke.mp3",0,1);
//    }
//CALM
//if (room==rom_sector4 || room==rom_cut || argument0==14 || room==rom_sector11 || (room==rom_clear && (global.sector==9 && global.specialtrigger1==0) || global.sector==3)){
    if (file_exists("music\calm.mp3"))
        sound_replace(mus_calm,"music\calm.mp3",1,1);
    else if (file_exists("calm.mp3"))
        sound_replace(mus_calm,"calm.mp3",1,1);
//    }
//DARK
//if (room==rom_cut || room==rom_sector9 || room==rom_sectorx || room==rom_sector11 || room==rom_sector16 || argument0==15){
    if (file_exists("music\dark.mp3"))
        sound_replace(mus_dark,"music\dark.mp3",1,1);
    else if (file_exists("dark.mp3"))
        sound_replace(mus_dark,"dark.mp3",1,1);
//    }
//SAD
//if (room==rom_cut || argument0==16 || global.wty){
    if (file_exists("music\sad.mp3"))
        sound_replace(mus_sad,"music\sad.mp3",1,1);
    else if (file_exists("sad.mp3"))
        sound_replace(mus_sad,"sad.mp3",1,1);
//    }
//ASHA
//if (room==rom_sector12 || room==rom_sector8 || room==rom_sectorx || argument0==17){
    if (file_exists("music\asha.mp3"))
        sound_replace(mus_asha,"music\asha.mp3",1,1);
    else if (file_exists("asha.mp3"))
        sound_replace(mus_asha,"asha.mp3",1,1);
//    }
//GAMEOVER
//if (room==rom_sectorz || room==rom_sector1 || room==rom_sector2 || room==rom_sector3 || room==rom_sector4 || room==rom_sector5 || room==rom_sector6 || room==rom_sector7 || room==rom_sector8 || room==rom_sector9 || room==rom_sectorx || room==rom_sector11 || room==rom_sector12 || room==rom_sector13 || room==rom_sector14 || room==rom_sector15 || argument0==18){
    if (file_exists("music\gameover.mp3"))
        sound_replace(mus_gameover,"music\gameover.mp3",1,1);
    else if (file_exists("gameover.mp3"))
        sound_replace(mus_gameover,"gameover.mp3",1,1);
//    }
//HERO3D
//if (room==rom_main || room==rom_sector6 || argument0==19){
    if (file_exists("music\hero3d.mp3"))
        sound_replace(mus_hero3d,"music\hero3d.mp3",1,1);
    else if (file_exists("hero3d.mp3"))
        sound_replace(mus_hero3d,"hero3d.mp3",1,1);
//    }
//DOOM
//if (room==rom_sector16 || room==rom_cut || argument0==20){
    if (file_exists("music\doom.mp3"))
        sound_replace(mus_doom,"music\doom.mp3",1,1);
    else if (file_exists("doom.mp3"))
        sound_replace(mus_doom,"doom.mp3",1,1);
//    }

#define scr_stopijivoice
repeat(5){
sound_stop(snd_iji_jump);
sound_stop(snd_iji_jump2);
sound_stop(snd_iji_kick);
sound_stop(snd_iji_kick2);
sound_stop(snd_iji_pain1);
sound_stop(snd_iji_pain2);
sound_stop(snd_iji_pain3);
sound_stop(snd_iji_bigpain1);
sound_stop(snd_iji_bigpain2);
sound_stop(snd_iji_death);
sound_stop(snd_iji_damnit);
sound_stop(snd_iji_cry1);
sound_stop(snd_iji_cry2);
sound_stop(snd_iji_berserk1);
sound_stop(snd_iji_berserk2);
sound_stop(snd_iji_berserk3);
sound_stop(snd_iji_ougi1);
sound_stop(snd_iji_ougi2);
sound_stop(snd_iji_breathe);
}
#define scr_stopmusic
//Argument0 1 = don't stop lighstroke and darkstroke
repeat(10){
sound_stop(mus_secintro);
sound_stop(mus_sec1);
sound_stop(mus_sec2);
sound_stop(mus_sec3);
sound_stop(mus_sec4);
sound_stop(mus_sec5);
sound_stop(mus_boss);
sound_stop(mus_tor);
sound_stop(mus_ending);
sound_stop(mus_mainmenu);
sound_stop(mus_clear);
if (!argument0)
    sound_stop(mus_darkstroke);
if (!argument0)
    sound_stop(mus_lightstroke);
sound_stop(mus_calm);
sound_stop(mus_dark);
sound_stop(mus_sad);
sound_stop(mus_asha);
sound_stop(mus_gameover);
sound_stop(mus_hero3d);
if (!argument0)
    sound_stop(mus_doom);
}
#define scr_stopscoutvoice
repeat(5){
sound_stop(snd_sco_find1);
sound_stop(snd_sco_find2);
}
#define scr_stopsoldiervoice
repeat(5){
sound_stop(snd_sol_find1);
sound_stop(snd_sol_find2);
sound_stop(snd_sol_pain1);
sound_stop(snd_sol_pain2);
}
#define scr_stopcommandervoice
repeat(5){
sound_stop(snd_com_find1);
sound_stop(snd_com_find2);
sound_stop(snd_com_pain1);
sound_stop(snd_com_pain2);
}
#define scr_stopelitevoice
repeat(5){
sound_stop(snd_eli_find1);
sound_stop(snd_eli_find2);
sound_stop(snd_eli_pain1);
sound_stop(snd_eli_pain2);
}
#define scr_stoptroopervoice
repeat(5){
sound_stop(snd_tro_find1);
sound_stop(snd_tro_find2);
sound_stop(snd_tro_pain1);
sound_stop(snd_tro_pain2);
}
#define scr_stopberserkervoice
repeat(5){
sound_stop(snd_ber_find1);
sound_stop(snd_ber_find2);
sound_stop(snd_ber_pain1);
sound_stop(snd_ber_pain2);
}
#define scr_stopkrovoice
repeat(5){
sound_stop(snd_kro_pain1);
sound_stop(snd_kro_pain2);
sound_stop(snd_kro_death);
sound_stop(snd_kro_ambient1);
sound_stop(snd_kro_ambient2);
sound_stop(snd_kro_ambient3);
sound_stop(snd_kro_win);
sound_stop(snd_kro_emote2);
}
#define scr_stoptorvoice
repeat(5){
sound_stop(snd_tor_ambient1);
sound_stop(snd_tor_ambient2);
sound_stop(snd_tor_ambient3);
sound_stop(snd_tor_ambient4);
sound_stop(snd_tor_pain);
sound_stop(snd_tor_win);
sound_stop(snd_tor_emote2);
sound_stop(snd_tor_emote3);
}
#define scr_stopashavoice
repeat(5){
sound_stop(snd_ash_ambient1);
sound_stop(snd_ash_ambient2);
sound_stop(snd_ash_ambient3);
sound_stop(snd_ash_ambient4);
sound_stop(snd_ash_pain);
sound_stop(snd_ash_win);
sound_stop(snd_ash_win2);
}
#define scr_stopiosavoice
repeat(5){
sound_stop(snd_ios_ambient1);
sound_stop(snd_ios_ambient2);
sound_stop(snd_ios_ambient3);
sound_stop(snd_ios_ambient4);
sound_stop(snd_ios_ambient5);
sound_stop(snd_ios_pain);
sound_stop(snd_ios_win);
}
#define scr_shreddersfx
//SFX
if (!global.nosound){

shrmax=0;
shrstepsound+=1;
if (shrstepsound>=4){
    shrstepsound=0;
    with (obj_tasenshredder){
        if (x>obj_shakescreen.x-900 && x<obj_shakescreen.x+900 && y>obj_shakescreen.y-600 && y<obj_shakescreen.y+600){
            if (abs(hspeed)>10 && obj_sabot.shrmax<2)
                obj_sabot.shrmax=2;
            else if (speed>0.01 && obj_sabot.shrmax<1)
                obj_sabot.shrmax=1;
            }
        }
    with (obj_emptyshredder){
        if (x>obj_shakescreen.x-900 && x<obj_shakescreen.x+900 && y>obj_shakescreen.y-600 && y<obj_shakescreen.y+600){
            if (abs(hspeed)>10 && obj_sabot.shrmax<2)
                obj_sabot.shrmax=2;
            }
        }
    with (obj_iji){
        if (shredder && abs(hspeed)>10 && obj_sabot.shrmax<2)
            obj_sabot.shrmax=2;
        else if (shredder && obj_sabot.shrmax<1)
            obj_sabot.shrmax=1;
        }
    if (shrmax>0){
        shrstepsound=0;
        if (shrmax==2)
            scr_sound("shr_step_q1");
        else if (shrmax==1)
            scr_sound("shr_step");
        }
    }

}
#define scr_stopsfx
//Must repeat 5 times because GM7's sound system is garbage
repeat(5){
sound_stop(snd_glo_shell);
sound_stop(snd_glo_shell_q1);
sound_stop(snd_glo_shell_q2);
sound_stop(snd_glo_door);
sound_stop(snd_glo_doorclose);
sound_stop(snd_glo_swipe);
sound_stop(snd_glo_kick);
sound_stop(snd_glo_land);
sound_stop(snd_glo_crackbegin);
sound_stop(snd_glo_cracktick);
sound_stop(snd_glo_cracktick_q1);
sound_stop(snd_glo_cracktick_q2);
sound_stop(snd_glo_crackfail);
sound_stop(snd_glo_cracksuccess);
sound_stop(snd_glo_pickup);
sound_stop(snd_glo_pickup2);
sound_stop(snd_glo_getoverload);
sound_stop(snd_glo_reflect);
sound_stop(snd_glo_thunder);
sound_stop(snd_glo_teleport);
sound_stop(snd_glo_liftstart);
sound_stop(snd_glo_liftend);
sound_stop(snd_glo_rico1);
sound_stop(snd_glo_rico2);
sound_stop(snd_glo_rico3);
sound_stop(snd_glo_selectweapon);
sound_stop(snd_glo_debris1);
sound_stop(snd_glo_debris1_q1);
sound_stop(snd_glo_debris2);
sound_stop(snd_glo_debris2_q1);
sound_stop(snd_glo_shard1);
sound_stop(snd_glo_shard2);
sound_stop(snd_glo_destroy);
sound_stop(snd_glo_levelup);
sound_stop(snd_glo_spark1);
sound_stop(snd_glo_spark2);
sound_stop(snd_glo_electrocute);
sound_stop(snd_glo_bootelec);
sound_stop(snd_glo_blit);
sound_stop(snd_glo_blit_q1);
sound_stop(snd_wea_shot);
sound_stop(snd_wea_imach);
sound_stop(snd_wea_imach_q1);
sound_stop(snd_wea_imach_q2);
sound_stop(snd_wea_mach);
sound_stop(snd_wea_mach_q1);
sound_stop(snd_wea_mach_q2);
sound_stop(snd_wea_charge);
sound_stop(snd_wea_rock);
sound_stop(snd_wea_mpfb);
sound_stop(snd_wea_reso);
sound_stop(snd_wea_puls);
sound_stop(snd_wea_pulsend);
sound_stop(snd_wea_shoc);
sound_stop(snd_wea_cfis);
sound_stop(snd_wea_cfisend);
sound_stop(snd_wea_spli);
sound_stop(snd_wea_spli_q1);
sound_stop(snd_wea_spli_q2);
sound_stop(snd_wea_plas);
sound_stop(snd_wea_thor);
sound_stop(snd_wea_thorend);
sound_stop(snd_wea_banana);
sound_stop(snd_exp_turret);
sound_stop(snd_exp_rock);
sound_stop(snd_exp_mpfb);
sound_stop(snd_exp_nuke);
sound_stop(snd_exp_shoc);
sound_stop(snd_exp_spli);
sound_stop(snd_exp_spli_q1);
sound_stop(snd_exp_spli_q2);
sound_stop(snd_exp_nano);
sound_stop(snd_exp_meta1);
sound_stop(snd_exp_meta2);
sound_stop(snd_exp_glass);
sound_stop(snd_exp_miniglass);
sound_stop(snd_exp_boss);
sound_stop(snd_exp_pew);
sound_stop(snd_iji_hitfloor);
sound_stop(snd_iji_swiped);
sound_stop(snd_iji_sworded);
sound_stop(snd_iji_land);
sound_stop(snd_iji_land2);
sound_stop(snd_iji_jump);
sound_stop(snd_iji_jump2);
sound_stop(snd_iji_kick);
sound_stop(snd_iji_kick2);
sound_stop(snd_iji_pain1);
sound_stop(snd_iji_pain2);
sound_stop(snd_iji_pain3);
sound_stop(snd_iji_bigpain1);
sound_stop(snd_iji_bigpain2);
sound_stop(snd_iji_death);
sound_stop(snd_iji_damnit);
sound_stop(snd_iji_cry1);
sound_stop(snd_iji_cry2);
sound_stop(snd_iji_berserk1);
sound_stop(snd_iji_berserk2);
sound_stop(snd_iji_berserk3);
sound_stop(snd_iji_ougi1);
sound_stop(snd_iji_ougi2);
sound_stop(snd_iji_breathe);
sound_stop(snd_iji_basepain);
sound_stop(snd_dan_choke);
sound_stop(snd_dan_death);
sound_stop(snd_tur_appear);
sound_stop(snd_tur_find);
sound_stop(snd_tur_lose);
sound_stop(snd_sco_find1);
sound_stop(snd_sco_find2);
sound_stop(snd_sco_death1);
sound_stop(snd_sco_death2);
sound_stop(snd_sol_find1);
sound_stop(snd_sol_find2);
sound_stop(snd_sol_pain1);
sound_stop(snd_sol_pain2);
sound_stop(snd_sol_death1);
sound_stop(snd_sol_death2);
sound_stop(snd_com_find1);
sound_stop(snd_com_find2);
sound_stop(snd_com_pain1);
sound_stop(snd_com_pain2);
sound_stop(snd_com_death1);
sound_stop(snd_com_death2);
sound_stop(snd_eli_find1);
sound_stop(snd_eli_find2);
sound_stop(snd_eli_pain1);
sound_stop(snd_eli_pain2);
sound_stop(snd_eli_death1);
sound_stop(snd_eli_death2);
sound_stop(snd_shr_step);
sound_stop(snd_shr_step_q1);
sound_stop(snd_tro_find1);
sound_stop(snd_tro_find2);
sound_stop(snd_tro_pain1);
sound_stop(snd_tro_pain2);
sound_stop(snd_tro_death1);
sound_stop(snd_tro_death2);
sound_stop(snd_ber_find1);
sound_stop(snd_ber_find2);
sound_stop(snd_ber_pain1);
sound_stop(snd_ber_pain2);
sound_stop(snd_ber_ciretako);
sound_stop(snd_bea_find1);
sound_stop(snd_bea_find2);
sound_stop(snd_bea_jump);
sound_stop(snd_asa_pain1);
sound_stop(snd_asa_pain2);
sound_stop(snd_ann_step);
sound_stop(snd_ann_find1);
sound_stop(snd_ann_find1_q1);
sound_stop(snd_ann_find2);
sound_stop(snd_ann_find2_q1);
sound_stop(snd_ann_destroy);
sound_stop(snd_kro_pain1);
sound_stop(snd_kro_pain2);
sound_stop(snd_kro_death);
sound_stop(snd_kro_ambient1);
sound_stop(snd_kro_ambient2);
sound_stop(snd_kro_ambient3);
sound_stop(snd_kro_win);
sound_stop(snd_kro_emote2);
sound_stop(snd_ash_ambient1);
sound_stop(snd_ash_ambient2);
sound_stop(snd_ash_ambient3);
sound_stop(snd_ash_ambient4);
sound_stop(snd_ash_pain);
sound_stop(snd_ash_death);
sound_stop(snd_ash_win);
sound_stop(snd_ash_win2);
sound_stop(snd_pro_powerdown);
sound_stop(snd_pro_beep1);
sound_stop(snd_pro_beep2);
sound_stop(snd_pro_beep3);
sound_stop(snd_ios_ambient1);
sound_stop(snd_ios_ambient2);
sound_stop(snd_ios_ambient3);
sound_stop(snd_ios_ambient4);
sound_stop(snd_ios_ambient5);
sound_stop(snd_ios_win);
sound_stop(snd_ios_pain);
sound_stop(snd_io2_jump);
sound_stop(snd_io2_kicked);
sound_stop(snd_io2_melee);
sound_stop(snd_io2_melee2);
sound_stop(snd_io2_death);
sound_stop(snd_io2_win);
sound_stop(snd_tor_fire);
sound_stop(snd_tor_fly);
sound_stop(snd_tor_gather);
sound_stop(snd_tor_gather_q01);
sound_stop(snd_tor_gather_q03);
sound_stop(snd_tor_spark);
sound_stop(snd_tor_eruption);
sound_stop(snd_tor_ambient1);
sound_stop(snd_tor_ambient2);
sound_stop(snd_tor_ambient3);
sound_stop(snd_tor_ambient4);
sound_stop(snd_tor_win);
sound_stop(snd_tor_pain);
sound_stop(snd_tor_emote2);
sound_stop(snd_tor_emote3);
sound_stop(snd_ext_ansaksie1);
sound_stop(snd_ext_ansaksie2);
sound_stop(snd_ext_ansaksie3);
sound_stop(snd_ext_ansaksie4);
sound_stop(snd_ext_ansaksie5);
sound_stop(snd_ext_ansaksie6);
sound_stop(snd_ext_impulseexplo);
sound_stop(snd_ext_barrier);
sound_stop(snd_ext_barrierexplo);
}
#define scr_proximatalk
//argument0 is phrase

talkcyc=0;
//0: identify target (announce 1)
if (argument0==0){
    talk[0]=2;
    talk[1]=0;
    talk[2]=0;
    }
//1: nuke (weapon 7)
else if (argument0==1){
    talk[0]=1;
    talk[1]=2;
    talk[2]=0;
    }
//2: engaging target (announce 2)
else if (argument0==2){
    talk[0]=2;
    talk[1]=0;
    talk[2]=1;
    }
//3: heavy damage sustained (announce 3)
else if (argument0==3){
    talk[0]=2;
    talk[1]=0;
    talk[2]=2;
    }
//4: rocket hail (weapon 4)
else if (argument0==4){
    talk[0]=1;
    talk[1]=1;
    talk[2]=0;
    }
//5: tackle (weapon 1)
else if (argument0==5){
    talk[0]=1;
    talk[1]=0;
    talk[2]=0;
    }
//6: spread rockets (weapon 3)
else if (argument0==6){
    talk[0]=1;
    talk[1]=0;
    talk[2]=2;
    }
//7: splintergun (weapon 2)
else if (argument0==7){
    talk[0]=1;
    talk[1]=0;
    talk[2]=1;
    }
//8: mpfb (weapon 6)
else if (argument0==8){
    talk[0]=1;
    talk[1]=1;
    talk[2]=2;
    }
//9: plasma cannon (weapon 5)
else if (argument0==9){
    talk[0]=1;
    talk[1]=1;
    talk[2]=1;
    }

#define scr_horseinit
//Init at beginning of Sector
//Executed by sabot

x=obj_iji.x;
y=obj_iji.y+46;
instance_create(x,y,obj_horseenter);
instance_create(x,y,obj_horse);
finalx=x;
finaly=y;
wavetext="";
if (room==rom_sector1)
    wavetext="STAGE 1";
else if (room==rom_sector2)
    wavetext="STAGE 2";
else if (room==rom_sector3)
    wavetext="STAGE 3";
else if (room==rom_sector4)
    wavetext="STAGE 4";
else if (room==rom_sector5)
    wavetext="STAGE 5";
else if (room==rom_sector6)
    wavetext="STAGE 6";
else if (room==rom_sector7)
    wavetext="STAGE 7";
else if (room==rom_sector8)
    wavetext="STAGE 8";
else if (room==rom_sector9)
    wavetext="STAGE 9";
else if (room==rom_sectorx)
    wavetext="STAGE X";
wavetextprev="";
wavetextoff=1200;
ignoresmooth=1;
horsehp=10;
for (i=0;i<19;i+=1)
    gameovertext[i]="";
gameovertext[3]="OUT OF HORSES LOSER";
gameovertext[5]="Final score: ";
gameovertext[9]="Game by YUKABACERA";
gameovertext[13]=".....Press Escape to quit.....";
for (i=0;i<19;i+=1)
    victorytext[i]="";
victorytext[0]="The legendary missile pony";
victorytext[1]="HORSEGUN PUNCHESBULLETS";
victorytext[2]="Has destroyed the Space N^rd armada";
victorytext[3]="AND SAVED THE UNIVERSE";
victorytext[5]="Final score: ";
victorytext[8]="Hint: type DEVASTATE on the Main menu";
               //---------1---------1---------1---------1---------1---------1-
victorytext[11]="I made this game for you. Sorry for drinking your hot drinks";
victorytext[12]="and poking your shoulder all the time. I should have told you";
victorytext[13]="what present I wanted instead of saying whatever's fine and";
victorytext[14]="then refusing to eat that Supernova Pudding that was really";
victorytext[15]="expensive in the vending machine and I feel bad about it.";
victorytext[16]="COME BACK TO ME VATEILIKA - LOVE FROM YUKABACERA";
victorytext[18]=".....Press Escape to quit.....";
global.shakescreen=0;
global.backuphorsepoints=global.horsepoints;
alarm[4]=2;
alarm[8]=1;
if (room==rom_sector1 && global.noblood)
    tile_layer_hide(999999);
with(obj_iji) instance_destroy();
with(obj_enemy) instance_destroy();
with(obj_terminal) instance_destroy();
with(obj_camera) instance_destroy();
with(obj_bgspeaker) instance_destroy();
with(obj_lamp) instance_destroy();
with(obj_exitsign) instance_destroy();
with(obj_ribbon) instance_destroy();
with(obj_log1) instance_destroy();
with(obj_poster) instance_destroy();
with(obj_supercharge) instance_destroy();
with(obj_nanooverload) instance_destroy();
with(obj_weaponpickup) instance_destroy();
with(obj_xp) instance_destroy();
with(obj_ammo) instance_destroy();
with(obj_station) instance_destroy();
with(obj_door) instance_destroy();
with(obj_cdoor) instance_destroy();
with(obj_locationmessage) instance_destroy();
with(obj_blackbug) instance_destroy();
with(obj_dripnest) instance_destroy();
with(obj_blitnest) instance_destroy();
with(obj_warpback) instance_destroy();
with(obj_meta) instance_destroy();
with(obj_lift) instance_destroy();
with(obj_glass) instance_destroy();
with(obj_glass2) instance_destroy();
with(obj_paper) instance_destroy();
with(obj_weapstation) instance_destroy();
with(obj_tele) instance_destroy();
with(obj_teledest) instance_destroy();
with(obj_tasenship) instance_destroy();
with(obj_komatoship) instance_destroy();
with(obj_sec3hologram) instance_destroy();
with(obj_sec3holotrigger) instance_destroy();
with(obj_sec3specialtrucetrig) instance_destroy();
with(obj_crumble6) instance_destroy();
with(obj_crumble72) instance_destroy();
with(obj_dan) instance_destroy();
with(obj_liftoff) instance_destroy();
with(obj_sec9elec) instance_destroy();
with(obj_mbulkhead) instance_destroy();
with(obj_corpse1) instance_destroy();
with(obj_corpse2) instance_destroy();
with(obj_corpse3) instance_destroy();
with(obj_corpse4) instance_destroy();
with(obj_corpse5) instance_destroy();
with(obj_sec9sdoll) instance_destroy();
with(obj_sec9elite) instance_destroy();
with(obj_sec9commander) instance_destroy();
with(obj_sec9vateilika) instance_destroy();
with(obj_sec9slash) instance_destroy();
with(obj_cdoor92) instance_destroy();
with(obj_sec9cp2) instance_destroy();
with(obj_turretdead) instance_destroy();
with(obj_secxcp2) instance_destroy();
scr_addfonts();

#define scr_horseendstep
//Executed by sabot
if (!horseinit){
    horseinit=1;
    camspd=6;
    spd=12;
    obj_horse.camspd=camspd;
    obj_horse.spd=spd;
    obj_horse.hp=10;
    room_speed=40;
    }

//Remove clouds
if (destroyclouds==1){
    with (obj_cloudb)
        instance_destroy();
    }
if (!horsegameover && !horsevictory && !pause){
    //Move horse
    moved=0;
    if (!ignoreall){
        with (obj_horse){
            if (trailer==0){
                if (keyboard_check(vk_left)){
                    if (place_free(x-spd,y))
                        x-=spd;
                    else{
                        move_contact_solid(180,spd);
                        if (y>obj_sabot.y-275 && (place_meeting(x,y+4,obj_slopel) || place_meeting(x,y+4,obj_sloper)) && !place_free(x-1,y) && place_free(x,y-floor(spd/2))){
                            y-=floor(spd/2);
                            if (place_free(x-spd,y))
                                x-=spd;
                            }
                        }
                    if (x<obj_sabot.x-380)
                        x=obj_sabot.x-380;
                    obj_sabot.moved=1;
                    }
                else if (keyboard_check(vk_right)){
                    if (place_free(x+spd,y))
                        x+=spd;
                    else{
                        move_contact_solid(0,spd);
                        if (y>obj_sabot.y-275 && (place_meeting(x,y+4,obj_slopel) || place_meeting(x,y+4,obj_sloper)) && !place_free(x+1,y) && place_free(x,y-floor(spd/2))){
                            y-=floor(spd/2);
                            if (place_free(x+spd,y))
                                x+=spd;
                            }
                        }
                    if (x>obj_sabot.x+380)
                        x=obj_sabot.x+380;
                    obj_sabot.moved=1;
                    }
                if (keyboard_check(vk_up)){
                    if (place_free(x,y-spd))
                        y-=spd;
                    else
                        move_contact_solid(90,spd);
                    if (y<obj_sabot.y-280)
                        y=obj_sabot.y-280;
                    obj_sabot.moved=1;
                    }
                else if (keyboard_check(vk_down)){
                    if (place_free(x,y+spd))
                        y+=spd;
                    else
                        move_contact_solid(270,spd);
                    if (y>obj_sabot.y+248)
                        y=obj_sabot.y+248;
                    obj_sabot.moved=1;
                    }
                }
            }
        }
    
    //Camera
    if (horsecameradir==0){
        x+=camspd;
        with (obj_horse){
            if (trailer==0){
                if (place_free(x+camspd,y))
                    x+=camspd;
                }
            else
                x+=camspd;
            }
        with (obj_horsepoints)
            x+=obj_sabot.camspd;
        }
    else if (horsecameradir==1){
        y-=camspd;
        with (obj_horse){
            if (trailer==0){
                if (place_free(x,y-camspd))
                    y-=camspd;
                }
            else
                y-=campspd;
            }
        with (obj_horsepoints)
            y-=obj_sabot.camspd;
        }
    else if (horsecameradir==2){
        x-=camspd;
        with (obj_horse){
            if (trailer==0){
                if (place_free(x-camspd,y))
                    x-=camspd;
                }
            else
                x-=camspd;
            }
        with (obj_horsepoints)
            x-=obj_sabot.camspd;
        }
    else if (horsecameradir==3){
        y+=camspd;
        with (obj_horse){
            if (trailer==0){
                if (place_free(x,y+camspd))
                    y+=camspd;
                }
            else
                y+=camspd;
            }
        with (obj_horsepoints)
            y+=obj_sabot.camspd;
        }
    findflip=-1;
    findflip=instance_place(x,y,obj_horseflip);
    if (findflip>0){
        if (!findflip.done){
            findflip.done=1;
            if (findflip.dir==4 && instance_number(obj_horseexit)==0 && horseover==0){
                instance_create(x,y,obj_horseexit);
                if (room!=rom_sectorx)
                    global.horselives+=1;
                }
            else if (findflip.dir==5){
                camspd=0;
                with (obj_horse)
                    camspd=0;
                with (findflip)
                    instance_destroy();
                }
            else
                horsecameradir=findflip.dir;
            destroyclouds=findflip.destroyclouds;
            }
        }
    with (obj_horse){
        if (trailer==0){
            if (x<obj_sabot.x-380){
                x=obj_sabot.x-380;
                obj_sabot.moved=1;
                if (!place_free(x,y) && place_free(x,y-floor(obj_sabot.camspd/2)))
                    y-=floor(obj_sabot.camspd/2);
                }
            if (x>obj_sabot.x+380){
                x=obj_sabot.x+380;
                obj_sabot.moved=1;
                if (!place_free(x,y) && place_free(x,y-floor(obj_sabot.camspd/2)))
                    y-=floor(obj_sabot.camspd/2);
                }
            if (y<obj_sabot.y-280){
                y=obj_sabot.y-280;
                obj_sabot.moved=1;
                }
            if (y>obj_sabot.y+248){
                y=obj_sabot.y+248;
                obj_sabot.moved=1;
                }
            }
        }
    
    if (obj_sabot.moved){
        obj_horse.camspd=0;
        for (i=22;i>0;i-=1){
            xprev[i]=xprev[i-1];
            yprev[i]=yprev[i-1];
            }
        }
    with (obj_horse){
        if (trailer==0){
            if (obj_sabot.moved){
                obj_sabot.xprev[0]=x;
                obj_sabot.yprev[0]=y;
                }
            }
        else{
            x=obj_sabot.xprev[trailer];
            y=obj_sabot.yprev[trailer];
            }
        }
    
    scr_horseview();
    
    //Horse fires
    with (obj_horse){
        weapcyc+=1;
        if (weapon==0){
            if (weapcyc>=4-weaponpower*2){
                weapcyc=0;
                tempid=instance_create(x,y,obj_horseshot);
                tempid.speed=18;
                tempid.force=1;
                tempid.type=0;
                tempid.mask_index=spr_rockethail;
                temprand=floor(random(3));
                if (temprand==0)
                    tempid.sprite_index=spr_blitright;
                else if (temprand==1)
                    tempid.sprite_index=spr_blitleft;
                else if (temprand==2)
                    tempid.sprite_index=spr_blitjump;
                tempid.image_single=floor(random(5));
                }
            }
        else if (weapon==1){
            if (weapcyc>=4-weaponpower*2){
                weapcyc=0;
                tempid=instance_create(x,y,obj_horseshot);
                tempid.speed=24;
                tempid.force=2;
                tempid.type=1;
                if (weaponpower==0)
                    tempid.direction=random(50)-25;
                else if (weaponpower==1)
                    tempid.direction=random(80)-40;
                tempid.sprite_index=spr_iosacrawler2;
                tempid.image_single=0;
                }
            }
        else if (weapon==2){
            if (weapcyc>=4-weaponpower*2){
                weapcyc=0;
                meteor+=27.521;
                if (meteor>40+weaponpower*10)
                    meteor-=40+weaponpower*10;
                for (i=0;i<2;i+=1){
                    tempid=instance_create(x,y,obj_horseshot);
                    tempid.speed=24;
                    tempid.force=2;
                    tempid.type=2;
                    tempid.direction=meteor*(1-i*2);
                    if (i==0)
                        tempid.meteorrot=-5;
                    else
                        tempid.meteorrot=5;
                    tempid.sprite_index=spr_shockball;
                    tempid.image_single=0;
                    }
                }
            }
        else if (weapon==3){
            if (weapcyc>=16-weaponpower*8){
                weapcyc=0;
                rocket=1-rocket;
                for (i=0;i<4;i+=1){
                    tempid=instance_create(x,y,obj_horseshot);
                    tempid.speed=18;
                    tempid.force=6;
                    tempid.type=3;
                    tempid.direction=i*90+rocket*45;
                    tempid.sprite_index=spr_rockethail;
                    tempid.image_single=i*2+rocket;
                    }
                }
            }
        else if (weapon==4){
            if (weapcyc>=1){
                weapcyc=0;
                corona+=1;
                if (corona==8)
                    corona=0;
                tempid=instance_create(x+80,y,obj_horseshot);
                tempid.force=1+weaponpower*0.5;
                tempid.type=4;
                if (weaponpower==0){
                    if (corona==0 || corona==1)
                        tempid.sprite_index=spr_megaflash4;
                    else if (corona==2 || corona==3 || corona==6 || corona==7)
                        tempid.sprite_index=spr_megaflash3;
                    else if (corona==4 || corona==5)
                        tempid.sprite_index=spr_megaflash2;
                    }
                else if (weaponpower==1){
                    if (corona==0 || corona==1)
                        tempid.sprite_index=spr_megaflash3;
                    else if (corona==2 || corona==3 || corona==6 || corona==7)
                        tempid.sprite_index=spr_megaflash2;
                    else if (corona==4 || corona==5)
                        tempid.sprite_index=spr_megaflash;
                    }
                tempid.image_single=0;
                }
            }
        }
    
    //Destroy horse
    if (horseover==0){
        if (horsehp<=0)
            horseover=1;
        with (obj_horse){
            if (trailer==0){
                if (mercy>0)
                    mercy-=1;
                obj_sabot.lastx=x;
                obj_sabot.lasty=y;
                if (!place_free(x,y) && instance_number(obj_horseexit)==0 && !horsegameover && !horsevictory){
                    crushed+=1;
                    if (crushed>=2)
                        obj_sabot.horseover=1;
                    }
                else
                    crushed=0;
                }
            }
        }
    if (horseover==1 && instance_number(obj_horseexit)==0){
        horseovercyc+=1;
        if (horseovercyc==1){
            camspd=0;
            scr_shakescreen(4);
            scr_sound("exp_rock");
            with (obj_horse){
                instance_destroy();
                instance_create(x,y,obj_horseexplo);
                if (trailer==0){
                    repeat(6)
                        instance_create(x,y,obj_horseexplospewer);
                    }
                }
            }
        if (horseovercyc==40){
            horseover=2;
            (instance_create(x,y,obj_horseexit)).type=1;
            }
        }
    
    //Methodhorse
    with (obj_shakescreen){
        metcyc+=1;
        if (metcyc>=10){
            metcyc=0;
            if (obj_sabot.camspd>0)
                scr_methodhorse();
            }
        }
    }

//End
if ((horsegameover || horsevictory) && !pause){
    if (keyboard_check_pressed(vk_escape) && instance_number(obj_horseexit)==0){
        (instance_create(x,y,obj_horseexit)).type=3;
        }
    }

//Cloudlines
if (room==rom_sector3 || room==rom_sector5 || room==rom_sector7 || room==rom_sectorx){
    cloudline-=1;
    if (cloudline<=0){
        cloudline=32;
        with (obj_cloudc)
            if (top)
                instance_create(x,y,obj_cloudt);
            else
                instance_create(x,y,obj_cloudb);
        }
    }

//Boss is dead
if (horsebossdead && !pause){
    bosscyc+=1;
    if (bosscyc>=20 && bosscyc<238 && instance_number(obj_horsecoin)==0)
        bosscyc=238;
    if (bosscyc==240)
        (instance_create(obj_sabot.x-64,obj_sabot.y-64,obj_horseflip)).dir=4;
    }

//Restart/quit
if (keyboard_check(vk_f2)){
    f2restart+=1;
    if (f2restart>=20){
        sound_stop_all();
        scr_stopmusic();
        room_goto(rom_main);
        }
    }
else
    f2restart=0;
if (keyboard_check(vk_f4) && instance_number(obj_horseenter)==0 && instance_number(obj_horseexit)==0 && instance_number(obj_horse)>0 && !horsegameover && !horsevictory){
    f4retry+=1;
    if (f4retry>=20){
        if (global.horselives>0){
            global.horsepoints=global.backuphorsepoints;
            global.horselives-=1;
            room_restart();
            }
        }
    }
else
    f4retry=0;
if (keyboard_check(vk_f12)){
    f12quit+=1;
    if (f12quit>=20){
        sound_stop_all();
        scr_stopmusic();
        game_end();
        }
    }
else
    f12quit=0;

//Pause
if (keyboard_check_pressed(vk_escape) && instance_number(obj_horseenter)==0 && instance_number(obj_horseexit)==0 && instance_number(obj_horse)>0 && !horsegameover && !horsevictory){
    keyboard_clear(vk_escape);
    if (!pause){
        pause=1;
        scr_stopsfx();
        instance_deactivate_all(1);
        instance_activate_object(obj_activateme);
        instance_create(view_xview[0]+400,view_yview[0]+300,obj_paused);
        instance_create(x,y,obj_loadingback);
        }
    else
        scr_unpause();
    }
scr_pauseeffect();

#define scr_horsedraw
//Executed by Sabot
//Wavetext
if (wavetext!=wavetextprev || forcewavetext){
    forcewavetext=0;
    wavetextgo=1;
    wavetextcyc=0;
    wavetextoff=1600;
    wavetextlen=string_length(wavetext);
    for (i=0;i<wavetextlen;i+=1)
        wavechar[i]=ord(string_char_at(wavetext,i+1));
    }
if (wavetextgo){
    wavetextcyc+=1;
    if (wavetextcyc<=6)
        wavetextoff-=200;
    else if (wavetextcyc>=66)
        wavetextoff-=200;
    wavetextrot+=20;
    if (wavetextrot>=360)
        wavetextrot-=360;
    wavetextrot2=wavetextrot;
    for (i=0;i<wavetextlen;i+=1){
        wavetextrot2+=20;
        textx=view_xview[0]+wavetextoff-wavetextlen*12+i*24;
        texty=view_yview[0]+64-sin(degtorad(wavetextrot2))*8;
        draw_sprite_ext(spr_text_white,63+wavechar[i],textx,texty,2,2,0,c_white,1);
        }
    }
wavetextprev=wavetext;

//HUD
if (horsehp<horsehpprev)
    damageflash=5;
horsehpprev=horsehp;
if (damageflash>0){
    draw_sprite_ext(spr_tor,0,view_xview[0]-320,view_yview[0]-32,5,2,0,c_white,damageflash/10);
    damageflash-=1;
    }

draw_set_color(c_black);
draw_rectangle(view_xview[0]-32,view_yview[0]+568,view_xview[0]+832,view_yview[0]+632,0);
draw_set_font(global.fontwhite);
draw_set_color(c_white);
if (global.horsepoints>=99999999)
    global.horsepoints=99999999;
pointstring="";
for (i=8;i>0;i-=1){
    if (global.horsepoints<power(10,i))
        pointstring+="0";
    }
pointstring+=string(global.horsepoints);
draw_text_ext(view_xview[0]+36,view_yview[0]+572,"HEALTH$$$$$$$$$$$$$$$$$LIVES$$$$$$$$$$$$$$$$$$SCORE$"+pointstring,28,800);
for (i=0;i<horsehp;i+=1)
    draw_sprite(spr_banana,0,view_xview[0]+124+i*16,view_yview[0]+582);
for (i=0;i<global.horselives;i+=1)
    draw_sprite(spr_horse,1,view_xview[0]+398+i*16,view_yview[0]+582);

//GAME OVER
if (horsegameover || horsevictory){
    gameovertext[5]="Final score: "+string(global.horsepoints);
    victorytext[5]="Final score: "+string(global.horsepoints);
    draw_set_color(c_black)
    draw_rectangle(view_xview[0]-32,view_yview[0]-32,view_xview[0]+832,view_yview[0]+632,0);
    if (horsegameover){
        with (obj_horsestars)
            draw_sprite_ext(spr_chaintracer,0,floor(x+xoff),floor(y+yoff),1,1,0,c_white,0.25+xoff/180);
        }
    else{
        with (obj_horsestars)
            draw_sprite_ext(spr_chaintracer,1,floor(x+xoff),floor(y+yoff),1,1,0,c_white,0.25+xoff/180);
        }
    draw_set_font(global.fontspecial);
    gorot+=4;
    if (gorot>=360)
        gorot-=360;
    gorot2=gorot;
    for (j=0;j<3;j+=1){
        gocol[j]+=4*(j+1);
        if (gocol[j]>=360)
            gocol[j]-=360;
        gocol2[j]=gocol[j];
        }
    for (i=0;i<19;i+=1){
        gorot2+=10;
        for (j=0;j<3;j+=1){
            gocol2[j]+=19*(j+1);
            if (gocol2[j]>=360)
                gocol2[j]-=360;
            }
        draw_set_color(make_color_rgb(128+cos(degtorad(gocol2[0]))*100,128+cos(degtorad(gocol2[1]))*100,128+cos(degtorad(gocol2[2]))*100));
        if (horsegameover)
            draw_text(view_xview[0]+400-string_length(obj_sabot.gameovertext[i])*6+cos(degtorad(gorot2))*12,view_yview[0]+40+i*28,obj_sabot.gameovertext[i]);
        else
            draw_text(view_xview[0]+400-string_length(obj_sabot.victorytext[i])*6+cos(degtorad(gorot2))*12,view_yview[0]+40+i*28,obj_sabot.victorytext[i]);
        }
    }
#define scr_horseview
if (global.shakescreen <= 0){
    obj_shakescreen.x = x;
    obj_shakescreen.y = y;
    }
if (global.shakescreen > 10){
    obj_shakescreen.x = x-30+random(60);
    obj_shakescreen.y = y-30+random(60);
    }
if (global.shakescreen > 6 && global.shakescreen < 11){
    obj_shakescreen.x = x-16+random(32);
    obj_shakescreen.y = y-16+random(32);
    }
if (global.shakescreen > 3 && global.shakescreen < 7){
    obj_shakescreen.x = x-8+random(16);
    obj_shakescreen.y = y-8+random(16);
    }
if (global.shakescreen > 0 && global.shakescreen < 4){
    obj_shakescreen.x = x-3+random(6);
    obj_shakescreen.y = y-3+random(6);
    }
if (global.shakescreen>0)
    global.shakescreen-=1;

//Update Shakescreen position
x=floor(x);
y=floor(y);
obj_shakescreen.x=floor(obj_shakescreen.x);
obj_shakescreen.y=floor(obj_shakescreen.y);

#define scr_methodhorse
instance_deactivate_region(x-1000,y-1000,2000,2000,1,1);
instance_activate_region(x-800,y-800,1600,1600,1);
instance_activate_object(obj_activateme);
#define scr_horseenemystep
if (!init){
    init=1;
    shotcyc=200;
    if (type==0){
        hp=2;
        dir=2;
        }
    else if (type==1){
        hp=8;
        dir=1;
        }
    else if (type==2){
        hp=16;
        }
    else if (type==3){
        hp=48;
        }
    else if (type==4){
        hp=64;
        dir=floor(random(4));
        }
    else if (type==5){
        maxhp=2500;
        hp=2500;
        temphp=0;
        img=0;
        shotcyc=-100;
        startx=x;
        starty=y;
        depth=-4;
        sprite_index=spr_proxima_body;
        mask_index=spr_proxima_body;
        numshots=1;
        }
    }

if (type==5 && hp>0){
    hpcyc+=1;
    if (hpcyc>=5){
        hpcyc=0;
        if (temphp<=-10)
            temphp=-10;
        hp+=temphp;
        temphp=0;
        }
    }

if (!horsegameover && !horsevictory){
    if (!active){
        if (x>obj_sabot.x-360 && x<obj_sabot.x+360 && y>obj_sabot.y-260 && y<obj_sabot.y+260){
            active=1;
            if (type==2)
                direction=point_direction(x,y,obj_sabot.lastx,obj_sabot.lasty);
            else if (type==3)
                dir=obj_sabot.horsecameradir;
            }
        }
    else{
        if (type==0){
            spd=3;
            if (dir==0){
                if (place_free(x+spd,y))
                    x+=spd;
                else
                    dir=1;
                }
            else{
                if (place_free(x-spd,y))
                    x-=spd;
                else
                    dir=0;
                }
            }
        else if (type==1){
            spd=3;
            if (dir==0){
                if (place_free(x,y-spd))
                    y-=spd;
                else
                    dir=1;
                }
            else{
                if (place_free(x,y+1))
                    y+=4;
                else
                    dir=0;
                }
            shotcyc+=1;
            if (shotcyc>=30){
                shotcyc=0;
                scr_sound("glo_reflect");
                tempid=instance_create(x-4,y-4,obj_horseeshot);
                tempid.speed=6;
                tempid.direction=point_direction(x,y,obj_sabot.lastx,obj_sabot.lasty);
                }
            }
        else if (type==2){
            speed=4;
            shotcyc+=1;
            if (shotcyc>=40){
                shotcyc=0;
                direction=point_direction(x,y,obj_sabot.lastx,obj_sabot.lasty);
                scr_sound("glo_reflect");
                for(i=-1;i<2;i+=1){
                    tempid=instance_create(x,y,obj_horseeshot);
                    tempid.speed=6;
                    tempid.direction=point_direction(x,y,obj_sabot.lastx,obj_sabot.lasty)+i*60;
                    }
                }
            if (!place_free(x+hspeed,y+hspeed)){
                if (!place_free(x-8,y))
                    hspeed=abs(hspeed);
                else if (!place_free(x+8,y))
                    hspeed=-abs(hspeed);
                if (!place_free(x,y-8))
                    vspeed=abs(vspeed);
                else if (!place_free(x,y+8))
                    vspeed=-abs(vspeed);
                }
            }
        else if (type==3){
            spd=obj_sabot.camspd;
            if (dir==0){
                if (place_free(x+spd,y))
                    x+=spd;
                else
                    dir=2;
                }
            else if (dir==1){
                if (place_free(x,y-spd))
                    y-=spd;
                else
                    dir=3;
                }
            else if (dir==2){
                if (place_free(x-spd,y))
                    x-=spd;
                else
                    dir=0;
                }
            else if (dir==3){
                if (place_free(x,y+spd))
                    y+=spd;
                else
                    dir=1;
                }
            shotcyc+=1;
            if (shotcyc>=30){
                shotcyc=0;
                scr_sound("glo_reflect");
                direction=point_direction(x,y,obj_sabot.lastx,obj_sabot.lasty);
                tempid=instance_create(x,y,obj_horseeshot);
                tempid.speed=6;
                tempid.direction=point_direction(x,y,obj_sabot.lastx,obj_sabot.lasty)-30+random(60);
                }
            }
        else if (type==4){
            shotcyc+=1;
            if (shotcyc>=30){
                shotcyc=0;
                sadjust=1-sadjust;
                scr_sound("glo_reflect");
                for (i=0;i<8;i+=1){
                    tempid=instance_create(x,y,obj_horseeshot);
                    tempid.speed=6;
                    tempid.direction=i*45+sadjust*22.5;
                    }
                }
            }
        else if (type==5){
            shotcyc+=1;
            if (shotcyc>=10){
                shotcyc=0;
                scr_sound("glo_reflect");
                }
            if (shotcyc>=0){
                shotcyc2+=1;
                if (shotcyc2>=7){
                    shotcyc2=0;
                    repeat(numshots){
                        shotdir+=39.7+numshots*3.14;
                        if (shotdir>=360)
                            shotdir-=360;
                        tempid=instance_create(x,y,obj_horseeshot);
                        tempid.speed=4;
                        tempid.direction=shotdir;
                        tempid.gravity=0.1;
                        tempid.gravity_direction=shotdir-90;
                        }
                    }
                }
            moverot-=1;
            if (moverot<=0)
                moverot+=360;
            dist=(maxhp-hp)/maxhp*160;
            x=startx+cos(degtorad(moverot))*dist;
            y=starty-sin(degtorad(moverot))*dist;
            if (hp<maxhp*0.25){
                img=3;
                numshots=4;
                if (!mpfb3){
                    mpfb3=1;
                    scr_sound("wea_mpfb");
                    scr_shakescreen(3);
                    tempid=instance_create(x,y,obj_horseeshot);
                    tempid.mpfb=1;
                    tempid.sprite_index=spr_mpfb;
                    tempid.mask_index=spr_mpfb;
                    tempid.direction=134;
                    tempid.speed=6;
                    tempid.depth=depth-1;
                    }
                }
            else if (hp<maxhp*0.5){
                img=2;
                numshots=3;
                if (!mpfb2){
                    mpfb2=1;
                    scr_sound("wea_mpfb");
                    scr_shakescreen(3);
                    tempid=instance_create(x,y,obj_horseeshot);
                    tempid.mpfb=1;
                    tempid.sprite_index=spr_mpfb;
                    tempid.mask_index=spr_mpfb;
                    tempid.direction=134;
                    tempid.speed=6;
                    tempid.depth=depth-1;
                    }
                }
            else if (hp<maxhp*0.75){
                img=1;
                numshots=2;
                if (!mpfb){
                    mpfb=1;
                    scr_sound("wea_mpfb");
                    scr_shakescreen(3);
                    tempid=instance_create(x,y,obj_horseeshot);
                    tempid.mpfb=1;
                    tempid.sprite_index=spr_mpfb;
                    tempid.mask_index=spr_mpfb;
                    tempid.direction=134;
                    tempid.speed=6;
                    tempid.depth=depth-1;
                    }
                }
            smoke+=img;
            if (smoke>=4){
                smoke-=4;
                (instance_create(x-48+random(96),y-48+random(96),obj_smoke)).depth=depth-1;
                }
            streamimg2+=1;
            if (streamimg2==2){
                streamimg+=1;
                if (streamimg==4)
                    streamimg=0;
                streamimg2=0;
                }
            }
        if (x<obj_sabot.x-430 || x>obj_sabot.x+430 || y<obj_sabot.y-330 || y>obj_sabot.y+330)
            instance_destroy();
        }
    }
#define scr_nextline
do {
    line += 1;
    current_inputs = file_text_read_string(inputs_file);
    num_in_inputs = real(string_digits(current_inputs));
    file_text_readln(inputs_file);
}
until (current_inputs != "" and string_count("//", current_inputs) == 0)

#define scr_executecommand
key_short = argument0;
key_long = argument1;

if (string_count("end", current_inputs) == 1) {
    io_clear();
    room_speed = 30;
    rm_speed = 30;
    handle = true;
}
else {
    if (string_count(" " + key_short + "- ", " " + current_inputs + " ") == 1) {
        keyboard_key_press(key_long);
        handle = true;
    }
    else if (string_count(" " + key_short + "+ ", " " + current_inputs + " ") == 1) {
        keyboard_key_release(key_long);
        handle = true;
    }
    else if (string_count(" " + key_short + " ", " " + current_inputs + " ") == 1) {
        keyboard_key_press(key_long);
        keyboard_key_release(key_long);
        handle = true;
    }
}

#define scr_taspause
global.pausebackid = background_create_from_screen(0,0,800,600,false,false);
instance_deactivate_all(1);
paused = true;

#define scr_tasunpause
instance_activate_object(obj_sabot)
instance_activate_object(obj_tas)
with (obj_sabot) {scr_unpause();}
paused = false;

#define scr_storeseed
random_set_seed(killdataid);

#define scr_restoreseed
random_set_seed(global.seed)

