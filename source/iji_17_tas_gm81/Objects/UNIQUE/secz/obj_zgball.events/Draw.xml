<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (!init){
blinkmax=floor(30+random(30));
init=1;
}

draw_set_color(c_white);
draw_circle(x,y,12,0);
draw_set_color(c_gray);
draw_circle(x,y,12,1);
dist=point_distance(x,y,obj_iji.x+6,obj_iji.y+30)/120+5;
lookdirx=(cos(degtorad(point_direction(x,y,obj_iji.x+6,obj_iji.y+30))))*dist;
lookdiry=(sin(degtorad(point_direction(x,y,obj_iji.x+6,obj_iji.y+30)+180)))*dist;
draw_set_color(c_black);
blinkcyc+=1;
if (blinkcyc==blinkmax || blinkcyc==blinkmax+1){
    draw_line(x+lookdirx-4,y+lookdiry-1,x+lookdirx+1,y+lookdiry-1);
    draw_line(x+lookdirx,y+lookdiry-1,x+lookdirx+5,y+lookdiry-1);
    }
else if (blinkcyc==blinkmax-1 || blinkcyc==blinkmax-2 || blinkcyc==blinkmax+2 || blinkcyc==blinkmax+3){
    draw_line(x+lookdirx-2,y+lookdiry-2,x+lookdirx-2,y+lookdiry+1);
    draw_line(x+lookdirx+2,y+lookdiry-2,x+lookdirx+2,y+lookdiry+1);
    }
else{
    draw_line(x+lookdirx-2,y+lookdiry-3,x+lookdirx-2,y+lookdiry+2);
    draw_line(x+lookdirx+2,y+lookdiry-3,x+lookdirx+2,y+lookdiry+2);
    }
if (blinkcyc&gt;=blinkmax+4){
    blinkmax=floor(30+random(30));
    blinkcyc=0;
    }

movecyc+=1;
if (movecyc&gt;=30 &amp;&amp; point_distance(x,y,obj_iji.x+6,obj_iji.y+30)&lt;200){
    movecyc=0;
    direction=point_direction(x,y,obj_iji.x+6,obj_iji.y+30);
    speed=8;
    }
if (speed&gt;0)
    speed-=0.25;
</argument>
      </arguments>
    </action>
  </actions>
</event>
