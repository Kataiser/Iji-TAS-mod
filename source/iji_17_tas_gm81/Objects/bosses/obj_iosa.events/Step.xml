<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">//"PAIN"
if (painwait&gt;0 &amp;&amp; !global.ignoreall)
    painwait-=1;
if (global.hp&gt;0 &amp;&amp; painwait==0 &amp;&amp; hp!=prevhp){
    painrand=random(1);
    if (painrand&lt;0.2){
        if (hp&gt;200)
            scr_sound("ios_ambient4");
        else
            scr_sound("ios_pain");
        if (hp&gt;100)
            painwait=240+ceil(random(240));
        else
            painwait=60+ceil(random(60));
        }
    }
prevhp=hp;

//"HAA HAA"
if (global.hp&lt;ijihp &amp;&amp; hp&gt;100 &amp;&amp; hahawait&gt;600){
    haharand=random(1)
    if (haharand&lt;0.5)
        scr_sound("ios_ambient5");
    }
if (global.hp&gt;=ijihp)
    hahawait+=1;
else
    hahawait=0;

//"HOLD STILL"
if (global.hp&gt;0 &amp;&amp; ijihp==global.hp &amp;&amp; holdstillwait==0 &amp;&amp; !global.ignoreall)
    holdstill+=1;
else
    holdstill=0;
ijihp=global.hp;
if (holdstillwait&gt;0 &amp;&amp; !global.ignoreall)
    holdstillwait-=1;

//"GET DOWN"
if (getdownwait&gt;0 &amp;&amp; !global.ignoreall)
    getdownwait-=1;
if (global.hp&gt;0 &amp;&amp; obj_iji.y&lt;544 &amp;&amp; ijiyprev&gt;=544 &amp;&amp; getdownwait==0 &amp;&amp; hp&gt;100 &amp;&amp; !obj_iji.takingpain){
    if (global.voc_ios_ambient2==0){
        scr_sound("ios_ambient1");
        getdownwait=900+ceil(random(600));
        }
    }
ijiyprev=obj_iji.y;

//"WIN"
if (obj_sabot.gameover &amp;&amp; !winquote &amp;&amp; hp&gt;0){
    winquote=1;
    win=30;
    }
if (win&gt;0)
    win-=1;
if (win==1)
    scr_sound("ios_win");

if (electrocute)
obj_sabot.raveflash=0;
if (instance_number(obj_iji)==0)
    firingrocket=0;

if (waitforthor&gt;0)
    waitforthor-=1;

if (targetiji&gt;0)
targetiji-=1;
cfised=0;
thored=0;
plasmaed=0;
//Smoke when charging
if (firingrocket==1 &amp;&amp; state==0)
    smoking+=1;
if (smoking&gt;=8){
    smoking=0;
    if (firingthor){
        scr_sound("tor_gather_q03");
        if (facing==0){
            (instance_create(x-24,y+100,obj_thorspark)).speed=0;
            (instance_create(x-29,y+91,obj_thorspark)).speed=0;
            (instance_create(x-19,y+91,obj_thorspark)).speed=0;
            (instance_create(x-29,y+105,obj_thorspark)).speed=0;
            (instance_create(x-19,y+105,obj_thorspark)).speed=0;
            }
        else{
            (instance_create(x+124,y+100,obj_thorspark)).speed=0;
            (instance_create(x+129,y+91,obj_thorspark)).speed=0;
            (instance_create(x+119,y+91,obj_thorspark)).speed=0;
            (instance_create(x+129,y+105,obj_thorspark)).speed=0;
            (instance_create(x+119,y+105,obj_thorspark)).speed=0;
            }
        }
    else if (firingmpfb){
        if (facing==0){
            (instance_create(x-24,y+100,obj_mpfbspark)).vspeed=1;
            (instance_create(x-29,y+91,obj_mpfbspark)).vspeed=1;
            (instance_create(x-19,y+91,obj_mpfbspark)).vspeed=1;
            (instance_create(x-29,y+105,obj_mpfbspark)).vspeed=1;
            (instance_create(x-19,y+105,obj_mpfbspark)).vspeed=1;
            }
        else{
            (instance_create(x+124,y+100,obj_mpfbspark)).vspeed=1;
            (instance_create(x+129,y+91,obj_mpfbspark)).vspeed=1;
            (instance_create(x+119,y+91,obj_mpfbspark)).vspeed=1;
            (instance_create(x+129,y+105,obj_mpfbspark)).vspeed=1;
            (instance_create(x+119,y+105,obj_mpfbspark)).vspeed=1;
            }
        }
    else if (firingcrawler){
        if (facing==0){
            tempid=instance_create(x-24,y+100,obj_tyrian2);
            tempid.depth=-1
            tempid.sprite_index=spr_iosacrawler2;
            }
        else{
            tempid=instance_create(x+124,y+100,obj_tyrian2);
            tempid.depth=-1
            tempid.sprite_index=spr_iosacrawler2;
            }
        }
    else{
        if (facing==0)
            (instance_create(x-24,y+100,obj_shockspark)).vspeed=3;
        else
            (instance_create(x+124,y+100,obj_shockspark)).vspeed=3;
        }
    }
//Armor
if (armor&lt;maxarmor-0.1)
    armor+=0.1;
//Pain from armordrop
if (armor&lt;1){
    hp-=1;
    scr_annihilatorpain();
    }

//Fire
if (state==2 &amp;&amp; !reloading){
if (weapon==0){
    firingthor=0;
    reloading=1;
    alarm[0]=1;
    if (facing==0){
        sprite_index=spr_iosa_fireleft;
        repeat(4){
            tempid=instance_create(x-4,y+100+(random(20)-10),obj_enemypulse);
            tempid.speed=30+random(5);
            tempid.direction=random(20)+170;
            tempid.hyper=1;
            tempid.hyperstrength=hyperstrength;
            tempid.image_index=14;
            tempid.target=id;
            }
        }
    else{
        sprite_index=spr_iosa_fire;
        repeat(4){
            tempid=instance_create(x+104,y+100+(random(20)-10),obj_enemypulse);
            tempid.speed=30+random(5);
            tempid.direction=random(20)-10;
            tempid.hyper=1;
            tempid.hyperstrength=hyperstrength;
            tempid.image_index=7;
            tempid.target=id;
            }
        }
    }
if (weapon==1){
    scr_sound("wea_spli");
    reloading=1;
    alarm[0]=3;
    if (facing==0){
        tempid=instance_create(x+2,y+100,obj_enemyshockball);
        tempid.speed=25;
        tempid.direction=180;
        tempid.dud=0;
        (instance_create(x-16,y+100,obj_shockspark)).speed=-3;
        if (!global.specialbake)
            (instance_create(x-14,y+100,obj_shockshell)).short=1;
        }
    else{
        image_single=4;
        alarm[4]=3;
        tempid=instance_create(x+98,y+100,obj_enemyshockball);
        tempid.speed=25;
        tempid.direction=0;
        tempid.dud=0;
        (instance_create(x+116,y+100,obj_shockspark)).speed=3;
        if (!global.specialbake){
            tempid=instance_create(x+114,y+100,obj_shockshell);
            tempid.hspeed=-tempid.hspeed;
            tempid.short=1;
            }
        }
    }
}

//Walk
if (state==1){
    if (!walkcyc)
        walkcyc=1;
    else{
        walkcyc=0;
        image_single+=1;
        if (image_single==6){
            //scr_shakescreen(0);
            scr_sound("ann_step");
            }
        if (image_single==12){
            image_single=0;
            //scr_shakescreen(0);
            scr_sound("ann_step");
            }
        if (facing==0){
            if (!place_free(x-6,y) || place_free(x-100,y+2)){
                facing=1;
                sprite_index=spr_iosa_walk;
                }
            else
                x-=6;
            }
        else{
            if (!place_free(x+6,y) || place_free(x+100,y+2)){
                facing=0;
                sprite_index=spr_iosa_walkleft;
                }
            else
                x+=6;
            }
        }
    }
else
walkcyc=0;

//Smoke after eleced
if (elecsmoke&gt;0){
elecsmoke-=1;
tempid=instance_create(x+10+random(80),y+10+random(115),obj_bigsmoke);
tempid.direction=90;
tempid.speed=random(4)+1;
tempid.gravity=-0.5;
tempid.gravity_direction=270;
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
